#ifndef KHANYUPINYIN_H
#define KHANYUPINYIN_H
/*
 *  Copyright (c) 2020 International Characters, Inc.
 *  This software is licensed to the public under the Open Software License 3.0.
 *  icgrep is a trademark of International Characters, Inc.
 *
 *  This file is generated by unihan_properties.py - manual edits may be lost.
 */

#include "PropertyAliases.h"
#include "PropertyObjects.h"
#include "PropertyValueAliases.h"
#include "unicode_set.h"

namespace UCD {
  namespace KPY_ns {
    const unsigned independent_prop_values = 431;
    /** Code Point Ranges for tian
    [3401, 3401], [35ad, 35ad], [3724, 3724], [394f, 394f], [3b32, 3b32],
    [3b87, 3b87], [3dba, 3dba], [4016, 4016], [413c, 413c], [42ec, 42ec],
    [43e6, 43e6], [4459, 4459], [46b6, 46b6], [47e7, 47e7], [4804, 4804],
    [4858, 4858], [48ef, 48ef], [48f6, 48f6], [49c3, 49c3], [4b2f, 4b2f],
    [4d7a, 4d7a], [4f43, 4f43], [500e, 500e], [5178, 5178], [541e, 541e],
    [553a, 553a], [55d4, 55d4], [586b, 586b], [5929, 5929], [5975, 5975],
    [5a17, 5a17], [5a56, 5a56], [5bd8, 5bd8], [5c47, 5c47], [5fdd, 5fdd],
    [606c, 606c], [60bf, 60bf], [6375, 6375], [63ad, 63ad], [6437, 6437],
    [64a3, 64a3], [666a, 666a], [681d, 681d], [6b84, 6b84], [6c97, 6c97],
    [6cba, 6cba], [6cbe, 6cbe], [6ddf, 6ddf], [6dfb, 6dfb], [6e49, 6e49],
    [6ec7, 6ec7], [7420, 7420], [7471, 7471], [74b3, 74b3], [751c, 751c],
    [7530, 7530], [7538, 7538], [753a, 753a], [7547, 7547], [754b, 754b],
    [7551, 7551], [75f6, 75f6], [76f7, 76f7], [777c, 777c], [778b, 778b],
    [78cc, 78cc], [7d3e, 7d3e], [7dc2, 7dc2], [80cb, 80cb], [8146, 8146],
    [8214, 8214], [821a, 821a], [82eb, 82eb], [83fe, 83fe], [8695, 8695],
    [86ba, 86ba], [89a5, 89a5], [8cdf, 8cdf], [8dc8, 8dc8], [915f, 915f],
    [923f, 923f], [929b, 929b], [932a, 932a], [9369, 9369], [93ae, 93ae],
    [95d0, 95d0], [9766, 9766], [985a, 985a], [9902, 9902], [9dc6, 9dc6],
    [9ec7, 9ec7], [20088, 20088], [205d8, 205d8], [214a7, 214a7],
    [21652, 21652], [221f6, 221f6], [224cd, 224cd], [23296, 23296],
    [24620, 24620], [24926, 24926], [24a71, 24a71], [24ade, 24ade],
    [24c96, 24c96], [259d1, 259d1], [25a8c, 25a8c], [25aa7, 25aa7],
    [25ceb, 25ceb], [25d76, 25d76], [2628a, 2628a], [2653f, 2653f],
    [265c0, 265c1], [269d2, 269d2], [269d6, 269d6], [269dd, 269dd],
    [269e1, 269e1], [26b1e, 26b1e], [26cc7, 26cc7], [27242, 27242],
    [2730e, 2730e], [27a29, 27a29], [27a38, 27a38], [27c0a, 27c0a],
    [28181, 28181], [2827e, 2827e], [28308, 28308], [28841, 28841],
    [2884f, 2884f], [28e31, 28e31], [28e7b, 28e7b], [2920d, 2920d],
    [29241, 29241], [296a3, 296a3], [2a149, 2a149], [2a329, 2a329],
    [2a3be, 2a3be]**/


    namespace {
    const static UnicodeSet::run_t __tian_Set_runs[] = {
    {Empty, 416}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 7}, {Mixed, 2}, {Empty, 8}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 4}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 9}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 20}, {Mixed, 2},
    {Empty, 23}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2829}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 118}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 92}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 109},
    {Mixed, 1}, {Empty, 156}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 105}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 17},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 31},
    {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 56},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 84}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 29410}};
    const static UnicodeSet::bitquad_t  __tian_Set_quads[] = {
    0x00000002, 0x00002000, 0x00000010, 0x00008000, 0x00040000, 0x00000080,
    0x04000000, 0x00400000, 0x10000000, 0x00001000, 0x00000040, 0x02000000,
    0x00400000, 0x00000080, 0x00000010, 0x01000000, 0x00408000, 0x00000008,
    0x00008000, 0x04000000, 0x00000008, 0x00004000, 0x01000000, 0x40000000,
    0x04000000, 0x00100000, 0x00000800, 0x00000200, 0x00200000, 0x00800000,
    0x00400000, 0x01000000, 0x00000080, 0x20000000, 0x00001000, 0x80000000,
    0x00200000, 0x00002000, 0x00800000, 0x00000008, 0x00000400, 0x20000000,
    0x00000010, 0x00800000, 0x44000000, 0x80000000, 0x08000000, 0x00000200,
    0x00000080, 0x00000001, 0x00020000, 0x00080000, 0x10000000, 0x05010000,
    0x00020880, 0x00400000, 0x00800000, 0x10000000, 0x00000800, 0x00001000,
    0x40000000, 0x00000004, 0x00000800, 0x00000040, 0x04100000, 0x00000800,
    0x40000000, 0x00200000, 0x04000000, 0x00000020, 0x80000000, 0x00000100,
    0x80000000, 0x80000000, 0x08000000, 0x00000400, 0x00000200, 0x00004000,
    0x00010000, 0x00000040, 0x04000000, 0x00000004, 0x00000040, 0x00000080,
    0x00000100, 0x01000000, 0x00000080, 0x00040000, 0x00400000, 0x00002000,
    0x00400000, 0x00000001, 0x00000040, 0x00020000, 0x40000000, 0x00400000,
    0x00020000, 0x00001000, 0x00000080, 0x00000800, 0x00400000, 0x00000400,
    0x80000000, 0x00000003, 0x20440000, 0x00000002, 0x40000000, 0x00000080,
    0x00000004, 0x00004000, 0x01000200, 0x00000400, 0x00000002, 0x40000000,
    0x00000100, 0x00008002, 0x00020000, 0x08000000, 0x00002000, 0x00000002,
    0x00000008, 0x00000200, 0x00000200, 0x40000000};
    }

    const static UnicodeSet tian_Set{const_cast<UnicodeSet::run_t *>(__tian_Set_runs), 231, 0, const_cast<UnicodeSet::bitquad_t *>(__tian_Set_quads), 124, 0};

    /** Code Point Ranges for yin
    [3406, 3406], [343a, 343a], [349a, 349a], [3542, 3542], [35b6, 35b6],
    [37a4, 37a4], [3865, 3865], [396f, 396f], [397c, 397c], [39a9, 39a9],
    [39e2, 39e2], [3aa6, 3aa6], [3b92, 3b92], [3d8f, 3d8f], [3da3, 3da3],
    [3e12, 3e12], [3e5c, 3e5c], [3e5e, 3e5e], [40cc, 40cc], [4104, 4104],
    [4167, 4167], [41d9, 41d9], [4325, 4325], [43d6, 43d6], [449e, 449e],
    [44a1, 44a1], [44c4, 44c4], [44f0, 44f0], [457e, 457e], [4590, 4590],
    [459c, 459c], [46bf, 46bf], [473e, 473e], [4903, 4903], [493a, 493a],
    [4a38, 4a38], [4c3c, 4c3c], [4d26, 4d26], [4e51, 4e51], [4f12, 4f12],
    [4f17, 4f17], [50bf, 50bf], [5198, 5198], [51d0, 51d0], [5370, 5370],
    [541f, 541f], [542c, 542c], [5432, 5432], [552b, 552b], [5591, 5591],
    [569a, 569a], [56e0, 56e0], [5701, 5701], [573b, 573b], [5794, 5794],
    [57a0, 57a0], [57a6, 57a6], [57bd, 57bd], [5819, 5819], [5837, 5837],
    [58f9, 58f9], [5924, 5924], [59fb, 59fb], [5a6c, 5a6c], [5bc5, 5bc5],
    [5c39, 5c39], [5cfe, 5cfe], [5d1f, 5d1f], [5dbe, 5dbe], [5e01, 5e01],
    [5ed5, 5ed5], [5ef4, 5ef4], [5f15, 5f15], [6114, 6114], [6147, 6147],
    [6196, 6196], [61da, 61da], [65a6, 65a6], [6704, 6704], [6836, 6836],
    [6880, 6880], [6a83, 6a83], [6aad, 6aad], [6abc, 6abc], [6afd, 6afd],
    [6b2d, 6b2d], [6b3d, 6b3d], [6b45, 6b45], [6ba5, 6ba5], [6bb7, 6bb7],
    [6c24, 6c24], [6c82, 6c82], [6cff, 6cff], [6d07, 6d07], [6d15, 6d15],
    [6deb, 6deb], [6e5a, 6e5b], [6e6e, 6e6e], [6eb5, 6eb5], [6f6d, 6f6d],
    [6f6f, 6f6f], [6fe5, 6fe6], [70ce, 70ce], [70df, 70df], [72fa, 72fa],
    [730c, 730c], [73aa, 73aa], [73e2, 73e2], [748c, 748c], [7616, 7616],
    [764a, 764a], [766e, 766e], [784d, 784d], [7892, 7892], [78e4, 78e4],
    [798b, 798b], [79f5, 79f5], [7aa8, 7aa8], [7b43, 7b43], [7d6a, 7d6a],
    [7df8, 7df8], [7e2f, 7e2f], [80e4, 80e4], [82a9, 82a9], [831a, 831a],
    [8335, 8335], [8376, 8376], [8491, 8491], [8529, 8529], [852d, 852d],
    [861f, 861f], [8693, 8693], [87be, 87be], [87eb, 87eb], [88c0, 88c0],
    [8a00, 8a00], [8a14, 8a14], [8a22, 8a22], [8abe, 8abe], [8af2, 8af2],
    [8b94, 8b94], [8d7a, 8d7a], [8d9b, 8d9b], [8f11, 8f11], [911e, 911e],
    [9153, 9153], [9173, 9173], [91ff, 91ff], [920f, 920f], [921d, 921d],
    [9280, 9280], [92a6, 92a6], [95c7, 95c7], [95c9, 95c9], [9670, 9670],
    [967b, 967b], [96b1, 96b1], [972a, 972a], [9777, 9777], [9787, 9787],
    [97f3, 97f3], [97fe, 97fe], [98f2, 98f2], [99f0, 99f0], [9ba3, 9ba3],
    [9de3, 9de3], [9f57, 9f57], [9f66, 9f66], [200ca, 200ca],
    [2059f, 2059f], [20a9a, 20a9a], [20b9c, 20b9c], [20f68, 20f68],
    [211c2, 211c2], [21232, 21232], [212ea, 212ea], [21414, 21414],
    [214d3, 214d3], [214ff, 214ff], [215a3, 215a3], [21a58, 21a58],
    [21e1b, 21e1b], [21f3d, 21f3d], [220a8, 220a8], [22269, 22269],
    [222fb, 222fb], [22332, 22332], [224d5, 224d5], [224d9, 224d9],
    [226e6, 226e6], [2276f, 2276f], [22aaa, 22aaa], [22cc3, 22cc3],
    [22dcd, 22dcd], [234c6, 234c6], [23538, 23538], [239ab, 239ab],
    [23c50, 23c50], [23c5c, 23c5c], [23e0a, 23e0a], [23f6e, 23f6e],
    [240b9, 240b9], [243ad, 243ad], [2474e, 2474e], [248a6, 248a6],
    [24bf8, 24bf8], [24d6f, 24d6f], [24dcf, 24dcf], [24ed8, 24ed8],
    [255b5, 255b5], [25937, 25937], [25b1c, 25b1c], [25b8d, 25b8d],
    [26732, 26732], [26774, 26774], [267d8, 267d8], [26fbb, 26fbb],
    [272ad, 272ad], [27362, 27362], [27978, 27978], [279b8, 279b9],
    [27a6c, 27a6c], [28227, 28227], [282d9, 282d9], [283c8, 283c8],
    [28410, 28410], [284a6, 284a6], [284ee, 284ee], [286ca, 286ca],
    [287cf, 287cf], [287f4, 287f4], [28862, 28862], [28882, 28882],
    [2888e, 2888e], [28986, 28986], [290a2, 290a2], [290a5, 290a5],
    [290ec, 290ec], [2941e, 2941e], [29584, 29584], [29695, 29695],
    [29b35, 29b35], [2a530, 2a530], [2a53d, 2a53d], [2a60e, 2a60e],
    [2a664, 2a664], [2a67e, 2a67e], [2a6ca, 2a6ca]**/


    namespace {
    const static UnicodeSet::run_t __yin_Set_runs[] = {
    {Empty, 416}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 15},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 4}, {Empty, 3}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 2}, {Mixed, 3}, {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 3}, {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 15}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 16}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 2},
    {Empty, 11}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 24},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 2826},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7}, {Mixed, 2},
    {Empty, 3}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 56}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 79}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 29385}};
    const static UnicodeSet::bitquad_t  __yin_Set_quads[] = {
    0x00000040, 0x04000000, 0x04000000, 0x00000004, 0x00400000, 0x00000010,
    0x00000020, 0x10008000, 0x00000200, 0x00000004, 0x00000040, 0x00040000,
    0x00008000, 0x00000008, 0x00040000, 0x50000000, 0x00001000, 0x00000010,
    0x00000080, 0x02000000, 0x00000020, 0x00400000, 0x40000000, 0x00000002,
    0x00000010, 0x00010000, 0x40000000, 0x10010000, 0x80000000, 0x40000000,
    0x00000008, 0x04000000, 0x01000000, 0x10000000, 0x00000040, 0x00020000,
    0x00840000, 0x80000000, 0x01000000, 0x00010000, 0x00010000, 0x80000000,
    0x00041000, 0x00000800, 0x00020000, 0x04000000, 0x00000001, 0x00000002,
    0x08000000, 0x00100000, 0x20000041, 0x02000000, 0x00800000, 0x02000000,
    0x00000010, 0x08000000, 0x00001000, 0x00000020, 0x02000000, 0x40000000,
    0x80000000, 0x40000000, 0x00000002, 0x00200000, 0x00100000, 0x00200000,
    0x00100000, 0x00000080, 0x00400000, 0x04000000, 0x00000040, 0x00000010,
    0x00400000, 0x00000001, 0x00000008, 0x10002000, 0x20000000, 0x20002000,
    0x00000020, 0x00800020, 0x00000010, 0x00000004, 0x80000000, 0x00200080,
    0x00000800, 0x0c000000, 0x00004000, 0x00200000, 0x0000a000, 0x00000060,
    0x80004000, 0x04000000, 0x00001000, 0x00000400, 0x00000004, 0x00001000,
    0x00400000, 0x00000400, 0x00004000, 0x00002000, 0x00040000, 0x00000010,
    0x00000800, 0x00200000, 0x00000100, 0x00000008, 0x00000400, 0x01000000,
    0x00008000, 0x00000010, 0x00000200, 0x04000000, 0x00200000, 0x00400000,
    0x00020000, 0x00002200, 0x80000000, 0x00080000, 0x40000000, 0x00000800,
    0x00000001, 0x00100001, 0x00000004, 0x40000000, 0x00040000, 0x00100000,
    0x04000000, 0x08000000, 0x00020000, 0x40000000, 0x00080000, 0x00080000,
    0x80000000, 0x20008000, 0x00000001, 0x00000040, 0x00000280, 0x08010000,
    0x00020000, 0x00000400, 0x00800000, 0x00000080, 0x40080000, 0x00040000,
    0x00010000, 0x00000008, 0x00000008, 0x00800000, 0x00000040, 0x00000400,
    0x80000000, 0x04000000, 0x10000000, 0x00000100, 0x00000004, 0x00040000,
    0x00000400, 0x00100000, 0x00080000, 0x80000000, 0x00000008, 0x01000000,
    0x08000000, 0x20000000, 0x00000100, 0x00000200, 0x08000000, 0x00040000,
    0x02200000, 0x00000040, 0x00008000, 0x00000400, 0x00000008, 0x00002000,
    0x00000040, 0x01000000, 0x00000800, 0x10010000, 0x00000400, 0x00004000,
    0x02000000, 0x00002000, 0x00004000, 0x00000040, 0x01000000, 0x00008000,
    0x00008000, 0x01000000, 0x00200000, 0x00800000, 0x10000000, 0x00002000,
    0x00040000, 0x00100000, 0x01000000, 0x08000000, 0x00002000, 0x00000004,
    0x01000000, 0x03000000, 0x00001000, 0x00000080, 0x02000000, 0x00000100,
    0x00010000, 0x00000040, 0x00004000, 0x00000400, 0x00008000, 0x00100000,
    0x00000004, 0x00004004, 0x00000040, 0x00000024, 0x00001000, 0x40000000,
    0x00000010, 0x00200000, 0x00200000, 0x20010000, 0x00004000, 0x40000010,
    0x00000400};
    }

    const static UnicodeSet yin_Set{const_cast<UnicodeSet::run_t *>(__yin_Set_runs), 383, 0, const_cast<UnicodeSet::bitquad_t *>(__yin_Set_quads), 223, 0};

    /** Code Point Ranges for yi
    [340c, 340c], [344a, 344a], [345c, 345c], [3465, 3465], [3534, 3534],
    [3548, 3548], [3582, 3582], [3601, 3601], [3608, 3608], [360a, 360a],
    [3660, 3660], [366a, 366a], [36a4, 36a4], [36b6, 36b6], [36c4, 36c4],
    [36d5, 36d5], [36f3, 36f3], [370b, 370b], [3712, 3712], [3763, 3763],
    [3816, 3816], [386b, 386b], [387c, 387c], [388a, 388a], [389e, 389e],
    [38c7, 38c7], [38fb, 38fb], [394b, 394b], [3974, 3974], [3aca, 3aca],
    [3b9b, 3b9b], [3c18, 3c18], [3c1d, 3c1d], [3c3b, 3c3b], [3c5e, 3c5e],
    [3c72, 3c72], [3cbc, 3cbc], [3cd6, 3cd6], [3d01, 3d01], [3d12, 3d12],
    [3d14, 3d14], [3d5d, 3d5d], [3d67, 3d67], [3d69, 3d69], [3da0, 3da0],
    [3e6b, 3e6b], [3e6d, 3e6d], [3ebf, 3ebf], [3f22, 3f22], [3f48, 3f48],
    [3fa8, 3fa8], [407a, 407a], [40dc, 40dc], [4101, 4101], [4129, 4129],
    [413f, 413f], [41e9, 41e9], [41fc, 41fc], [4215, 4215], [4257, 4257],
    [425d, 425d], [4268, 4268], [42f5, 42f5], [4388, 4388], [43cc, 43cc],
    [4444, 4444], [44be, 44be], [44c3, 44c3], [44c8, 44c8], [451f, 451f],
    [452c, 452c], [4531, 4531], [454d, 454d], [4581, 4581], [458a, 458a],
    [458c, 458c], [45d1, 45d1], [45df, 45df], [45f7, 45f7], [461d, 461d],
    [4638, 4638], [46b7, 46b7], [4758, 4758], [487e, 487e], [4883, 4883],
    [48e1, 48e1], [48e7, 48e7], [49b4, 49b4], [49c5, 49c5], [49c7, 49c7],
    [49e7, 49e7], [4a5f, 4a5f], [4ab0, 4ab0], [4ad1, 4ad1], [4b01, 4b01],
    [4b42, 4b42], [4b47, 4b47], [4b5e, 4b5e], [4b72, 4b72], [4b7f, 4b7f],
    [4b8a, 4b8a], [4bc6, 4bc6], [4c19, 4c19], [4c2f, 4c2f], [4c4c, 4c4c],
    [4c5b, 4c5b], [4c91, 4c91], [4cc0, 4cc0], [4d2c, 4d2c], [4d30, 4d30],
    [4d5d, 4d5d], [4e00, 4e00], [4e3f, 4e3f], [4e41, 4e42], [4e59, 4e59],
    [4e5f, 4e5f], [4e84, 4e84], [4ea6, 4ea6], [4ee1, 4ee1], [4ee5, 4ee5],
    [4f0a, 4f0a], [4f3f, 4f3f], [4f41, 4f41], [4f57, 4f57], [4f5a, 4f5a],
    [4f7e, 4f7e], [4f87, 4f87], [4f9d, 4f9d], [4fcb, 4fcb], [501a, 501a],
    [506f, 506f], [5100, 5100], [5104, 5104], [5117, 5117], [5208, 5208],
    [5293, 5293], [52ae, 52ae], [52e9, 52e9], [531c, 531c], [533b, 533b],
    [5370, 5370], [53ad, 53ad], [53d5, 53d5], [53f0, 53f0], [53f9, 53f9],
    [541a, 541a], [542c, 542c], [546d, 546d], [5479, 5479], [54a6, 54a6],
    [54bf, 54bf], [5508, 5508], [55a6, 55a6], [55cc, 55cc], [564e, 564e],
    [566b, 566b], [56c8, 56c8], [571b, 571b], [572a, 572a], [572f, 572f],
    [5744, 5744], [5768, 5768], [57f6, 57f6], [57f8, 57f8], [58bf, 58bf],
    [58f9, 58f9], [5915, 5915], [5931, 5931], [5937, 5937], [5947, 5947],
    [5955, 5955], [59b7, 59b7], [59e8, 59e8], [59ec, 59ec], [5a90, 5a90],
    [5ad5, 5ad5], [5adb, 5adb], [5b04, 5b04], [5b11, 5b11], [5b1f, 5b1f],
    [5b74, 5b74], [5b83, 5b83], [5b9c, 5b9c], [5ba7, 5ba7], [5bf1, 5bf2],
    [5c04, 5c04], [5c3e, 5c3e], [5c79, 5c79], [5cd3, 5cd3], [5d0e, 5d0e],
    [5d3a, 5d3a], [5da7, 5da7], [5dac, 5dac], [5db7, 5db7], [5df2, 5df3],
    [5df8, 5df8], [5e1f, 5e20], [5e46, 5e46], [5ea1, 5ea1], [5ed9, 5ed9],
    [5f02, 5f02], [5f08, 5f08], [5f0b, 5f0b], [5f2c, 5f2c], [5f5d, 5f5d],
    [5f75, 5f75], [5f79, 5f79], [5fd4, 5fd4], [6020, 6021], [605e, 605e],
    [6092, 6092], [6098, 6098], [610f, 610f], [61b6, 61b6], [61cc, 61cc],
    [61ff, 61ff], [6232, 6232], [623a, 623a], [6245, 6246], [6261, 6261],
    [6291, 6291], [62f8, 62f8], [6339, 6339], [638e, 638e], [639c, 639c],
    [63d6, 63d6], [640b, 640b], [6424, 6424], [648e, 648e], [64c7, 64c7],
    [653a, 653a], [6561, 6561], [657c, 657c], [6581, 6581], [65bd, 65bd],
    [65d6, 65d6], [6613, 6613], [6633, 6633], [6679, 6679], [6686, 6686],
    [66c0, 66c0], [66ce, 66ce], [6759, 6759], [675d, 675d], [678d, 678d],
    [67bb, 67bb], [67c2, 67c2], [6818, 6818], [6827, 6827], [683a, 683a],
    [684b, 684b], [68ed, 68ed], [6905, 6905], [6938, 6938], [69f7, 69f8],
    [6a34, 6a34], [6a8d, 6a8d], [6aa5, 6aa5], [6ab9, 6ab9], [6b25, 6b25],
    [6b2d, 6b2d], [6b56, 6b56], [6b5d, 6b5d], [6b94, 6b94], [6baa, 6baa],
    [6bb9, 6bb9], [6bc5, 6bc5], [6bc9, 6bc9], [6c7d, 6c7d], [6c82, 6c82],
    [6cb6, 6cb6], [6cc4, 6cc4], [6cc6, 6cc6], [6d22, 6d22], [6d29, 6d29],
    [6d2b, 6d2b], [6d42, 6d42], [6d65, 6d65], [6d73, 6d73], [6e2b, 6e2b],
    [6ea2, 6ea2], [6f2a, 6f2a], [6f69, 6f69], [6fa4, 6fa4], [6fba, 6fba],
    [7037, 7037], [7109, 7109], [712c, 712c], [7131, 7132], [7199, 7199],
    [71a0, 71a0], [71a4, 71a4], [71aa, 71aa], [71bc, 71bc], [71da, 71da],
    [71e1, 71e1], [71f1, 71f1], [7284, 7284], [72cb, 72cb], [72cf, 72cf],
    [7317, 7317], [7348, 7348], [73c6, 73c6], [747f, 747f], [74f5, 74f5],
    [7570, 7570], [7591, 7591], [7599, 7599], [75ab, 75ab], [75cd, 75cd],
    [75ec, 75ec], [761e, 761e], [7631, 7631], [7654, 7654], [76ca, 76ca],
    [7719, 7719], [776a, 776a], [7796, 7796], [77e3, 77e3], [786a, 786a],
    [7912, 7912], [7919, 7919], [7995, 7995], [79c7, 79c7], [79fb, 79fb],
    [7a26, 7a26], [7a53, 7a53], [7b16, 7b16], [7bb7, 7bb7], [7c03, 7c03],
    [7d32, 7d32], [7d4f, 7d4f], [7dad, 7dad], [7dba, 7dba], [7e0a, 7e0a],
    [7e44, 7e44], [7e76, 7e76], [7e79, 7e79], [7f9b, 7f9b], [7fa0, 7fa1],
    [7fa9, 7fa9], [7fbf, 7fbf], [7fca, 7fca], [7fcc, 7fcc], [7ff3, 7ff3],
    [7ffc, 7ffc], [801b, 801b], [8034, 8034], [8084, 8084], [80f0, 80f0],
    [8189, 8189], [81c6, 81c6], [8257, 8257], [8264, 8264], [827e, 827e],
    [8285, 8285], [82e1, 82e2], [8351, 8351], [8413, 8413], [84fa, 84fa],
    [858f, 858f], [85d9, 85d9], [85dd, 85dd], [8619, 8619], [86c7, 86c7],
    [86dc, 86dc], [86e1, 86e1], [86e6, 86e6], [86fe, 86fe], [8734, 8734],
    [8794, 8794], [8798, 8798], [87a0, 87a0], [87fb, 87fb], [8863, 8863],
    [886a, 886a], [8875, 8875], [8882, 8882], [8898, 8898], [88a3, 88a3],
    [88d4, 88d4], [88db, 88db], [88ff, 88ff], [8918, 8918], [8939, 8939],
    [8957, 8957], [897c, 897c], [89fa, 89fa], [8a11, 8a11], [8a4d, 8a4d],
    [8a51, 8a52], [8a63, 8a63], [8a83, 8a83], [8a92, 8a92], [8abc, 8abc],
    [8b1a, 8b1a], [8b3b, 8b3b], [8b69, 8b69], [8b6f, 8b70], [8b7a, 8b7a],
    [8b89, 8b89], [8b9b, 8b9b], [8c5b, 8c5b], [8c77, 8c77], [8ca4, 8ca4],
    [8cbd, 8cbd], [8cf9, 8cf9], [8d00, 8d00], [8dc7, 8dc7], [8de0, 8de0],
    [8e26, 8e26], [8efc, 8efc], [8f17, 8f17], [8f22, 8f22], [8f59, 8f59],
    [8fa5, 8fa5], [8fc6, 8fc6], [8fe4, 8fe4], [8fed, 8fed], [8ff1, 8ff1],
    [8ffb, 8ffb], [9018, 9018], [9038, 9038], [907a, 907a], [9091, 9091],
    [90fc, 90fc], [914f, 914f], [91ab, 91ab], [91b3, 91b3], [91b7, 91b7],
    [91cb, 91cb], [91d4, 91d4], [91f4, 91f4], [91f6, 91f6], [9220, 9220],
    [9247, 9248], [926f, 926f], [9295, 9295], [92a5, 92a5], [9321, 9321],
    [93b0, 93b0], [93d4, 93d4], [943f, 943f], [9480, 9480], [9623, 9624],
    [9641, 9641], [966d, 966d], [96b6, 96b6], [96bf, 96bf], [96c9, 96c9],
    [9705, 9705], [972c, 972c], [9749, 9749], [977e, 977e], [9824, 9824],
    [9857, 9857], [98df, 98df], [98f4, 98f4], [9950, 9950], [9a5b, 9a5b],
    [9aae, 9aae], [9ba7, 9ba8], [9be3, 9be3], [9ce6, 9ce6], [9d3a, 9d3a],
    [9d82, 9d82], [9dc1, 9dc1], [9dca, 9dca], [9dd6, 9dd6], [9de7, 9de7],
    [9dfe, 9dfe], [9e03, 9e03], [9ed3, 9ed3], [9edd, 9edd], [9edf, 9edf],
    [9ef3, 9ef3], [9f6e, 9f6e], [9f78, 9f78], [20086, 20086],
    [20131, 20131], [2014c, 2014c], [20236, 20236], [2036b, 2036b],
    [20373, 20373], [203e9, 203e9], [20400, 20400], [204cb, 204cb],
    [205fa, 205fa], [206ae, 206ae], [206c3, 206c3], [20701, 20701],
    [20854, 20854], [2085d, 2085d], [20915, 20915], [20917, 20918],
    [20966, 20966], [20a3e, 20a3e], [20a57, 20a57], [20a6b, 20a6b],
    [20a97, 20a97], [20b99, 20b99], [20bcb, 20bcb], [20c04, 20c04],
    [20c94, 20c94], [20c96, 20c96], [20c9a, 20c9a], [20cba, 20cbb],
    [20db7, 20db7], [20f2a, 20f2a], [20f5c, 20f5c], [20fe3, 20fe3],
    [21135, 21135], [2113b, 2113b], [2125b, 2125b], [21281, 21281],
    [212b6, 212b6], [21361, 21361], [21658, 21658], [2172c, 2172c],
    [21941, 21941], [21b10, 21b10], [21c25, 21c25], [21c50, 21c50],
    [21dea, 21dea], [21ee3, 21ee3], [21f0e, 21f0e], [21fbe, 21fbe],
    [22001, 22001], [22092, 22092], [22097, 22097], [220bc, 220bc],
    [22105, 22105], [221d9, 221da], [221f8, 221f8], [22236, 22236],
    [22298, 22298], [22370, 22370], [22380, 22380], [22383, 22383],
    [22389, 22389], [223d7, 223d7], [224c0, 224c0], [224e1, 224e1],
    [22577, 22577], [22585, 22585], [225ab, 225ab], [225b4, 225b4],
    [225ba, 225ba], [225ce, 225ce], [2263d, 2263d], [22647, 22647],
    [22789, 22789], [22843, 22843], [228c9, 228c9], [22995, 22995],
    [22a2e, 22a2e], [22a33, 22a33], [22a6e, 22a6e], [22a7c, 22a7c],
    [22c41, 22c41], [22dd4, 22dd4], [23385, 23385], [23413, 23413],
    [23435, 23435], [2343f, 2343f], [23541, 23541], [23626, 23626],
    [2365b, 2365b], [23698, 23698], [2384a, 2384a], [238ad, 238ad],
    [238b7, 238b7], [2392a, 2392a], [2398c, 2398c], [239c4, 239c4],
    [23a1f, 23a1f], [23ad9, 23ad9], [23de9, 23de9], [23e18, 23e18],
    [23fc9, 23fc9], [241be, 241be], [241f4, 241f4], [24219, 24219],
    [24479, 24479], [245aa, 245aa], [2460a, 2460a], [24773, 24773],
    [2477b, 2477b], [248e8, 248e8], [248ee, 248ee], [2493a, 2493a],
    [2497f, 2497f], [249d5, 249d5], [24b29, 24b29], [24d27, 24d27],
    [24d9b, 24d9b], [24dc5, 24dc5], [24e38, 24e38], [24ec2, 24ec2],
    [24f0c, 24f0c], [250e0, 250e0], [250f8, 250f8], [2513b, 2513b],
    [2513f, 2513f], [25153, 25153], [2531f, 2531f], [2535f, 2535f],
    [25374, 25374], [253dc, 253dc], [25474, 25474], [254b5, 254b5],
    [25612, 25612], [25620, 25620], [25641, 25641], [25647, 25647],
    [25703, 25703], [257d8, 257d8], [2586a, 2586a], [258a7, 258a7],
    [2594c, 2594c], [25974, 25974], [25a56, 25a56], [25ac3, 25ac3],
    [25adc, 25add], [25c27, 25c27], [25c43, 25c43], [25e0a, 25e0a],
    [25e4b, 25e4b], [25f90, 25f90], [25feb, 25feb], [25ff9, 25ff9],
    [26329, 26329], [2639d, 2639d], [263f8, 263f8], [264fb, 264fb],
    [2651c, 2651c], [26525, 26525], [2652b, 2652b], [26633, 26633],
    [26668, 26668], [2669f, 2669f], [267e7, 267e7], [26809, 26809],
    [2686b, 2686b], [26971, 26971], [26a07, 26a07], [26b65, 26b65],
    [26bb8, 26bb8], [26d82, 26d82], [270df, 270df], [27156, 27156],
    [271a6, 271a6], [2723b, 2723b], [27245, 27245], [2726e, 2726e],
    [272a3, 272a4], [272cf, 272cf], [27414, 27414], [2744c, 2744c],
    [274d7, 274d7], [2752e, 2752e], [27661, 27661], [27724, 27724],
    [27847, 27847], [27882, 27882], [278df, 278df], [278ec, 278ec],
    [279a7, 279a7], [27a79, 27a79], [27ae6, 27ae6], [27b07, 27b07],
    [27b92, 27b92], [27c4a, 27c4a], [27c4f, 27c4f], [27cc1, 27cc1],
    [27dc5, 27dc5], [27de5, 27de5], [27e8e, 27e8e], [27e9d, 27e9d],
    [27ea2, 27ea2], [27ebf, 27ebf], [27fb0, 27fb0], [282ef, 282ef],
    [286ef, 286ef], [28736, 28736], [2873d, 2873d], [28811, 28811],
    [28836, 28836], [288e0, 288e0], [288ec, 288ec], [289af, 289af],
    [28cf7, 28cf7], [28e5d, 28e5d], [28eca, 28eca], [28ecf, 28ecf],
    [28f79, 28f79], [28f93, 28f93], [29092, 29092], [290b9, 290b9],
    [2922d, 2922d], [292cc, 292cc], [29356, 29356], [293ad, 293ad],
    [293b7, 293b7], [294e7, 294e7], [29526, 29526], [29572, 29572],
    [295b9, 295b9], [295be, 295be], [295d1, 295d1], [29627, 29627],
    [29682, 29682], [29687, 29687], [296c6, 296c6], [296ee, 296ee],
    [297be, 297be], [297c9, 297c9], [29863, 29863], [298de, 298de],
    [29912, 29912], [2996f, 2996f], [29a9f, 29a9f], [29aa3, 29aa3],
    [29bb5, 29bb5], [29cc7, 29cc7], [29d1c, 29d1c], [29d2e, 29d2e],
    [29dcd, 29dcd], [29dd8, 29dd8], [29e28, 29e28], [29f28, 29f28],
    [29f98, 29f98], [29fa0, 29fa0], [29fa2, 29fa2], [2a013, 2a013],
    [2a015, 2a015], [2a05a, 2a05b], [2a228, 2a228], [2a414, 2a414],
    [2a418, 2a418], [2a423, 2a423], [2a495, 2a495], [2a576, 2a576],
    [2a5f7, 2a5f7], [2a603, 2a603], [2a62c, 2a62c], [2a632, 2a632],
    [2a674, 2a674]**/


    namespace {
    const static UnicodeSet::run_t __yi_Set_runs[] = {
    {Empty, 416}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 5},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 4}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 4}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 5},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 4}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 3}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 5},
    {Mixed, 3}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 6}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
    {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 5}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 4}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 4}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 3}, {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 4}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 4}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 1}, {Mixed, 4}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 4}, {Empty, 1},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 3}, {Empty, 4},
    {Mixed, 3}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 3}, {Empty, 4},
    {Mixed, 4}, {Empty, 2}, {Mixed, 3}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 2},
    {Mixed, 4}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 8}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 8}, {Mixed, 6}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 9}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 4}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 5}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 5}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 4}, {Empty, 2}, {Mixed, 5}, {Empty, 1},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 3}, {Empty, 1}, {Mixed, 5}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12},
    {Mixed, 3}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 4}, {Empty, 5},
    {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 5}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 2824}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 4}, {Empty, 7}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 3}, {Mixed, 4}, {Empty, 2}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 24}, {Mixed, 2},
    {Empty, 13}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 3}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 2},
    {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 3}, {Empty, 7}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 10}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 3}, {Empty, 1}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 4},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 7}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 5}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 29388}};
    const static UnicodeSet::bitquad_t  __yi_Set_quads[] = {
    0x00001000, 0x10000400, 0x00000020, 0x00100000, 0x00000100, 0x00000004,
    0x00000502, 0x00000401, 0x00400010, 0x00200010, 0x00080000, 0x00040800,
    0x00000008, 0x00400000, 0x10000800, 0x40000400, 0x00000080, 0x08000000,
    0x00000800, 0x00100000, 0x00000400, 0x08000000, 0x21000000, 0x08000000,
    0x40000000, 0x00040000, 0x10000000, 0x00400000, 0x00140002, 0x20000000,
    0x00000280, 0x00000001, 0x00002800, 0x80000000, 0x00000004, 0x00000100,
    0x00000100, 0x04000000, 0x10000000, 0x00000002, 0x80000200, 0x10000200,
    0x00200000, 0x20800000, 0x00000100, 0x00200000, 0x00000100, 0x00001000,
    0x00000010, 0x40000000, 0x00000108, 0x80000000, 0x00021000, 0x00002000,
    0x00001402, 0x80020000, 0x00800000, 0x20000000, 0x01000000, 0x00800000,
    0x01000000, 0x40000000, 0x00000008, 0x00000082, 0x00100000, 0x000000a0,
    0x00000080, 0x80000000, 0x00010000, 0x00020000, 0x00000002, 0x40000084,
    0x80040000, 0x00000400, 0x00000040, 0x02000000, 0x00008000, 0x08001000,
    0x00020000, 0x00000001, 0x00011000, 0x20000000, 0x00000001, 0x80000000,
    0x82000006, 0x00000010, 0x00000040, 0x00000022, 0x00000400, 0x80000000,
    0x04800002, 0x40000000, 0x20000080, 0x00000800, 0x04000000, 0x00008000,
    0x00800011, 0x00000100, 0x00080000, 0x00004000, 0x00000200, 0x10000000,
    0x08000000, 0x00010000, 0x00002000, 0x00200000, 0x02010000, 0x04000000,
    0x00001000, 0x02002000, 0x80000040, 0x00000100, 0x00000040, 0x00001000,
    0x00004000, 0x00000800, 0x00000100, 0x08000000, 0x00008400, 0x00000010,
    0x00000100, 0x01400000, 0x80000000, 0x02000000, 0x00200000, 0x00820000,
    0x00200080, 0x00800000, 0x00001100, 0x00010000, 0x08200000, 0x80020010,
    0x00100000, 0x10000008, 0x00000080, 0x00060000, 0x00000010, 0x40000000,
    0x02000000, 0x00080000, 0x00004000, 0x04000000, 0x00801080, 0x010c0000,
    0x80000000, 0x00000001, 0x00000040, 0x00000002, 0x02000000, 0x00000904,
    0x00001000, 0x20000000, 0x02200000, 0x00100000, 0x00000003, 0x40000000,
    0x01040000, 0x00008000, 0x00400000, 0x00001000, 0x80000000, 0x04040000,
    0x00000060, 0x00000002, 0x00020000, 0x01000000, 0x02000000, 0x10004000,
    0x00400000, 0x00000800, 0x00000010, 0x00004000, 0x00000080, 0x04000000,
    0x10000002, 0x00000002, 0x20000000, 0x00400000, 0x00080000, 0x00080000,
    0x02000000, 0x00000040, 0x00004001, 0x22000000, 0x00002000, 0x08000000,
    0x00000004, 0x01000000, 0x04000080, 0x00000800, 0x00002000, 0x00000020,
    0x01000000, 0x01800000, 0x00100000, 0x00002000, 0x02000020, 0x00002020,
    0x20400000, 0x00100000, 0x02000400, 0x00000220, 0x20000000, 0x00000004,
    0x00400000, 0x00000050, 0x00000a04, 0x00000004, 0x00080020, 0x00000800,
    0x00000004, 0x00000400, 0x00000200, 0x04000010, 0x00800000, 0x00000200,
    0x00061000, 0x02000000, 0x10000411, 0x04000000, 0x00020002, 0x00000010,
    0x00008800, 0x00800000, 0x00000100, 0x00000040, 0x80000000, 0x00200000,
    0x00010000, 0x02020000, 0x00000800, 0x00002000, 0x00001000, 0x40000000,
    0x00020000, 0x00100000, 0x00000400, 0x02000000, 0x00000400, 0x00400000,
    0x00000008, 0x00000400, 0x02040000, 0x00200000, 0x00000080, 0x08000000,
    0x00000040, 0x00080000, 0x00400000, 0x00800000, 0x00000008, 0x00040000,
    0x00008000, 0x04002000, 0x00000400, 0x00000010, 0x02400000, 0x08000000,
    0x80000203, 0x00001400, 0x10080000, 0x08000000, 0x00100000, 0x00000010,
    0x00010000, 0x00000200, 0x00000040, 0x00800000, 0x40000010, 0x00000020,
    0x00000006, 0x00020000, 0x00080000, 0x04000000, 0x00008000, 0x22000000,
    0x02000000, 0x10000080, 0x40000042, 0x00100000, 0x01100000, 0x00000001,
    0x08000000, 0x00200408, 0x01000004, 0x00000008, 0x08100000, 0x80000000,
    0x01000000, 0x02000000, 0x00800000, 0x10000000, 0x04000000, 0x00020000,
    0x00062000, 0x00000008, 0x00040008, 0x10000000, 0x04000000, 0x08000000,
    0x04018200, 0x08000200, 0x08000000, 0x00800000, 0x20000010, 0x02000000,
    0x00000001, 0x00000080, 0x00000001, 0x00000040, 0x10000000, 0x00800000,
    0x00000004, 0x02000000, 0x00000020, 0x00000040, 0x08022010, 0x01000000,
    0x01000000, 0x04000000, 0x00020000, 0x10000000, 0x00008000, 0x00880800,
    0x00100800, 0x00500000, 0x00000001, 0x00000180, 0x00008000, 0x00200000,
    0x00000020, 0x00000002, 0x00010000, 0x00100000, 0x80000000, 0x00000001,
    0x00000018, 0x00000002, 0x00002000, 0x80400000, 0x00000200, 0x00000020,
    0x00001000, 0x00000200, 0x40000000, 0x00000010, 0x00800000, 0x80000000,
    0x00100000, 0x00010000, 0x08000000, 0x00004000, 0x00000180, 0x00000008,
    0x00000040, 0x04000000, 0x00000004, 0x00400402, 0x40000080, 0x00000008,
    0xa0080000, 0x00080000, 0x01004000, 0x00000040, 0x00020000, 0x00001000,
    0x00400000, 0x00080800, 0x00000200, 0x00000001, 0x00000800, 0x04000000,
    0x00004000, 0x00000008, 0x00000002, 0x20100000, 0x01a00000, 0x00000040,
    0x40000000, 0x00800000, 0x00000800, 0x00800000, 0x02000000, 0x00000800,
    0x00000010, 0x04500000, 0x0c000000, 0x00800000, 0x00000400, 0x10000000,
    0x00000008, 0x08200000, 0x08000000, 0x00000002, 0x00400000, 0x00000002,
    0x01000000, 0x00001000, 0x00000002, 0x00010000, 0x00000020, 0x00010000,
    0x00000400, 0x00000008, 0x00004000, 0x40000000, 0x00000002, 0x00840000,
    0x10000000, 0x00000020, 0x06000000, 0x01000000, 0x00400000, 0x01000000,
    0x00010000, 0x00000209, 0x00800000, 0x00000001, 0x00000002, 0x00800000,
    0x00000020, 0x04100800, 0x00004000, 0x20000000, 0x00000080, 0x00000200,
    0x00000008, 0x00000200, 0x00200000, 0x00084000, 0x10004000, 0x00000002,
    0x00100000, 0x00000020, 0x00080000, 0x80200000, 0x00000002, 0x00000040,
    0x08000000, 0x01000000, 0x00000400, 0x00802000, 0x00000400, 0x00001000,
    0x00000010, 0x80000000, 0x02000000, 0x00000200, 0x01000000, 0x00000200,
    0x40000000, 0x00100000, 0x02000000, 0x02000000, 0x00000400, 0x00000400,
    0x08080000, 0x00004100, 0x04000000, 0x80000000, 0x00200000, 0x00000200,
    0x00000080, 0x08000000, 0x00000020, 0x01000000, 0x00000004, 0x00001000,
    0x01000001, 0x88000000, 0x00080000, 0x80000000, 0x80000000, 0x00100000,
    0x10000000, 0x00100000, 0x00200000, 0x00040000, 0x00000001, 0x00000082,
    0x00000008, 0x01000000, 0x00000400, 0x00000080, 0x00001000, 0x00100000,
    0x00400000, 0x30000008, 0x00000080, 0x00000008, 0x00000400, 0x00000800,
    0x00010000, 0x02000800, 0x00000200, 0x20000000, 0x01000000, 0x08000000,
    0x10000000, 0x00000820, 0x00080000, 0x00000100, 0x80000000, 0x00000080,
    0x00000200, 0x00000800, 0x00020000, 0x00000080, 0x00000020, 0x01000000,
    0x00000004, 0x80000000, 0x00400000, 0x00000040, 0x08000000, 0x00000020,
    0x00004000, 0x00000018, 0x00008000, 0x00100000, 0x00001000, 0x00800000,
    0x00004000, 0x00000002, 0x00000010, 0x00000080, 0x00000004, 0x80000000,
    0x00001000, 0x00000080, 0x02000000, 0x00000040, 0x00000080, 0x00040000,
    0x00008400, 0x00000002, 0x00000020, 0x00000020, 0x20004000, 0x80000004,
    0x00010000, 0x00008000, 0x00008000, 0x20400000, 0x00020000, 0x00400000,
    0x00001001, 0x00008000, 0x00800000, 0x20000000, 0x00008400, 0x02000000,
    0x00080000, 0x00040000, 0x02000000, 0x00002000, 0x00001000, 0x00400000,
    0x00802000, 0x00000080, 0x00000040, 0x00040000, 0x42000000, 0x00020000,
    0x00000080, 0x00000084, 0x00000040, 0x00004000, 0x40000000, 0x00000200,
    0x00000008, 0x40000000, 0x00040000, 0x00008000, 0x80000000, 0x00000008,
    0x00200000, 0x00000080, 0x10000000, 0x00004000, 0x01002000, 0x00000100,
    0x00000100, 0x01000000, 0x00000005, 0x00280000, 0x0c000000, 0x00000100,
    0x01100000, 0x00000008, 0x00200000, 0x00400000, 0x00800000, 0x00000008,
    0x00041000, 0x00100000};
    }

    const static UnicodeSet yi_Set{const_cast<UnicodeSet::run_t *>(__yi_Set_runs), 765, 0, const_cast<UnicodeSet::bitquad_t *>(__yi_Set_quads), 596, 0};

    /** Code Point Ranges for xie
    [3416, 3416], [34a0, 34a0], [34d4, 34d4], [350e, 350e], [3550, 3550],
    [3591, 3591], [35bf, 35bf], [35e8, 35e8], [365d, 365d], [3670, 3670],
    [3792, 3792], [385c, 385c], [38b5, 38b5], [38ef, 38f0], [395f, 395f],
    [39aa, 39aa], [3a19, 3a19], [3a1d, 3a1d], [3a49, 3a49], [3a66, 3a66],
    [3c14, 3c14], [3c54, 3c54], [3ce6, 3ce6], [3d2c, 3d2c], [3d3d, 3d3d],
    [3f4a, 3f4a], [3f9a, 3f9a], [4018, 4018], [404b, 404b], [406f, 406f],
    [424f, 424f], [4263, 4263], [429d, 429d], [42f6, 42f6], [44f3, 44f3],
    [4511, 4511], [4548, 4548], [4575, 4575], [464e, 464e], [467d, 467d],
    [46b8, 46b8], [4771, 4771], [4861, 4861], [48a1, 48a1], [4971, 4971],
    [498f, 498f], [4996, 4996], [4a64, 4a64], [4a67, 4a67], [4aa5, 4aa5],
    [4b05, 4b05], [4d66, 4d66], [4e9b, 4e9b], [4f33, 4f33], [5055, 5055],
    [505e, 505e], [5070, 5070], [50c1, 50c1], [5136, 5136], [52a6, 52a6],
    [52f0, 52f0], [5354, 5354], [5378, 5378], [53f6, 53f6], [5424, 5424],
    [550f, 550f], [5588, 5588], [55cb, 55cb], [5667, 5667], [57a5, 57a5],
    [586e, 586e], [593e, 593e], [594a, 594a], [5951, 5951], [5a0e, 5a0e],
    [5a9f, 5a9f], [5b48, 5b48], [5beb, 5beb], [5c51, 5c51], [5c53, 5c53],
    [5c5f, 5c5f], [5c67, 5c67], [5ceb, 5ceb], [5db0, 5db0], [5ee8, 5ee8],
    [5fa2, 5fa2], [604a, 604a], [6136, 6136], [6140, 6140], [61c8, 61c8],
    [62f9, 62f9], [633e, 633e], [63a5, 63a5], [63f3, 63f3], [641a, 641a],
    [647a, 647a], [64f7, 64f7], [651c, 651c], [659c, 659c], [66ac, 66ac],
    [67bb, 67bb], [6854, 6854], [688b, 688b], [68b0, 68b0], [6954, 6954],
    [698d, 698d], [699d, 699d], [69ad, 69ad], [69f7, 69f7], [6a9e, 6a9e],
    [6b38, 6b38], [6b47, 6b47], [6b59, 6b59], [6bba, 6bba], [6c41, 6c41],
    [6cc4, 6cc4], [6d29, 6d29], [6e2b, 6e2b], [6e5d, 6e5d], [6e89, 6e89],
    [6eca, 6eca], [6f70, 6f70], [6fa5, 6fa5], [7009, 7009], [7023, 7023],
    [707a, 707a], [70f2, 70f2], [7181, 7181], [71ee, 71ee], [71f2, 71f2],
    [7332, 7332], [7366, 7366], [736c, 736c], [744e, 744e], [772d, 772d],
    [78bf, 78bf], [7944, 7944], [79bc, 79bc], [7ccf, 7ccf], [7d32, 7d32],
    [7d4f, 7d4f], [7d5c, 7d5c], [7d6c, 7d6c], [7d8a, 7d8a], [7de4, 7de4],
    [7df3, 7df3], [7e72, 7e72], [7e88, 7e88], [7fd3, 7fd3], [8036, 8036],
    [8105, 8105], [818e, 818e], [82f4, 82f4], [85a2, 85a2], [85a4, 85a4],
    [85db, 85db], [874e, 874e], [8751, 8751], [8762, 8762], [87f9, 87f9],
    [8840, 8840], [887a, 887a], [88cc, 88cc], [8909, 8909], [893b, 893b],
    [896d, 896d], [89df, 89df], [89e3, 89e3], [8adc, 8adc], [8ae7, 8ae7],
    [8b1d, 8b1d], [8b6e, 8b6e], [8b97, 8b97], [8c6b, 8c6b], [8dec, 8dec],
    [8e9e, 8e9e], [8ea0, 8ea0], [8fe6, 8fe6], [9082, 9082], [90aa, 90aa],
    [9371, 9371], [96b0, 96b0], [978b, 978b], [97a2, 97a2], [97b5, 97b5],
    [97f0, 97f0], [9801, 9801], [9821, 9821], [9ab1, 9ab1], [9b39, 9b39],
    [9b7c, 9b7c], [9bad, 9bad], [9f42, 9f42], [9f58, 9f58], [9f5b, 9f5b],
    [9fa4, 9fa4], [20171, 20171], [20444, 20444], [205b9, 205b9],
    [205c9, 205c9], [208b2, 208b2], [20a06, 20a06], [20c8a, 20c8a],
    [20e34, 20e34], [20fc7, 20fc7], [2103a, 2103a], [210c2, 210c2],
    [21115, 21115], [215fc, 215fc], [216f6, 216f6], [21798, 21798],
    [217e9, 217e9], [218f9, 218f9], [2190b, 2190b], [21b65, 21b65],
    [21c22, 21c22], [21e14, 21e14], [21f56, 21f56], [22090, 22090],
    [22300, 22300], [224ec, 224ec], [22586, 22586], [225ca, 225ca],
    [22728, 22728], [2279c, 2279c], [2292f, 22930], [22958, 22958],
    [22b3f, 22b3f], [22bc9, 22bc9], [22d32, 22d32], [22e52, 22e52],
    [22fe1, 22fe1], [2319f, 2319f], [23484, 23484], [23790, 23790],
    [238e9, 238e9], [238f2, 238f2], [238f6, 238f6], [23af4, 23af4],
    [23b15, 23b15], [23e69, 23e69], [23ee0, 23ee0], [23f52, 23f52],
    [2446a, 2446a], [245c8, 245c8], [24652, 24652], [247a1, 247a1],
    [24867, 24867], [248ba, 248ba], [248d1, 248d1], [24ac9, 24ac9],
    [24baf, 24baf], [24c77, 24c77], [24e8e, 24e8e], [2503a, 2503a],
    [251a5, 251a5], [251f1, 251f1], [252af, 252af], [25328, 25328],
    [25346, 25346], [2534b, 2534b], [2538e, 2538e], [255e7, 255e7],
    [25756, 25756], [258b9, 258b9], [2605b, 2605b], [262c5, 262c5],
    [26388, 26388], [2653c, 2653c], [26590, 26590], [266a1, 266a1],
    [266ab, 266ab], [2679a, 2679a], [26a4c, 26a4c], [26aac, 26aac],
    [26cc3, 26cc3], [26d71, 26d71], [27022, 27022], [2703a, 2703a],
    [2730a, 2730b], [27316, 27316], [27341, 27341], [273c2, 273c3],
    [27403, 27403], [27466, 27466], [274c2, 274c2], [274fa, 274fa],
    [27581, 27581], [276fc, 276fc], [27714, 27714], [2776b, 2776b],
    [277c3, 277c3], [27964, 27964], [27b60, 27b60], [27b78, 27b78],
    [27ce7, 27ce7], [27dd1, 27dd1], [27de7, 27de7], [28042, 28042],
    [2810c, 2810c], [281e8, 281e8], [28219, 28219], [283f3, 283f3],
    [28934, 28934], [289e5, 289e5], [28ad4, 28ad4], [28cda, 28cda],
    [28d5a, 28d5a], [28d6a, 28d6a], [28de5, 28de5], [28f2c, 28f2c],
    [28f97, 28f97], [290aa, 290aa], [290d6, 290d6], [292e7, 292e7],
    [2935d, 2935d], [29383, 29383], [29401, 29401], [29409, 29409],
    [2965c, 2965c], [29920, 29920], [29af2, 29af2], [29c33, 29c33],
    [29dc2, 29dc2], [29eab, 29eab], [29f4d, 29f4d], [2a18b, 2a18b],
    [2a35b, 2a35b], [2a56f, 2a56f], [2a665, 2a665]**/


    namespace {
    const static UnicodeSet::run_t __xie_Set_runs[] = {
    {Empty, 416}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 14},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 1},
    {Mixed, 2}, {Empty, 6}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 2}, {Mixed, 4}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 21},
    {Mixed, 2}, {Empty, 11}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 6}, {Mixed, 3}, {Empty, 2},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 21},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 1},
    {Mixed, 3}, {Empty, 19}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2829}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 10}, {Mixed, 2}, {Empty, 22}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 2},
    {Empty, 18}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 15}, {Mixed, 2}, {Empty, 26}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 15},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 60}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 16}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 29388}};
    const static UnicodeSet::bitquad_t  __xie_Set_quads[] = {
    0x00400000, 0x00000001, 0x00100000, 0x00004000, 0x00010000, 0x00020000,
    0x80000000, 0x00000100, 0x20000000, 0x00010000, 0x00040000, 0x10000000,
    0x00200000, 0x00018000, 0x80000000, 0x00000400, 0x22000000, 0x00000200,
    0x00000040, 0x00100000, 0x00100000, 0x00000040, 0x20001000, 0x00000400,
    0x04000000, 0x01000000, 0x00000800, 0x00008000, 0x00008000, 0x00000008,
    0x20000000, 0x00400000, 0x00080000, 0x00020000, 0x00000100, 0x00200000,
    0x00004000, 0x20000000, 0x01000000, 0x00020000, 0x00000002, 0x00000002,
    0x00020000, 0x00408000, 0x00000090, 0x00000020, 0x00000020, 0x00000040,
    0x08000000, 0x00080000, 0x40200000, 0x00010000, 0x00000002, 0x00400000,
    0x00000040, 0x00010000, 0x00100000, 0x01000000, 0x00400000, 0x00000010,
    0x00008000, 0x00000100, 0x00000800, 0x00000080, 0x00000020, 0x00004000,
    0x40000000, 0x00020400, 0x00004000, 0x80000000, 0x00000100, 0x00000800,
    0x800a0000, 0x00000080, 0x00000800, 0x00010000, 0x00000100, 0x00000004,
    0x00000400, 0x00400000, 0x00000001, 0x00000100, 0x02000000, 0x40000000,
    0x00000020, 0x00080000, 0x04000000, 0x04000000, 0x00800000, 0x10000000,
    0x10000000, 0x00001000, 0x08000000, 0x00100000, 0x00000800, 0x00010000,
    0x00100000, 0x20002000, 0x00002000, 0x00800000, 0x40000000, 0x01000000,
    0x02000080, 0x04000000, 0x00000002, 0x00000010, 0x00000200, 0x00000800,
    0x20000000, 0x00000200, 0x00000400, 0x00010000, 0x00000020, 0x00000200,
    0x00000008, 0x04000000, 0x00040000, 0x00000002, 0x00044000, 0x00040000,
    0x00001040, 0x00004000, 0x00002000, 0x80000000, 0x00000010, 0x10000000,
    0x00008000, 0x00040000, 0x10008000, 0x00001000, 0x00000400, 0x00080010,
    0x00040000, 0x00000100, 0x00080000, 0x00400000, 0x00000020, 0x00004000,
    0x00100000, 0x00000014, 0x08000000, 0x00024000, 0x00000004, 0x02000000,
    0x00000001, 0x04000000, 0x00001000, 0x00000200, 0x08000000, 0x00002000,
    0x80000000, 0x00000008, 0x10000000, 0x00000080, 0x20000000, 0x00004000,
    0x00800000, 0x00000800, 0x00001000, 0x40000000, 0x00000001, 0x00000040,
    0x00000004, 0x00000400, 0x00020000, 0x00010000, 0x00000800, 0x00200004,
    0x00010000, 0x00000002, 0x00000002, 0x00020000, 0x02000000, 0x10000000,
    0x00002000, 0x09000004, 0x00000010, 0x00020000, 0x00000010, 0x02000000,
    0x00000200, 0x00040000, 0x00000040, 0x00000400, 0x00100000, 0x00000080,
    0x04000000, 0x00000004, 0x00200000, 0x10000000, 0x00400000, 0x01000000,
    0x00000200, 0x02000000, 0x00000800, 0x00000020, 0x00000004, 0x00100000,
    0x00400000, 0x00010000, 0x00000001, 0x00001000, 0x00000040, 0x00000400,
    0x00000100, 0x10000000, 0x00018000, 0x01000000, 0x80000000, 0x00000200,
    0x00040000, 0x00040000, 0x00000002, 0x80000000, 0x00000010, 0x00010000,
    0x00440200, 0x00100000, 0x00200000, 0x00000200, 0x00000001, 0x00040000,
    0x00000400, 0x00000100, 0x00040000, 0x00000002, 0x00000080, 0x04000000,
    0x00020000, 0x00000200, 0x00008000, 0x00800000, 0x00004000, 0x04000000,
    0x00000020, 0x00020000, 0x00008000, 0x00000100, 0x00000840, 0x00004000,
    0x00000080, 0x00400000, 0x02000000, 0x08000000, 0x00000020, 0x00000100,
    0x10000000, 0x00010000, 0x00000802, 0x04000000, 0x00001000, 0x00001000,
    0x00000008, 0x00020000, 0x04000004, 0x00400c00, 0x00000002, 0x0000000c,
    0x00000008, 0x00000040, 0x00000004, 0x04000000, 0x00000002, 0x10000000,
    0x00100000, 0x00000800, 0x00000008, 0x00000010, 0x01000001, 0x00000080,
    0x00020000, 0x00000080, 0x00000004, 0x00001000, 0x00000100, 0x02000000,
    0x00080000, 0x00100000, 0x00000020, 0x00100000, 0x04000000, 0x04000000,
    0x00000400, 0x00000020, 0x00001000, 0x00800000, 0x00000400, 0x00400000,
    0x00000080, 0x20000000, 0x00000008, 0x00000202, 0x10000000, 0x00000001,
    0x00040000, 0x00080000, 0x00000004, 0x00000800, 0x00002000, 0x00000800,
    0x08000000, 0x00008000, 0x00000020};
    }

    const static UnicodeSet xie_Set{const_cast<UnicodeSet::run_t *>(__xie_Set_runs), 503, 0, const_cast<UnicodeSet::bitquad_t *>(__xie_Set_quads), 303, 0};

    /** Code Point Ranges for dan
    [3424, 3424], [350a, 350a], [356a, 356a], [3806, 3806], [387a, 387a],
    [3bef, 3bef], [3d37, 3d37], [40eb, 40eb], [4121, 4121], [425e, 425e],
    [42a4, 42a4], [43d9, 43d9], [4437, 4437], [449f, 449f], [45fa, 45fa],
    [4872, 4872], [4994, 4994], [4a22, 4a22], [4a35, 4a35], [4a65, 4a65],
    [4ab4, 4ab4], [4cc9, 4cc9], [4e39, 4e39], [4e3c, 4e3c], [4eb6, 4eb6],
    [4f46, 4f46], [5013, 5013], [50e4, 50e4], [5103, 5103], [510b, 510b],
    [5189, 5189], [5210, 5210], [52ef, 52ef], [5330, 5330], [547e, 547e],
    [550c, 550c], [5556, 5557], [557f, 557f], [55ae, 55ae], [563d, 563e],
    [5649, 5649], [5661, 5661], [58c7, 58c7], [5a0a, 5a0a], [5a85, 5a85],
    [5e0e, 5e0e], [5f48, 5f48], [5ff1, 5ff1], [601b, 601b], [60d4, 60d4],
    [6116, 6116], [619a, 619a], [61ba, 61ba], [61be, 61be], [628c, 628c],
    [62c5, 62c5], [64a2, 64a3], [64d4, 64d4], [65e6, 65e6], [67e6, 67e6],
    [6a90, 6a90], [6b3f, 6b3f], [6bab, 6bab], [6c2e, 6c2e], [6c8a, 6c8a],
    [6de1, 6de1], [6e5b, 6e5b], [6f6d, 6f6d], [6fb6, 6fb6], [6fb8, 6fb9],
    [71c0, 71c0], [72da, 72da], [73ac, 73ac], [74ed, 74ed], [7514, 7514],
    [758d, 758d], [75b8, 75b8], [7649, 7649], [765a, 765a], [76bd, 76bd],
    [7708, 7708], [77f3, 77f3], [7803, 7803], [79ab, 79ab], [7a9e, 7a9e],
    [7c1e, 7c1e], [7d1e, 7d1e], [7e75, 7e75], [803d, 803d], [8043, 8043],
    [8078, 8078], [80c6, 80c6], [8145, 8145], [81bb, 81bb], [81bd, 81bd],
    [840f, 840f], [86cb, 86cb], [8711, 8712], [87fa, 87fa], [8874, 8874],
    [894c, 894c], [895c, 895c], [8998, 8998], [89db, 89db], [8a11, 8a11],
    [8a79, 8a79], [8a95, 8a95], [8b42, 8b42], [8d09, 8d09], [8d0d, 8d0d],
    [8e5b, 8e5b], [8ead, 8ead], [9132, 9132], [9156, 9156], [9188, 9188],
    [972e, 972e], [9815, 9815], [9924, 9924], [994f, 994f], [99be, 99be],
    [99f3, 99f3], [9ae7, 9ae7], [9d20, 9d20], [9ed5, 9ed5], [9eee, 9eee],
    [9ef5, 9ef5], [2019b, 2019b], [201b6, 201b6], [201cb, 201cb],
    [20230, 20230], [204ca, 204ca], [20e46, 20e46], [21593, 21593],
    [219a8, 219a8], [21d55, 21d55], [22152, 22152], [22251, 22251],
    [222c3, 222c3], [223aa, 223aa], [2245d, 2245d], [22607, 22607],
    [22efc, 22efc], [2315f, 2315f], [232ca, 232ca], [236f1, 236f1],
    [23c4d, 23c4d], [23ca5, 23ca5], [24061, 24061], [2488f, 2488f],
    [24cad, 24cad], [24eba, 24eba], [25126, 25126], [25439, 25439],
    [25a0e, 25a0e], [25c77, 25c77], [25c84, 25c84], [25c87, 25c87],
    [25cf8, 25cf9], [25f9a, 25f9a], [2617c, 2617c], [262ea, 262ea],
    [26b39, 26b39], [26ec1, 26ec1], [26f5c, 26f5c], [26f6b, 26f6b],
    [26fa9, 26fa9], [2703b, 2703b], [27084, 27084], [27647, 27647],
    [2786a, 2786a], [27b43, 27b43], [27d38, 27d38], [288bf, 288bf],
    [29115, 29115], [29166, 29166], [2917e, 2917e], [29209, 2920a],
    [293e5, 293e5], [29564, 29564], [29a67, 29a67], [2a029, 2a029],
    [2a1bb, 2a1bb], [2a4be, 2a4be]**/


    namespace {
    const static UnicodeSet::run_t __dan_Set_runs[] = {
    {Empty, 417}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 18}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 8}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 3},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 13}, {Mixed, 3}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 2836}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 75}, {Mixed, 1}, {Empty, 57}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 70}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 64},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 46},
    {Mixed, 1}, {Empty, 18}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 91}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 29402}};
    const static UnicodeSet::bitquad_t  __dan_Set_quads[] = {
    0x00000010, 0x00000400, 0x00000400, 0x00000040, 0x04000000, 0x00008000,
    0x00800000, 0x00000800, 0x00000002, 0x40000000, 0x00000010, 0x02000000,
    0x00800000, 0x80000000, 0x04000000, 0x00040000, 0x00100000, 0x00200004,
    0x00000020, 0x00100000, 0x00000200, 0x12000000, 0x00400000, 0x00000040,
    0x00080000, 0x00000010, 0x00000808, 0x00000200, 0x00010000, 0x00008000,
    0x00010000, 0x40000000, 0x00001000, 0x00c00000, 0x80000000, 0x00004000,
    0x60000000, 0x00000200, 0x00000002, 0x00000080, 0x00000400, 0x00000020,
    0x00004000, 0x00000100, 0x00020000, 0x08000000, 0x00100000, 0x00400000,
    0x04000000, 0x44000000, 0x00001000, 0x00000020, 0x0000000c, 0x00100000,
    0x00000040, 0x00000040, 0x00010000, 0x80000000, 0x00000800, 0x00004000,
    0x00000400, 0x00000002, 0x08000000, 0x00002000, 0x03400000, 0x00000001,
    0x04000000, 0x00001000, 0x00002000, 0x00100000, 0x00002000, 0x01000000,
    0x04000200, 0x20000000, 0x00000100, 0x00080000, 0x00000008, 0x00000800,
    0x40000000, 0x40000000, 0x40000000, 0x00200000, 0x20000000, 0x00000008,
    0x01000000, 0x00000040, 0x00000020, 0x28000000, 0x00008000, 0x00000800,
    0x00060000, 0x04000000, 0x00100000, 0x10001000, 0x01000000, 0x08000000,
    0x00020000, 0x02000000, 0x00200000, 0x00000004, 0x00002200, 0x08000000,
    0x00002000, 0x00040000, 0x00400000, 0x00000100, 0x00004000, 0x00200000,
    0x00000010, 0x00008000, 0x40000000, 0x00080000, 0x00000080, 0x00000001,
    0x00200000, 0x00204000, 0x08000000, 0x00400000, 0x00000800, 0x00010000,
    0x00000400, 0x00000040, 0x00080000, 0x00000100, 0x00200000, 0x00040000,
    0x00020000, 0x00000008, 0x00000400, 0x20000000, 0x00000080, 0x10000000,
    0x80000000, 0x00000400, 0x00020000, 0x00002000, 0x00000020, 0x00000002,
    0x00008000, 0x00002000, 0x04000000, 0x00000040, 0x02000000, 0x00004000,
    0x00800000, 0x00000090, 0x03000000, 0x04000000, 0x10000000, 0x00000400,
    0x02000000, 0x00000002, 0x10000000, 0x00000800, 0x00000200, 0x08000000,
    0x00000010, 0x00000080, 0x00000400, 0x00000008, 0x01000000, 0x80000000,
    0x00200000, 0x40000040, 0x00000600, 0x00000020, 0x00000010, 0x00000080,
    0x00000200, 0x08000000, 0x40000000};
    }

    const static UnicodeSet dan_Set{const_cast<UnicodeSet::run_t *>(__dan_Set_runs), 303, 0, const_cast<UnicodeSet::bitquad_t *>(__dan_Set_quads), 171, 0};

    /** Code Point Ranges for qiu
    [3424, 3424], [36b1, 36b1], [36cf, 36cf], [3797, 3797], [37c8, 37c8],
    [3939, 3939], [3962, 3962], [3b5d, 3b5d], [3ccb, 3ccb], [3dd5, 3dd5],
    [3ea9, 3ea9], [4286, 4286], [42b5, 42b5], [43bf, 43bf], [4410, 4410],
    [472a, 472a], [47ad, 47ad], [47ec, 47ec], [47f5, 47f5], [4813, 4813],
    [4817, 4817], [48c7, 48c7], [4a02, 4a02], [4c78, 4c78], [4e18, 4e18],
    [4ec7, 4ec7], [4fc5, 4fc5], [5340, 5340], [53b9, 53b9], [53f4, 53f4],
    [5512, 5512], [56da, 56da], [56e2, 56e2], [5a9d, 5a9d], [5d37, 5d37],
    [5df0, 5df0], [6058, 6058], [60c6, 60c6], [6100, 6100], [624f, 624f],
    [6344, 6344], [641d, 641d], [6739, 6739], [6882, 6882], [6978, 6978],
    [6a5a, 6a5a], [6af9, 6af9], [6b8f, 6b8f], [6bec, 6bec], [6c3d, 6c3d],
    [6c3f, 6c3f], [6c42, 6c42], [6c53, 6c53], [6cc5, 6cc5], [6d57, 6d57],
    [6e1e, 6e1e], [6e6b, 6e6b], [6e6d, 6e6d], [716a, 716a], [726b, 726b],
    [72b0, 72b0], [738c, 738c], [7403, 7403], [7486, 7486], [76b3, 76b3],
    [76da, 76da], [79cb, 79cb], [7bcd, 7bcd], [7cd7, 7cd7], [7d0c, 7d0c],
    [7d7f, 7d7f], [7de7, 7de7], [808d, 808d], [827d, 827d], [838d, 838d],
    [8429, 8429], [84f2, 84f2], [866c, 866c], [866f, 866f], [86af, 86af],
    [86f7, 86f7], [8764, 8764], [87d7, 87d7], [88d8, 88d8], [89d3, 89d3],
    [89e9, 89e9], [8a04, 8a05], [8cd5, 8cd5], [8d9c, 8d9c], [8da5, 8da5],
    [8e06, 8e06], [9011, 9011], [9052, 9052], [90b1, 90b1], [90ba, 90ba],
    [914b, 914b], [9194, 9194], [91d3, 91d3], [91da, 91da], [92b6, 92b6],
    [97a7, 97a7], [9997, 9997], [9b82, 9b82], [9bc4, 9bc4], [9c0c, 9c0d],
    [9c3d, 9c3d], [9c43, 9c43], [9ce9, 9ce9], [9d96, 9d96], [9f3d, 9f3d],
    [9f9c, 9f9c], [205c8, 205c8], [20c0b, 20c0b], [212a3, 212a3],
    [21c9a, 21c9a], [2221d, 2221d], [22604, 22604], [226c3, 226c3],
    [2298e, 2298e], [239dd, 239dd], [23b73, 23b73], [2457e, 2457e],
    [247b0, 247b0], [2553b, 2553b], [2597d, 2597d], [25af7, 25af7],
    [25b51, 25b51], [26984, 26984], [26b16, 26b16], [26c2a, 26c2a],
    [26d69, 26d69], [271f8, 271f8], [273cb, 273cb], [2752d, 2752d],
    [278d5, 278d5], [27915, 27915], [27cb0, 27cb0], [27ceb, 27ceb],
    [27ea4, 27ea4], [27ec1, 27ec1], [27ef1, 27ef1], [27f2d, 27f2d],
    [2834a, 2834a], [2848a, 2848a], [28566, 28566], [287fd, 287fd],
    [28c92, 28c92], [28ea7, 28ea7], [29238, 29238], [294ae, 294ae],
    [29515, 29515], [295d5, 295d5], [29760, 29760], [29d4d, 29d4d],
    [29d70, 29d70], [2a357, 2a357], [2a59b, 2a59b], [2a6ba, 2a6ba]**/


    namespace {
    const static UnicodeSet::run_t __qiu_Set_runs[] = {
    {Empty, 417}, {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 30}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 28}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16},
    {Mixed, 2}, {Empty, 23}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 7}, {Mixed, 3}, {Empty, 21}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 4}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2865}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 52},
    {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 129}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 79}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 107},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 113}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 46}, {Mixed, 2}, {Empty, 46}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 29386}};
    const static UnicodeSet::bitquad_t  __qiu_Set_quads[] = {
    0x00000010, 0x00020000, 0x00008000, 0x00800000, 0x00000100, 0x02000000,
    0x00000004, 0x20000000, 0x00000800, 0x00200000, 0x00000200, 0x00000040,
    0x00200000, 0x80000000, 0x00010000, 0x00000400, 0x00002000, 0x00201000,
    0x00880000, 0x00000080, 0x00000004, 0x01000000, 0x01000000, 0x00000080,
    0x00000020, 0x00000001, 0x02000000, 0x00100000, 0x00040000, 0x04000000,
    0x00000004, 0x20000000, 0x00800000, 0x00010000, 0x01000000, 0x00000040,
    0x00000001, 0x00008000, 0x00000010, 0x20000000, 0x02000000, 0x00000004,
    0x01000000, 0x04000000, 0x02000000, 0x00008000, 0x00001000, 0xa0000000,
    0x00080004, 0x00000020, 0x00800000, 0x40000000, 0x00002800, 0x00000400,
    0x00000800, 0x00010000, 0x00001000, 0x00000008, 0x00000040, 0x00080000,
    0x04000000, 0x00000800, 0x00002000, 0x00800000, 0x00001000, 0x80000000,
    0x00000080, 0x00002000, 0x20000000, 0x00002000, 0x00000200, 0x00040000,
    0x00009000, 0x00008000, 0x00800000, 0x00000010, 0x00800000, 0x01000000,
    0x00080000, 0x00000200, 0x00000030, 0x00200000, 0x10000000, 0x00000020,
    0x00000040, 0x00020000, 0x00040000, 0x04020000, 0x00000800, 0x00100000,
    0x04080000, 0x00400000, 0x00000080, 0x00800000, 0x00000004, 0x00000010,
    0x00003000, 0x20000000, 0x00000008, 0x00000200, 0x00400000, 0x20000000,
    0x10000000, 0x00000100, 0x00000800, 0x00000008, 0x04000000, 0x20000000,
    0x00000010, 0x00000008, 0x00004000, 0x20000000, 0x00080000, 0x40000000,
    0x00010000, 0x08000000, 0x20000000, 0x00800000, 0x00020000, 0x00000010,
    0x00400000, 0x00000400, 0x00000200, 0x01000000, 0x00000800, 0x00002000,
    0x00200000, 0x00200000, 0x00010000, 0x00000800, 0x00000010, 0x00000002,
    0x00020000, 0x00002000, 0x00000400, 0x00000400, 0x00000040, 0x20000000,
    0x00040000, 0x00000080, 0x01000000, 0x00004000, 0x00200000, 0x00200000,
    0x00000001, 0x00002000, 0x00010000, 0x00800000, 0x08000000, 0x04000000};
    }

    const static UnicodeSet qiu_Set{const_cast<UnicodeSet::run_t *>(__qiu_Set_runs), 273, 0, const_cast<UnicodeSet::bitquad_t *>(__qiu_Set_quads), 150, 0};

    /** Code Point Ranges for xu
    [3428, 3428], [346f, 346f], [3585, 3585], [35aa, 35aa], [35f5, 35f5],
    [3627, 3627], [369c, 369c], [3705, 3705], [373f, 373f], [378a, 378a],
    [37b0, 37b0], [384f, 384f], [3960, 3960], [398c, 398c], [3c2d, 3c2d],
    [3c32, 3c32], [3cda, 3cda], [3d70, 3d70], [3f73, 3f73], [4086, 4086],
    [4161, 4161], [41d3, 41d3], [421d, 421d], [42f6, 42f6], [4371, 4371],
    [4389, 4389], [43cf, 43cf], [4513, 4513], [4652, 4652], [46d9, 46d9],
    [4895, 4895], [4997, 4997], [49bd, 49bd], [49c1, 49c1], [4b04, 4b04],
    [4b0e, 4b0e], [4c5b, 4c5b], [4c6c, 4c6c], [4cf3, 4cf3], [4e8e, 4e8e],
    [4f03, 4f03], [4f11, 4f11], [4f59, 4f59], [4f90, 4f90], [4fc6, 4fc6],
    [5066, 5066], [5194, 5194], [52d6, 52d6], [5379, 5379], [5401, 5401],
    [5474, 5474], [547c, 547c], [54bb, 54bb], [55a3, 55a3], [5614, 5614],
    [5618, 5618], [563c, 563c], [5729, 5729], [57bf, 57bf], [589f, 589f],
    [58fb, 58fb], [59b6, 59b6], [59c1, 59c1], [59d0, 59d0], [5b03, 5b03],
    [5dbc, 5dbc], [5e41, 5e41], [5e8f, 5e8f], [5f90, 5f90], [6034, 6035],
    [6053, 6053], [6064, 6064], [60d0, 60d0], [6149, 6149], [620c, 620c],
    [639d, 639d], [63df, 63df], [654d, 654d], [65ed, 65ee], [65f4, 65f4],
    [662b, 662b], [6647, 6647], [668a, 668a], [6710, 6710], [6829, 6829],
    [6948, 6948], [6b28, 6b28], [6b30, 6b30], [6b3b, 6b3b], [6b54, 6b54],
    [6b88, 6b88], [6c7f, 6c7f], [6d2b, 6d2b], [6de2, 6de2], [6e51, 6e51],
    [6ec0, 6ec0], [6ef8, 6ef8], [6f35, 6f35], [70c5, 70c5], [70fc, 70fc],
    [7166, 7166], [735d, 735d], [73dd, 73dd], [73ec, 73ec], [755c, 755c],
    [76e2, 76e2], [76e8, 76e8], [76f1, 76f1], [7717, 7717], [7781, 7781],
    [77b2, 77b2], [77de, 77de], [7809, 7809], [7a30, 7a30], [7aa2, 7aa2],
    [7cc8, 7cc8], [7d6e, 7d6e], [7dd2, 7dd2], [7df0, 7df0], [7e7b, 7e7b],
    [7e8c, 7e8c], [80b7, 80b7], [80e5, 80e5], [828b, 828b], [82a7, 82a7],
    [84a3, 84a3], [84c4, 84c4], [84f2, 84f2], [84ff, 84ff], [8566, 8566],
    [85c7, 85c7], [85da, 85da], [865b, 865b], [86bc, 86bc], [86e1, 86e1],
    [8751, 8751], [898f, 898f], [8a0f, 8a0f], [8a31, 8a31], [8a39, 8a39],
    [8a61, 8a61], [8add, 8add], [8aff, 8aff], [8b23, 8b23], [8b33, 8b33],
    [8b43, 8b43], [90aa, 90aa], [9126, 9126], [9157, 9157], [9191, 9191],
    [924f, 924f], [9265, 9265], [928a, 928a], [9450, 9450], [96e9, 96e9],
    [9700, 9700], [9808, 9808], [980a, 980a], [9998, 9998], [9a49, 9a49],
    [9b1a, 9b1a], [9b46, 9b46], [9b56, 9b56], [9b63, 9b63], [9c6e, 9c6e],
    [20190, 20190], [20704, 20704], [209f0, 209f0], [20bdc, 20bdc],
    [20dd9, 20dd9], [20e58, 20e58], [20fab, 20fab], [21981, 21981],
    [21c63, 21c63], [21e72, 21e72], [2213c, 2213c], [225b3, 225b3],
    [22a01, 22a01], [22a30, 22a30], [22a55, 22a55], [23164, 23164],
    [23192, 23192], [2329e, 2329e], [2368f, 2368f], [2388a, 2388a],
    [239f5, 239f5], [23a24, 23a24], [23c03, 23c03], [23e03, 23e03],
    [2419e, 2419e], [241f3, 241f3], [24689, 24689], [247e0, 247e0],
    [24863, 24863], [24876, 24876], [24b31, 24b31], [24b7d, 24b7d],
    [24cb8, 24cb8], [24d19, 24d19], [24dc7, 24dc7], [24e00, 24e00],
    [25135, 25135], [2517a, 2517a], [2519b, 2519b], [251cf, 251cf],
    [251ff, 251ff], [25208, 25208], [2528a, 2528a], [2535f, 2535f],
    [25395, 25395], [25397, 25397], [25570, 25570], [256a9, 256a9],
    [25baa, 25baa], [25cd7, 25cd7], [2613c, 2613c], [2614f, 2614f],
    [2644d, 2644d], [264d4, 264d4], [26530, 26530], [26553, 26553],
    [2663c, 2663c], [26703, 26703], [26773, 26773], [26837, 26837],
    [26aa1, 26aa1], [26bc5, 26bc5], [26c30, 26c30], [26c32, 26c32],
    [26cb0, 26cb0], [27043, 27043], [2719c, 2719c], [271a1, 271a1],
    [272a5, 272a5], [273fa, 273fa], [2757c, 2757c], [27646, 27646],
    [277ec, 277ec], [279d3, 279d3], [27aae, 27aae], [27d8d, 27d8d],
    [27e6d, 27e6d], [27e74, 27e74], [27f11, 27f11], [280a0, 280a0],
    [28151, 28151], [282fe, 282fe], [2830e, 2830e], [28350, 28350],
    [2873f, 2873f], [287a3, 287a3], [288e6, 288e6], [28b17, 28b17],
    [28d0e, 28d0e], [28d6e, 28d6e], [28dd4, 28dd4], [28e58, 28e58],
    [28ecd, 28ecd], [28f0b, 28f0b], [29089, 29089], [2932e, 2932e],
    [29332, 29332], [29373, 29373], [29455, 29455], [29487, 29487],
    [294a7, 294a7], [294e3, 294e3], [29534, 29534], [2953c, 2953c],
    [29754, 29754], [298ca, 298ca], [29a89, 29a89], [29c20, 29c20],
    [29f46, 29f46], [2a19b, 2a19b], [2a5a9, 2a5a9], [2a66b, 2a66b]**/


    namespace {
    const static UnicodeSet::run_t __xu_Set_runs[] = {
    {Empty, 417}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 20}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 7}, {Mixed, 3}, {Empty, 9},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 10}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 3}, {Mixed, 3}, {Empty, 1}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3},
    {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 15}, {Mixed, 3}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 42}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 3}, {Empty, 13},
    {Mixed, 1}, {Empty, 20}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 2856},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 78}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 34}, {Mixed, 3},
    {Empty, 56}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 34},
    {Mixed, 2}, {Empty, 23}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 29388}};
    const static UnicodeSet::bitquad_t  __xu_Set_quads[] = {
    0x00000100, 0x00008000, 0x00000020, 0x00000400, 0x00200000, 0x00000080,
    0x10000000, 0x00000020, 0x80000000, 0x00000400, 0x00010000, 0x00008000,
    0x00000001, 0x00001000, 0x00042000, 0x04000000, 0x00010000, 0x00080000,
    0x00000040, 0x00000002, 0x00080000, 0x20000000, 0x00400000, 0x00020000,
    0x00000200, 0x00008000, 0x00080000, 0x00040000, 0x02000000, 0x00200000,
    0x00800000, 0x20000000, 0x00000002, 0x00004010, 0x08000000, 0x00001000,
    0x00080000, 0x00004000, 0x00020008, 0x02000000, 0x00010000, 0x00000040,
    0x00000040, 0x00100000, 0x00400000, 0x02000000, 0x00000002, 0x10100000,
    0x08000000, 0x00000008, 0x01100000, 0x10000000, 0x00000200, 0x80000000,
    0x80000000, 0x08000000, 0x00400000, 0x00010002, 0x00000008, 0x10000000,
    0x00000002, 0x00008000, 0x00010000, 0x00300000, 0x00080000, 0x00000010,
    0x00010000, 0x00000200, 0x00001000, 0x20000000, 0x80000000, 0x00002000,
    0x00106000, 0x00000800, 0x00000080, 0x00000400, 0x00010000, 0x00000200,
    0x00000100, 0x08010100, 0x00100000, 0x00000100, 0x80000000, 0x00000800,
    0x00000004, 0x00020000, 0x00000001, 0x01000000, 0x00200000, 0x00000020,
    0x10000000, 0x00000040, 0x20000000, 0x20000000, 0x00001000, 0x10000000,
    0x00020104, 0x00800000, 0x00000002, 0x00040000, 0x40000000, 0x00000200,
    0x00010000, 0x00000004, 0x00000100, 0x00004000, 0x00040000, 0x00010000,
    0x08000000, 0x00001000, 0x00800000, 0x00000020, 0x00000800, 0x00000080,
    0x00000008, 0x00000010, 0x80040000, 0x00000040, 0x04000080, 0x08000000,
    0x10000000, 0x00000002, 0x00020000, 0x00008000, 0x00008000, 0x02020000,
    0x00000002, 0x20000000, 0x80000000, 0x00080008, 0x00000008, 0x00000400,
    0x00000040, 0x00800000, 0x00020000, 0x00008000, 0x00000020, 0x00000400,
    0x00010000, 0x00000200, 0x00000001, 0x00000500, 0x01000000, 0x00000200,
    0x04000000, 0x00400040, 0x00000008, 0x00004000, 0x00010000, 0x00000010,
    0x00010000, 0x10000000, 0x02000000, 0x01000000, 0x00000800, 0x00000002,
    0x00000008, 0x00040000, 0x10000000, 0x00080000, 0x00000002, 0x00010000,
    0x00200000, 0x00000010, 0x00040000, 0x40000000, 0x00008000, 0x00000400,
    0x00200000, 0x00000010, 0x00000008, 0x00000008, 0x40000000, 0x00080000,
    0x00000200, 0x00000001, 0x00400008, 0x00020000, 0x20000000, 0x01000000,
    0x02000000, 0x00000080, 0x00000001, 0x00200000, 0x04000000, 0x08000000,
    0x00008000, 0x80000000, 0x00000100, 0x00000400, 0x80000000, 0x00a00000,
    0x00010000, 0x00000200, 0x00000400, 0x00800000, 0x10000000, 0x00008000,
    0x00002000, 0x00100000, 0x00010000, 0x00080000, 0x10000000, 0x00000008,
    0x00080000, 0x00800000, 0x00000002, 0x00000020, 0x00050000, 0x00010000,
    0x00000008, 0x10000000, 0x00000002, 0x00000020, 0x04000000, 0x10000000,
    0x00000040, 0x00001000, 0x00080000, 0x00004000, 0x00002000, 0x00102000,
    0x00020000, 0x00000001, 0x00020000, 0x40000000, 0x00004000, 0x00010000,
    0x80000000, 0x00000008, 0x00000040, 0x00800000, 0x00004000, 0x00004000,
    0x00100000, 0x01000000, 0x00002000, 0x00000800, 0x00000200, 0x00044000,
    0x00080000, 0x00200000, 0x00000080, 0x00000080, 0x00000008, 0x10100000,
    0x00100000, 0x00000400, 0x00000200, 0x00000001, 0x00000040, 0x08000000,
    0x00000200, 0x00000800};
    }

    const static UnicodeSet xu_Set{const_cast<UnicodeSet::run_t *>(__xu_Set_runs), 421, 0, const_cast<UnicodeSet::bitquad_t *>(__xu_Set_quads), 254, 0};

    /** Code Point Ranges for xing
    [3429, 3429], [34d1, 34d1], [365a, 365a], [3694, 3694], [376d, 376d],
    [38dc, 38dc], [3de3, 3de3], [3f1b, 3f1b], [3f2c, 3f2c], [4044, 4044],
    [4094, 4094], [40cf, 40cf], [455f, 455f], [45cc, 45cc], [46ed, 46ed],
    [48c6, 48c6], [4c22, 4c22], [4cd9, 4cd9], [4f80, 4f80], [5016, 5016],
    [5211, 5211], [5753, 5753], [578b, 578b], [57b6, 57b6], [59d3, 59d3],
    [5a19, 5a19], [5a5e, 5a5e], [5ac8, 5ac8], [5b39, 5b39], [5de0, 5de0],
    [5e78, 5e78], [5f62, 5f62], [6027, 6027], [60bb, 60bb], [60fa, 60fa],
    [64e4, 64e4], [661f, 661f], [674f, 674f], [6d10, 6d10], [6dac, 6dac],
    [6ece, 6ece], [714b, 714b], [7192, 7192], [72cc, 72cc], [7329, 7329],
    [7446, 7446], [7701, 7701], [7772, 7772], [7814, 7814], [784e, 784e],
    [7bb5, 7bb5], [7bc2, 7bc2], [7dc8, 7dc8], [80dc, 80dc], [8165, 8165],
    [81d6, 81d6], [8208, 8208], [8347, 8347], [86f5, 86f5], [884c, 884c],
    [89f2, 89f2], [90a2, 90a2], [9192, 9192], [9276, 9276], [9292, 9292],
    [92de, 92de], [9658, 9658], [9933, 9933], [9a02, 9a02], [9b8f, 9b8f],
    [20026, 20026], [20b0b, 20b0b], [210f3, 210f3], [21dad, 21dad],
    [21de8, 21de8], [2267c, 2267c], [2272b, 2272b], [2389d, 2389d],
    [23a3e, 23a3e], [23e1d, 23e1d], [243fd, 243fd], [24661, 24661],
    [24b10, 24b10], [24db2, 24db2], [25800, 25800], [25a15, 25a15],
    [26085, 26085], [26228, 26228], [26235, 26235], [265a4, 265a4],
    [268af, 268af], [26a60, 26a60], [2729e, 2729e], [272bd, 272bd],
    [2731a, 2731a], [275e6, 275e6], [276df, 276df], [2830d, 2830d],
    [287be, 287be], [29221, 29221], [29a4b, 29a4b]**/


    namespace {
    const static UnicodeSet::run_t __xing_Set_runs[] = {
    {Empty, 417}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 26}, {Mixed, 2},
    {Empty, 15}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 2852}, {Mixed, 1}, {Empty, 86},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 101}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 138}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 82},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 64}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 97}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 83},
    {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 29485}};
    const static UnicodeSet::bitquad_t  __xing_Set_quads[] = {
    0x00000200, 0x00020000, 0x04000000, 0x00100000, 0x00002000, 0x10000000,
    0x00000008, 0x08000000, 0x00001000, 0x00000010, 0x00100000, 0x00008000,
    0x80000000, 0x00001000, 0x00002000, 0x00000040, 0x00000004, 0x02000000,
    0x00000001, 0x00400000, 0x00020000, 0x00080000, 0x00000800, 0x00400000,
    0x00080000, 0x02000000, 0x40000000, 0x00000100, 0x02000000, 0x00000001,
    0x01000000, 0x00000004, 0x00000080, 0x08000000, 0x04000000, 0x00000010,
    0x80000000, 0x00008000, 0x00010000, 0x00001000, 0x00004000, 0x00000800,
    0x00040000, 0x00001000, 0x00000200, 0x00000040, 0x00000002, 0x00040000,
    0x00100000, 0x00004000, 0x00200000, 0x00000004, 0x00000100, 0x10000000,
    0x00000020, 0x00400000, 0x00000100, 0x00000080, 0x00200000, 0x00001000,
    0x00040000, 0x00000004, 0x00040000, 0x00400000, 0x00040000, 0x40000000,
    0x01000000, 0x00080000, 0x00000004, 0x00008000, 0x00000040, 0x00000800,
    0x00080000, 0x00002000, 0x00000100, 0x10000000, 0x00000800, 0x20000000,
    0x40000000, 0x20000000, 0x20000000, 0x00000002, 0x00010000, 0x00040000,
    0x00000001, 0x00200000, 0x00000020, 0x00200100, 0x00000010, 0x00008000,
    0x00000001, 0x40000000, 0x20000000, 0x04000000, 0x00000040, 0x80000000,
    0x00002000, 0x40000000, 0x00000002, 0x00000800};
    }

    const static UnicodeSet xing_Set{const_cast<UnicodeSet::run_t *>(__xing_Set_runs), 191, 0, const_cast<UnicodeSet::bitquad_t *>(__xing_Set_quads), 100, 0};

    /** Code Point Ranges for dai
    [3432, 3432], [37ad, 37ad], [3bc2, 3bc2], [3da1, 3da1], [3ed6, 3ed6],
    [3fc3, 3fc3], [4206, 4206], [44ab, 44ab], [469e, 469f], [4820, 4820],
    [4ca6, 4ca6], [4ee3, 4ee3], [50a3, 50a3], [5446, 5446], [5454, 5454],
    [561a, 561a], [57ed, 57ed], [5927, 5927], [5a9e, 5a9e], [5cb1, 5cb1],
    [5e36, 5e36], [5ed7, 5ed7], [5f85, 5f85], [6020, 6020], [61db, 61db],
    [6234, 6234], [66c3, 66c3], [67cb, 67cb], [68e3, 68e3], [6b79, 6b79],
    [6b86, 6b86], [6bd2, 6bd2], [703b, 703b], [7343, 7343], [73b3, 73b3],
    [7519, 7519], [7b89, 7b89], [7d3f, 7d3f], [825c, 825c], [8515, 8515],
    [8773, 8773], [87ae, 87ae], [888b, 888b], [8976, 8976], [8a52, 8a52],
    [8cb8, 8cb8], [8de2, 8de2], [8e5b, 8e5b], [8ed1, 8ed1], [8ee9, 8ee9],
    [8f09, 8f09], [8fe8, 8fe8], [902e, 902f], [905e, 905e], [9070, 9070],
    [96b6, 96b6], [9746, 9746], [99b1, 99b1], [99d8, 99d8], [9d0f, 9d0f],
    [9edb, 9edb], [9ef1, 9ef1], [20bc8, 20bc8], [20bea, 20bea],
    [20c3a, 20c3a], [20dc2, 20dc2], [219f9, 219f9], [22114, 22114],
    [2238c, 2238c], [231e8, 231e8], [2342e, 2342e], [239b6, 239b6],
    [23af9, 23af9], [24bbc, 24bbc], [24e0a, 24e0a], [25fdd, 25fdd],
    [2666f, 2666f], [26a8d, 26a8d], [27287, 27287], [27454, 27454],
    [282ba, 282ba], [284de, 284de], [285fc, 285fc], [287f2, 287f2],
    [28976, 28976], [28f7f, 28f7f], [290e0, 290e0], [290f7, 290f7],
    [2a41d, 2a41d], [2a4a1, 2a4a1]**/


    namespace {
    const static UnicodeSet::run_t __dai_Set_runs[] = {
    {Empty, 417}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 51},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 49}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 18}, {Mixed, 2}, {Empty, 25}, {Mixed, 1}, {Empty, 13},
    {Mixed, 2}, {Empty, 2918}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 96}, {Mixed, 1}, {Empty, 56},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 114}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 133}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 141}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 63}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 114}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 152},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 29402}};
    const static UnicodeSet::bitquad_t  __dai_Set_quads[] = {
    0x00040000, 0x00002000, 0x00000004, 0x00000002, 0x00400000, 0x00000008,
    0x00000040, 0x00000800, 0xc0000000, 0x00000001, 0x00000040, 0x00000008,
    0x00000008, 0x00100040, 0x04000000, 0x00002000, 0x00000080, 0x40000000,
    0x00020000, 0x00400000, 0x00800000, 0x00000020, 0x00000001, 0x08000000,
    0x00100000, 0x00000008, 0x00000800, 0x00000008, 0x02000000, 0x00000040,
    0x00040000, 0x08000000, 0x00000008, 0x00080000, 0x02000000, 0x00000200,
    0x80000000, 0x10000000, 0x00200000, 0x00080000, 0x00004000, 0x00000800,
    0x00400000, 0x00040000, 0x01000000, 0x00000004, 0x08000000, 0x00020000,
    0x00000200, 0x00000200, 0x00000100, 0x0000c000, 0x40000000, 0x00010000,
    0x00400000, 0x00000040, 0x00020000, 0x01000000, 0x00008000, 0x08000000,
    0x00020000, 0x00000100, 0x00000400, 0x04000000, 0x00000004, 0x02000000,
    0x00100000, 0x00001000, 0x00000100, 0x00004000, 0x00400000, 0x02000000,
    0x10000000, 0x00000400, 0x20000000, 0x00008000, 0x00002000, 0x00000080,
    0x00100000, 0x04000000, 0x40000000, 0x10000000, 0x00040000, 0x00400000,
    0x80000000, 0x00800001, 0x20000000, 0x00000002};
    }

    const static UnicodeSet dai_Set{const_cast<UnicodeSet::run_t *>(__dai_Set_runs), 161, 0, const_cast<UnicodeSet::bitquad_t *>(__dai_Set_quads), 88, 0};

    /** Code Point Ranges for wu
    [3433, 3433], [3487, 3487], [362c, 362c], [36a2, 36a2], [3854, 3854],
    [3b33, 3b33], [3ba7, 3ba7], [3e73, 3e73], [3ecd, 3ecd], [3f7e, 3f7e],
    [401b, 401b], [4077, 4077], [40d6, 40d6], [4251, 4251], [43b8, 43b8],
    [4441, 4441], [4489, 4489], [44ca, 44ca], [459a, 459a], [46e9, 46e9],
    [4711, 4711], [47fc, 47fc], [4867, 4867], [498d, 498d], [499c, 499c],
    [4a01, 4a01], [4b8f, 4b8f], [4cc7, 4cc7], [4d66, 4d66], [4e94, 4e94],
    [4ea1, 4ea1], [4ee1, 4ee1], [4ef5, 4ef5], [4f06, 4f06], [4f0d, 4f0d],
    [4f89, 4f89], [4fae, 4fae], [4fc9, 4fc9], [5035, 5035], [5140, 5140],
    [526d, 526d], [52d9, 52d9], [52ff, 52ff], [5348, 5348], [537c, 537c],
    [5433, 5434], [543e, 543e], [5514, 5514], [554e, 554e], [5594, 5594],
    [55da, 55da], [5641, 5641], [572c, 572c], [57e1, 57e1], [5825, 5825],
    [5862, 5862], [58b2, 58b2], [5966, 5966], [5a12, 5a12], [5a2a, 5a2a],
    [5a7a, 5a7a], [5af5, 5af5], [5be4, 5be4], [5c4b, 5c4b], [5c7c, 5c7c],
    [5c89, 5c89], [5cff, 5cff], [5d4d, 5d4d], [5d68, 5d68], [5deb, 5deb],
    [5e60, 5e60], [5ee1, 5ee1], [5f19, 5f19], [5fe4, 5fe4], [609e, 609f],
    [60e1, 60e1], [61ae, 61ae], [620a, 620a], [625c, 625d], [6264, 6264],
    [6342, 6342], [63fe, 63fe], [6440, 6440], [6544, 6544], [65bc, 65bc],
    [65c4, 65c4], [65ff, 65ff], [6664, 6664], [6745, 6745], [6747, 6747],
    [674c, 674c], [67ee, 67ee], [68a7, 68a7], [6a46, 6a46], [6b4d, 6b4d],
    [6b66, 6b66], [6bcb, 6bcb], [6bcd, 6bcd], [6c59, 6c59], [6c95, 6c95],
    [6d16, 6d16], [6d3f, 6d3f], [6d6f, 6d6f], [6e1e, 6e1e], [6e25, 6e25],
    [6ea9, 6ea9], [6f55, 6f55], [70cf, 70cf], [7110, 7110], [7121, 7121],
    [7183, 7183], [7193, 7193], [7269, 7269], [727e, 727e], [739d, 739d],
    [73f7, 73f8], [7466, 7466], [7491, 7491], [7512, 7512], [75e6, 75e6],
    [76d3, 76d3], [7780, 7780], [77b4, 77b4], [77f9, 77f9], [7894, 7894],
    [7966, 7966], [7a8f, 7a8f], [7ab9, 7ab9], [7b0f, 7b0f], [7bbc, 7bbc],
    [7c85, 7c85], [81b4, 81b4], [821e, 821e], [829c, 829c], [82b4, 82b4],
    [8323, 8323], [8381, 8381], [856a, 856a], [8601, 8601], [8708, 8708],
    [8765, 8765], [8790, 8790], [87f1, 87f1], [8aa3, 8aa4], [8b55, 8b55],
    [8db6, 8db6], [8fd5, 8fd5], [901c, 901c], [90da, 90da], [9114, 9114],
    [91eb, 91eb], [92c8, 92c8], [92d8, 92d9], [93a2, 93a2], [9622, 9622],
    [965a, 965a], [9696, 9696], [96fa, 96fa], [9727, 9727], [973f, 973f],
    [9770, 9770], [9a16, 9a16], [9c1e, 9c1e], [9d2e, 9d2e], [9d50, 9d50],
    [9d61, 9d61], [9da9, 9da9], [9de1, 9de1], [9f2f, 9f2f], [9f3f, 9f3f],
    [9f6c, 9f6c], [20484, 20484], [2063b, 2063b], [20786, 20786],
    [20962, 20962], [20bc3, 20bc3], [20d66, 20d66], [20f18, 20f18],
    [2120e, 2120e], [2121e, 2121e], [21b2b, 21b2b], [21bc7, 21bc7],
    [21d49, 21d49], [21de4, 21de4], [22062, 22062], [220c0, 220c0],
    [22113, 22113], [222f9, 222f9], [2245f, 2245f], [224f2, 224f2],
    [225f3, 225f3], [22603, 22603], [22641, 22641], [2272e, 2272e],
    [22774, 22774], [22a02, 22a02], [22a48, 22a48], [22af8, 22af8],
    [237d2, 237d2], [23a13, 23a13], [23b3d, 23b3d], [23bce, 23bce],
    [23e80, 23e80], [24558, 24558], [248ec, 248ec], [24b51, 24b51],
    [24d50, 24d50], [24e3c, 24e3c], [25061, 25061], [25388, 25388],
    [253ae, 253ae], [253d2, 253d2], [25480, 25480], [2557b, 2557b],
    [257fd, 257fd], [25b60, 25b60], [25c90, 25c90], [25f95, 25f95],
    [2619e, 2619e], [2632c, 2632c], [263a6, 263a6], [26941, 26941],
    [26a09, 26a09], [26a33, 26a33], [26b02, 26b02], [26d80, 26d80],
    [26dfd, 26dfd], [26f07, 26f07], [271b9, 271b9], [2722d, 2722d],
    [27384, 27384], [273bb, 273bb], [27419, 27419], [27455, 27455],
    [27a06, 27a06], [27a08, 27a08], [27c08, 27c08], [27cce, 27cce],
    [27d07, 27d07], [27eb4, 27eb4], [27f4b, 27f4b], [27fc9, 27fc9],
    [280a3, 280a3], [28465, 28465], [285b4, 285b4], [28861, 28861],
    [289d7, 289d7], [28a21, 28a21], [28cac, 28cac], [28d87, 28d87],
    [28f0a, 28f0a], [28fcf, 28fcf], [2912f, 2912f], [294be, 294be],
    [294e6, 294e6], [295fd, 295fd], [29755, 29755], [29777, 29777],
    [2981f, 2981f], [29ccc, 29ccc], [29d71, 29d71], [29dad, 29dad],
    [29eb0, 29eb0], [29eda, 29eda], [2a11d, 2a11d], [2a471, 2a471]**/


    namespace {
    const static UnicodeSet::run_t __wu_Set_runs[] = {
    {Empty, 417}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 1},
    {Mixed, 2}, {Empty, 3}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 19},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 8}, {Mixed, 3}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2856}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 102}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 24}, {Mixed, 3}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
    {Empty, 6}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 10}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 17}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 29404}};
    const static UnicodeSet::bitquad_t  __wu_Set_quads[] = {
    0x00080000, 0x00000080, 0x00001000, 0x00000004, 0x00100000, 0x00080000,
    0x00000080, 0x00080000, 0x00002000, 0x40000000, 0x08000000, 0x00800000,
    0x00400000, 0x00020000, 0x01000000, 0x00000002, 0x00000200, 0x00000400,
    0x04000000, 0x00000200, 0x00020000, 0x10000000, 0x00000080, 0x10002000,
    0x00000002, 0x00008000, 0x00000080, 0x00000040, 0x00100000, 0x00000002,
    0x00200002, 0x00002040, 0x00000200, 0x00004000, 0x00000200, 0x00200000,
    0x00000001, 0x00002000, 0x02000000, 0x80000000, 0x00000100, 0x10000000,
    0x40180000, 0x00100000, 0x00004000, 0x00100000, 0x04000000, 0x00000002,
    0x00001000, 0x00000002, 0x00000020, 0x00000004, 0x00040000, 0x00000040,
    0x00040000, 0x00000400, 0x04000000, 0x00200000, 0x00000010, 0x00000800,
    0x10000000, 0x00000200, 0x80000000, 0x00002000, 0x00000100, 0x00000800,
    0x00000001, 0x00000002, 0x02000000, 0x00000010, 0xc0000000, 0x00000002,
    0x00004000, 0x00000400, 0x30000000, 0x00000010, 0x00000004, 0x40000000,
    0x00000001, 0x00000010, 0x10000000, 0x00000010, 0x80000000, 0x00000010,
    0x000010a0, 0x00004000, 0x00000080, 0x00000040, 0x00002000, 0x00000040,
    0x00002800, 0x02000000, 0x00200000, 0x00400000, 0x80000000, 0x00008000,
    0x40000000, 0x00000020, 0x00000200, 0x00200000, 0x00008000, 0x00010000,
    0x00000002, 0x00080008, 0x40000200, 0x20000000, 0x01800000, 0x00000040,
    0x00020000, 0x00040000, 0x00000040, 0x00080000, 0x00000001, 0x00100000,
    0x02000000, 0x00100000, 0x00000040, 0x00008000, 0x02000000, 0x00008000,
    0x10000000, 0x00000020, 0x00100000, 0x40000000, 0x10000000, 0x00100000,
    0x00000008, 0x00000002, 0x00000400, 0x00000002, 0x00000100, 0x00000020,
    0x00010000, 0x00020000, 0x00000018, 0x00200000, 0x00400000, 0x00200000,
    0x10000000, 0x04000000, 0x00100000, 0x00000800, 0x03000100, 0x00000004,
    0x00000004, 0x04000000, 0x00400000, 0x04000000, 0x80000080, 0x00010000,
    0x00400000, 0x40000000, 0x00004000, 0x00010000, 0x00000002, 0x00000200,
    0x00000002, 0x80008000, 0x00001000, 0x00000010, 0x08000000, 0x00000040,
    0x00000004, 0x00000008, 0x00000040, 0x01000000, 0x40004000, 0x00000800,
    0x00000080, 0x00000200, 0x00000010, 0x00000004, 0x00000001, 0x00080000,
    0x02000000, 0x80000000, 0x00040000, 0x00080000, 0x00000008, 0x00000002,
    0x00004000, 0x00100000, 0x00000004, 0x00000100, 0x01000000, 0x00040000,
    0x00080000, 0x20000000, 0x00004000, 0x00000001, 0x01000000, 0x00001000,
    0x00020000, 0x00010000, 0x10000000, 0x00000002, 0x00000100, 0x00004000,
    0x00040000, 0x00000001, 0x08000000, 0x20000000, 0x00000001, 0x00010000,
    0x00200000, 0x40000000, 0x00001000, 0x00000040, 0x00000002, 0x00000200,
    0x00080000, 0x00000004, 0x00000001, 0x20000000, 0x00000080, 0x02000000,
    0x00002000, 0x00000010, 0x08000000, 0x02000000, 0x00200000, 0x00000140,
    0x00000100, 0x00004000, 0x00000080, 0x00100000, 0x00000800, 0x00000200,
    0x00000008, 0x00000020, 0x00100000, 0x00000002, 0x00800000, 0x00000002,
    0x00001000, 0x00000080, 0x00000400, 0x00008000, 0x00008000, 0x40000000,
    0x00000040, 0x20000000, 0x00200000, 0x00800000, 0x80000000, 0x00001000,
    0x00020000, 0x00002000, 0x00010000, 0x04000000, 0x20000000, 0x00020000};
    }

    const static UnicodeSet wu_Set{const_cast<UnicodeSet::run_t *>(__wu_Set_runs), 437, 0, const_cast<UnicodeSet::bitquad_t *>(__wu_Set_quads), 252, 0};

    /** Code Point Ranges for qian
    [3438, 3438], [34fa, 34fa], [35d4, 35d4], [371e, 371e], [37fb, 37fb],
    [3868, 3868], [389b, 389b], [3976, 3976], [39bf, 39bf], [39c4, 39c4],
    [3a1c, 3a1c], [3a43, 3a43], [3a77, 3a77], [3a81, 3a81], [3aa0, 3aa0],
    [3be0, 3be0], [3e42, 3e42], [4012, 4012], [406e, 406e], [417e, 417e],
    [41c2, 41c2], [41dc, 41dc], [4234, 4234], [4266, 4266], [42b4, 42b4],
    [4436, 4436], [4476, 4476], [456d, 456d], [47bf, 47bf], [4918, 4918],
    [49b2, 49b2], [4a88, 4a88], [4ae1, 4ae1], [4b51, 4b51], [4b64, 4b64],
    [4d56, 4d56], [4d5b, 4d5b], [4e7e, 4e7e], [4edf, 4edf], [4ef1, 4ef1],
    [4fd4, 4fd4], [5029, 5029], [5094, 5094], [50c9, 50c9], [5119, 5119],
    [51f5, 51f5], [520b, 520b], [524d, 524d], [5343, 5343], [53b1, 53b1],
    [550a, 550a], [55db, 55db], [5731, 5731], [5879, 5879], [5898, 5898],
    [58cd, 58cd], [5977, 5977], [5a5c, 5a5c], [5a8a, 5a8a], [5b45, 5b45],
    [5be8, 5be8], [5c8d, 5c8d], [5c92, 5c92], [5d4c, 5d4c], [5d70, 5d70],
    [5e75, 5e75], [5ede, 5ede], [5fcf, 5fcf], [5ff4, 5ff4], [6093, 6093],
    [6106, 6106], [614a, 614a], [6173, 6173], [6266, 6266], [6272, 6272],
    [62d1, 62d1], [6394, 6394], [63ae, 63ae], [63c3, 63c3], [63f5, 63f5],
    [6434, 6434], [647c, 647c], [6481, 6481], [648d, 648d], [6496, 6496],
    [6510, 6511], [6513, 6513], [6701, 6701], [6744, 6744], [6774, 6774],
    [67d1, 67d1], [68c8, 68c8], [69cf, 69cf], [69e7, 69e7], [6a6c, 6a6c],
    [6ab6, 6ab6], [6acf, 6acf], [6b20, 6b20], [6b26, 6b26], [6b3f, 6b3f],
    [6b41, 6b41], [6b49, 6b49], [6c58, 6c58], [6c67, 6c67], [6d94, 6d94],
    [6dd2, 6dd2], [6dfa, 6dfa], [6e54, 6e54], [6f38, 6f38], [6f5b, 6f5b],
    [704a, 704a], [7052, 7052], [7154, 7154], [7191, 7191], [71c2, 71c2],
    [71d6, 71d6], [727d, 727d], [728d, 728d], [73aa, 73aa], [74e9, 74e9],
    [7698, 7698], [7b4b, 7b4b], [7b9d, 7b9e], [7bcf, 7bcf], [7bdf, 7bdf],
    [7c3d, 7c3d], [7c64, 7c64], [7daa, 7daa], [7e34, 7e34], [7e7e, 7e7e],
    [7fa5, 7fa5], [7fac, 7fac], [80b7, 80b7], [8125, 8125], [8171, 8171],
    [8181, 8181], [81e4, 81e4], [824c, 824c], [828a, 828a], [82a1, 82a1],
    [831c, 831c], [833e, 833e], [8465, 8465], [8474, 8474], [84a8, 84a8],
    [8541, 8541], [85d6, 85d6], [8654, 8654], [8688, 8688], [8699, 8699],
    [8738, 8738], [8930, 8930], [8b19, 8b19], [8b74, 8b74], [8c38, 8c38],
    [8d76, 8d76], [8ee1, 8ee1], [8f24, 8f24], [8fc1, 8fc1], [9063, 9063],
    [9077, 9077], [91fa, 91fa], [9206, 9206], [9210, 9210], [9246, 9246],
    [9257, 9257], [925b, 925b], [92df, 92df], [930e, 930e], [9322, 9322],
    [937c, 937c], [9431, 9431], [946f, 946f], [958b, 958b], [9621, 9621],
    [96c3, 96c3], [976c, 976c], [97c6, 97c6], [9845, 9845], [9869, 9869],
    [99af, 99af], [9a1a, 9a1a], [9a1d, 9a1d], [9a2b, 9a2b], [9b1c, 9b1c],
    [9c1c, 9c1c], [9c2c, 9c2c], [9cfd, 9cfd], [9d6e, 9d6e], [9dbc, 9dbc],
    [9ed4, 9ed4], [9eda, 9eda], [9f66, 9f66], [2003c, 2003c],
    [202ad, 202ad], [202f5, 202f5], [20472, 20472], [2053a, 2053a],
    [20803, 20803], [2088d, 2088d], [20b3e, 20b3e], [20ccb, 20ccb],
    [20dc1, 20dc1], [2148c, 2148c], [2206e, 2206e], [220ba, 220ba],
    [220d8, 220d8], [220e5, 220e5], [222d4, 222d4], [2230d, 2230d],
    [22371, 22371], [22729, 22729], [229e5, 229e5], [22b84, 22b84],
    [234c5, 234c5], [235b3, 235b3], [2361d, 2361d], [237cb, 237cb],
    [23896, 23896], [238ac, 238ac], [238b2, 238b2], [23e65, 23e65],
    [2483f, 2483f], [24b2f, 24b2f], [24ff7, 24ff7], [253e5, 253e5],
    [2552e, 2552e], [25734, 25734], [2585d, 2585d], [25983, 25983],
    [259ec, 259ec], [25b92, 25b92], [25c7a, 25c7a], [25ca2, 25ca2],
    [25cd0, 25cd0], [25d24, 25d24], [25dea, 25dea], [26092, 26092],
    [2614b, 2614b], [2658e, 2658e], [26899, 26899], [26d11, 26d11],
    [26f13, 26f13], [270d1, 270d1], [2761c, 2761c], [276ab, 276ab],
    [276d3, 276d3], [277d1, 277d1], [2789e, 2789e], [278d1, 278d1],
    [2795b, 2795b], [27aaf, 27aaf], [27bae, 27bae], [27bbd, 27bbd],
    [27c80, 27c80], [27f50, 27f50], [2840b, 2840b], [28429, 28429],
    [284f2, 284f2], [285e6, 285e6], [2873b, 2873b], [2874d, 2874d],
    [2895e, 2895e], [28984, 28984], [28a18, 28a18], [28c02, 28c02],
    [28c6b, 28c6b], [28ea9, 28ea9], [28eab, 28eab], [28f68, 28f68],
    [292c6, 292c6], [29396, 29396], [2945f, 2945f], [29473, 29473],
    [294a3, 294a3], [2998a, 2998a], [29a13, 29a13], [29aa2, 29aa2],
    [29b1a, 29b1a], [2a1c7, 2a1c7], [2a207, 2a207], [2a27b, 2a27b],
    [2a459, 2a459], [2a626, 2a626]**/


    namespace {
    const static UnicodeSet::run_t __qian_Set_runs[] = {
    {Empty, 417}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 4}, {Empty, 9}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 14}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 4}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 7}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 2}, {Mixed, 2}, {Empty, 7}, {Mixed, 2}, {Empty, 8}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 8}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 7}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 2821}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 94}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 45}, {Mixed, 1}, {Empty, 77}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 7},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 37}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 2},
    {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 29390}};
    const static UnicodeSet::bitquad_t  __qian_Set_quads[] = {
    0x01000000, 0x04000000, 0x00100000, 0x40000000, 0x08000000, 0x00000100,
    0x08000000, 0x00400000, 0x80000000, 0x00000010, 0x10000000, 0x00000008,
    0x00800000, 0x00000002, 0x00000001, 0x00000001, 0x00000004, 0x00040000,
    0x00004000, 0x40000000, 0x10000004, 0x00100000, 0x00000040, 0x00100000,
    0x00400000, 0x00400000, 0x00002000, 0x80000000, 0x01000000, 0x00040000,
    0x00000100, 0x00000002, 0x00020000, 0x00000010, 0x08400000, 0x40000000,
    0x80000000, 0x00020000, 0x00100000, 0x00000200, 0x00100000, 0x00000200,
    0x02000000, 0x00200000, 0x00000800, 0x00002000, 0x00000008, 0x00020000,
    0x00000400, 0x08000000, 0x00020000, 0x02000000, 0x01000000, 0x00002000,
    0x00800000, 0x10000000, 0x00000400, 0x00000020, 0x00000100, 0x00042000,
    0x00001000, 0x00010000, 0x00200000, 0x40000000, 0x00008000, 0x00100000,
    0x00080000, 0x00000040, 0x00000400, 0x00080000, 0x00040040, 0x00020000,
    0x00100000, 0x00004000, 0x00000008, 0x00200000, 0x00100000, 0x10000000,
    0x00402002, 0x000b0000, 0x00000002, 0x00000010, 0x00100000, 0x00020000,
    0x00000100, 0x00008000, 0x00000080, 0x00001000, 0x00400000, 0x00008000,
    0x80000041, 0x00000202, 0x01000000, 0x00000080, 0x00100000, 0x00040000,
    0x04000000, 0x00100000, 0x01000000, 0x08000000, 0x00040400, 0x00100000,
    0x00020000, 0x00400004, 0x20000000, 0x00002000, 0x00000400, 0x00000200,
    0x01000000, 0x00000800, 0x60000000, 0x80008000, 0x20000000, 0x00000010,
    0x00000400, 0x00100000, 0x40000000, 0x00001020, 0x00800000, 0x00000020,
    0x00020000, 0x00000002, 0x00000010, 0x00001000, 0x00000400, 0x00000002,
    0x10000000, 0x40000000, 0x00100020, 0x00000100, 0x00000002, 0x00400000,
    0x00100000, 0x02000100, 0x01000000, 0x00010000, 0x02000000, 0x00100000,
    0x01000000, 0x00400000, 0x00000002, 0x00000010, 0x00000002, 0x00800008,
    0x04000000, 0x00010040, 0x08800040, 0x80000000, 0x00004000, 0x00000004,
    0x10000000, 0x00020000, 0x00008000, 0x00000800, 0x00000002, 0x00000008,
    0x00001000, 0x00000040, 0x00000020, 0x00000200, 0x00008000, 0x24000000,
    0x00000800, 0x10000000, 0x10000000, 0x00001000, 0x20000000, 0x00004000,
    0x10000000, 0x04100000, 0x00000040, 0x10000000, 0x00002000, 0x00200000,
    0x00040000, 0x04000000, 0x00000008, 0x00002000, 0x40000000, 0x00000800,
    0x00000002, 0x00001000, 0x00004000, 0x04000000, 0x01000000, 0x00000020,
    0x00100000, 0x00002000, 0x00020000, 0x00000200, 0x00000020, 0x00000010,
    0x00000020, 0x00080000, 0x20000000, 0x00000800, 0x00400000, 0x00041000,
    0x00000020, 0x80000000, 0x00008000, 0x00800000, 0x00000020, 0x00004000,
    0x00100000, 0x20000000, 0x00000008, 0x00001000, 0x00040000, 0x04000000,
    0x00000004, 0x00010000, 0x00000010, 0x00000400, 0x00040000, 0x00000800,
    0x00004000, 0x02000000, 0x00020000, 0x00080000, 0x00020000, 0x10000000,
    0x00000800, 0x00080000, 0x00020000, 0x40000000, 0x00020000, 0x08000000,
    0x00008000, 0x20004000, 0x00000001, 0x00010000, 0x00000800, 0x00000200,
    0x00040000, 0x00000040, 0x08000000, 0x00002000, 0x40000000, 0x00000010,
    0x01000000, 0x00000004, 0x00000800, 0x00000a00, 0x00000100, 0x00000040,
    0x00400000, 0x80000000, 0x00080000, 0x00000008, 0x00000400, 0x00080000,
    0x00000004, 0x04000000, 0x00000080, 0x00000080, 0x08000000, 0x02000000,
    0x00000040};
    }

    const static UnicodeSet qian_Set{const_cast<UnicodeSet::run_t *>(__qian_Set_runs), 439, 0, const_cast<UnicodeSet::bitquad_t *>(__qian_Set_quads), 259, 0};

    /** Code Point Ranges for ci
    [3438, 3438], [3602, 3602], [3796, 3796], [383f, 383f], [3880, 3880],
    [3f8a, 3f8a], [40a3, 40a3], [4218, 4218], [45aa, 45aa], [49f3, 49f3],
    [4bf8, 4bf8], [4cd0, 4cd0], [4f3a, 4f3a], [4f4c, 4f4c], [4f7d, 4f7d],
    [5068, 5068], [523a, 523a], [53f8, 53f8], [5470, 5470], [5472, 5472],
    [5559, 5559], [5790, 5790], [5832, 5832], [59d5, 59d5], [5b28, 5b28],
    [5d6f, 5d6f], [5dee, 5dee], [5e9b, 5e9b], [5ec1, 5ec1], [6148, 6148],
    [63aa, 63aa], [673f, 673f], [67b1, 67b1], [67cc, 67cc], [67f4, 67f4],
    [681c, 681c], [6828, 6828], [6b21, 6b21], [6b64, 6b64], [6cda, 6cda],
    [6ecb, 6ecb], [6fac, 6fac], [6fe8, 6fe8], [73bc, 73bc], [74f7, 74f7],
    [75b5, 75b5], [7689, 7689], [78c1, 78c1], [7960, 7960], [7ca2, 7ca2],
    [7ccd, 7ccd], [7d58, 7d58], [7e12, 7e12], [80d4, 80d4], [8308, 8308],
    [8326, 8326], [8328, 8328], [8332, 8332], [83bf, 83bf], [858b, 858b],
    [85ba, 85ba], [869d, 869d], [86d3, 86d3], [8785, 8786], [8800, 8800],
    [8a5e, 8a5e], [8cdc, 8cdc], [8d80, 8d80], [8d91, 8d91], [8dd0, 8dd0],
    [8fad, 8fad], [9236, 9236], [96cc, 96cc], [98fa, 98fa], [9908, 9908],
    [9ab4, 9ab4], [9aca, 9aca], [9b86, 9b86], [9d1c, 9d1c], [9dbf, 9dc0],
    [9f79, 9f79], [2092b, 2092b], [20990, 20990], [20a46, 20a46],
    [20bc2, 20bc2], [210f8, 210f8], [2194e, 2194e], [21c3e, 21c3e],
    [2215c, 2215c], [224d7, 224d7], [22af4, 22af4], [22db4, 22db4],
    [23411, 23411], [2367c, 2367c], [23701, 23701], [23895, 23895],
    [24d3c, 24d3c], [25c2d, 25c2d], [25d3a, 25d3a], [25fc6, 25fc6],
    [25ff4, 25ff4], [26367, 26367], [26428, 26428], [2643e, 2643e],
    [2647a, 2647a], [26481, 26481], [2659d, 2659d], [26f21, 26f21],
    [27292, 27292], [27310, 27310], [27456, 27456], [27648, 27648],
    [2780e, 2780e], [27825, 27825], [279d2, 279d2], [27ebc, 27ebc],
    [282f0, 282f0], [28415, 28415], [284a4, 284a4], [284ae, 284ae],
    [28810, 28810], [28c81, 28c81], [28f85, 28f85], [29182, 29182],
    [2924b, 2924b], [29750, 29750], [29891, 29891], [29a28, 29a28],
    [29f94, 29f94], [2a26a, 2a26a], [2a45f, 2a45f], [2a632, 2a632]**/


    namespace {
    const static UnicodeSet::run_t __ci_Set_runs[] = {
    {Empty, 417}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 55},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 18}, {Mixed, 3}, {Empty, 7},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 3},
    {Mixed, 5}, {Empty, 23}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 25}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 17}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 14},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 16}, {Mixed, 2}, {Empty, 12}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 12}, {Mixed, 1}, {Empty, 2893}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 50},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 164}, {Mixed, 1}, {Empty, 119},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 20}, {Mixed, 2},
    {Empty, 27}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 12}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 29390}};
    const static UnicodeSet::bitquad_t  __ci_Set_quads[] = {
    0x01000000, 0x00000004, 0x00400000, 0x80000000, 0x00000001, 0x00000400,
    0x00000008, 0x01000000, 0x00000400, 0x00080000, 0x01000000, 0x00010000,
    0x04000000, 0x00001000, 0x20000000, 0x00000100, 0x04000000, 0x01000000,
    0x00050000, 0x02000000, 0x00010000, 0x00040000, 0x00200000, 0x00000100,
    0x00008000, 0x00004000, 0x08000000, 0x00000002, 0x00000100, 0x00000400,
    0x80000000, 0x00020000, 0x00001000, 0x00100000, 0x10000000, 0x00000100,
    0x00000002, 0x00000010, 0x04000000, 0x00000800, 0x00001000, 0x00000100,
    0x10000000, 0x00800000, 0x00200000, 0x00000200, 0x00000002, 0x00000001,
    0x00000004, 0x00002000, 0x01000000, 0x00040000, 0x00100000, 0x00000100,
    0x00040140, 0x80000000, 0x00000800, 0x04000000, 0x20000000, 0x00080000,
    0x00000060, 0x00000001, 0x40000000, 0x10000000, 0x00020001, 0x00010000,
    0x00002000, 0x00400000, 0x00001000, 0x04000000, 0x00000100, 0x00100000,
    0x00000400, 0x00000040, 0x10000000, 0x80000000, 0x00000001, 0x02000000,
    0x00000800, 0x00010000, 0x00000040, 0x00000004, 0x01000000, 0x00004000,
    0x40000000, 0x10000000, 0x00800000, 0x00100000, 0x00100000, 0x00020000,
    0x10000000, 0x00000002, 0x00200000, 0x10000000, 0x00002000, 0x04000000,
    0x00000040, 0x00100000, 0x00000080, 0x40000100, 0x04000000, 0x00000002,
    0x20000000, 0x00000002, 0x00040000, 0x00010000, 0x00400000, 0x00000100,
    0x00004000, 0x00000020, 0x00040000, 0x10000000, 0x00010000, 0x00200000,
    0x00004010, 0x00010000, 0x00000002, 0x00000020, 0x00000004, 0x00000800,
    0x00010000, 0x00020000, 0x00000100, 0x00100000, 0x00000400, 0x80000000,
    0x00040000};
    }

    const static UnicodeSet ci_Set{const_cast<UnicodeSet::run_t *>(__ci_Set_runs), 225, 0, const_cast<UnicodeSet::bitquad_t *>(__ci_Set_quads), 127, 0};

    /** Code Point Ranges for zhong
    [343a, 343a], [38eb, 38eb], [3c81, 3c81], [3cb4, 3cb4], [3cca, 3cca],
    [3e63, 3e63], [3f3f, 3f3f], [41d7, 41d7], [423a, 423a], [4766, 4766],
    [4c70, 4c70], [4e2d, 4e2d], [4e51, 4e51], [4ef2, 4ef2], [4f00, 4f00],
    [4f17, 4f17], [5045, 5045], [51a2, 51a2], [55a0, 55a0], [5839, 5839],
    [585a, 585a], [5902, 5902], [5990, 5990], [5995, 5995], [5a91, 5a91],
    [5c30, 5c30], [5f78, 5f78], [5fb8, 5fb8], [5fe0, 5fe0], [5fea, 5fea],
    [67ca, 67ca], [6a66, 6a66], [6b71, 6b71], [6c77, 6c77], [6f7c, 6f7c],
    [7082, 7082], [7144, 7144], [72c6, 72c6], [7607, 7607], [76c5, 76c5],
    [773e, 773e], [794c, 794c], [79cd, 79cd], [7a2e, 7a2e], [7a5c, 7a5c],
    [7ae5, 7ae5], [7b57, 7b57], [7c66, 7c66], [7d42, 7d42], [7ddf, 7ddf],
    [816b, 816b], [8202, 8202], [822f, 822f], [833d, 833d], [8463, 8463],
    [8520, 8520], [869b, 869b], [86a3, 86a3], [8769, 8769], [87a4, 87a4],
    [87bd, 87bd], [87f2, 87f2], [8846, 8846], [8873, 8873], [8876, 8877],
    [8908, 8908], [8ae5, 8ae5], [8e35, 8e35], [8e71, 8e71], [91cd, 91cd],
    [9206, 9206], [9221, 9221], [92bf, 92bf], [937e, 937e], [9418, 9418],
    [9d24, 9d24], [9f28, 9f28], [202a5, 202a5], [206c0, 206c0],
    [20c67, 20c67], [2158c, 2158c], [2197f, 2197f], [21c12, 21c12],
    [21ed1, 21ed1], [22077, 22077], [220ed, 220ed], [22746, 22746],
    [22a31, 22a31], [23c67, 23c67], [23de1, 23de1], [23e5e, 23e5e],
    [2468f, 2468f], [24745, 24745], [24bda, 24bda], [24e84, 24e84],
    [255e6, 255e6], [25dc8, 25dc8], [25edd, 25edd], [26242, 26242],
    [2630b, 2630b], [26509, 26509], [26b15, 26b15], [271bc, 271bc],
    [27446, 27446], [27b24, 27b24], [27cee, 27cee], [28262, 28262],
    [28cd7, 28cd7], [2915e, 2915e], [29167, 29167], [29fc0, 29fc0]**/


    namespace {
    const static UnicodeSet::run_t __zhong_Set_runs[] = {
    {Empty, 417}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 28},
    {Mixed, 3}, {Empty, 12}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 13}, {Mixed, 2},
    {Empty, 4}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 4}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 2843}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 145}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 58}, {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 52},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 82},
    {Mixed, 1}, {Empty, 35}, {Mixed, 2}, {Empty, 114}, {Mixed, 1},
    {Empty, 29441}};
    const static UnicodeSet::bitquad_t  __zhong_Set_quads[] = {
    0x04000000, 0x00000800, 0x00000002, 0x00100000, 0x00000400, 0x00000008,
    0x80000000, 0x00800000, 0x04000000, 0x00000040, 0x00010000, 0x00002000,
    0x00020000, 0x00040000, 0x00800001, 0x00000020, 0x00000004, 0x00000001,
    0x02000000, 0x04000000, 0x00000004, 0x00210000, 0x00020000, 0x00010000,
    0x01000000, 0x01000000, 0x00000401, 0x00000400, 0x00000040, 0x00020000,
    0x00800000, 0x10000000, 0x00000004, 0x00000010, 0x00000040, 0x00000080,
    0x00000020, 0x40000000, 0x00001000, 0x00002000, 0x00004000, 0x10000000,
    0x00000020, 0x00800000, 0x00000040, 0x00000004, 0x80000000, 0x00000800,
    0x00000004, 0x00008000, 0x20000000, 0x00000008, 0x00000001, 0x08000000,
    0x00000008, 0x00000200, 0x20000010, 0x00040000, 0x00000040, 0x00c80000,
    0x00000100, 0x00000020, 0x00200000, 0x00020000, 0x00002000, 0x00000040,
    0x00000002, 0x80000000, 0x40000000, 0x01000000, 0x00000010, 0x00000100,
    0x00000020, 0x00000001, 0x00000080, 0x00001000, 0x80000000, 0x00040000,
    0x00020000, 0x00800000, 0x00002000, 0x00000040, 0x00020000, 0x00000080,
    0x00000002, 0x40000000, 0x00008000, 0x00000020, 0x04000000, 0x00000010,
    0x00000040, 0x00000100, 0x20000000, 0x00000004, 0x00000800, 0x00000200,
    0x00200000, 0x10000000, 0x00000040, 0x00000010, 0x00004000, 0x00000004,
    0x00800000, 0x40000000, 0x00000080, 0x00000001};
    }

    const static UnicodeSet zhong_Set{const_cast<UnicodeSet::run_t *>(__zhong_Set_runs), 191, 0, const_cast<UnicodeSet::bitquad_t *>(__zhong_Set_quads), 106, 0};

    /** Code Point Ranges for nei
    [343b, 343b], [3a05, 3a05], [3f0f, 3f0f], [5185, 5185], [5a1e, 5a1e],
    [5a51, 5a51], [6c1d, 6c1d], [6d7d, 6d7d], [812e, 812e], [8147, 8147],
    [90a3, 90a3], [9317, 9317], [9912, 9912], [9927, 9927], [9bbe, 9bbe],
    [2045a, 2045b], [218e2, 218e2], [22069, 22069], [2217c, 2217c],
    [226c9, 226c9], [234c3, 234c3], [2586d, 2586d], [2884c, 2884c],
    [295d4, 295d4], [296de, 296de], [29b00, 29b00]**/


    namespace {
    const static UnicodeSet::run_t __nei_Set_runs[] = {
    {Empty, 417}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 147}, {Mixed, 1}, {Empty, 67}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 141}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 157}, {Mixed, 2}, {Empty, 122}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 47}, {Mixed, 2}, {Empty, 19},
    {Mixed, 1}, {Empty, 2884}, {Mixed, 1}, {Empty, 164}, {Mixed, 1},
    {Empty, 59}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 111}, {Mixed, 1}, {Empty, 284}, {Mixed, 1},
    {Empty, 382}, {Mixed, 1}, {Empty, 107}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 29479}};
    const static UnicodeSet::bitquad_t  __nei_Set_quads[] = {
    0x08000000, 0x00000020, 0x00008000, 0x00000020, 0x40000000, 0x00020000,
    0x20000000, 0x20000000, 0x00004000, 0x00000080, 0x00000008, 0x00800000,
    0x00040000, 0x00000080, 0x40000000, 0x0c000000, 0x00000004, 0x00000200,
    0x10000000, 0x00000200, 0x00000008, 0x00002000, 0x00001000, 0x00100000,
    0x40000000, 0x00000001};
    }

    const static UnicodeSet nei_Set{const_cast<UnicodeSet::run_t *>(__nei_Set_runs), 49, 0, const_cast<UnicodeSet::bitquad_t *>(__nei_Set_quads), 26, 0};

    /** Code Point Ranges for su
    [3449, 3449], [345b, 345b], [34d8, 34d8], [3504, 3504], [371a, 371a],
    [389d, 389d], [3a1e, 3a1e], [3a4b, 3a4b], [3aa9, 3aa9], [3b18, 3b18],
    [3c9e, 3c9e], [3d3c, 3d3c], [40e4, 40e4], [431a, 431a], [4398, 4398],
    [447f, 447f], [450e, 450e], [4618, 4618], [46fe, 46fe], [4954, 4954],
    [4c86, 4c86], [4fd7, 4fd7], [5083, 5083], [50c1, 50c1], [50f3, 50f3],
    [5379, 5379], [55c9, 55c9], [55d6, 55d6], [56cc, 56cc], [5731, 5731],
    [57e3, 57e3], [5851, 5851], [5919, 5919], [5aca, 5aca], [5bbf, 5bbf],
    [612b, 612c], [619f, 619f], [637d, 637d], [642c, 642c], [6475, 6475],
    [6880, 6880], [68f4, 68f4], [69a1, 69a1], [6a0e, 6a0e], [6a15, 6a15],
    [6a5a, 6a5a], [6aef, 6aef], [6b90, 6b90], [6cdd, 6cdd], [6d2c, 6d2c],
    [6d91, 6d91], [6eaf, 6eaf], [6eb8, 6eb8], [6f5a, 6f5a], [6f65, 6f65],
    [738a, 738a], [749b, 749b], [7526, 7526], [78bf, 78bf], [7a21, 7a21],
    [7aa3, 7aa3], [7c0c, 7c0c], [7c9f, 7c9f], [7d20, 7d20], [7e24, 7e24],
    [7e2e, 7e2e], [8085, 8085], [8186, 8186], [83a4, 83a4], [84ff, 84ff],
    [850c, 850c], [85d7, 85d7], [8607, 8607], [89eb, 89eb], [8a34, 8a34],
    [8b16, 8b16], [8d9a, 8d9a], [8e5c, 8e5c], [901f, 901f], [9061, 9061],
    [906c, 906c], [9165, 9165], [92c9, 92c9], [9917, 9917], [9a4c, 9a4c],
    [9c50, 9c50], [9deb, 9deb], [2040d, 2040d], [20dc3, 20dc3],
    [20edc, 20edc], [213ae, 213ae], [215af, 215af], [2238e, 2238e],
    [2258f, 2258f], [22691, 22691], [22892, 22892], [22e2b, 22e2b],
    [2375d, 2375d], [23a77, 23a77], [23ace, 23ace], [23bfc, 23bfc],
    [23d98, 23d98], [23df6, 23df6], [23fc8, 23fc8], [24302, 24302],
    [246dd, 246dd], [2481a, 2481a], [24843, 24843], [24882, 24882],
    [24898, 24898], [24910, 24910], [24954, 24954], [24b74, 24b74],
    [24e2e, 24e2e], [24f00, 24f00], [26309, 2630a], [26384, 26384],
    [2700c, 2700c], [27401, 27401], [27412, 27412], [27434, 27434],
    [27516, 27516], [27726, 27726], [277ba, 277ba], [27946, 27946],
    [27a5d, 27a5d], [27eb7, 27eb7], [27f2d, 27f2d], [27f77, 27f77],
    [2942b, 2942b], [2943c, 2943c], [29630, 29630], [29639, 29639],
    [29765, 29765], [29cb5, 29cb5], [29cd2, 29cd2], [2a07d, 2a07d],
    [2a111, 2a111], [2a144, 2a144], [2a2dd, 2a2dd], [2a314, 2a314],
    [2a35b, 2a35b], [2a42e, 2a42e], [2a5b6, 2a5b6]**/


    namespace {
    const static UnicodeSet::run_t __su_Set_runs[] = {
    {Empty, 418}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 19}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 32}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 2864}, {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 110}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 72}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 159}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 99}, {Mixed, 1}, {Empty, 31}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 165}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 41}, {Mixed, 2}, {Empty, 28}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 29394}};
    const static UnicodeSet::bitquad_t  __su_Set_quads[] = {
    0x08000200, 0x01000000, 0x00000010, 0x04000000, 0x20000000, 0x40000000,
    0x00000800, 0x00000200, 0x01000000, 0x40000000, 0x10000000, 0x00000010,
    0x04000000, 0x01000000, 0x80000000, 0x00004000, 0x01000000, 0x40000000,
    0x00100000, 0x00000040, 0x00800000, 0x00000008, 0x00000002, 0x00080000,
    0x02000000, 0x00400200, 0x00001000, 0x00020000, 0x00000008, 0x00020000,
    0x02000000, 0x00000400, 0x80000000, 0x00001800, 0x80000000, 0x20000000,
    0x00001000, 0x00200000, 0x00000001, 0x00100000, 0x00000002, 0x00204000,
    0x04000000, 0x00008000, 0x00010000, 0x20000000, 0x00001000, 0x00020000,
    0x01008000, 0x04000000, 0x00000020, 0x00000400, 0x08000000, 0x00000040,
    0x80000000, 0x00000002, 0x00000008, 0x00001000, 0x80000000, 0x00000001,
    0x00004010, 0x00000020, 0x00000040, 0x00000010, 0x80000000, 0x00001000,
    0x00800000, 0x00000080, 0x00000800, 0x00100000, 0x00400000, 0x04000000,
    0x10000000, 0x80000000, 0x00001002, 0x00000020, 0x00000200, 0x00800000,
    0x00001000, 0x00010000, 0x00000800, 0x00002000, 0x00000008, 0x10000000,
    0x00004000, 0x00008000, 0x00004000, 0x00008000, 0x00020000, 0x00040000,
    0x00000800, 0x20000000, 0x00800000, 0x00004000, 0x10000000, 0x01000000,
    0x00400000, 0x00000100, 0x00000004, 0x20000000, 0x04000000, 0x00000008,
    0x01000004, 0x00010000, 0x00100000, 0x00100000, 0x00004000, 0x00000001,
    0x00000600, 0x00000010, 0x00001000, 0x00040002, 0x00100000, 0x00400000,
    0x00000040, 0x04000000, 0x00000040, 0x20000000, 0x00800000, 0x00002000,
    0x00800000, 0x10000800, 0x02010000, 0x00000020, 0x00200000, 0x00040000,
    0x20000000, 0x00020000, 0x00000010, 0x20000000, 0x00100000, 0x08000000,
    0x00004000, 0x00400000};
    }

    const static UnicodeSet su_Set{const_cast<UnicodeSet::run_t *>(__su_Set_runs), 259, 0, const_cast<UnicodeSet::bitquad_t *>(__su_Set_quads), 134, 0};

    /** Code Point Ranges for qiong
    [344b, 344b], [3741, 3741], [39ed, 39ed], [3baa, 3baa], [405a, 405a],
    [40d4, 40d4], [4143, 4143], [4284, 4284], [46ea, 46ea], [483b, 483b],
    [511d, 511d], [5b1b, 5b1b], [60f8, 60f8], [618c, 618c], [684f, 684f],
    [6a69, 6a69], [712a, 712a], [712d, 712d], [7162, 7162], [7401, 7401],
    [749a, 749a], [74ca, 74ca], [74d7, 74d7], [778f, 778f], [7a79, 7a79],
    [7aae, 7aae], [7b47, 7b47], [823c, 823c], [85d1, 85d1], [85ed, 85ed],
    [86e9, 86e9], [86ec, 86ec], [8d79, 8d79], [8deb, 8deb], [909b, 909b],
    [928e, 928e], [97a0, 97a0], [202ab, 202ab], [20316, 20316],
    [2090a, 2090a], [212bc, 212bc], [217a6, 217a6], [21983, 21983],
    [21e15, 21e15], [21eba, 21eba], [2278f, 2278f], [22b8d, 22b8d],
    [22d87, 22d87], [231ec, 231ec], [232f6, 232f6], [23466, 23466],
    [23727, 23727], [23d86, 23d86], [248b6, 248b6], [24911, 24911],
    [24936, 24936], [2544e, 2544e], [25471, 25471], [25a2a, 25a2a],
    [25cce, 25cce], [269a7, 269a7], [26a30, 26a30], [26b6d, 26b6d],
    [26fb5, 26fb5], [2802f, 2802f], [2826b, 2826b], [28376, 28376],
    [29453, 29453], [298bd, 298bd], [29a2f, 29a2f], [29b1b, 29b1b],
    [29b30, 29b30], [2a01b, 2a01b]**/


    namespace {
    const static UnicodeSet::run_t __qiong_Set_runs[] = {
    {Empty, 418}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 70},
    {Mixed, 1}, {Empty, 79}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 28}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 51},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 2903},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 47}, {Mixed, 1},
    {Empty, 76}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 70}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 50},
    {Mixed, 1}, {Empty, 88}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 88}, {Mixed, 2}, {Empty, 45}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 102}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 131},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 134}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 38}, {Mixed, 1},
    {Empty, 29439}};
    const static UnicodeSet::bitquad_t  __qiong_Set_quads[] = {
    0x00000800, 0x00000002, 0x00002000, 0x00000400, 0x04000000, 0x00100000,
    0x00000008, 0x00000010, 0x00000400, 0x08000000, 0x20000000, 0x08000000,
    0x01000000, 0x00001000, 0x00008000, 0x00000200, 0x00002400, 0x00000004,
    0x00000002, 0x04000000, 0x00800400, 0x00008000, 0x02000000, 0x00004000,
    0x00000080, 0x10000000, 0x00020000, 0x00002000, 0x00001200, 0x02000000,
    0x00000800, 0x08000000, 0x00004000, 0x00000001, 0x00000800, 0x00400000,
    0x00000400, 0x10000000, 0x00000040, 0x00000008, 0x00200000, 0x04000000,
    0x00008000, 0x00002000, 0x00000080, 0x00001000, 0x00400000, 0x00000040,
    0x00000080, 0x00000040, 0x00400000, 0x00020000, 0x00400000, 0x00004000,
    0x00020000, 0x00000400, 0x00004000, 0x00000080, 0x00010000, 0x00002000,
    0x00200000, 0x00008000, 0x00000800, 0x00400000, 0x00080000, 0x20000000,
    0x00008000, 0x08000000, 0x00010000, 0x08000000};
    }

    const static UnicodeSet qiong_Set{const_cast<UnicodeSet::run_t *>(__qiong_Set_runs), 133, 0, const_cast<UnicodeSet::bitquad_t *>(__qiong_Set_quads), 70, 0};

    /** Code Point Ranges for wang
    [344c, 344c], [3cf9, 3cf9], [3d0f, 3d0f], [44bd, 44bd], [4911, 4911],
    [4ea1, 4ea1], [4efc, 4efc], [5321, 5321], [5984, 5984], [5c22, 5c22],
    [5f7a, 5f7a], [5f80, 5f80], [5f8d, 5f8d], [5fd8, 5fd8], [5ff9, 5ff9],
    [60d8, 60d8], [6282, 6282], [65b9, 65b9], [65fa, 65fa], [6680, 6680],
    [671a, 671b], [6789, 6789], [6c6a, 6c6a], [7007, 7007], [738b, 738b],
    [741e, 741e], [7687, 7687], [76f3, 76f3], [7db2, 7db2], [7f54, 7f54],
    [83f5, 83f5], [869f, 869f], [86e7, 86e7], [8744, 8744], [8ab7, 8ab7],
    [8f1e, 8f1e], [8fcb, 8fcb], [8fec, 8fec], [9b4d, 9b4d], [2057f, 2057f],
    [2151e, 2151e], [2175d, 2175d], [21bc1, 21bc1], [21de2, 21de2],
    [22076, 22076], [224ef, 224ef], [226db, 226db], [22f1f, 22f1f],
    [238ab, 238ab], [2394a, 2394a], [23d88, 23d88], [23dea, 23dea],
    [24dc0, 24dc0], [2519a, 2519a], [2519c, 2519c], [2574d, 2574d],
    [25ca0, 25ca0], [25fbc, 25fbc], [264cb, 264cb], [26589, 26589],
    [268e6, 268e6], [268e9, 268e9], [26b23, 26b23], [26bcc, 26bcc],
    [2723f, 2723f], [27395, 27395], [279c4, 279c4], [279dc, 279dc],
    [27ae2, 27ae2], [2857f, 2857f], [28ce0, 28ce0], [295a9, 295a9],
    [29d6d, 29d6d], [2a058, 2a058]**/


    namespace {
    const static UnicodeSet::run_t __wang_Set_runs[] = {
    {Empty, 418}, {Mixed, 1}, {Empty, 68}, {Mixed, 2}, {Empty, 60},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 50},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 25}, {Mixed, 2},
    {Empty, 1}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 90}, {Mixed, 1}, {Empty, 2896},
    {Mixed, 1}, {Empty, 124}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 65}, {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 126}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 50}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 49},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 83}, {Mixed, 1},
    {Empty, 59}, {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 61},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 29437}};
    const static UnicodeSet::bitquad_t  __wang_Set_quads[] = {
    0x00001000, 0x02000000, 0x00008000, 0x20000000, 0x00020000, 0x00000002,
    0x10000000, 0x00000002, 0x00000010, 0x00000004, 0x04000000, 0x00002001,
    0x01000000, 0x02000000, 0x01000000, 0x00000004, 0x02000000, 0x04000000,
    0x00000001, 0x0c000000, 0x00000200, 0x00000400, 0x00000080, 0x00000800,
    0x40000000, 0x00000080, 0x00080000, 0x00040000, 0x00100000, 0x00200000,
    0x80000000, 0x00000080, 0x00000010, 0x00800000, 0x40000000, 0x00000800,
    0x00001000, 0x00002000, 0x80000000, 0x40000000, 0x20000000, 0x00000002,
    0x00000004, 0x00400000, 0x00008000, 0x08000000, 0x80000000, 0x00000800,
    0x00000400, 0x00000100, 0x00000400, 0x00000001, 0x14000000, 0x00002000,
    0x00000001, 0x10000000, 0x00000800, 0x00000200, 0x00000240, 0x00000008,
    0x00001000, 0x80000000, 0x00200000, 0x10000010, 0x00000004, 0x80000000,
    0x00000001, 0x00000200, 0x00002000, 0x01000000};
    }

    const static UnicodeSet wang_Set{const_cast<UnicodeSet::run_t *>(__wang_Set_runs), 133, 0, const_cast<UnicodeSet::bitquad_t *>(__wang_Set_quads), 70, 0};

    /** Code Point Ranges for kuang
    [344c, 344c], [369a, 369a], [3fa0, 3fa0], [44b0, 44b0], [45b1, 45b1],
    [4bd1, 4bd1], [4d43, 4d43], [4e31, 4e31], [5123, 5123], [5144, 5144],
    [52bb, 52bb], [5321, 5321], [535d, 535d], [5448, 5448], [54d0, 54d0],
    [58d9, 58d9], [593c, 593c], [5cb2, 5cb2], [5ee3, 5ee3], [5ff9, 5ff9],
    [6047, 6047], [61ec, 61ed], [6282, 6282], [66e0, 66e0], [6789, 6789],
    [6846, 6846], [6cc1, 6cc1], [6d2d, 6d2d], [6e5f, 6e5f], [720c, 720c],
    [72c2, 72c2], [7716, 7716], [7736, 7736], [77cc, 77cc], [7844, 7844],
    [78fa, 78fa], [7926, 7926], [7a6c, 7a6c], [7b50, 7b50], [7d56, 7d56],
    [7e8a, 7e8a], [8a86, 8a86], [8a91, 8a91], [8cba, 8cba], [8ed6, 8ed6],
    [8ee6, 8ee6], [8eed, 8eed], [8fcb, 8fcb], [901b, 901b], [90bc, 90bc],
    [913a, 913a], [945b, 945b], [9d5f, 9d5f], [9ecb, 9ecb], [21da2, 21da2],
    [21f87, 21f87], [22f11, 22f11], [22f33, 22f33], [23366, 23366],
    [234b8, 234b8], [23d25, 23d25], [2477f, 2477f], [24787, 24787],
    [2520f, 2520f], [2669e, 2669e], [26970, 26970], [2794c, 2794c],
    [27ed4, 27ed4], [27efa, 27efa], [28015, 28015], [281c1, 281c1],
    [283c6, 283c6], [285a2, 285a2], [28951, 28951], [28a2d, 28a2d],
    [28d11, 28d11], [298bc, 298bc], [29b39, 29b39], [29dd7, 29dd7],
    [2a37f, 2a37f], [2a3ea, 2a3ea]**/


    namespace {
    const static UnicodeSet::run_t __kuang_Set_runs[] = {
    {Empty, 418}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 72},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 23}, {Mixed, 2}, {Empty, 10}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 33},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 95}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 16},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 71}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3062},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 123}, {Mixed, 2},
    {Empty, 33}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 67},
    {Mixed, 1}, {Empty, 81}, {Mixed, 2}, {Empty, 83}, {Mixed, 1},
    {Empty, 163}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 126},
    {Mixed, 1}, {Empty, 43}, {Mixed, 2}, {Empty, 8}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 29408}};
    const static UnicodeSet::bitquad_t  __kuang_Set_quads[] = {
    0x00001000, 0x04000000, 0x00000001, 0x00010000, 0x00020000, 0x00020000,
    0x00000008, 0x00020000, 0x00000008, 0x00000010, 0x08000000, 0x00000002,
    0x20000000, 0x00000100, 0x00010000, 0x02000000, 0x10000000, 0x00040000,
    0x00000008, 0x02000000, 0x00000080, 0x00003000, 0x00000004, 0x00000001,
    0x00000200, 0x00000040, 0x00000002, 0x00002000, 0x80000000, 0x00001000,
    0x00000004, 0x00400000, 0x00400000, 0x00001000, 0x00000010, 0x04000000,
    0x00000040, 0x00001000, 0x00010000, 0x00400000, 0x00000400, 0x00020040,
    0x04000000, 0x00400000, 0x00002040, 0x00000800, 0x08000000, 0x10000000,
    0x04000000, 0x08000000, 0x80000000, 0x00000800, 0x00000004, 0x00000080,
    0x00020000, 0x00080000, 0x00000040, 0x01000000, 0x00000020, 0x80000000,
    0x00000080, 0x00008000, 0x40000000, 0x00010000, 0x00001000, 0x00100000,
    0x04000000, 0x00200000, 0x00000002, 0x00000040, 0x00000004, 0x00020000,
    0x00002000, 0x00020000, 0x10000000, 0x02000000, 0x00800000, 0x80000000,
    0x00000400};
    }

    const static UnicodeSet kuang_Set{const_cast<UnicodeSet::run_t *>(__kuang_Set_runs), 145, 0, const_cast<UnicodeSet::bitquad_t *>(__kuang_Set_quads), 79, 0};

    /** Code Point Ranges for lei
    [344d, 344d], [348d, 348d], [34a6, 34a6], [3523, 3523], [35ca, 35ca],
    [3825, 3825], [3c95, 3c95], [3d62, 3d62], [3d7d, 3d7d], [3d9f, 3d9f],
    [3e4e, 3e4e], [3f0d, 3f0d], [3fd4, 3fd4], [40ec, 40ec], [4242, 4242],
    [426a, 426a], [4363, 4363], [442f, 442f], [44b9, 44b9], [48ae, 48ae],
    [48c2, 48c2], [48e6, 48e6], [4b91, 4b91], [50ab, 50ab], [5121, 5121],
    [513d, 513d], [52d2, 52d2], [53bd, 53bd], [561e, 561e], [5792, 5792],
    [58d8, 58d8], [58e8, 58e8], [5a41, 5a41], [5ad8, 5ad8], [64c2, 64c2],
    [6a0f, 6a0f], [6a91, 6a91], [6ad0, 6ad1], [6b19, 6b19], [6d21, 6d21],
    [6dda, 6dda], [6f2f, 6f2f], [7045, 7045], [74c3, 74c3], [757e, 757e],
    [7623, 7623], [7657, 7657], [76e7, 76e7], [78ca, 78ca], [78e5, 78e5],
    [790c, 790c], [7927, 7928], [7971, 7971], [79b7, 79b7], [7d2f, 7d2f],
    [7d6b, 7d6b], [7e32, 7e32], [7e87, 7e87], [7e8d, 7e8d], [7e9d, 7e9d],
    [7f4d, 7f4d], [7fb8, 7fb8], [8012, 8012], [808b, 808b], [8142, 8142],
    [8502, 8502], [857e, 857e], [85df, 85df], [8631, 8632], [863d, 863d],
    [8646, 8646], [8a84, 8a84], [8b84, 8b84], [8f60, 8f60], [90f2, 90f2],
    [9179, 9179], [9287, 9287], [9311, 9311], [9433, 9433], [9458, 9458],
    [9478, 9478], [96f7, 96f7], [981b, 981b], [982a, 982a], [985e, 985e],
    [9e13, 9e13], [9f3a, 9f3a], [20c64, 20c64], [21236, 21236],
    [21507, 21507], [21697, 21697], [21c20, 21c20], [21eed, 21eed],
    [21ef1, 21ef1], [21f0a, 21f0a], [21f8b, 21f8b], [21f96, 21f96],
    [21fc9, 21fc9], [21fdb, 21fdb], [22d31, 22d31], [22e6e, 22e6e],
    [23000, 23000], [2301c, 2301c], [2368e, 2368e], [23820, 23820],
    [23867, 23867], [2387a, 2387a], [23a05, 23a05], [240fb, 240fb],
    [24716, 24716], [24842, 24842], [248b9, 248b9], [24b8e, 24b8e],
    [24b9a, 24b9a], [24bb8, 24bb8], [24cf3, 24cf4], [24f18, 24f18],
    [25166, 25166], [25354, 25354], [25476, 25476], [255ec, 255ec],
    [255f6, 255f6], [258ec, 258ec], [25910, 25910], [261c4, 261c4],
    [264e5, 264e5], [2688f, 2688f], [268c4, 268c4], [2749c, 2749c],
    [274bd, 274bd], [277ad, 277ad], [28024, 28024], [28131, 28131],
    [2829a, 2829a], [283d2, 283d2], [287bd, 287bd], [28dba, 28dba],
    [28ecc, 28ecc], [2945a, 2945a], [296dd, 296dd], [29d3b, 29d3b],
    [29d53, 29d53], [2a46f, 2a46f]**/


    namespace {
    const static UnicodeSet::run_t __lei_Set_runs[] = {
    {Empty, 418}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 10}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 31}, {Mixed, 3}, {Empty, 20},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 9}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 79},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 4}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 33}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 8}, {Mixed, 3}, {Empty, 19}, {Mixed, 1}, {Empty, 8},
    {Mixed, 3}, {Empty, 45}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 2921}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 21}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 106}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 9}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 23}, {Mixed, 2}, {Empty, 69}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 93}, {Mixed, 2}, {Empty, 23}, {Mixed, 1}, {Empty, 67},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 47}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 50}, {Mixed, 2}, {Empty, 56}, {Mixed, 1},
    {Empty, 29404}};
    const static UnicodeSet::bitquad_t  __lei_Set_quads[] = {
    0x00002000, 0x00002000, 0x00000040, 0x00000008, 0x00000400, 0x00000020,
    0x00200000, 0x20000004, 0x80000000, 0x00004000, 0x00002000, 0x00100000,
    0x00001000, 0x00000004, 0x00000400, 0x00000008, 0x00008000, 0x02000000,
    0x00004000, 0x00000004, 0x00000040, 0x00020000, 0x00000800, 0x20000002,
    0x00040000, 0x20000000, 0x40000000, 0x00040000, 0x01000000, 0x00000100,
    0x00000002, 0x01000000, 0x00000004, 0x00008000, 0x00020000, 0x00030000,
    0x02000000, 0x00000002, 0x04000000, 0x00008000, 0x00000020, 0x00000008,
    0x40000000, 0x00000008, 0x00800000, 0x00000080, 0x00000400, 0x00000020,
    0x00001000, 0x00000180, 0x00020000, 0x00800000, 0x00008000, 0x00000800,
    0x00040000, 0x20002080, 0x00002000, 0x01000000, 0x00040000, 0x00000800,
    0x00000004, 0x00000004, 0x40000000, 0x80000000, 0x20060000, 0x00000040,
    0x00000010, 0x00000010, 0x00000001, 0x00040000, 0x02000000, 0x00000080,
    0x00020000, 0x00080000, 0x01000000, 0x01000000, 0x00800000, 0x08000000,
    0x00000400, 0x40000000, 0x00080000, 0x04000000, 0x00000010, 0x00400000,
    0x00000080, 0x00800000, 0x00000001, 0x00022000, 0x00000400, 0x00400800,
    0x08000200, 0x00020000, 0x00004000, 0x10000001, 0x00004000, 0x00000001,
    0x04000080, 0x00000020, 0x08000000, 0x00400000, 0x00000004, 0x02000000,
    0x04004000, 0x01000000, 0x00180000, 0x01000000, 0x00000040, 0x00100000,
    0x00400000, 0x00401000, 0x00001000, 0x00010000, 0x00000010, 0x00000020,
    0x00008000, 0x00000010, 0x10000000, 0x20000000, 0x00002000, 0x00000010,
    0x00020000, 0x04000000, 0x00040000, 0x20000000, 0x04000000, 0x00001000,
    0x04000000, 0x20000000, 0x08000000, 0x00080000, 0x00008000};
    }

    const static UnicodeSet lei_Set{const_cast<UnicodeSet::run_t *>(__lei_Set_runs), 223, 0, const_cast<UnicodeSet::bitquad_t *>(__lei_Set_quads), 131, 0};

    /** Code Point Ranges for nao
    [344e, 344e], [37aa, 37aa], [3e80, 3e81], [3e92, 3e92], [4409, 4409],
    [46dd, 46dd], [4d03, 4d03], [5476, 5476], [57b4, 57b4], [5816, 5816],
    [5912, 5912], [5a65, 5a65], [5ad0, 5ad0], [5b6c, 5b6c], [5cf1, 5cf1],
    [5dd9, 5dd9], [6013, 6013], [60f1, 60f1], [61b9, 61b9], [644e, 644e],
    [6493, 6493], [6a48, 6a48], [6dd6, 6dd6], [6f86, 6f86], [7331, 7331],
    [7376, 7376], [737f, 737f], [7459, 7459], [7847, 7847], [7899, 7899],
    [815d, 815d], [8166, 8166], [81a0, 81a0], [81d1, 81d1], [875a, 875a],
    [87ef, 87ef], [8a49, 8a49], [8b4a, 8b4a], [9403, 9403], [9b27, 9b27],
    [202a6, 202a6], [20877, 20877], [2134d, 2134d], [21f67, 21f67],
    [21f82, 21f82], [22148, 22148], [22275, 22275], [22738, 22738],
    [22abc, 22abc], [239fd, 239fd], [23b7a, 23b7a], [23ce6, 23ce6],
    [242b2, 242b2], [242eb, 242eb], [2478d, 2478d], [24864, 24864],
    [24ad5, 24ad5], [24dfb, 24dfb], [2502e, 2502e], [251b2, 251b2],
    [254a2, 254a2], [265ee, 265ee], [27a63, 27a63], [27cc0, 27cc0],
    [27ce6, 27ce6], [27d13, 27d13], [27d19, 27d19], [28978, 28978],
    [28c75, 28c75], [292c8, 292c8], [295af, 295af], [296cb, 296cb],
    [29918, 29918], [29a40, 29a40], [29ad4, 29ad4], [29afa, 29afa],
    [29b37, 29b37], [29bc6, 29bc6]**/


    namespace {
    const static UnicodeSet::run_t __nao_Set_runs[] = {
    {Empty, 418}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 69}, {Mixed, 2}, {Empty, 1}, {Mixed, 2},
    {Empty, 43}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 69}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 2875}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 86}, {Mixed, 1}, {Empty, 96}, {Mixed, 2},
    {Empty, 13}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 121}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 137}, {Mixed, 1}, {Empty, 163}, {Mixed, 1},
    {Empty, 18}, {Mixed, 3}, {Empty, 98}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 29473}};
    const static UnicodeSet::bitquad_t  __nao_Set_quads[] = {
    0x00004000, 0x00000400, 0x00040003, 0x00000200, 0x20000000, 0x00000008,
    0x00400000, 0x00100000, 0x00400000, 0x00040000, 0x00000020, 0x00010000,
    0x00001000, 0x00020000, 0x02000000, 0x00080000, 0x00020000, 0x02000000,
    0x00004000, 0x00080000, 0x00000100, 0x00400000, 0x00000040, 0x00020000,
    0x80400000, 0x02000000, 0x00000080, 0x02000000, 0x20000000, 0x00000040,
    0x00000001, 0x00020000, 0x04000000, 0x00008000, 0x00000200, 0x00000400,
    0x00000008, 0x00000080, 0x00000040, 0x00800000, 0x00002000, 0x00000080,
    0x00000004, 0x00000100, 0x00200000, 0x01000000, 0x10000000, 0x20000000,
    0x04000000, 0x00000040, 0x00040000, 0x00000800, 0x00002000, 0x00000010,
    0x00200000, 0x08000000, 0x00004000, 0x00040000, 0x00000004, 0x00004000,
    0x00000008, 0x00000001, 0x00000040, 0x02080000, 0x01000000, 0x00200000,
    0x00000100, 0x00008000, 0x00000800, 0x01000000, 0x00000001, 0x00100000,
    0x04000000, 0x00800000, 0x00000040};
    }

    const static UnicodeSet nao_Set{const_cast<UnicodeSet::run_t *>(__nao_Set_runs), 139, 0, const_cast<UnicodeSet::bitquad_t *>(__nao_Set_quads), 75, 0};

    /** Code Point Ranges for shu
    [3450, 3450], [3494, 3494], [34f1, 34f1], [3710, 3710], [384f, 384f],
    [38fd, 38fd], [3af9, 3af9], [3bee, 3bee], [3c93, 3c93], [3d42, 3d42],
    [3d96, 3d96], [3dc2, 3dc2], [3e21, 3e21], [3eff, 3eff], [3f21, 3f21],
    [3f81, 3f81], [40de, 40de], [41ec, 41ec], [4240, 4240], [4624, 4624],
    [4739, 4739], [476a, 476a], [4796, 4796], [47c9, 47c9], [483c, 483c],
    [489e, 489e], [4a39, 4a39], [4a71, 4a71], [4c59, 4c59], [4d30, 4d30],
    [4fb8, 4fb8], [4fc6, 4fc6], [4ff6, 4ff6], [500f, 500f], [5135, 5135],
    [516a, 516a], [53d4, 53d4], [54b0, 54b0], [552e, 552e], [55fd, 55fd],
    [587e, 587e], [5885, 5885], [59dd, 59dd], [5a36, 5a36], [5a4c, 5a4c],
    [5b4e, 5b4e], [5b70, 5b70], [5c0c, 5c0c], [5c17, 5c17], [5c6c, 5c6c],
    [5eb6, 5eb6], [5fec, 5fec], [6037, 6037], [6055, 6055], [6086, 6086],
    [620d, 620d], [6292, 6292], [6348, 6348], [6352, 6352], [6393, 6393],
    [63c4, 63c4], [6504, 6504], [6578, 6578], [668f, 668f], [6691, 6691],
    [66d9, 66d9], [66f8, 66f8], [672f, 672f], [6731, 6731], [675f, 675f],
    [6778, 6778], [677c, 677c], [68b3, 68b3], [6a1e, 6a1e], [6a39, 6a39],
    [6a7e, 6a7e], [6b8a, 6b8a], [6bb3, 6bb3], [6bf9, 6bf9], [6c00, 6c00],
    [6cad, 6cad], [6d91, 6d91], [6dd1, 6dd1], [6f31, 6f31], [6f4f, 6f4f],
    [6f7b, 6f7b], [6f8d, 6f8d], [6fd6, 6fd6], [7102, 7102], [719f, 719f],
    [7479, 7479], [74b9, 74b9], [758b, 758b], [758f, 758f], [7659, 7659],
    [79eb, 79eb], [7a0c, 7a0c], [7c54, 7c54], [7d13, 7d13], [7d35, 7d35],
    [7d49, 7d49], [7d80, 7d80], [7f72, 7f72], [7fdb, 7fdb], [8167, 8167],
    [8212, 8212], [8357, 8357], [837c, 837c], [83fd, 83fd], [8481, 8481],
    [84a3, 84a3], [852c, 852c], [85a5, 85a5], [85af, 85af], [85ea, 85ea],
    [85f7, 85f7], [866a, 866a], [8700, 8700], [883e, 883e], [8853, 8853],
    [88cb, 88cb], [8961, 8961], [8b36, 8b36], [8c4e, 8c4e], [8c6b, 8c6b],
    [8d16, 8d16], [8dfe, 8dfe], [8ed7, 8ed7], [8f38, 8f38], [8ff0, 8ff0],
    [900f, 900f], [9103, 9103], [91ce, 91ce], [9265, 9265], [9330, 9330],
    [93e3, 93e3], [9432, 9432], [964e, 964e], [9664, 9664], [9683, 9683],
    [9b9b, 9b9b], [9d90, 9d90], [9df8, 9df8], [9e00, 9e00], [9ecd, 9ecd],
    [9f20, 9f20], [202aa, 202aa], [2040a, 2040a], [20627, 20627],
    [2064e, 2064e], [2099c, 2099c], [20c8c, 20c8c], [20fa2, 20fa2],
    [210a1, 210a1], [2128d, 2128d], [21440, 21440], [21492, 21492],
    [2152a, 2152a], [218c8, 218c8], [2193d, 2193d], [2199b, 2199b],
    [219d4, 219d4], [222c2, 222c2], [227a3, 227a3], [2282b, 2282b],
    [229c7, 229c7], [2303b, 2303b], [2325b, 2325b], [233d7, 233d7],
    [2392f, 2392f], [23c3f, 23c3f], [23eda, 23eda], [24353, 24353],
    [2455f, 2455f], [245ea, 245ea], [24637, 24637], [24789, 24789],
    [24c50, 24c50], [24d19, 24d19], [24ec3, 24ec3], [2531a, 2531a],
    [2535d, 2535d], [25783, 25783], [258cb, 258cb], [25cd5, 25cd5],
    [25fc7, 25fc7], [26237, 26237], [26344, 26344], [26423, 26423],
    [264b6, 264b6], [26826, 26826], [26902, 26902], [26d95, 26d95],
    [26e97, 26e97], [26eaa, 26eaa], [2707f, 2707f], [27114, 27114],
    [271dd, 271dd], [272a0, 272a0], [27453, 27453], [27491, 27491],
    [275f1, 275f1], [27780, 27780], [277ab, 277ab], [27823, 27823],
    [27f2f, 27f2f], [28040, 28040], [28152, 28152], [28526, 28526],
    [286ed, 286ed], [28d9d, 28d9d], [28dd9, 28dd9], [28f49, 28f49],
    [296c5, 296c5], [298bb, 298bb], [29a8d, 29a8d], [29cc5, 29cc5],
    [29dcc, 29dcc], [2a170, 2a170], [2a336, 2a336], [2a427, 2a427]**/


    namespace {
    const static UnicodeSet::run_t __shu_Set_runs[] = {
    {Empty, 418}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 19}, {Mixed, 4}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 9}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 7}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 3},
    {Empty, 9}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 8}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 4},
    {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 28}, {Mixed, 2}, {Empty, 17},
    {Mixed, 1}, {Empty, 5}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 16}, {Mixed, 3}, {Empty, 39}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2843}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 16}, {Mixed, 2}, {Empty, 25}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 71}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 55},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 52}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 29406}};
    const static UnicodeSet::bitquad_t  __shu_Set_quads[] = {
    0x00010000, 0x00100000, 0x00020000, 0x00010000, 0x00008000, 0x20000000,
    0x02000000, 0x00004000, 0x00080000, 0x00000004, 0x00400000, 0x00000004,
    0x00000002, 0x80000000, 0x00000002, 0x00000002, 0x40000000, 0x00001000,
    0x00000001, 0x00000010, 0x02000000, 0x00000400, 0x00400000, 0x00000200,
    0x10000000, 0x40000000, 0x02000000, 0x00020000, 0x02000000, 0x00010000,
    0x01000000, 0x00000040, 0x00400000, 0x00008000, 0x00200000, 0x00000400,
    0x00100000, 0x00010000, 0x00004000, 0x20000000, 0x40000000, 0x00000020,
    0x20000000, 0x00400000, 0x00001000, 0x00004000, 0x00010000, 0x00801000,
    0x00001000, 0x00400000, 0x00001000, 0x00800000, 0x00200000, 0x00000040,
    0x00002000, 0x00040000, 0x00040100, 0x00080000, 0x00000010, 0x00000010,
    0x01000000, 0x00028000, 0x02000000, 0x01000000, 0x00028000, 0x80000000,
    0x11000000, 0x00080000, 0x40000000, 0x02000000, 0x40000000, 0x00000400,
    0x00080000, 0x02000000, 0x00000001, 0x00002000, 0x00020000, 0x00020000,
    0x00020000, 0x00008000, 0x08000000, 0x00002000, 0x00400000, 0x00000004,
    0x80000000, 0x02000000, 0x02000000, 0x00008800, 0x02000000, 0x00000800,
    0x00001000, 0x00100000, 0x00080000, 0x00200000, 0x00000200, 0x00000001,
    0x00040000, 0x08000000, 0x00000080, 0x00040000, 0x00800000, 0x10000000,
    0x20000000, 0x00000002, 0x00000008, 0x00001000, 0x00008020, 0x00800400,
    0x00000400, 0x00000001, 0x40000000, 0x00080000, 0x00000800, 0x00000002,
    0x00400000, 0x00004000, 0x00000800, 0x00400000, 0x40000000, 0x00800000,
    0x01000000, 0x00010000, 0x00008000, 0x00000008, 0x00004000, 0x00000020,
    0x00010000, 0x00000008, 0x00040000, 0x00004000, 0x00000010, 0x00000008,
    0x08000000, 0x00010000, 0x01000000, 0x00000001, 0x00002000, 0x00000001,
    0x00000400, 0x00000400, 0x00000080, 0x00004000, 0x10000000, 0x00001000,
    0x00000004, 0x00000002, 0x00002000, 0x00000001, 0x00040000, 0x00000400,
    0x00000100, 0x20000000, 0x08000000, 0x00100000, 0x00000004, 0x00000008,
    0x00000800, 0x00000080, 0x08000000, 0x08000000, 0x00800000, 0x00008000,
    0x80000000, 0x04000000, 0x00080000, 0x80000000, 0x00000400, 0x00800000,
    0x00000200, 0x00010000, 0x02000000, 0x00000008, 0x04000000, 0x20000000,
    0x00000008, 0x00000800, 0x00200000, 0x00000080, 0x00800000, 0x00000010,
    0x00000008, 0x00400000, 0x00000040, 0x00000004, 0x00200000, 0x00800000,
    0x00000400, 0x80000000, 0x00100000, 0x20000000, 0x00000001, 0x00080000,
    0x00020000, 0x00020000, 0x00000001, 0x00000800, 0x00000008, 0x00008000,
    0x00000001, 0x00040000, 0x00000040, 0x00002000, 0x20000000, 0x02000000,
    0x00000200, 0x00000020, 0x08000000, 0x00002000, 0x00000020, 0x00001000,
    0x00010000, 0x00400000, 0x00000080};
    }

    const static UnicodeSet shu_Set{const_cast<UnicodeSet::run_t *>(__shu_Set_runs), 365, 0, const_cast<UnicodeSet::bitquad_t *>(__shu_Set_quads), 213, 0};

    /** Code Point Ranges for shen
    [3457, 3457], [3565, 3565], [369e, 369e], [36a8, 36a8], [372a, 372a],
    [3972, 3972], [3bb1, 3bb1], [3c02, 3c02], [3c2e, 3c2e], [3d92, 3d92],
    [3f95, 3f95], [4178, 4178], [4ad6, 4ad6], [4bc2, 4bc2], [4c20, 4c20],
    [4c3c, 4c3c], [4ec0, 4ec0], [4f38, 4f38], [4f81, 4f81], [4fba, 4fba],
    [4fe1, 4fe1], [515f, 515f], [53c3, 53c3], [5432, 5432], [547b, 547b],
    [54c2, 54c2], [5607, 5607], [59bd, 59bd], [59fa, 59fa], [5a20, 5a20],
    [5ac0, 5ac0], [5b38, 5b38], [5be9, 5be9], [5c7e, 5c7e], [5cf7, 5cf7],
    [5e53, 5e53], [5f1e, 5f1e], [614e, 614e], [625f, 625f], [628c, 628c],
    [62bb, 62bb], [6437, 6437], [6552, 6552], [66cb, 66cb], [66d1, 66d1],
    [67db, 67db], [68ef, 68ef], [68fd, 68fd], [6939, 6939], [69ee, 69ee],
    [6c20, 6c20], [6c88, 6c88], [6df0, 6df1], [6e5b, 6e5b], [6ef2, 6ef2],
    [700b, 700b], [71ca, 71ca], [73c5, 73c5], [751a, 751a], [7521, 7521],
    [7527, 7527], [7533, 7533], [762e, 762e], [7712, 7712], [778b, 778b],
    [77ab, 77ab], [77e7, 77e7], [7837, 7837], [795e, 795e], [7973, 7973],
    [7a7c, 7a7c], [7c78, 7c78], [7d33, 7d33], [7d9d, 7d9d], [7f67, 7f67],
    [80c2, 80c2], [8124, 8124], [814e, 814e], [8398, 8398], [845a, 845a],
    [8460, 8460], [8518, 8518], [8593, 8593], [8703, 8704], [88d1, 88d1],
    [89be, 89be], [8a20, 8a20], [8a37, 8a37], [8a75, 8a75], [8ad7, 8ad7],
    [8b85, 8b85], [8eab, 8eab], [90a5, 90a5], [926e, 926e], [92e0, 92e0],
    [9707, 9707], [9823, 9823], [99ea, 99ea], [9b6b, 9b6b], [9bc5, 9bc5],
    [9c3a, 9c3a], [9d62, 9d62], [9eee, 9eee], [200a7, 200a7],
    [200eb, 200eb], [205ff, 205ff], [20606, 20606], [20edd, 20edd],
    [215ac, 215ac], [21f2c, 21f2c], [22207, 22207], [2222f, 2222f],
    [22296, 22296], [222b2, 222b2], [223ce, 223ce], [223e6, 223e6],
    [2260a, 2260a], [22e19, 22e19], [230f5, 230f5], [231d7, 231d7],
    [23517, 23517], [23618, 23618], [23632, 23632], [23fc7, 23fc7],
    [243d7, 243d7], [2454a, 2454a], [24db4, 24db4], [251a3, 251a3],
    [253d6, 253d6], [2594d, 2594d], [2597f, 2597f], [25b10, 25b10],
    [25cf1, 25cf1], [25e2c, 25e2c], [26300, 26300], [26439, 26439],
    [2657d, 2657d], [2670a, 2670a], [2671c, 2671c], [26e02, 26e02],
    [26e2f, 26e2f], [26eb7, 26eb7], [2702f, 2702f], [278b9, 278b9],
    [27d6c, 27d6c], [28298, 28298], [2840d, 2840d], [28414, 28415],
    [28750, 28750], [287b2, 287b2], [28d10, 28d10], [29168, 29168],
    [2927c, 2927c], [29d87, 29d87], [29eb5, 29eb5]**/


    namespace {
    const static UnicodeSet::run_t __shen_Set_runs[] = {
    {Empty, 418}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 10},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 74}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 11}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 17}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 2829}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 39}, {Mixed, 2}, {Empty, 69}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 75}, {Mixed, 1}, {Empty, 22},
    {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 8}, {Mixed, 2}, {Empty, 16},
    {Mixed, 1}, {Empty, 63}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 7}, {Mixed, 2},
    {Empty, 76}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 43}, {Mixed, 2}, {Empty, 12},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 55}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 67}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 88}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 29450}};
    const static UnicodeSet::bitquad_t  __shen_Set_quads[] = {
    0x00800000, 0x00000020, 0x40000000, 0x00000100, 0x00000400, 0x00040000,
    0x00020000, 0x00000004, 0x00004000, 0x00040000, 0x00200000, 0x01000000,
    0x00400000, 0x00000004, 0x10000001, 0x00000001, 0x01000000, 0x00000002,
    0x04000000, 0x00000002, 0x80000000, 0x00000008, 0x00040000, 0x08000000,
    0x00000004, 0x00000080, 0x20000000, 0x04000000, 0x00000001, 0x00000001,
    0x01000000, 0x00000200, 0x40000000, 0x00800000, 0x00080000, 0x40000000,
    0x00004000, 0x80000000, 0x00001000, 0x08000000, 0x00800000, 0x00040000,
    0x00020800, 0x08000000, 0x20008000, 0x02000000, 0x00004000, 0x00000001,
    0x00000100, 0x00030000, 0x08000000, 0x00040000, 0x00000800, 0x00000400,
    0x00000020, 0x04000000, 0x00080082, 0x00004000, 0x00040000, 0x00000800,
    0x00000800, 0x00000080, 0x00800000, 0x40000000, 0x00080000, 0x10000000,
    0x01000000, 0x00080000, 0x20000000, 0x00000080, 0x00000004, 0x00000010,
    0x00004000, 0x01000000, 0x04000000, 0x00000001, 0x01000000, 0x00080000,
    0x00000018, 0x00020000, 0x40000000, 0x00800001, 0x00200000, 0x00800000,
    0x00000020, 0x00000800, 0x00000020, 0x00004000, 0x00000001, 0x00000080,
    0x00000008, 0x00000400, 0x00000800, 0x00000020, 0x04000000, 0x00000004,
    0x00004000, 0x00000080, 0x00000800, 0x80000000, 0x00000040, 0x20000000,
    0x00001000, 0x00001000, 0x00000080, 0x00008000, 0x00400000, 0x00040000,
    0x00004000, 0x00000040, 0x00000400, 0x02000000, 0x00200000, 0x00800000,
    0x00800000, 0x01000000, 0x00040000, 0x00000080, 0x00800000, 0x00000400,
    0x00100000, 0x00000008, 0x00400000, 0x00002000, 0x80000000, 0x00010000,
    0x00020000, 0x00001000, 0x00000001, 0x02000000, 0x20000000, 0x10000400,
    0x00000004, 0x00008000, 0x00800000, 0x00008000, 0x02000000, 0x00001000,
    0x01000000, 0x00302000, 0x00010000, 0x00040000, 0x00010000, 0x00000100,
    0x10000000, 0x00000080, 0x00200000};
    }

    const static UnicodeSet shen_Set{const_cast<UnicodeSet::run_t *>(__shen_Set_runs), 263, 0, const_cast<UnicodeSet::bitquad_t *>(__shen_Set_quads), 147, 0};

    /** Code Point Ranges for die
    [3459, 3459], [35e7, 35e7], [3934, 3934], [3948, 3948], [3985, 3985],
    [39b6, 39b6], [3a78, 3a78], [3b6f, 3b6f], [3cb2, 3cb3], [3ee1, 3ee1],
    [43f2, 43f2], [481f, 481f], [4a5e, 4a5e], [4a93, 4a93], [4ad5, 4ad5],
    [4cc0, 4cc0], [4d11, 4d11], [4f5a, 4f5a], [54a5, 54a5], [54c6, 54c6],
    [54cb, 54cb], [5551, 5551], [558b, 558b], [57a4, 57a4], [581e, 581e],
    [5ccc, 5ccc], [5d3c, 5d3c], [5d7d, 5d7d], [6022, 6022], [604e, 604e],
    [60f5, 60f5], [621c, 621c], [6303, 6303], [6315, 6315], [63f2, 63f2],
    [6633, 6633], [67e3, 67e3], [696a, 696a], [69e2, 69e2], [6b9c, 6b9c],
    [6cc6, 6cc6], [6d89, 6d89], [6e2b, 6e2b], [7239, 7239], [7243, 7243],
    [7252, 7252], [74de, 74de], [758a, 758a], [7723, 7723], [7730, 7730],
    [789f, 789f], [7a92, 7a92], [7d70, 7d70], [800b, 800b], [80c5, 80c5],
    [81f3, 81f3], [81f7, 81f7], [8253, 8253], [82f5, 82f5], [8728, 8728],
    [8776, 8776], [87b2, 87b2], [890b, 890b], [8936, 8936], [893a, 893a],
    [8a44, 8a44], [8adc, 8adc], [8d83, 8d83], [8dcc, 8dcc], [8dd5, 8dd5],
    [8dee, 8dee], [8e22, 8e22], [8e40, 8e40], [8e5b, 8e5b], [8efc, 8efc],
    [8fed, 8fed], [9435, 9435], [957b, 957b], [97a2, 97a2], [9c08, 9c08],
    [9c28, 9c28], [20157, 20157], [20199, 20199], [205db, 205db],
    [205e8, 205e8], [2082f, 2082f], [20cb7, 20cb7], [21165, 21165],
    [211d3, 211d3], [21590, 21590], [21c77, 21c77], [21e6d, 21e6d],
    [21e91, 21e91], [21f04, 21f04], [22386, 22386], [22728, 22728],
    [22b34, 22b34], [22cbc, 22cbc], [2320d, 2320d], [236fb, 236fb],
    [2385f, 2385f], [239c8, 239c8], [23a02, 23a02], [23d8f, 23d8f],
    [24592, 24592], [245e8, 245e8], [2468a, 2468a], [24d0d, 24d0d],
    [25216, 25216], [2527a, 2527a], [25447, 25447], [2594c, 2594c],
    [25dba, 25dba], [25dd5, 25dd5], [2605b, 2605c], [26114, 26114],
    [26205, 26205], [27371, 27371], [2810c, 2810c], [28208, 28208],
    [28401, 28401], [284ca, 284ca], [28b53, 28b53], [28cfa, 28cfa],
    [28d17, 28d17], [28ed7, 28ed7], [28fa4, 28fa4], [292de, 292de],
    [29ef5, 29ef5], [2a012, 2a012], [2a467, 2a467]**/


    namespace {
    const static UnicodeSet::run_t __die_Set_runs[] = {
    {Empty, 418}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 25},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 42}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 31}, {Mixed, 2},
    {Empty, 19}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 34}, {Mixed, 2}, {Empty, 2856}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 33}, {Mixed, 2}, {Empty, 17}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 15}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 63},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 51},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 34},
    {Mixed, 2}, {Empty, 19}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 138}, {Mixed, 1}, {Empty, 108}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 51}, {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 13},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 96}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 29404}};
    const static UnicodeSet::bitquad_t  __die_Set_quads[] = {
    0x02000000, 0x00000080, 0x00100000, 0x00000100, 0x00000020, 0x00400000,
    0x01000000, 0x00008000, 0x000c0000, 0x00000002, 0x00040000, 0x80000000,
    0x40000000, 0x00080000, 0x00200000, 0x00000001, 0x00020000, 0x04000000,
    0x00000020, 0x00000840, 0x00020000, 0x00000800, 0x00000010, 0x40000000,
    0x00001000, 0x10000000, 0x20000000, 0x00000004, 0x00004000, 0x00200000,
    0x10000000, 0x00200008, 0x00040000, 0x00080000, 0x00000008, 0x00000400,
    0x00000004, 0x10000000, 0x00000040, 0x00000200, 0x00000800, 0x02000000,
    0x00040008, 0x40000000, 0x00000400, 0x00010008, 0x80000000, 0x00040000,
    0x00010000, 0x00000800, 0x00000020, 0x00880000, 0x00080000, 0x00200000,
    0x00000100, 0x00400000, 0x00040000, 0x00000800, 0x04400000, 0x00000010,
    0x10000000, 0x00000008, 0x00201000, 0x00004000, 0x00000004, 0x08000001,
    0x10000000, 0x00002000, 0x00200000, 0x08000000, 0x00000004, 0x00000100,
    0x00000100, 0x00800000, 0x02000000, 0x08000000, 0x00000100, 0x00008000,
    0x00800000, 0x00000020, 0x00080000, 0x00010000, 0x00800000, 0x00002000,
    0x00020000, 0x00000010, 0x00000040, 0x00000100, 0x00100000, 0x10000000,
    0x00002000, 0x08000000, 0x80000000, 0x00000100, 0x00000004, 0x00008000,
    0x00040000, 0x00000100, 0x00000400, 0x00002000, 0x00400000, 0x04000000,
    0x00000080, 0x00001000, 0x04000000, 0x00200000, 0x18000000, 0x00100000,
    0x00000020, 0x00020000, 0x00001000, 0x00000100, 0x00000002, 0x00000400,
    0x00080000, 0x04000000, 0x00800000, 0x00800000, 0x00000010, 0x40000000,
    0x00200000, 0x00040000, 0x00000080};
    }

    const static UnicodeSet die_Set{const_cast<UnicodeSet::run_t *>(__die_Set_runs), 221, 0, const_cast<UnicodeSet::bitquad_t *>(__die_Set_quads), 123, 0};

    /** Code Point Ranges for nuo
    [345a, 345a], [352e, 352e], [35a0, 35a0], [36c2, 36c2], [3845, 3845],
    [3c19, 3c19], [41d4, 41d4], [43a0, 43a0], [46a5, 46a5], [513a, 513a],
    [5450, 5450], [54ea, 54ea], [558f, 558f], [5827, 5827], [5a1c, 5a1c],
    [5aa0, 5aa0], [61e6, 61e6], [632a, 632a], [6389, 6389], [63bf, 63bf],
    [6419, 6419], [6426, 6426], [689b, 689b], [6992, 6992], [6a60, 6a60],
    [6bed, 6bed], [6fe1, 6fe1], [7cd1, 7cd1], [7cef, 7cef], [800e, 800e],
    [88b2, 88b3], [8afe, 8afe], [8e43, 8e43], [903d, 903d], [90a3, 90a3],
    [90cd, 90cd], [9369, 9369], [96e3, 96e3], [9700, 9700], [20e31, 20e31],
    [20e48, 20e48], [21594, 21594], [215ab, 215ab], [21b25, 21b25],
    [21fca, 21fca], [2272a, 2272a], [22c1c, 22c1c], [22fb2, 22fb2],
    [230fd, 230fd], [2319a, 2319a], [2461f, 2461f], [2547d, 2547d],
    [25efe, 25efe], [26028, 26028], [2608d, 2608d], [264e2, 264e2],
    [26843, 26843], [26a5c, 26a5c], [278da, 278da], [278fa, 278fa],
    [2804c, 2804c], [283ad, 283ad], [2923a, 2923a], [29d13, 29d13],
    [29dc1, 29dc1]**/


    namespace {
    const static UnicodeSet::run_t __nuo_Set_runs[] = {
    {Empty, 418}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 83}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 34}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 102}, {Mixed, 2}, {Empty, 24},
    {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 20}, {Mixed, 1}, {Empty, 27}, {Mixed, 2},
    {Empty, 3000}, {Mixed, 2}, {Empty, 57}, {Mixed, 2}, {Empty, 43},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 58}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 163}, {Mixed, 1},
    {Empty, 114}, {Mixed, 1}, {Empty, 83}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 115},
    {Mixed, 2}, {Empty, 58}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 115}, {Mixed, 1}, {Empty, 86}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 29457}};
    const static UnicodeSet::bitquad_t  __nuo_Set_quads[] = {
    0x04000000, 0x00004000, 0x00000001, 0x00000004, 0x00000020, 0x02000000,
    0x00100000, 0x00000001, 0x00000020, 0x04000000, 0x00010000, 0x00000400,
    0x00008000, 0x00000080, 0x10000000, 0x00000001, 0x00000040, 0x00000400,
    0x00000200, 0x80000000, 0x02000000, 0x00000040, 0x08000000, 0x00040000,
    0x00000001, 0x00002000, 0x00000002, 0x00020000, 0x00008000, 0x00004000,
    0x000c0000, 0x40000000, 0x00000008, 0x20000000, 0x00000008, 0x00002000,
    0x00000200, 0x00000008, 0x00000001, 0x00020000, 0x00000100, 0x00100000,
    0x00000800, 0x00000020, 0x00000400, 0x00000400, 0x10000000, 0x00040000,
    0x20000000, 0x04000000, 0x80000000, 0x20000000, 0x40000000, 0x00000100,
    0x00002000, 0x00000004, 0x00000008, 0x10000000, 0x04000000, 0x04000000,
    0x00001000, 0x00002000, 0x04000000, 0x00080000, 0x00000002};
    }

    const static UnicodeSet nuo_Set{const_cast<UnicodeSet::run_t *>(__nuo_Set_runs), 115, 0, const_cast<UnicodeSet::bitquad_t *>(__nuo_Set_quads), 65, 0};

    /** Code Point Ranges for chi
    [345c, 345c], [34fc, 34fc], [34fe, 34fe], [37b4, 37b4], [3881, 3881],
    [388b, 388b], [3961, 3961], [3a7d, 3a7d], [3b9b, 3b9b], [3c1e, 3c1e],
    [3db4, 3db4], [3df0, 3df0], [3e88, 3e88], [3f5a, 3f5a], [3fb9, 3fb9],
    [4038, 4038], [411c, 411c], [41ea, 41ea], [42bc, 42bc], [43e7, 43e7],
    [4709, 4709], [47be, 47be], [47f7, 47f7], [4820, 4820], [4932, 4932],
    [49dd, 49dd], [4aa7, 4aa7], [4c21, 4c21], [4cf5, 4cf5], [4d94, 4d94],
    [4db5, 4db5], [4f41, 4f41], [4f88, 4f88], [4f99, 4f99], [4fff, 4fff],
    [50ba, 50ba], [525f, 525f], [52d1, 52d1], [5319, 5319], [5359, 5359],
    [5376, 5376], [53fa, 53fa], [5403, 5403], [544e, 544e], [546c, 546c],
    [5479, 5479], [54c6, 54c6], [54e7, 54e7], [557b, 557b], [559c, 559c],
    [55ab, 55ab], [55e4, 55e4], [562f, 562f], [566d, 566d], [577b, 577b],
    [5791, 5791], [5880, 5880], [5953, 5953], [5979, 5979], [5ab8, 5ab8],
    [5c3a, 5c3a], [5cbb, 5cbb], [5f1b, 5f1b], [5f73, 5f73], [5fb2, 5fb2],
    [605c, 605c], [6065, 6065], [6157, 6157], [6178, 6178], [618f, 618f],
    [61d8, 61d8], [6261, 6261], [62ac, 62ac], [62b6, 62b6], [62c6, 62c6],
    [62d6, 62d6], [62f8, 62f8], [6301, 6301], [6347, 6347], [63d0, 63d0],
    [640b, 640b], [645b, 645b], [6474, 6474], [6555, 6555], [65a5, 65a5],
    [6758, 6758], [67c5, 67c5], [67e2, 67e2], [6a06, 6a06], [6b3c, 6b3c],
    [6b6d, 6b6d], [6c56, 6c56], [6c60, 6c60], [6cb1, 6cb1], [6cb6, 6cb6],
    [6cbb, 6cbb], [6cdc, 6cdc], [6e41, 6e41], [6eef, 6eef], [6f26, 6f26],
    [71be, 71be], [72cb, 72cb], [74fb, 74fb], [75d3, 75d3], [75f8, 75f8],
    [7608, 7608], [761b, 761b], [7661, 7661], [7719, 7719], [7735, 7735],
    [779d, 779d], [7947, 7947], [79bb, 79bb], [79fb, 79fb], [7a49, 7a49],
    [7b1e, 7b1e], [7b88, 7b88], [7b8e, 7b8e], [7bea, 7bea], [7d15, 7d15],
    [7d7a, 7d7a], [7fc4, 7fc5], [7fe8, 7fe8], [801b, 801b], [80dd, 80dd],
    [80e3, 80e3], [80f5, 80f5], [812a, 812a], [815f, 815f], [82aa, 82aa],
    [830c, 830c], [832c, 832c], [834e, 834e], [8389, 8389], [83ed, 83ed],
    [8687, 8687], [86a9, 86a9], [86b3, 86b3], [86c7, 86c7], [876d, 876d],
    [87ad, 87ad], [88b2, 88b3], [892b, 892b], [8a35, 8a35], [8a80, 8a80],
    [8a83, 8a83], [8aba, 8aba], [8b18, 8b18], [8b3b, 8b3b], [8c49, 8c49],
    [8cbe, 8cbe], [8d64, 8d64], [8d7f, 8d7f], [8d8d, 8d8d], [8d90, 8d90],
    [8da9, 8da9], [8dc5, 8dc5], [8de2, 8de2], [8dee, 8dee], [8e05, 8e05],
    [8e1f, 8e1f], [8e36, 8e36], [8ee7, 8ee7], [8fe1, 8fe1], [8fe3, 8fe3],
    [905f, 905f], [906b, 906b], [9072, 9072], [908c, 908c], [90d7, 90d7],
    [9253, 9253], [9279, 9279], [9290, 9290], [9349, 9349], [96e2, 96e2],
    [96f4, 96f4], [98ed, 98ed], [98fe, 98fe], [994e, 994e], [99b3, 99b3],
    [9a3a, 9a3a], [9a6a, 9a6a], [9b51, 9b51], [9cf7, 9cf7], [9d1f, 9d1f],
    [9d63, 9d63], [9d92, 9d92], [9d97, 9d97], [9dd8, 9dd8], [9ed0, 9ed0],
    [9f52, 9f52], [9f5d, 9f5d], [9f63, 9f63], [206d4, 206d4],
    [20768, 20768], [20784, 20784], [207a9, 207a9], [209da, 209da],
    [209f5, 209f5], [20a7a, 20a7a], [20b4b, 20b4b], [20b9f, 20b9f],
    [20edf, 20edf], [21099, 21099], [2126a, 2126a], [2131e, 2131e],
    [2138d, 2138d], [215b3, 215b3], [216a8, 216a8], [218c0, 218c0],
    [21ced, 21ced], [21f01, 21f01], [2209d, 2209d], [221d5, 221d5],
    [221db, 221db], [224ce, 224ce], [2250a, 2250a], [22733, 22733],
    [228d5, 228d5], [22a12, 22a12], [22c5f, 22c5f], [22d28, 22d28],
    [2319a, 2319a], [23244, 23244], [23403, 23403], [23670, 23670],
    [236a9, 236a9], [238f7, 238f7], [2390c, 2390c], [23929, 23929],
    [23c8b, 23c8b], [23c91, 23c91], [23e61, 23e61], [24214, 24214],
    [247c6, 247c6], [2484f, 2484f], [24862, 24862], [24c20, 24c20],
    [24d6c, 24d6c], [24e2a, 24e2a], [25107, 25107], [2569a, 2569a],
    [256da, 256da], [25b58, 25b58], [25c7b, 25c7b], [2608b, 2608b],
    [261a4, 261a4], [261f2, 261f2], [2639a, 2639a], [263f8, 263f8],
    [263ff, 263ff], [26401, 26401], [26409, 26409], [26461, 26461],
    [2652b, 2652b], [2662a, 2662a], [26646, 26646], [267b2, 267b2],
    [26938, 26938], [2694a, 2694a], [26c70, 26c70], [26cda, 26cda],
    [26d5f, 26d5f], [27024, 27024], [27240, 27240], [272d7, 272d7],
    [273a8, 273a8], [276e7, 276e7], [276fa, 276fa], [2782b, 2782b],
    [2790d, 2790d], [27a5a, 27a5a], [27a74, 27a74], [27a7c, 27a7c],
    [27aa1, 27aa1], [27b5f, 27b5f], [27c32, 27c32], [27d01, 27d01],
    [27e8f, 27e8f], [27ea0, 27ea0], [27ea7, 27ea7], [27ebf, 27ebf],
    [27f2a, 27f2a], [280b0, 280b0], [28460, 28460], [284ac, 284ac],
    [28524, 28524], [2858e, 2858e], [2863e, 2863e], [289f3, 289f3],
    [28a2c, 28a2c], [28a32, 28a32], [28f9b, 28f9b], [29215, 29215],
    [2926c, 2926c], [29490, 29490], [29689, 29689], [29916, 29916],
    [29972, 29972], [29cf2, 29cf2], [29d85, 29d85], [29de7, 29de7],
    [29f95, 29f95], [29fea, 29fea], [2a026, 2a026], [2a14d, 2a14d],
    [2a159, 2a159], [2a1b5, 2a1b5], [2a257, 2a257], [2a32b, 2a32b],
    [2a339, 2a339], [2a3d0, 2a3d0], [2a3f8, 2a3f8]**/


    namespace {
    const static UnicodeSet::run_t __chi_Set_runs[] = {
    {Empty, 418}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 3}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 7},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 6},
    {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 4}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 16}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 11}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 6}, {Mixed, 3},
    {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 18}, {Mixed, 3}, {Empty, 5}, {Mixed, 2}, {Empty, 1}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 20}, {Mixed, 3}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 7},
    {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 3},
    {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 3}, {Empty, 5}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 2874}, {Mixed, 1}, {Empty, 4}, {Mixed, 3},
    {Empty, 16}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 17},
    {Mixed, 3}, {Empty, 26}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 29}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 10}, {Mixed, 1},
    {Empty, 11}, {Mixed, 2}, {Empty, 24}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 9}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 29408}};
    const static UnicodeSet::bitquad_t  __chi_Set_quads[] = {
    0x10000000, 0x50000000, 0x00100000, 0x00000802, 0x00000002, 0x20000000,
    0x08000000, 0x40000000, 0x00100000, 0x00010000, 0x00000100, 0x04000000,
    0x02000000, 0x01000000, 0x10000000, 0x00000400, 0x10000000, 0x00000080,
    0x00000200, 0x40000000, 0x00800000, 0x00000001, 0x00040000, 0x20000000,
    0x00000080, 0x00000002, 0x00200000, 0x00100000, 0x00200000, 0x00000002,
    0x02000100, 0x80000000, 0x04000000, 0x80000000, 0x00020000, 0x02000000,
    0x02000000, 0x00400000, 0x04000000, 0x00000008, 0x00004000, 0x02001000,
    0x00000040, 0x00000080, 0x08000000, 0x10000000, 0x00000800, 0x00000010,
    0x00008000, 0x00002000, 0x08000000, 0x00020000, 0x00000001, 0x00080000,
    0x02000000, 0x01000000, 0x04000000, 0x08000000, 0x08000000, 0x00080000,
    0x00040000, 0x10000000, 0x00000020, 0x00800000, 0x01000000, 0x00008000,
    0x01000000, 0x00000002, 0x00401000, 0x00400040, 0x01000000, 0x00000002,
    0x00000080, 0x00010000, 0x00000800, 0x08000000, 0x00100000, 0x00200000,
    0x00000020, 0x01000000, 0x00000020, 0x00000004, 0x00000040, 0x10000000,
    0x00002000, 0x00400000, 0x00000001, 0x08420000, 0x10000000, 0x00000002,
    0x00008000, 0x00000040, 0x40000000, 0x00000800, 0x08000000, 0x00080000,
    0x01000000, 0x08000100, 0x00000002, 0x02000000, 0x00200000, 0x20000000,
    0x00000080, 0x08000000, 0x08000000, 0x00000200, 0x40000000, 0x00004100,
    0x00000400, 0x00200000, 0x04000000, 0x00000030, 0x00000100, 0x08000000,
    0x20000000, 0x00200008, 0x00000400, 0x80000000, 0x00000400, 0x00001000,
    0x00001000, 0x00004000, 0x00000200, 0x00002000, 0x00000080, 0x00080200,
    0x00000080, 0x00002000, 0x00002000, 0x000c0000, 0x00000800, 0x00200000,
    0x00000009, 0x04000000, 0x01000000, 0x08000000, 0x00000200, 0x40000000,
    0x80000010, 0x00012000, 0x00000200, 0x00000020, 0x00004004, 0x80000020,
    0x00400000, 0x00000080, 0x0000000a, 0x80000000, 0x00040800, 0x00001000,
    0x00800000, 0x00080000, 0x02000000, 0x00010000, 0x00000200, 0x00100004,
    0x40002000, 0x00004000, 0x00080000, 0x04000000, 0x00000400, 0x00020000,
    0x00800000, 0x80000000, 0x00000008, 0x00840000, 0x01000000, 0x00010000,
    0x20040000, 0x00000008, 0x00100000, 0x00000100, 0x00000010, 0x00000200,
    0x04000000, 0x00200000, 0x04000000, 0x00000800, 0x80000000, 0x80000000,
    0x02000000, 0x00000400, 0x40000000, 0x00002000, 0x00080000, 0x00000100,
    0x00000001, 0x00002000, 0x00000002, 0x20000000, 0x08200000, 0x00004000,
    0x00000400, 0x00080000, 0x00200000, 0x00040000, 0x80000000, 0x00000100,
    0x04000000, 0x00000010, 0x00000008, 0x00010000, 0x00000200, 0x00800000,
    0x00001000, 0x00000200, 0x00020800, 0x00000002, 0x00100000, 0x00000040,
    0x00008000, 0x00000004, 0x00000001, 0x00001000, 0x00000400, 0x00000080,
    0x04000000, 0x04000000, 0x01000000, 0x08000000, 0x00000800, 0x00000010,
    0x00040000, 0x04000000, 0x81000000, 0x00000202, 0x00000002, 0x00000800,
    0x00000400, 0x00000040, 0x00040000, 0x01000000, 0x00000400, 0x00010000,
    0x04000000, 0x80000000, 0x00000010, 0x00000001, 0x00800000, 0x00000100,
    0x04000080, 0x00000800, 0x00002000, 0x04000000, 0x10100000, 0x00000002,
    0x80000000, 0x00040000, 0x00000002, 0x00008000, 0x80000081, 0x00000400,
    0x00010000, 0x00000001, 0x00001000, 0x00000010, 0x00004000, 0x40000000,
    0x00080000, 0x00041000, 0x08000000, 0x00200000, 0x00001000, 0x00010000,
    0x00000200, 0x00400000, 0x00040000, 0x00040000, 0x00000020, 0x00000080,
    0x00200000, 0x00000400, 0x00000040, 0x02002000, 0x00200000, 0x00800000,
    0x02000800, 0x00010000, 0x01000000};
    }

    const static UnicodeSet chi_Set{const_cast<UnicodeSet::run_t *>(__chi_Set_runs), 445, 0, const_cast<UnicodeSet::bitquad_t *>(__chi_Set_quads), 279, 0};

    /** Code Point Ranges for ying
    [345e, 345e], [3572, 3572], [3855, 3855], [388d, 388d], [3bcb, 3bcb],
    [3c9f, 3c9f], [3d6c, 3d6c], [3e75, 3e75], [3fd8, 3fd8], [4034, 4034],
    [4050, 4050], [405d, 405d], [40f7, 40f7], [41e6, 41e6], [4294, 4294],
    [42fc, 42fc], [4449, 4449], [444d, 444d], [4566, 4566], [466c, 466c],
    [4686, 4686], [48d0, 48d0], [491d, 491d], [4930, 4930], [49ab, 49ab],
    [49f9, 49f9], [4a0d, 4a0d], [4a55, 4a55], [4aaf, 4aaf], [4b2c, 4b2c],
    [4b58, 4b58], [4d0d, 4d0d], [4d74, 4d74], [4fd3, 4fd3], [50cc, 50cc],
    [54fd, 54fd], [5568, 5568], [56b6, 56b6], [584b, 584b], [5903, 5903],
    [592e, 592e], [5a96, 5a96], [5ab5, 5ab5], [5ac8, 5ac8], [5b30, 5b30],
    [5b34, 5b34], [5d64, 5d64], [5dc6, 5dc6], [5dca, 5dca], [5eee, 5eee],
    [5f71, 5f71], [61c9, 61c9], [646c, 646c], [650d, 650d], [6516, 6516],
    [65f2, 65f2], [6620, 6620], [666f, 666f], [6720, 6720], [67cd, 67cd],
    [686f, 686f], [68ac, 68ac], [6979, 6979], [6afb, 6afb], [6aff, 6aff],
    [6cc2, 6cc2], [6d67, 6d67], [6e36, 6e36], [6e8b, 6e8b], [6ece, 6ece],
    [6f41, 6f41], [6fd9, 6fda], [6ff4, 6ff4], [7005, 7005], [701b, 701b],
    [702f, 702f], [7034, 7034], [7138, 7138], [7150, 7150], [7192, 7192],
    [71df, 71df], [745b, 745b], [7469, 7469], [74d4, 74d4], [7538, 7538],
    [766d, 766d], [76c8, 76c8], [770f, 770f], [77e8, 77e8], [786c, 786c],
    [78a4, 78a4], [792f, 792f], [799c, 799c], [7a4e, 7a4e], [7c6f, 7c6f],
    [7e08, 7e08], [7e69, 7e69], [7e93, 7e93], [7f43, 7f43], [7f4c, 7f4c],
    [803a, 803a], [81a1, 81a1], [81ba, 81ba], [82f1, 82f1], [8396, 8396],
    [85c0, 85c0], [8621, 8621], [8767, 8767], [87a2, 87a2], [8805, 8805],
    [8833, 8833], [892e, 892e], [89ae, 89ae], [8b0d, 8b0d], [8ccf, 8ccf],
    [8d0f, 8d0f], [8fce, 8fce], [901e, 901e], [90e2, 90e2], [93a3, 93a3],
    [944d, 944d], [9719, 9719], [9795, 9795], [97f9, 97fa], [9834, 9834],
    [9c66, 9c66], [9da7, 9da7], [9daf, 9daf], [9df9, 9df9], [9e1a, 9e1a],
    [202b6, 202b6], [2075f, 2075f], [2081c, 2081c], [20bb3, 20bb3],
    [20e04, 20e04], [21018, 21018], [2104a, 2104a], [2109a, 2109a],
    [210c5, 210c5], [21116, 21116], [21398, 21398], [21898, 21898],
    [21ea1, 21ea1], [2210b, 2210b], [228d9, 228d9], [2294f, 2294f],
    [232cb, 232cb], [237e4, 237e4], [23935, 23935], [23c9c, 23c9c],
    [2407d, 2407d], [2430c, 2430c], [24709, 24709], [247e3, 247e3],
    [248ce, 248ce], [24b6b, 24b6b], [24e5c, 24e5c], [24e65, 24e65],
    [2533d, 2533e], [2537c, 2537c], [253ce, 253ce], [25411, 25411],
    [256bf, 256bf], [26503, 26503], [265bd, 265bd], [2675a, 2675a],
    [2687a, 2687a], [26886, 26886], [269bf, 269bf], [26a69, 26a69],
    [2714b, 2714b], [274c0, 274c0], [27544, 27544], [2754d, 2754d],
    [2789b, 2789b], [27b53, 27b53], [27b86, 27b86], [27bc0, 27bc0],
    [2835e, 2835e], [2870f, 2870f], [287d9, 287d9], [28838, 28838],
    [28a84, 28a84], [28d5b, 28d5b], [2909d, 2909d], [2912a, 2912a],
    [292f9, 292f9], [2958d, 2958d], [29611, 29611], [29ccd, 29ccd],
    [29e25, 29e25], [29e45, 29e45], [29ef7, 29ef7], [2a2b5, 2a2b5]**/


    namespace {
    const static UnicodeSet::run_t __ying_Set_runs[] = {
    {Empty, 418}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 17},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 10}, {Mixed, 3}, {Empty, 2},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 4}, {Empty, 7}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2852}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 75},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 22}, {Mixed, 2},
    {Empty, 37}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 114},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 59}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 53},
    {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 29418}};
    const static UnicodeSet::bitquad_t  __ying_Set_quads[] = {
    0x40000000, 0x00040000, 0x00200000, 0x00002000, 0x00000800, 0x80000000,
    0x00001000, 0x00200000, 0x01000000, 0x00100000, 0x20010000, 0x00800000,
    0x00000040, 0x00100000, 0x10000000, 0x00002200, 0x00000040, 0x00001000,
    0x00000040, 0x00010000, 0x20000000, 0x00010000, 0x00000800, 0x02000000,
    0x00002000, 0x00200000, 0x00008000, 0x00001000, 0x01000000, 0x00002000,
    0x00100000, 0x00080000, 0x00001000, 0x20000000, 0x00000100, 0x00400000,
    0x00000800, 0x00000008, 0x00004000, 0x00400000, 0x00200000, 0x00000100,
    0x00110000, 0x00000010, 0x00000440, 0x00004000, 0x00020000, 0x00000200,
    0x00001000, 0x00402000, 0x00040000, 0x00000001, 0x00008000, 0x00000001,
    0x00002000, 0x00008000, 0x00001000, 0x02000000, 0x88000000, 0x00000004,
    0x00000080, 0x00400000, 0x00000800, 0x00004000, 0x00000002, 0x06000000,
    0x00100000, 0x08000020, 0x00108000, 0x01000000, 0x00010000, 0x00040000,
    0x80000000, 0x08000000, 0x00000200, 0x00100000, 0x01000000, 0x00002000,
    0x00000100, 0x00008000, 0x00000100, 0x00001000, 0x00000010, 0x00008000,
    0x10000000, 0x00004000, 0x00008000, 0x00000100, 0x00000200, 0x00080000,
    0x00001008, 0x04000000, 0x04000002, 0x00020000, 0x00400000, 0x00000001,
    0x00000002, 0x00000080, 0x00000004, 0x00000020, 0x00080000, 0x00004000,
    0x00004000, 0x00002000, 0x00008000, 0x00008000, 0x00004000, 0x40000000,
    0x00000004, 0x00000008, 0x00002000, 0x02000000, 0x00200000, 0x06000000,
    0x00100000, 0x00000040, 0x00008080, 0x02000000, 0x04000000, 0x00400000,
    0x80000000, 0x10000000, 0x00080000, 0x00000010, 0x01000000, 0x00000400,
    0x04000000, 0x00000020, 0x00400000, 0x01000000, 0x01000000, 0x00000002,
    0x00000800, 0x02000000, 0x00008000, 0x00000800, 0x00000010, 0x00200000,
    0x10000000, 0x20000000, 0x00001000, 0x00000200, 0x00000008, 0x00004000,
    0x00000800, 0x10000000, 0x00000020, 0x60000000, 0x10000000, 0x00004000,
    0x00020000, 0x80000000, 0x00000008, 0x20000000, 0x04000000, 0x04000000,
    0x00000040, 0x80000000, 0x00000200, 0x00000800, 0x00000001, 0x00002010,
    0x08000000, 0x00080000, 0x00000040, 0x00000001, 0x40000000, 0x00008000,
    0x02000000, 0x01000000, 0x00000010, 0x08000000, 0x20000000, 0x00000400,
    0x02000000, 0x00002000, 0x00020000, 0x00002000, 0x00000020, 0x00000020,
    0x00800000, 0x00200000};
    }

    const static UnicodeSet ying_Set{const_cast<UnicodeSet::run_t *>(__ying_Set_runs), 327, 0, const_cast<UnicodeSet::bitquad_t *>(__ying_Set_quads), 182, 0};

    /** Code Point Ranges for beng
    [345f, 345f], [3519, 3519], [39cd, 39cd], [3c76, 3c76], [3def, 3def],
    [3f1e, 3f1e], [42fd, 42fd], [446b, 446b], [4a1c, 4a1c], [4a3b, 4a3b],
    [4a6c, 4a6c], [4b70, 4b70], [4cde, 4cde], [4f3b, 4f3b], [4ff8, 4ff8],
    [508d, 508d], [50b0, 50b0], [552a, 552a], [55d9, 55d9], [5623, 5623],
    [57c4, 57c4], [57f2, 57f2], [580b, 580b], [5874, 5874], [595f, 595f],
    [5d29, 5d29], [5d6d, 5d6d], [5e73, 5e73], [62a8, 62a8], [6412, 6412],
    [65c1, 65c1], [699c, 699c], [6cf5, 6cf5], [6f28, 6f28], [71a2, 71a2],
    [7423, 7423], [742b, 742b], [750f, 750f], [752d, 752d], [75ed, 75ed],
    [794a, 794a], [7d63, 7d63], [7e43, 7e43], [83f6, 83f6], [868c, 868c],
    [8df0, 8df0], [8e66, 8e66], [902c, 902c], [930b, 930b], [93f0, 93f0],
    [958d, 958d], [20733, 20733], [2086e, 2086e], [213be, 213be],
    [21848, 21848], [21da4, 21da4], [21f9b, 21f9b], [221b8, 221b8],
    [22241, 22241], [223f3, 223f3], [22412, 22412], [230a4, 230a4],
    [23a25, 23a25], [2467e, 2467e], [2486d, 2486d], [24aec, 24aec],
    [25002, 25002], [25597, 25597], [257a9, 257a9], [2599c, 2599c],
    [2608c, 2608c], [26148, 26148], [26777, 26777], [26e91, 26e91],
    [27451, 27451], [276ad, 276ad], [27a71, 27a71], [27ed3, 27ed3],
    [2818a, 2818a], [284c1, 284c1], [28567, 28567], [28e79, 28e79],
    [28ef1, 28ef1], [290a6, 290a6], [2928c, 2928c], [2945a, 2945a],
    [295f4, 295f4], [2a511, 2a511]**/


    namespace {
    const static UnicodeSet::run_t __beng_Set_runs[] = {
    {Empty, 418}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 44}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 35}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 3},
    {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 58}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 2956}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 89},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 100}, {Mixed, 1},
    {Empty, 75}, {Mixed, 1}, {Empty, 97}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 71}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 120},
    {Mixed, 1}, {Empty, 29399}};
    const static UnicodeSet::bitquad_t  __beng_Set_quads[] = {
    0x80000000, 0x02000000, 0x00002000, 0x00400000, 0x00008000, 0x40000000,
    0x20000000, 0x00000800, 0x10000000, 0x08000000, 0x00001000, 0x00010000,
    0x40000000, 0x08000000, 0x01000000, 0x00002000, 0x00010000, 0x00000400,
    0x02000000, 0x00000008, 0x00000010, 0x00040000, 0x00000800, 0x00100000,
    0x80000000, 0x00000200, 0x00002000, 0x00080000, 0x00000100, 0x00040000,
    0x00000002, 0x10000000, 0x00200000, 0x00000100, 0x00000004, 0x00000808,
    0x00008000, 0x00002000, 0x00002000, 0x00000400, 0x00000008, 0x00000008,
    0x00400000, 0x00001000, 0x00010000, 0x00000040, 0x00001000, 0x00000800,
    0x00010000, 0x00002000, 0x00080000, 0x00004000, 0x40000000, 0x00000100,
    0x00000010, 0x08000000, 0x01000000, 0x00000002, 0x00080000, 0x00040000,
    0x00000010, 0x00000020, 0x40000000, 0x00002000, 0x00001000, 0x00000004,
    0x00800000, 0x00000200, 0x10000000, 0x00001000, 0x00000100, 0x00800000,
    0x00020000, 0x00020000, 0x00002000, 0x00020000, 0x00080000, 0x00000400,
    0x00000002, 0x00000080, 0x02000000, 0x00020000, 0x00000040, 0x00001000,
    0x04000000, 0x00100000, 0x00020000};
    }

    const static UnicodeSet beng_Set{const_cast<UnicodeSet::run_t *>(__beng_Set_runs), 163, 0, const_cast<UnicodeSet::bitquad_t *>(__beng_Set_quads), 87, 0};

    /** Code Point Ranges for lan
    [3463, 3463], [350b, 350b], [3613, 3613], [3615, 3615], [36e6, 36e6],
    [372e, 372e], [4124, 4124], [41be, 41be], [4212, 4212], [444c, 444c],
    [4c10, 4c10], [50cb, 50cb], [5116, 5116], [53b1, 53b1], [5549, 5549],
    [5682, 5682], [5754, 5754], [58c8, 58c8], [58cf, 58cf], [5a6a, 5a6a],
    [5d50, 5d50], [5ee9, 5ee9], [60cf, 60cf], [61d4, 61d4], [61e2, 61e2],
    [61f6, 61f6], [6514, 6514], [652c, 652c], [6595, 6595], [6695, 6695],
    [6b04, 6b04], [6b16, 6b17], [6d68, 6d68], [6e45, 6e45], [6f23, 6f24],
    [6feb, 6feb], [703e, 703e], [7046, 7046], [7060, 7061], [7149, 7149],
    [71e3, 71e3], [7201, 7201], [721b, 721b], [74bc, 74bc], [74d3, 74d3],
    [7937, 7937], [7c43, 7c43], [7c63, 7c63], [7cf7, 7cf7], [7e9c, 7e9c],
    [7f71, 7f71], [847b, 847b], [85cd, 85cd], [862b, 862b], [862d, 862d],
    [8964, 8964], [8974, 8974], [89bd, 89bd], [8aeb, 8aeb], [8b95, 8b95],
    [8e9d, 8e9d], [9023, 9023], [90f4, 90f4], [9182, 9182], [946d, 946d],
    [95cc, 95cc], [97ca, 97ca], [9872, 9872], [204d6, 204d6],
    [204ed, 204ed], [20f16, 20f16], [21484, 21484], [214d4, 214d4],
    [21bbb, 21bbb], [21f73, 21f73], [22161, 22161], [22267, 22267],
    [22293, 22293], [2249e, 2249e], [226d3, 226d3], [22e59, 22e59],
    [232e3, 232e3], [236f1, 236f1], [240ba, 240ba], [240e8, 240e8],
    [24478, 24478], [248df, 248df], [2533b, 2533b], [255fa, 255fa],
    [25713, 25713], [2599d, 2599d], [269fc, 269fc], [27ba4, 27ba4],
    [27e26, 27e26], [27f16, 27f16], [2814f, 2814f], [28294, 28294],
    [283b9, 283b9], [288e8, 288e8], [288f8, 288f8], [28b12, 28b12],
    [28dfb, 28dfb], [29235, 29235], [29240, 29240], [29535, 29535],
    [297fa, 297fa], [2a1d6, 2a1d6]**/


    namespace {
    const static UnicodeSet::run_t __lan_Set_runs[] = {
    {Empty, 419}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 79},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 24}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 3}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 20}, {Mixed, 2}, {Empty, 34}, {Mixed, 1}, {Empty, 24},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2914}, {Mixed, 2},
    {Empty, 80}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 15},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 59}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 77},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 82}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 130}, {Mixed, 1}, {Empty, 141}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 33},
    {Mixed, 2}, {Empty, 22}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 78}, {Mixed, 1}, {Empty, 29425}};
    const static UnicodeSet::bitquad_t  __lan_Set_quads[] = {
    0x00000008, 0x00000800, 0x00280000, 0x00000040, 0x00004000, 0x00000010,
    0x40000000, 0x00040000, 0x00001000, 0x00010000, 0x00000800, 0x00400000,
    0x00020000, 0x00000200, 0x00000004, 0x00100000, 0x00008100, 0x00000400,
    0x00010000, 0x00000200, 0x00008000, 0x00100000, 0x00400004, 0x00100000,
    0x00001000, 0x00200000, 0x00200000, 0x00c00010, 0x00000100, 0x00000020,
    0x00000018, 0x00000800, 0x40000000, 0x00000040, 0x00000003, 0x00000200,
    0x00000008, 0x08000002, 0x10000000, 0x00080000, 0x00800000, 0x00000008,
    0x00000008, 0x00800000, 0x10000000, 0x00020000, 0x08000000, 0x00002000,
    0x00002800, 0x00100010, 0x20000000, 0x00000800, 0x00200000, 0x20000000,
    0x00000008, 0x00100000, 0x00000004, 0x00002000, 0x00001000, 0x00000400,
    0x00040000, 0x00400000, 0x00002000, 0x00400000, 0x00000010, 0x00100000,
    0x08000000, 0x00080000, 0x00000002, 0x00000080, 0x00080000, 0x40000000,
    0x00080000, 0x02000000, 0x00000008, 0x00020000, 0x04000000, 0x00000100,
    0x01000000, 0x80000000, 0x08000000, 0x04000000, 0x00080000, 0x20000000,
    0x10000000, 0x00000010, 0x00000040, 0x00400000, 0x00008000, 0x00100000,
    0x02000000, 0x01000100, 0x00040000, 0x08000000, 0x00200000, 0x00000001,
    0x00200000, 0x04000000, 0x00400000};
    }

    const static UnicodeSet lan_Set{const_cast<UnicodeSet::run_t *>(__lan_Set_runs), 179, 0, const_cast<UnicodeSet::bitquad_t *>(__lan_Set_quads), 99, 0};

    /** Code Point Ranges for li
    [3466, 3466], [34bf, 34bf], [350f, 350f], [3578, 3578], [35da, 35da],
    [3611, 3611], [37f3, 37f3], [381f, 381f], [3823, 3823], [3842, 3842],
    [3921, 3921], [3926, 3926], [3992, 3992], [3b0f, 3b0f], [3b9a, 3b9a],
    [3be4, 3be4], [3c00, 3c00], [3c1a, 3c1a], [3c79, 3c79], [3df0, 3df0],
    [3e1a, 3e1a], [3efa, 3efa], [3f16, 3f16], [3f5d, 3f5d], [3f96, 3f96],
    [3fdb, 3fdb], [407b, 407b], [411c, 411c], [4144, 4144], [417b, 417b],
    [41d0, 41d0], [426b, 426b], [428d, 428d], [42aa, 42aa], [42e5, 42e5],
    [4365, 4366], [437d, 437d], [44de, 44de], [4501, 4501], [4506, 4506],
    [4509, 4509], [4523, 4523], [457b, 457b], [45cd, 45cd], [4670, 4670],
    [4695, 4695], [47cf, 47d0], [4843, 4843], [48d3, 48d3], [48eb, 48eb],
    [4919, 491a], [4976, 4976], [49c9, 49c9], [4b05, 4b06], [4ba5, 4ba5],
    [4c1b, 4c1c], [4d3b, 4d3b], [4d53, 4d53], [4d98, 4d98], [4ec2, 4ec2],
    [4f4d, 4f4d], [4f8b, 4f8b], [4fd0, 4fd0], [4fda, 4fda], [5088, 5088],
    [512e, 512e], [5137, 5137], [51d3, 51d3], [5215, 5215], [5217, 5217],
    [5229, 5229], [527a, 527a], [5299, 5299], [529b, 529b], [52f5, 52f5],
    [5398, 5398], [53a4, 53a4], [53b2, 53b2], [53d3, 53d3], [53d5, 53d5],
    [53fb, 53fb], [540f, 540f], [54e9, 54e9], [550e, 550e], [5533, 5533],
    [55b1, 55b1], [569f, 569f], [56a6, 56a6], [585b, 585b], [58e2, 58e2],
    [5a0c, 5a0c], [5ae0, 5ae0], [5b4b, 5b4b], [5b77, 5b77], [5c74, 5c74],
    [5ca6, 5ca6], [5cdb, 5cdb], [5cf2, 5cf2], [5dc1, 5dc1], [5ef2, 5ef2],
    [60b7, 60b7], [6144, 6144], [623e, 623e], [6250, 6250], [625a, 625a],
    [6369, 6369], [642e, 642e], [64fd, 64fd], [6526, 6526], [652d, 652d],
    [6584, 6584], [66c6, 66c6], [66de, 66de], [6738, 6738], [674e, 674e],
    [675d, 675d], [67c2, 67c2], [6817, 6817], [681b, 681b], [68c3, 68c3],
    [68d9, 68d9], [6a06, 6a06], [6ad4, 6ad4], [6adf, 6adf], [6aea, 6aea],
    [6b10, 6b10], [6b1a, 6b1a], [6b77, 6b77], [6c02, 6c02], [6cb4, 6cb4],
    [6ce3, 6ce3], [6d6c, 6d6c], [6d96, 6d96], [6dda, 6dda], [6ea7, 6ea7],
    [6f13, 6f13], [6fa7, 6fa7], [6ffc, 6ffc], [701d, 701d], [7051, 7051],
    [7055, 7055], [7204, 7204], [720f, 720f], [7282, 7282], [729b, 729b],
    [72a1, 72a1], [72f8, 72f8], [7301, 7301], [73d5, 73d5], [73de, 73de],
    [7406, 7406], [740d, 740d], [746e, 746e], [7483, 7483], [74c5, 74c5],
    [74c8, 74c8], [74d1, 74d1], [75e2, 75e2], [7658, 7658], [7667, 7667],
    [76aa, 76aa], [76e0, 76e0], [76ed, 76ed], [775d, 775d], [77d6, 77d6],
    [7805, 7805], [782c, 782c], [784c, 784c], [78ff, 78ff], [792a, 792b],
    [7930, 7930], [79ae, 79ae], [79b2, 79b2], [79bb, 79bb], [79dd, 79dd],
    [7a72, 7a72], [7acb, 7acb], [7b20, 7b20], [7b63, 7b63], [7be5, 7be5],
    [7bf1, 7bf1], [7c6c, 7c6c], [7c92, 7c92], [7cf2, 7cf2], [7d9f, 7d9f],
    [7e2d, 7e2d], [7e85, 7e85], [7e9a, 7e9a], [7f79, 7f79], [7fee, 7fee],
    [8137, 8137], [8243, 8243], [82d9, 82d9], [8354, 8354], [8372, 8372],
    [8385, 8385], [8389, 8389], [83de, 83de], [849a, 849a], [853e, 853e],
    [85dc, 85dc], [85f6, 85f6], [863a, 863a], [86b8, 86b8], [870a, 870a],
    [8727, 8727], [8755, 8755], [8777, 8777], [87cd, 87cd], [8807, 8807],
    [8821, 8821], [8823, 8823], [88cf, 88cf], [89fb, 89fb], [8a48, 8a48],
    [8b27, 8b27], [8b88, 8b88], [8c4a, 8c4a], [8c8d, 8c8d], [8d72, 8d72],
    [8e92, 8e92], [8f62, 8f63], [908c, 908c], [9090, 9090], [9148, 9148],
    [91a8, 91a8], [91b4, 91b4], [91c3, 91c3], [91cc, 91cc], [91d0, 91d0],
    [925d, 925d], [9290, 9290], [92eb, 92eb], [92f0, 92f0], [9311, 9311],
    [9398, 9398], [93eb, 93eb], [9457, 9457], [9460, 9460], [96b6, 96b6],
    [96b8, 96b8], [96e2, 96e2], [973e, 973e], [9742, 9742], [974b, 974b],
    [98af, 98af], [9a6a, 9a6a], [9b01, 9b01], [9b32, 9b32], [9b34, 9b34],
    [9bc9, 9bc9], [9bec, 9bec], [9c67, 9c67], [9c71, 9c71], [9c73, 9c73],
    [9c7a, 9c7a], [9ce8, 9ce8], [9d17, 9d17], [9d79, 9d79], [9dc5, 9dc5],
    [9e1d, 9e1d], [9e97, 9e97], [9e9c, 9e9c], [9ece, 9ece], [9ed0, 9ed0],
    [9ee7, 9ee7], [2032f, 2032f], [2061e, 2061f], [20684, 20684],
    [206d8, 206d8], [206e6, 206e6], [20744, 20744], [20789, 20789],
    [20799, 20799], [207a4, 207a4], [2080f, 2080f], [2081d, 2081d],
    [20835, 20835], [208a0, 208a0], [20a75, 20a75], [20a84, 20a84],
    [20aba, 20aba], [20acc, 20acc], [20b70, 20b70], [20ed7, 20ed7],
    [20f1d, 20f1d], [20f86, 20f86], [210f7, 210f7], [211af, 211af],
    [2190c, 2190c], [2197d, 2197d], [21aef, 21aef], [21bb0, 21bb0],
    [21bc4, 21bc4], [21cf8, 21cf8], [21e09, 21e09], [21f92, 21f92],
    [21fcb, 21fcb], [21fce, 21fce], [22121, 22121], [22308, 22308],
    [2237c, 2237c], [223c3, 223c3], [226ee, 226ee], [227e2, 227e2],
    [227e4, 227e4], [22851, 22851], [22902, 22902], [22906, 22906],
    [22929, 22929], [22a28, 22a28], [22a51, 22a51], [22b83, 22b83],
    [22e00, 22e00], [22ee0, 22ee0], [23002, 23002], [23025, 23025],
    [23037, 23037], [2305f, 2305f], [23305, 23305], [2331c, 2331c],
    [2342c, 2342c], [2358a, 2358a], [2362c, 2362c], [237b4, 237b4],
    [237cc, 237cc], [239af, 239af], [239ff, 239ff], [23ae5, 23ae5],
    [23ae7, 23ae7], [23b89, 23b89], [23be4, 23be4], [23c92, 23c92],
    [23fde, 23fde], [2407c, 2407c], [240c0, 240c0], [2413d, 2413d],
    [24528, 24528], [245a2, 245a2], [245eb, 245eb], [24603, 24603],
    [24693, 24693], [2471c, 2471c], [247d1, 247d1], [2482b, 2482b],
    [2487f, 2487f], [248b4, 248b4], [24a6e, 24a6e], [24b5c, 24b5c],
    [24cd3, 24cd3], [24e47, 24e48], [24ee4, 24ee4], [24f1a, 24f1a],
    [2505f, 2505f], [25246, 25246], [25288, 25288], [2531b, 2531b],
    [25324, 25324], [2532e, 2532e], [2533f, 2533f], [25393, 25394],
    [254a2, 254a2], [254c3, 254c3], [25832, 25832], [258e5, 258e5],
    [25a3b, 25a3b], [25b2d, 25b2d], [25ca7, 25ca7], [25caa, 25caa],
    [25d21, 25d21], [25d97, 25d97], [25dc5, 25dc5], [25dd7, 25dd7],
    [25ed1, 25ed1], [25eff, 25eff], [25f05, 25f05], [25f48, 25f48],
    [25f57, 25f57], [260c7, 260c7], [260ca, 260ca], [2617a, 2617a],
    [261d4, 261d4], [26390, 26390], [26513, 26513], [26578, 26578],
    [2660a, 2660a], [2670f, 2670f], [26813, 26813], [268b1, 268b1],
    [26ab6, 26ab6], [26abe, 26abe], [26ac8, 26ac8], [26e99, 26e99],
    [2711a, 2711a], [2713b, 2713b], [2716e, 2716f], [27272, 27272],
    [272ce, 272ce], [272e0, 272e0], [27340, 27340], [27447, 27447],
    [27488, 27488], [274fd, 274fd], [2751d, 2751d], [2756e, 2756f],
    [2762b, 2762b], [27649, 27649], [276a9, 276a9], [2789d, 2789d],
    [2791c, 2791c], [27956, 27956], [279cb, 279cb], [27aec, 27aec],
    [27b9b, 27b9b], [27bcf, 27bcf], [27c21, 27c21], [27ca1, 27ca1],
    [27d20, 27d20], [27f72, 27f72], [28078, 28078], [280d9, 280d9],
    [2811b, 2811b], [281ce, 281ce], [281d7, 281d7], [2829b, 2829b],
    [2836b, 2836b], [2836e, 2836e], [283ec, 283ec], [284e6, 284e6],
    [28638, 28638], [286cb, 286cb], [286eb, 286eb], [2873c, 2873c],
    [2874f, 2874f], [28756, 28756], [2875f, 2875f], [287ba, 287ba],
    [287d1, 287d1], [2888c, 2888c], [2892b, 2892b], [28ab9, 28ab9],
    [28b11, 28b11], [28bfd, 28bfd], [28d3b, 28d3b], [28de6, 28de6],
    [28f79, 28f79], [28f7b, 28f7b], [2905f, 2905f], [2911e, 2911e],
    [29169, 29169], [2919d, 2919d], [291b2, 291b2], [295c5, 295c5],
    [295ed, 295ed], [2961f, 2961f], [29621, 29621], [29656, 29656],
    [297a8, 297a8], [298eb, 298eb], [2996c, 2996c], [29974, 29974],
    [299c3, 299c3], [299cb, 299cb], [29ab8, 29ab8], [29b47, 29b47],
    [29bfa, 29bfa], [29c32, 29c32], [29c47, 29c47], [29cd3, 29cd3],
    [29d23, 29d23], [29d98, 29d98], [29dcb, 29dcb], [29ecc, 29ecc],
    [29f4f, 29f4f], [29f75, 29f75], [2a050, 2a050], [2a146, 2a146],
    [2a17c, 2a17c], [2a331, 2a331], [2a3f5, 2a3f5], [2a3fc, 2a3fc],
    [2a405, 2a405], [2a45a, 2a45a], [2a494, 2a494], [2a4c0, 2a4c0],
    [2a574, 2a574], [2a582, 2a582], [2a58d, 2a58d], [2a5c1, 2a5c1],
    [2a67a, 2a67a], [2a67d, 2a67d]**/


    namespace {
    const static UnicodeSet::run_t __li_Set_runs[] = {
    {Empty, 419}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 4}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 6},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 5}, {Empty, 6}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 6}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 4}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 17}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 4}, {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 2849}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 13},
    {Mixed, 4}, {Empty, 4}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 8}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 7},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 8}, {Mixed, 3}, {Empty, 21}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 11}, {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 9}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 26}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 3}, {Empty, 1}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 2},
    {Empty, 29}, {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 32}, {Mixed, 5},
    {Empty, 10}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 7}, {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 4}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 29388}};
    const static UnicodeSet::bitquad_t  __li_Set_quads[] = {
    0x00000040, 0x80000000, 0x00008000, 0x01000000, 0x04000000, 0x00020000,
    0x00080000, 0x80000000, 0x00000008, 0x00000004, 0x00000042, 0x00040000,
    0x00008000, 0x04000000, 0x00000010, 0x04000001, 0x02000000, 0x00010000,
    0x04000000, 0x04000000, 0x00400000, 0x20000000, 0x00400000, 0x08000000,
    0x08000000, 0x10000000, 0x00000010, 0x08000000, 0x00010000, 0x00000800,
    0x00002000, 0x00000400, 0x00000020, 0x20000060, 0x40000000, 0x00000242,
    0x00000008, 0x08000000, 0x00002000, 0x00010000, 0x00200000, 0x00018000,
    0x00000008, 0x00080000, 0x00000800, 0x06000000, 0x00400000, 0x00000200,
    0x00000060, 0x00000020, 0x18000000, 0x08000000, 0x00080000, 0x01000000,
    0x00000004, 0x00002000, 0x00000800, 0x04010000, 0x00000100, 0x00804000,
    0x00080000, 0x00a00000, 0x00000200, 0x04000000, 0x0a000000, 0x00200000,
    0x01000000, 0x00040010, 0x00280000, 0x08000000, 0x00008000, 0x00000200,
    0x00004000, 0x00080000, 0x00020000, 0x80000000, 0x00000040, 0x08000000,
    0x00000004, 0x00001000, 0x00000001, 0x00000800, 0x00800000, 0x00100000,
    0x00000040, 0x08000000, 0x00040000, 0x00000002, 0x00040000, 0x00800000,
    0x00000010, 0x40000000, 0x04010000, 0x00000200, 0x00004000, 0x20000000,
    0x00002040, 0x00000010, 0x40000040, 0x01000000, 0x20004000, 0x00000004,
    0x08800000, 0x02000008, 0x00000040, 0x80100000, 0x00000400, 0x04010000,
    0x00800000, 0x00000004, 0x00100000, 0x00000008, 0x00001000, 0x00400000,
    0x04000000, 0x00000080, 0x00080000, 0x00000080, 0x10000000, 0x20000000,
    0x00220000, 0x00008010, 0x08000004, 0x00000002, 0x01000000, 0x00000002,
    0x40200000, 0x00002040, 0x00004000, 0x00000008, 0x00020120, 0x00000004,
    0x01000000, 0x00000080, 0x00000400, 0x00002001, 0x20000000, 0x00400000,
    0x00000020, 0x00001000, 0x00001000, 0x80000000, 0x00010c00, 0x08044000,
    0x20000000, 0x00040000, 0x00000800, 0x00000001, 0x00000008, 0x00020020,
    0x00001000, 0x00040000, 0x00040000, 0x80000000, 0x00002000, 0x04000020,
    0x02000000, 0x00004000, 0x00800000, 0x00000008, 0x02000000, 0x00100000,
    0x00040000, 0x00000220, 0x40000000, 0x04000000, 0x40000000, 0x10000000,
    0x00400000, 0x04000000, 0x01000000, 0x00000400, 0x00000080, 0x00200000,
    0x00800000, 0x00002000, 0x00000080, 0x0000000a, 0x00008000, 0x08000000,
    0x00000100, 0x00000080, 0x00000100, 0x00000400, 0x00002000, 0x00040000,
    0x00040000, 0x0000000c, 0x00011000, 0x00000100, 0x00100100, 0x00011008,
    0x20000000, 0x00010000, 0x00010800, 0x00020000, 0x01000000, 0x00000800,
    0x00800000, 0x00000001, 0x01400000, 0x00000004, 0x40000000, 0x00000804,
    0x00008000, 0x00000400, 0x00000002, 0x00140000, 0x00000200, 0x00001000,
    0x040a0080, 0x00000100, 0x00800000, 0x02000000, 0x00000020, 0x20000000,
    0x10800000, 0x00014000, 0x00000080, 0x00008000, 0xc0000000, 0x00000010,
    0x01000000, 0x00000040, 0x00000010, 0x02000200, 0x00000010, 0x20008000,
    0x00200000, 0x00000001, 0x00200000, 0x00000010, 0x04000000, 0x00001000,
    0x00010000, 0x00800000, 0x20000000, 0x00000040, 0x00800000, 0x00008000,
    0x00001000, 0x20000000, 0x00008000, 0x00010000, 0x00000010, 0x01000000,
    0x00000200, 0x00040000, 0x00004800, 0x00000002, 0x00000100, 0x10000000,
    0x00000008, 0x00004000, 0x00000014, 0x00020000, 0x00000044, 0x00000200,
    0x00000100, 0x00020000, 0x00000008, 0x00000001, 0x00000001, 0x00000004,
    0x00800020, 0x80000000, 0x10000020, 0x00001000, 0x00000400, 0x00001000,
    0x00100000, 0x00001000, 0x00008000, 0x80000000, 0x000000a0, 0x00000200,
    0x00000010, 0x00040000, 0x40000000, 0x10000000, 0x00000001, 0x20000000,
    0x00000100, 0x00000004, 0x00000800, 0x00000008, 0x00080000, 0x10000000,
    0x00020000, 0x00000800, 0x80000000, 0x00100000, 0x00004000, 0x10000000,
    0x00080000, 0x00000180, 0x00000010, 0x04000000, 0x80000000, 0x00000040,
    0x00000100, 0x08000000, 0x80004010, 0x00180000, 0x00000004, 0x00000008,
    0x00040000, 0x00000020, 0x08000000, 0x00002000, 0x00000480, 0x00000002,
    0x00800000, 0x00800020, 0x00020000, 0x80000000, 0x00000020, 0x00800100,
    0x00000480, 0x04000000, 0x00100000, 0x00010000, 0x00080000, 0x01000000,
    0x00000400, 0x00008000, 0x00080000, 0x00020000, 0x40400000, 0x00000100,
    0x02000000, 0x04000000, 0x08000000, 0x0000c000, 0x00040000, 0x00004000,
    0x00000001, 0x00000001, 0x00000080, 0x00000100, 0x20000000, 0x20000000,
    0x0000c000, 0x00000800, 0x00000200, 0x00000200, 0x20000000, 0x10000000,
    0x00400000, 0x00000800, 0x00001000, 0x08000000, 0x00008000, 0x00000002,
    0x00000002, 0x00000001, 0x00040000, 0x01000000, 0x02000000, 0x08000000,
    0x00804000, 0x08000000, 0x00004800, 0x00001000, 0x00000040, 0x01000000,
    0x00000800, 0x00000800, 0x10000000, 0x80408000, 0x04000000, 0x00020000,
    0x00001000, 0x00000800, 0x02000000, 0x00020000, 0x20000000, 0x08000000,
    0x00000040, 0x0a000000, 0x80000000, 0x40000000, 0x00000200, 0x20000000,
    0x00040000, 0x00000020, 0x00002000, 0x80000000, 0x00000002, 0x00400000,
    0x00000100, 0x00000800, 0x00101000, 0x00000808, 0x01000000, 0x00000080,
    0x04000000, 0x00040000, 0x00000080, 0x00080000, 0x00000008, 0x01000000,
    0x00000800, 0x00001000, 0x00008000, 0x00200000, 0x00010000, 0x00000040,
    0x10000000, 0x00020000, 0x10200000, 0x00000020, 0x04000000, 0x00100000,
    0x00000001, 0x00100000, 0x00002004, 0x00000002, 0x24000000};
    }

    const static UnicodeSet li_Set{const_cast<UnicodeSet::run_t *>(__li_Set_runs), 655, 0, const_cast<UnicodeSet::bitquad_t *>(__li_Set_quads), 419, 0};

    /** Code Point Ranges for hun
    [346e, 346e], [35a7, 35a7], [35c3, 35c3], [3a21, 3a21], [3baf, 3baf],
    [4159, 4159], [4290, 4290], [439c, 439c], [440a, 440a], [46a0, 46a0],
    [46f0, 46f0], [4863, 4863], [49f0, 49f0], [4adf, 4adf], [4b9d, 4b9d],
    [4d37, 4d37], [4d39, 4d39], [4d6a, 4d6a], [4fd2, 4fd2], [5031, 5031],
    [5702, 5702], [5a5a, 5a5a], [5a6b, 5a6b], [5ff6, 5ff6], [60db, 60db],
    [60fd, 60fd], [6141, 6141], [6346, 6346], [638d, 638d], [63ee, 63ee],
    [6606, 6606], [660f, 660f], [68a1, 68a1], [68b1, 68b1], [68cd, 68cd],
    [68d4, 68d4], [6b99, 6b99], [6dbd, 6dbd], [6df7, 6df7], [6e3e, 6e3e],
    [6e63, 6e63], [6e77, 6e77], [6eb7, 6eb7], [7104, 7104], [711d, 711d],
    [7147, 7147], [743f, 743f], [7703, 7703], [7767, 7767], [776f, 776f],
    [7dc4, 7dc4], [7de1, 7de1], [7e49, 7e49], [8477, 8477], [89e8, 89e8],
    [8ae2, 8ae2], [95bd, 95bd], [9850, 9850], [991b, 991b], [992b, 992b],
    [9b42, 9b42], [9f32, 9f32], [20263, 20263], [211ef, 211ef],
    [21a29, 21a29], [21a33, 21a33], [231f2, 231f2], [23742, 23742],
    [238cf, 238cf], [238de, 238de], [23a3f, 23a3f], [25107, 25107],
    [260d5, 260d5], [267a2, 267a2], [267f2, 267f2], [26875, 26875],
    [26d63, 26d63], [2781a, 2781a], [278e2, 278e2], [280b1, 280b1],
    [282e8, 282e8], [283c2, 283c2], [2886b, 2886b], [29174, 29174],
    [291c7, 291c7], [293d6, 293d6], [29509, 29509], [2a33d, 2a33d],
    [2a455, 2a455]**/


    namespace {
    const static UnicodeSet::run_t __hun_Set_runs[] = {
    {Empty, 419}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 34},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 25}, {Mixed, 2}, {Empty, 43}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 20}, {Mixed, 2}, {Empty, 21}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 50}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 85}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 2841}, {Mixed, 1}, {Empty, 123}, {Mixed, 1},
    {Empty, 65}, {Mixed, 1}, {Empty, 189}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 182}, {Mixed, 1}, {Empty, 125}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 84}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 71}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 112}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 29405}};
    const static UnicodeSet::bitquad_t  __hun_Set_quads[] = {
    0x00004000, 0x00000080, 0x00000008, 0x00000002, 0x00008000, 0x02000000,
    0x00010000, 0x10000000, 0x00000400, 0x00000001, 0x00010000, 0x00000008,
    0x00010000, 0x80000000, 0x20000000, 0x02800000, 0x00000400, 0x00040000,
    0x00020000, 0x00000004, 0x04000000, 0x00000800, 0x00400000, 0x08000000,
    0x20000000, 0x00000002, 0x00000040, 0x00002000, 0x00004000, 0x00008040,
    0x00020002, 0x00102000, 0x02000000, 0x20000000, 0x00800000, 0x40000000,
    0x00800008, 0x00800000, 0x20000010, 0x00000080, 0x80000000, 0x00000008,
    0x00008080, 0x00000010, 0x00000002, 0x00000200, 0x00800000, 0x00000100,
    0x00000004, 0x20000000, 0x00010000, 0x08000000, 0x00000800, 0x00000004,
    0x00040000, 0x00000008, 0x00008000, 0x00080200, 0x00040000, 0x00000004,
    0x40008000, 0x80000000, 0x00000080, 0x00200000, 0x00000004, 0x00040000,
    0x00200000, 0x00000008, 0x04000000, 0x00000004, 0x00020000, 0x00000100,
    0x00000004, 0x00000800, 0x00100000, 0x00000080, 0x00400000, 0x00000200,
    0x20000000, 0x00200000};
    }

    const static UnicodeSet hun_Set{const_cast<UnicodeSet::run_t *>(__hun_Set_runs), 149, 0, const_cast<UnicodeSet::bitquad_t *>(__hun_Set_quads), 80, 0};

    /** Code Point Ranges for zhou
    [3473, 3473], [35d9, 35d9], [36e9, 36e9], [38d9, 38d9], [396e, 396e],
    [3a04, 3a04], [3af6, 3af6], [3fad, 3fad], [3fd2, 3fd2], [4219, 4219],
    [4387, 4387], [43bb, 43bb], [43d4, 43d4], [4422, 4422], [447c, 447c],
    [44df, 44df], [459e, 459e], [46c6, 46c6], [49d3, 49d3], [4a5c, 4a5c],
    [4d87, 4d87], [4f8f, 4f8f], [4f9c, 4f9c], [501c, 501c], [50fd, 50fd],
    [5191, 5191], [5468, 5468], [546a, 546a], [54ae, 54ae], [5541, 5541],
    [5544, 5544], [558c, 558c], [5599, 5599], [5663, 5663], [568b, 568b],
    [59af, 59af], [5a64, 5a64], [5b99, 5b99], [5dde, 5dde], [5e1a, 5e1a],
    [5f9f, 5f9f], [626d, 626d], [63ab, 63ab], [665d, 665d], [67da, 67da],
    [6906, 6906], [6ce8, 6ce8], [6d00, 6d00], [6d32, 6d32], [6dcd, 6dcd],
    [70d0, 70d0], [73d8, 73d8], [7503, 7503], [759b, 759b], [76ba, 76ba],
    [76e9, 76e9], [776d, 776d], [77ea, 77ea], [78a1, 78a1], [795d, 795d],
    [7c40, 7c40], [7c99, 7c99], [7ca5, 7ca5], [7d02, 7d02], [7d2c, 7d2c],
    [7e10, 7e10], [7e47, 7e47], [7fe2, 7fe2], [8098, 8098], [80b2, 80b2],
    [80d5, 80d5], [821f, 821f], [8233, 8233], [8464, 8464], [85b5, 85b5],
    [8a76, 8a76], [8abf, 8abf], [8acf, 8acf], [8b05, 8b05], [8b78, 8b78],
    [8cd9, 8cd9], [8ef8, 8ef8], [8f08, 8f08], [8f16, 8f16], [9010, 9010],
    [9031, 9031], [90ee, 90ee], [914e, 914e], [923e, 923e], [9282, 9282],
    [970c, 970c], [99ce, 99ce], [9a06, 9a06], [9a36, 9a36], [9a5f, 9a5f],
    [9b3b, 9b3b], [9bde, 9bde], [9d43, 9d43], [202a3, 202a3],
    [202e2, 202e2], [206b4, 206b4], [208d8, 208d8], [2090d, 2090d],
    [20c59, 20c59], [21011, 21011], [212a1, 212a1], [220f8, 220f8],
    [223dd, 223dd], [2242b, 2242b], [224df, 224df], [22ae7, 22ae7],
    [22dd7, 22dd7], [22f32, 22f32], [22f67, 22f67], [23194, 23194],
    [2396f, 2396f], [23ef1, 23ef1], [24d65, 24d65], [25019, 25019],
    [25306, 25306], [25478, 25478], [255a0, 255a0], [258d9, 258d9],
    [25c9d, 25c9d], [25e9d, 25e9e], [25f2b, 25f2b], [25f93, 25f93],
    [25fe6, 25fe6], [26056, 26056], [26088, 26088], [26178, 26178],
    [2623a, 2623a], [26874, 26874], [26a48, 26a48], [26b74, 26b74],
    [271df, 271df], [276f8, 276f8], [278f7, 278f7], [279d4, 279d4],
    [27b4d, 27b4d], [27cdc, 27cdc], [27ed6, 27ed6], [2825c, 2825c],
    [283fa, 283fa], [28947, 28947], [2899e, 2899e], [28a2f, 28a2f],
    [29284, 29284], [292f0, 292f0], [29304, 29304], [2934c, 2934c],
    [29367, 29367], [295ea, 295ea], [298b8, 298b8], [29da3, 29da3],
    [2a180, 2a180], [2a1de, 2a1de]**/


    namespace {
    const static UnicodeSet::run_t __zhou_Set_runs[] = {
    {Empty, 419}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 37}, {Mixed, 2},
    {Empty, 17}, {Mixed, 1}, {Empty, 11}, {Mixed, 3}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 24}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 30},
    {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 2},
    {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 4}, {Mixed, 3}, {Empty, 9}, {Mixed, 2}, {Empty, 17}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 16}, {Mixed, 2}, {Empty, 7}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 2858}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 113}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 115}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 66}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 2},
    {Empty, 19}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 29425}};
    const static UnicodeSet::bitquad_t  __zhou_Set_quads[] = {
    0x00080000, 0x02000000, 0x00000200, 0x02000000, 0x00004000, 0x00000010,
    0x00400000, 0x00002000, 0x00040000, 0x02000000, 0x00000080, 0x08000000,
    0x00100000, 0x00000004, 0x10000000, 0x80000000, 0x40000000, 0x00000040,
    0x00080000, 0x10000000, 0x00000080, 0x10008000, 0x10000000, 0x20000000,
    0x00020000, 0x00000500, 0x00004000, 0x00000012, 0x02001000, 0x00000008,
    0x00000800, 0x00008000, 0x00000010, 0x02000000, 0x40000000, 0x04000000,
    0x80000000, 0x00002000, 0x00000800, 0x20000000, 0x04000000, 0x00000040,
    0x00000100, 0x00000001, 0x00040000, 0x00002000, 0x00010000, 0x01000000,
    0x00000008, 0x08000000, 0x04000000, 0x00000200, 0x00002000, 0x00000400,
    0x00000002, 0x20000000, 0x00000001, 0x02000000, 0x00000020, 0x00000004,
    0x00001000, 0x00010000, 0x00000080, 0x00000004, 0x01000000, 0x00040000,
    0x00200000, 0x80000000, 0x00080000, 0x00000010, 0x00200000, 0x00400000,
    0x80000000, 0x00008000, 0x00000020, 0x01000000, 0x02000000, 0x01000000,
    0x00400100, 0x00010000, 0x00020000, 0x00004000, 0x00004000, 0x40000000,
    0x00000004, 0x00001000, 0x00004000, 0x00000040, 0x00400000, 0x80000000,
    0x08000000, 0x40000000, 0x00000008, 0x00000008, 0x00000004, 0x00100000,
    0x01000000, 0x00002000, 0x02000000, 0x00020000, 0x00000002, 0x01000000,
    0x20000000, 0x00000800, 0x80000000, 0x00000080, 0x00800000, 0x00040000,
    0x00000080, 0x00100000, 0x00008000, 0x00020000, 0x00000020, 0x02000000,
    0x00000040, 0x01000000, 0x00000001, 0x02000000, 0x20000000, 0x60000000,
    0x00000800, 0x00080000, 0x00000040, 0x00400000, 0x00000100, 0x01000000,
    0x04000000, 0x00100000, 0x00000100, 0x00100000, 0x80000000, 0x01000000,
    0x00800000, 0x00100000, 0x00002000, 0x10000000, 0x00400000, 0x10000000,
    0x04000000, 0x00000080, 0x40000000, 0x00008000, 0x00000010, 0x00010000,
    0x00000010, 0x00001000, 0x00000080, 0x00000400, 0x01000000, 0x00000008,
    0x00000001, 0x40000000};
    }

    const static UnicodeSet zhou_Set{const_cast<UnicodeSet::run_t *>(__zhou_Set_runs), 269, 0, const_cast<UnicodeSet::bitquad_t *>(__zhou_Set_quads), 152, 0};

    /** Code Point Ranges for zhu
    [3473, 3473], [3916, 3916], [39b5, 39b5], [39e3, 39e3], [3ac2, 3ac2],
    [3d86, 3d86], [3e65, 3e65], [3e9b, 3e9b], [3fbb, 3fbb], [40f4, 40f4],
    [419d, 419d], [41e0, 41e1], [41ec, 41ec], [4335, 4335], [43b7, 43b7],
    [4417, 4417], [4422, 4422], [457d, 457d], [4604, 4604], [4622, 4622],
    [4752, 4752], [476c, 476c], [47c9, 47c9], [4831, 4831], [4864, 4864],
    [48f7, 48f7], [496e, 496e], [4a92, 4a92], [4b56, 4b56], [4bb1, 4bb1],
    [4ce0, 4ce0], [4e36, 4e36], [4e3b, 4e3b], [4e4b, 4e4b], [4e88, 4e88],
    [4f47, 4f47], [4f4f, 4f4f], [4f8f, 4f8f], [516a, 516a], [52a9, 52a9],
    [52af, 52af], [54ae, 54ae], [55fb, 55fb], [5663, 5663], [56d1, 56d1],
    [577e, 577e], [58f4, 58f4], [5b4e, 5b4e], [5b81, 5b81], [5b94, 5b94],
    [5c0c, 5c0c], [5c6c, 5c6c], [5d40, 5d40], [5eb6, 5eb6], [62c4, 62c4],
    [640a, 640a], [6571, 6571], [6580, 6580], [6597, 6597], [65b8, 65b8],
    [66ef, 66ef], [671d, 671d], [672e, 672f], [6731, 6731], [677c, 677c],
    [6793, 6793], [67e0, 67e0], [67f1, 67f1], [67f7, 67f7], [682a, 682a],
    [696e, 696e], [6ae1, 6ae1], [6ae7, 6ae7], [6aeb, 6aeb], [6b18, 6b18],
    [6bb6, 6bb6], [6ccf, 6ccf], [6cde, 6cde], [6ce8, 6ce8], [6d19, 6d19],
    [6e1a, 6e1a], [6f8d, 6f8d], [7026, 7026], [705f, 705f], [70a2, 70a2],
    [70b7, 70b7], [70db, 70db], [716e, 716e], [71ed, 71ed], [73e0, 73e0],
    [75b0, 75b0], [7603, 7603], [771d, 771d], [77da, 77da], [782b, 782b],
    [7843, 7843], [78e9, 78e9], [795d, 795d], [7969, 7969], [7a8b, 7a8b],
    [7af9, 7afa], [7b1c, 7b1c], [7b51, 7b51], [7b6f, 7b6f], [7bb8, 7bb8],
    [7bc9, 7bc9], [7beb, 7beb], [7bf4, 7bf4], [7d35, 7d35], [7d38, 7d38],
    [7d51, 7d51], [7f5c, 7f5c], [7f9c, 7f9c], [7fe5, 7fe5], [8233, 8233],
    [82a7, 82a7], [82e7, 82e7], [8301, 8301], [8331, 8331], [833f, 833f],
    [8387, 8387], [8457, 8457], [84eb, 84eb], [85a5, 85a5], [85f7, 85f8],
    [86b0, 86b0], [86c0, 86c0], [86db, 86db], [876b, 876b], [880b, 880b],
    [8829, 8829], [883e, 883e], [88be, 88be], [891a, 891a], [8a3b, 8a3b],
    [8a5d, 8a5d], [8a85, 8a85], [8af8, 8af8], [8c6c, 8c6c], [8caf, 8caf],
    [8dd3, 8dd3], [8dd9, 8dd9], [8de6, 8de6], [8e85, 8e85], [8ef4, 8ef4],
    [8ef8, 8ef8], [8fec, 8fec], [9010, 9010], [9017, 9017], [902b, 902b],
    [90be, 90be], [924f, 924f], [9252, 9252], [9296, 9296], [9444, 9444],
    [963b, 963b], [9664, 9664], [967c, 967c], [9714, 9714], [98f3, 98f3],
    [99b5, 99b5], [99d0, 99d0], [99ef, 99ef], [9a36, 9a36], [9ba2, 9ba2],
    [9c41, 9c41], [9d38, 9d38], [9e00, 9e00], [9e86, 9e86], [9e88, 9e88],
    [9f04, 9f04], [209c0, 209c0], [20a48, 20a48], [20b8c, 20b8c],
    [20c0d, 20c0d], [20d26, 20d26], [20d2b, 20d2b], [20dc5, 20dc5],
    [213ba, 213ba], [21917, 21917], [219e8, 219e8], [21c71, 21c71],
    [21d05, 21d05], [21e0c, 21e0c], [21e90, 21e90], [21ecc, 21ecc],
    [21ee0, 21ee0], [2207c, 2207c], [2252a, 2252a], [226bb, 226bb],
    [22943, 22943], [22a44, 22a44], [22cbf, 22cbf], [2303b, 2303b],
    [2352f, 2352f], [23901, 23901], [2397c, 2397c], [23d78, 23d78],
    [23f46, 23f46], [241bc, 241bc], [242f0, 242f0], [243a7, 243a7],
    [2455e, 2455e], [24779, 24779], [2496e, 2496e], [24c91, 24c91],
    [24cef, 24cef], [24f84, 24f84], [252db, 252db], [256c2, 256c2],
    [2578f, 2578f], [25a63, 25a63], [25bf8, 25bf8], [25d5f, 25d5f],
    [25e4d, 25e4d], [25f85, 25f85], [26177, 26177], [26250, 26250],
    [26674, 26674], [269d9, 269d9], [26b38, 26b38], [2721a, 2721a],
    [2725e, 2725e], [273ff, 273ff], [27464, 27464], [27d64, 27d64],
    [28184, 28184], [2822b, 2822b], [28654, 28654], [28795, 28795],
    [28947, 28947], [28b45, 28b45], [28c88, 28c88], [292a3, 292a3],
    [292f5, 292f5], [2948a, 2948a], [29788, 29788], [298f7, 298f7],
    [29a3b, 29a3b], [29ca0, 29ca0], [29cac, 29cac], [29ce5, 29ce5],
    [29d00, 29d00], [29d82, 29d82], [29d84, 29d84], [2a2b9, 2a2b9],
    [2a2cf, 2a2cf], [2a2d1, 2a2d1], [2a2f0, 2a2f0], [2a3ff, 2a3ff],
    [2a6b9, 2a6b9]**/


    namespace {
    const static UnicodeSet::run_t __zhu_Set_runs[] = {
    {Empty, 419}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 8}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 10},
    {Mixed, 3}, {Empty, 9}, {Mixed, 3}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 3}, {Empty, 7},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 3}, {Empty, 9},
    {Mixed, 2}, {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 5}, {Mixed, 3}, {Empty, 1}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2901}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 11}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 71},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 40}, {Mixed, 3}, {Empty, 7}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 29386}};
    const static UnicodeSet::bitquad_t  __zhu_Set_quads[] = {
    0x00080000, 0x00400000, 0x00200000, 0x00000008, 0x00000004, 0x00000040,
    0x00000020, 0x08000000, 0x08000000, 0x00100000, 0x20000000, 0x00001003,
    0x00200000, 0x00800000, 0x00800000, 0x00000004, 0x20000000, 0x00000010,
    0x00000004, 0x00040000, 0x00001000, 0x00000200, 0x00020000, 0x00000010,
    0x00800000, 0x00004000, 0x00040000, 0x00400000, 0x00020000, 0x00000001,
    0x08400000, 0x00000800, 0x00000100, 0x00008080, 0x00008000, 0x00000400,
    0x00008200, 0x00004000, 0x08000000, 0x00000008, 0x00020000, 0x40000000,
    0x00100000, 0x00004000, 0x00100002, 0x00001000, 0x00001000, 0x00000001,
    0x00400000, 0x00000010, 0x00000400, 0x00020000, 0x00800001, 0x01000000,
    0x00008000, 0x20000000, 0x0002c000, 0x10000000, 0x00080000, 0x00820001,
    0x00000400, 0x00004000, 0x00000882, 0x01000000, 0x00400000, 0x40008000,
    0x00000100, 0x02000000, 0x04000000, 0x00002000, 0x00000040, 0x80000000,
    0x00800004, 0x08000000, 0x00004000, 0x00002000, 0x00000001, 0x00010000,
    0x00000008, 0x20000000, 0x04000000, 0x00000800, 0x00000008, 0x00000200,
    0x20000000, 0x00000200, 0x00000800, 0x06000000, 0x10000000, 0x00020000,
    0x00008000, 0x01000000, 0x00000200, 0x00100800, 0x01200000, 0x00020000,
    0x10000000, 0x10000000, 0x00000020, 0x00080000, 0x00000080, 0x00000080,
    0x00000002, 0x80020000, 0x00000080, 0x00800000, 0x00000800, 0x00000020,
    0x01800000, 0x00010000, 0x08000001, 0x00000800, 0x00000800, 0x40000200,
    0x40000000, 0x04000000, 0x08000000, 0x20000000, 0x00000020, 0x01000000,
    0x00001000, 0x00008000, 0x02080000, 0x00000040, 0x00000020, 0x01100000,
    0x00001000, 0x00810000, 0x00000800, 0x40000000, 0x00048000, 0x00400000,
    0x00000010, 0x08000000, 0x10000010, 0x00100000, 0x00080000, 0x00200000,
    0x00010000, 0x00008000, 0x00400000, 0x00000004, 0x00000002, 0x01000000,
    0x00000001, 0x00000140, 0x00000010, 0x00000001, 0x00000100, 0x00001000,
    0x00002000, 0x00000840, 0x00000020, 0x04000000, 0x00800000, 0x00000100,
    0x00020000, 0x00000020, 0x00001000, 0x00010000, 0x00001000, 0x00000001,
    0x10000000, 0x00000400, 0x08000000, 0x00000008, 0x00000010, 0x80000000,
    0x08000000, 0x00008000, 0x00000002, 0x10000000, 0x01000000, 0x00000040,
    0x10000000, 0x00010000, 0x00000080, 0x40000000, 0x02000000, 0x00004000,
    0x00020000, 0x00008000, 0x00000010, 0x08000000, 0x00000004, 0x00008000,
    0x00000008, 0x01000000, 0x80000000, 0x00002000, 0x00000020, 0x00800000,
    0x00010000, 0x00100000, 0x02000000, 0x01000000, 0x04000000, 0x40000000,
    0x80000000, 0x00000010, 0x00000010, 0x00000010, 0x00000800, 0x00100000,
    0x00200000, 0x00000080, 0x00000020, 0x00000100, 0x00000008, 0x00200000,
    0x00000400, 0x00000100, 0x00800000, 0x08000000, 0x00001001, 0x00000020,
    0x00000001, 0x00000014, 0x02000000, 0x00028000, 0x00010000, 0x80000000,
    0x02000000};
    }

    const static UnicodeSet zhu_Set{const_cast<UnicodeSet::run_t *>(__zhu_Set_runs), 375, 0, const_cast<UnicodeSet::bitquad_t *>(__zhu_Set_quads), 223, 0};

    /** Code Point Ranges for xi
    [3476, 3476], [34fe, 34fe], [3512, 3512], [3543, 3543], [3567, 3567],
    [35e9, 35e9], [35ed, 35ed], [360a, 360a], [3680, 3680], [369b, 369b],
    [36d3, 36d3], [36eb, 36eb], [36ed, 36ed], [370e, 370e], [372f, 372f],
    [3792, 3792], [3804, 3804], [38df, 38df], [3905, 3905], [3938, 3938],
    [39a6, 39a6], [3a19, 3a19], [3a49, 3a49], [3a66, 3a66], [3aa7, 3aa7],
    [3b1b, 3b1b], [3b61, 3b61], [3ba9, 3ba9], [3bd5, 3bd5], [3c25, 3c25],
    [3c3b, 3c3b], [3c3f, 3c3f], [3c46, 3c47], [3c64, 3c64], [3cb8, 3cb8],
    [3d14, 3d14], [3d27, 3d27], [3dbc, 3dbc], [3e0d, 3e0d], [3ea3, 3ea3],
    [3f99, 3f99], [3fb7, 3fb7], [3fc7, 3fc7], [3ffd, 3ffd], [406f, 406f],
    [4080, 4080], [4222, 4222], [422a, 422a], [42a0, 42a0], [43e9, 43e9],
    [4405, 4405], [4416, 4416], [443c, 443c], [4481, 4481], [448a, 448a],
    [44c7, 44c7], [4592, 4592], [45b7, 45b7], [464e, 464e], [4675, 4675],
    [4699, 4699], [46ab, 46ab], [46b7, 46b7], [46bf, 46bf], [46ca, 46ca],
    [46e5, 46e5], [4701, 4701], [47c7, 47c7], [48db, 48db], [49ff, 49ff],
    [4a1b, 4a1b], [4a33, 4a33], [4ae3, 4ae3], [4b23, 4b23], [4b52, 4b52],
    [4b8e, 4b8e], [4bdc, 4bdc], [4caa, 4caa], [4cf6, 4cf6], [4d71, 4d71],
    [4d8b, 4d8b], [4fc2, 4fc2], [4fd9, 4fd9], [5092, 5092], [50d6, 50d6],
    [516e, 516e], [51de, 51de], [5338, 5338], [534c, 534c], [5364, 5364],
    [537b, 537b], [5380, 5380], [541a, 541a], [5438, 5438], [546c, 546c],
    [5470, 5470], [54a5, 54a6], [54ad, 54ad], [550f, 550f], [553d, 553d],
    [559c, 559c], [563b, 563b], [564f, 564f], [568a, 568a], [56b1, 56b1],
    [5848, 5848], [5915, 5915], [594a, 594a], [595a, 595a], [5a2d, 5a2d],
    [5a90, 5a90], [5ab3, 5ab3], [5b06, 5b06], [5b09, 5b09], [5c4e, 5c4e],
    [5c56, 5c56], [5c63, 5c63], [5d47, 5d47], [5d8d, 5d8d], [5dc2, 5dc2],
    [5dc7, 5dc7], [5e0c, 5e0c], [5e2d, 5e2d], [5f86, 5f86], [5f99, 5f99],
    [5faf, 5faf], [5fda, 5fda], [5fe5, 5fe5], [602c, 602c], [6038, 6038],
    [6044, 6044], [606f, 606f], [6089, 6089], [6095, 6095], [60c1, 60c1],
    [60dc, 60dc], [613e, 613e], [6140, 6140], [6198, 6199], [6232, 6232],
    [6271, 6271], [6278, 6278], [6461, 6461], [6495, 6495], [64ca, 64ca],
    [65e2, 65e2], [6614, 6614], [665e, 665e], [6670, 6670], [6673, 6673],
    [66bf, 66bf], [66e6, 66e6], [676b, 676b], [6790, 6790], [67b2, 67b2],
    [6878, 6878], [68f2, 68f2], [691e, 691e], [693a, 693a], [69bd, 69bd],
    [69e2, 69e2], [6a28, 6a28], [6a40, 6a40], [6a84, 6a84], [6b2a, 6b2a],
    [6b2f, 6b2f], [6b37, 6b37], [6b56, 6b56], [6b59, 6b59], [6c23, 6c23],
    [6c25, 6c25], [6c50, 6c50], [6d12, 6d12], [6d17, 6d17], [6d60, 6d60],
    [6dc5, 6dc5], [6eaa, 6eaa], [6eca, 6eca], [6f07, 6f07], [6f1d, 6f1d],
    [6f5d, 6f5d], [6f5f, 6f5f], [6fd5, 6fd5], [7051, 7051], [70ef, 70ef],
    [7101, 7101], [711f, 711f], [712c, 712c], [7182, 7182], [7184, 7184],
    [7199, 7199], [71b9, 71bb], [71cd, 71cd], [7214, 7214], [7280, 7280],
    [7294, 7294], [72a7, 72a7], [72f6, 72f6], [730e, 730e], [737b, 737b],
    [740b, 740b], [74bd, 74bd], [74d5, 74d5], [761c, 761c], [7699, 7699],
    [76fb, 76fb], [774e, 774e], [77a6, 77a6], [77d6, 77d6], [77fd, 77fd],
    [7852, 7852], [788f, 788f], [78f6, 78f6], [798a, 798a], [79a7, 79a7],
    [7a00, 7a00], [7a27, 7a27], [7a78, 7a78], [7ab8, 7ab8], [7c9e, 7c9e],
    [7cfb, 7cfb], [7d30, 7d30], [7d8c, 7d8c], [7dc6, 7dc6], [7e30, 7e30],
    [7e65, 7e65], [7e6b, 7e6b], [7e9a, 7e9a], [7f9b, 7f9b], [7fa9, 7fa9],
    [7fb2, 7fb2], [7fd2, 7fd2], [7fd5, 7fd5], [80b8, 80b9], [8105, 8105],
    [814a, 814a], [819d, 819d], [8204, 8204], [823e, 823e], [831c, 831c],
    [8383, 8383], [8394, 8394], [83e5, 83e5], [8448, 8448], [8478, 8478],
    [84a0, 84a0], [84b5, 84b5], [84c6, 84c6], [84f0, 84f0], [8507, 8507],
    [856e, 856e], [8582, 8582], [8652, 8652], [8669, 8669], [8724, 8725],
    [8734, 8734], [8777, 8777], [8785, 8785], [8787, 8787], [87cb, 87cb],
    [87e2, 87e2], [8835, 8835], [884b, 884b], [88fc, 88fc], [8936, 8936],
    [8972, 8972], [897f, 897f], [89a1, 89a1], [89a4, 89a4], [89ff, 89ff],
    [8a22, 8a22], [8a51, 8a51], [8a92, 8a92], [8af0, 8af0], [8b11, 8b11],
    [8b1a, 8b1a], [8b35, 8b35], [8c3f, 8c40], [8c68, 8c68], [8c6f, 8c6f],
    [8c95, 8c95], [8d65, 8d65], [8d69, 8d69], [8d87, 8d87], [8d98, 8d98],
    [8e4a, 8e4a], [8e5d, 8e5d], [8ea7, 8ea7], [905f, 905f], [90c4, 90c4],
    [90cb, 90cb], [90d7, 90d7], [90e4, 90e4], [910e, 910e], [9145, 9145],
    [91af, 91af], [91d0, 91d0], [91f3, 91f3], [91f8, 91f8], [9212, 9212],
    [9222, 9222], [9268, 9269], [9291, 9291], [932b, 932b], [932f, 932f],
    [93b4, 93b4], [93ed, 93ed], [9474, 9474], [95df, 95df], [9699, 9699],
    [96b0, 96b0], [96b5, 96b5], [96ed, 96ed], [972b, 972b], [973c, 973c],
    [98c1, 98c1], [990f, 990f], [9919, 9919], [993c, 993c], [9a31, 9a31],
    [9a3d, 9a3d], [9a68, 9a68], [9b29, 9b29], [9c13, 9c13], [9c3c, 9c3c],
    [9c5a, 9c5a], [9d57, 9d57], [9e02, 9e02], [9ed6, 9ed6], [9f33, 9f33],
    [9f37, 9f37], [201b1, 201b1], [20262, 20262], [2050d, 2050d],
    [20615, 20615], [20717, 20717], [207ca, 207ca], [20934, 20934],
    [2098c, 2098c], [2099c, 2099c], [20a1a, 20a1a], [20a7a, 20a7a],
    [20a99, 20a99], [20b2c, 20b2c], [20d2d, 20d2d], [20da8, 20da8],
    [20e92, 20e92], [21071, 21071], [210e2, 210e2], [21155, 21155],
    [213db, 213db], [215de, 215de], [215f3, 215f3], [21610, 21610],
    [21621, 21621], [2164b, 2164b], [21727, 21727], [21767, 21767],
    [21852, 21852], [2198e, 2198e], [21a64, 21a64], [21cda, 21cda],
    [21daf, 21daf], [21ece, 21ece], [2200a, 2200a], [2229a, 2229a],
    [222fc, 222fc], [22467, 22467], [224a9, 224a9], [224b2, 224b2],
    [225f4, 225f4], [22645, 22645], [22723, 22723], [227ea, 227ea],
    [22839, 22839], [22841, 22841], [2290b, 2290b], [229fd, 229fd],
    [22a1f, 22a1f], [22b3e, 22b3e], [22b41, 22b41], [22e4d, 22e4d],
    [2317e, 2317e], [233ae, 233ae], [23483, 23483], [23694, 23694],
    [237f5, 237f5], [23881, 23882], [23887, 23887], [2388d, 2388e],
    [23891, 23891], [23893, 23893], [238c9, 238c9], [23922, 23922],
    [23933, 23934], [23a17, 23a17], [23bea, 23bea], [23ce6, 23ce6],
    [23cec, 23cec], [240ea, 240ea], [2410e, 2410e], [2412c, 2412c],
    [241f4, 241f4], [24337, 24337], [244d4, 244d4], [244da, 244da],
    [247e7, 247e7], [24813, 24813], [24861, 24861], [2486c, 2486c],
    [2486f, 2486f], [24880, 24880], [24931, 24931], [24952, 24952],
    [24a10, 24a10], [24b15, 24b15], [24b18, 24b18], [24b86, 24b86],
    [24b99, 24b99], [24cba, 24cba], [24ce5, 24ce5], [24d88, 24d88],
    [24db0, 24db0], [24de1, 24de1], [24e4a, 24e4a], [24e8a, 24e8a],
    [25116, 25116], [2511b, 2511b], [251db, 251db], [2521c, 2521c],
    [2523b, 2523b], [252c1, 252c1], [25383, 25383], [25aa6, 25aa6],
    [25bac, 25bac], [25c1d, 25c1d], [25c25, 25c25], [25c75, 25c75],
    [25e9a, 25e9a], [25ee5, 25ee5], [25fed, 25fed], [26085, 26085],
    [260dd, 260dd], [26420, 26420], [2665d, 2665d], [26731, 26731],
    [2679d, 2679d], [267bd, 267bd], [2682a, 2682a], [26908, 26908],
    [26a6d, 26a6d], [26abf, 26abf], [26b90, 26b90], [26c53, 26c53],
    [26df2, 26df2], [26e1a, 26e1a], [26f17, 26f17], [2702c, 2702c],
    [27099, 27099], [27205, 27205], [27208, 27208], [2720d, 2720d],
    [2723c, 2723c], [27241, 27241], [272d0, 272d0], [273b5, 273b5],
    [27414, 27414], [27683, 27683], [278e9, 278e9], [2791f, 2791f],
    [27964, 27964], [27981, 27981], [279ad, 279ad], [279f9, 279f9],
    [27aa2, 27aa2], [27b08, 27b08], [27b0a, 27b0a], [27bc8, 27bc8],
    [27bca, 27bca], [27bd7, 27bd7], [27c72, 27c72], [27c98, 27c98],
    [27cd0, 27cd0], [27d96, 27d96], [27e68, 27e68], [27e76, 27e76],
    [27e7d, 27e7d], [27ea8, 27ea8], [27ef6, 27ef6], [27fc5, 27fc5],
    [27fdd, 27fdd], [28019, 28019], [282e6, 282e6], [2841b, 2841b],
    [286f3, 286f3], [28710, 28710], [2876b, 2876b], [28798, 28798],
    [28842, 28842], [28baa, 28baa], [28cdb, 28cdb], [28cff, 28cff],
    [28d4e, 28d4e], [28dd8, 28dd8], [28ec1, 28ec1], [28ee5, 28ee5],
    [28fdb, 28fdb], [29156, 29156], [292bf, 292bf], [29346, 29346],
    [29389, 29389], [293a5, 293a5], [294bd, 294bd], [295ca, 295ca],
    [295f1, 295f1], [296f9, 296f9], [29987, 29987], [29b61, 29b61],
    [29c81, 29c81], [29f68, 29f68], [29fbc, 29fbc], [29fdb, 29fdb],
    [2a0fc, 2a0fc], [2a11b, 2a11b], [2a136, 2a136], [2a172, 2a172],
    [2a4f7, 2a4f7], [2a56f, 2a56f], [2a5a5, 2a5a5]**/


    namespace {
    const static UnicodeSet::run_t __xi_Set_runs[] = {
    {Empty, 419}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
    {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 4}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 4}, {Empty, 3}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 9}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 4}, {Mixed, 7}, {Empty, 5},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 3}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 17}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10},
    {Mixed, 4}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 10}, {Mixed, 4}, {Empty, 1}, {Mixed, 4}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 6}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 2}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 7}, {Mixed, 3}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 4}, {Empty, 2},
    {Mixed, 2}, {Empty, 5}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 7}, {Mixed, 4}, {Empty, 6},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 5}, {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 3}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2835}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 15},
    {Mixed, 5}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 8}, {Mixed, 2}, {Empty, 23}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 31}, {Mixed, 3}, {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 24}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 11}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 18},
    {Mixed, 2}, {Empty, 2}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 8}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 8}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 29394}};
    const static UnicodeSet::bitquad_t  __xi_Set_quads[] = {
    0x00400000, 0x40000000, 0x00040000, 0x00000008, 0x00000080, 0x00002200,
    0x00000400, 0x08000001, 0x00080000, 0x00002800, 0x00004000, 0x00008000,
    0x00040000, 0x00000010, 0x80000000, 0x00000020, 0x01000000, 0x00000040,
    0x02000000, 0x00000200, 0x00000040, 0x00000080, 0x08000000, 0x00000002,
    0x00000200, 0x00200000, 0x88000020, 0x000000c0, 0x00000010, 0x01000000,
    0x00100000, 0x00000080, 0x10000000, 0x00002000, 0x00000008, 0x02000000,
    0x00800000, 0x00000080, 0x20000000, 0x00008000, 0x00000001, 0x00000404,
    0x00000001, 0x00000200, 0x00400020, 0x10000000, 0x00000402, 0x00000080,
    0x00040000, 0x00800000, 0x00004000, 0x00200000, 0x02000000, 0x80800800,
    0x00000400, 0x00000020, 0x00000002, 0x00000080, 0x08000000, 0x80000000,
    0x08000000, 0x00080000, 0x00000008, 0x00000008, 0x00040000, 0x00004000,
    0x10000000, 0x00000400, 0x00400000, 0x00020000, 0x00000800, 0x02000004,
    0x00040000, 0x00400000, 0x00004000, 0x40000000, 0x01000000, 0x00001000,
    0x08000010, 0x00000001, 0x04000000, 0x01000000, 0x00011000, 0x00002060,
    0x00008000, 0x20000000, 0x10000000, 0x08000000, 0x00008000, 0x00000400,
    0x00020000, 0x00000100, 0x00200000, 0x04000400, 0x00002000, 0x00010000,
    0x00080000, 0x00000240, 0x00404000, 0x00000008, 0x00000080, 0x00002000,
    0x00000084, 0x00001000, 0x00002000, 0x02000040, 0x00008000, 0x04000000,
    0x00000020, 0x01001000, 0x00000010, 0x00008000, 0x00200200, 0x10000002,
    0x40000000, 0x00000001, 0x03000000, 0x00040000, 0x01020000, 0x00000002,
    0x00200000, 0x00000400, 0x00000004, 0x00100000, 0x40000000, 0x00090000,
    0x80000000, 0x00000040, 0x00000800, 0x00010000, 0x00040000, 0x01000000,
    0x00040000, 0x40000000, 0x04000000, 0x20000000, 0x00000004, 0x00000100,
    0x00000001, 0x00000010, 0x00808400, 0x02400000, 0x00000028, 0x00010000,
    0x00840000, 0x00000001, 0x00000020, 0x00000400, 0x00000400, 0x20000080,
    0xa0000000, 0x00200000, 0x00020000, 0x00008000, 0x80000002, 0x00001000,
    0x02000014, 0x0e000000, 0x00002000, 0x00100000, 0x00100001, 0x00000080,
    0x00400000, 0x00004000, 0x08000000, 0x00000800, 0x20000000, 0x00200000,
    0x10000000, 0x02000000, 0x08000000, 0x00004000, 0x00000040, 0x00400000,
    0x20000000, 0x00040000, 0x00008000, 0x00400000, 0x00000400, 0x00000080,
    0x00000001, 0x00000080, 0x01000000, 0x01000000, 0x40000000, 0x08000000,
    0x00010000, 0x00001000, 0x00000040, 0x00010000, 0x00000820, 0x04000000,
    0x08000000, 0x00040200, 0x00240000, 0x03000000, 0x00000020, 0x00000400,
    0x20000000, 0x00000010, 0x40000000, 0x10000000, 0x00100008, 0x00000020,
    0x00000100, 0x01000000, 0x00200001, 0x00000040, 0x00010000, 0x00000080,
    0x00004000, 0x00000004, 0x00040000, 0x00000200, 0x00100030, 0x00800000,
    0x000000a0, 0x00000800, 0x00000004, 0x00200000, 0x00000800, 0x10000000,
    0x00400000, 0x80040000, 0x00000012, 0x80000000, 0x00000004, 0x00020000,
    0x00040000, 0x00010000, 0x04020000, 0x00200000, 0x80000000, 0x00000001,
    0x00008100, 0x00200000, 0x00000220, 0x01000080, 0x20000400, 0x00000080,
    0x80000000, 0x00800810, 0x00000010, 0x00004000, 0x00000020, 0x00008000,
    0x00010000, 0x01080000, 0x00040000, 0x00000004, 0x00000300, 0x00020000,
    0x00008800, 0x00100000, 0x00002000, 0x00100000, 0x80000000, 0x02000000,
    0x00210000, 0x00002000, 0x10000800, 0x00000002, 0x02008000, 0x10000000,
    0x20020000, 0x00000100, 0x00000200, 0x00080000, 0x10000000, 0x04000000,
    0x00800000, 0x00000004, 0x00400000, 0x00880000, 0x00020000, 0x00000004,
    0x00002000, 0x00200000, 0x00800000, 0x00000400, 0x00100000, 0x10001000,
    0x04000000, 0x04000000, 0x02000000, 0x00001000, 0x00002000, 0x00000100,
    0x00040000, 0x00020000, 0x00000004, 0x00200000, 0x08000000, 0x40000000,
    0x00080000, 0x00010000, 0x00000002, 0x00000800, 0x00000080, 0x00000080,
    0x00040000, 0x00004000, 0x00000010, 0x04000000, 0x00008000, 0x00004000,
    0x00000400, 0x04000000, 0x10000000, 0x00000080, 0x00040200, 0x00100000,
    0x00000020, 0x00000008, 0x00000400, 0x02000000, 0x00000002, 0x00000800,
    0x20000000, 0x80000000, 0x40000000, 0x00000002, 0x00002000, 0x40000000,
    0x00004000, 0x00000008, 0x00100000, 0x00200000, 0x000a6086, 0x00000200,
    0x00180004, 0x00800000, 0x00000400, 0x00001040, 0x00000400, 0x00004000,
    0x00001000, 0x00100000, 0x00800000, 0x04100000, 0x00000080, 0x00080000,
    0x00009002, 0x00000001, 0x00020000, 0x00040000, 0x00010000, 0x01200000,
    0x02000040, 0x04000000, 0x00000020, 0x00000100, 0x00010000, 0x00000002,
    0x00000400, 0x00000400, 0x08400000, 0x08000000, 0x10000000, 0x08000000,
    0x00000002, 0x00000008, 0x00000040, 0x00001000, 0x20000000, 0x00000020,
    0x00200000, 0x04000000, 0x00000020, 0x00002000, 0x00000020, 0x20000000,
    0x00000001, 0x20000000, 0x00020000, 0x20000000, 0x20000000, 0x00000400,
    0x00000100, 0x00002000, 0x80000000, 0x00010000, 0x00080000, 0x00040000,
    0x04000000, 0x00800000, 0x00001000, 0x02000000, 0x00002120, 0x10000000,
    0x00000002, 0x00010000, 0x00200000, 0x00100000, 0x00000008, 0x00000200,
    0x80000000, 0x00000010, 0x00000002, 0x00002000, 0x02000000, 0x00000004,
    0x00000500, 0x00800500, 0x00040000, 0x01000000, 0x00010000, 0x00400000,
    0x20400100, 0x00000100, 0x00400000, 0x20000020, 0x02000000, 0x00000040,
    0x08000000, 0x00080000, 0x00010000, 0x00000800, 0x01000000, 0x00000004,
    0x00000400, 0x08000000, 0x80000000, 0x00004000, 0x01000000, 0x00000002,
    0x00000020, 0x08000000, 0x00400000, 0x80000000, 0x00000040, 0x00000200,
    0x00000020, 0x20000000, 0x00000400, 0x00020000, 0x02000000, 0x00000080,
    0x00000002, 0x00000002, 0x00000100, 0x10000000, 0x08000000, 0x10000000,
    0x08000000, 0x00400000, 0x00040000, 0x00800000, 0x00008000, 0x00000020};
    }

    const static UnicodeSet xi_Set{const_cast<UnicodeSet::run_t *>(__xi_Set_runs), 637, 0, const_cast<UnicodeSet::bitquad_t *>(__xi_Set_quads), 450, 0};

    /** Code Point Ranges for yao
    [3478, 3478], [347e, 347e], [3658, 3658], [3754, 3754], [3781, 3781],
    [37f1, 37f1], [3acd, 3acd], [3acf, 3ad0], [3d2d, 3d2d], [3e53, 3e53],
    [3fd1, 3fd1], [404f, 404f], [4058, 4058], [409a, 409a], [4197, 4197],
    [419e, 419e], [42c2, 42c2], [4301, 4301], [446c, 446c], [4504, 4504],
    [45b4, 45b4], [4645, 4645], [46bb, 46bb], [481b, 481b], [4bda, 4bda],
    [4ce9, 4ce9], [4d20, 4d20], [4e48, 4e48], [4ef8, 4ef8], [4f7b, 4f7b],
    [5004, 5004], [5060, 5060], [509c, 509c], [50e5, 50e5], [530b, 530b],
    [5406, 5406], [54ac, 54ac], [5593, 5593], [55c2, 55c2], [5699, 5699],
    [579a, 579a], [582f, 582f], [592d, 592d], [5996, 5996], [59da, 59da],
    [5a79, 5a79], [5ab1, 5ab1], [5b08, 5b08], [5b8e, 5b8e], [5c86, 5c86],
    [5d24, 5d24], [5d3e, 5d3e], [5da2, 5da2], [5da4, 5da4], [5e7a, 5e7a],
    [5e7c, 5e7c], [5fad, 5fad], [5fbc, 5fbc], [602e, 602e], [604c, 604c],
    [612e, 612e], [62ad, 62ad], [63c4, 63c4], [6447, 6447], [64bd, 64bd],
    [669a, 669a], [66dc, 66dc], [6773, 6773], [6796, 6796], [67fc, 67fc],
    [6946, 6946], [699a, 699a], [69a3, 69a3], [6a02, 6a02], [6bbd, 6bbd],
    [6d2e, 6d2e], [6deb, 6deb], [6e94, 6e94], [7039, 7039], [70c4, 70c4],
    [70d1, 70d1], [718e, 718e], [71ff, 71ff], [723b, 723b], [72d5, 72d5],
    [7336, 7336], [733a, 733a], [735f, 735f], [7385, 7385], [73e7, 73e7],
    [7476, 7476], [7531, 7531], [7711, 7711], [7a7e, 7a7e], [7a85, 7a85],
    [7a88, 7a88], [7a91, 7a91], [7a94, 7a94], [7aaf, 7ab0], [7b44, 7b44],
    [7bb9, 7bb9], [7d04, 7d04], [7e47, 7e47], [7e85, 7e85], [8000, 8000],
    [80b4, 80b4], [8170, 8170], [8200, 8200], [825e, 825e], [82ed, 82ed],
    [846f, 846f], [847d, 847d], [84d4, 84d4], [8558, 8558], [85e5, 85e5],
    [888e, 888e], [8981, 8981], [899e, 899e], [8a1e, 8a1e], [8a4f, 8a4f],
    [8b21, 8b21], [8b91, 8b91], [8daf, 8daf], [8e30, 8e30], [8efa, 8efa],
    [9065, 9065], [9080, 9080], [929a, 929a], [9390, 9390], [9470, 9470],
    [95c4, 95c4], [9676, 9676], [9683, 9683], [977f, 977f], [9864, 9864],
    [98bb, 98bb], [9906, 9906], [991a, 991a], [9a15, 9a15], [9a41, 9a41],
    [9c29, 9c29], [9d01, 9d01], [9d22, 9d22], [9dc2, 9dc2], [9dd5, 9dd5],
    [9f69, 9f69], [20320, 20320], [20369, 20369], [203c8, 203c8],
    [20450, 20450], [2057b, 2057b], [207cb, 207cb], [208a9, 208a9],
    [208d1, 208d1], [20e51, 20e51], [211a9, 211a9], [2151c, 2151c],
    [216d9, 216d9], [2175b, 2175b], [21769, 21769], [218b9, 218b9],
    [218e0, 218e0], [21a07, 21a07], [21a78, 21a78], [21d82, 21d82],
    [21eaf, 21eaf], [2208a, 2208a], [22179, 22179], [221b7, 221b7],
    [221bd, 221bd], [22206, 22206], [22299, 22299], [222c7, 222c7],
    [22448, 22448], [2274d, 2274d], [22e87, 22e87], [238f3, 238f3],
    [23a18, 23a18], [240bc, 240bc], [24136, 24136], [2449d, 2449d],
    [246ad, 246ad], [24afa, 24afa], [24b14, 24b14], [24b16, 24b16],
    [24e83, 24e83], [24fab, 24fab], [25052, 25052], [250e7, 250e7],
    [250fa, 250fa], [2533a, 2533a], [25923, 25923], [25939, 25939],
    [25996, 25996], [25aaf, 25aaf], [25b13, 25b13], [25e71, 25e71],
    [261b8, 261b8], [261ec, 261ec], [26537, 26537], [26871, 26871],
    [2690b, 2690b], [2695d, 2695d], [2698c, 2698c], [26fba, 26fba],
    [26fbe, 26fbe], [2710e, 2710e], [271e0, 271e0], [27354, 27354],
    [2783d, 2783d], [278a2, 278a2], [2792e, 2792e], [27dcb, 27dcb],
    [27f4e, 27f4e], [284f3, 284f3], [28614, 28614], [28c67, 28c67],
    [28e4b, 28e4b], [292c3, 292c3], [29457, 29457], [29474, 29474],
    [29738, 29738], [29892, 29892], [29963, 29963], [29a34, 29a34],
    [29a7c, 29a7c], [29b17, 29b17], [29bdb, 29bdb], [29cbb, 29cbb],
    [29cd4, 29cd4], [29fd5, 29fd5], [2a42f, 2a42f], [2a590, 2a590]**/


    namespace {
    const static UnicodeSet::run_t __yao_Set_runs[] = {
    {Empty, 419}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 26}, {Mixed, 3},
    {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 11}, {Mixed, 2}, {Empty, 15}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2845}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 43}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 82}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 33}, {Mixed, 2},
    {Empty, 27}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 47},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 11}, {Mixed, 2},
    {Empty, 21}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 23},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 29395}};
    const static UnicodeSet::bitquad_t  __yao_Set_quads[] = {
    0x41000000, 0x01000000, 0x00100000, 0x00000002, 0x00020000, 0x0001a000,
    0x00002000, 0x00080000, 0x00020000, 0x01008000, 0x04000000, 0x40800000,
    0x00000004, 0x00000002, 0x00001000, 0x00000010, 0x00100000, 0x00000020,
    0x08000000, 0x08000000, 0x04000000, 0x00000200, 0x00000001, 0x00000100,
    0x01000000, 0x08000000, 0x00000010, 0x00000001, 0x10000000, 0x00000020,
    0x00000800, 0x00000040, 0x00001000, 0x00080000, 0x00000004, 0x02000000,
    0x04000000, 0x00008000, 0x00002000, 0x00400000, 0x04000000, 0x02000000,
    0x00020000, 0x00000100, 0x00004000, 0x00000040, 0x40000010, 0x00000014,
    0x14000000, 0x10002000, 0x00004000, 0x00001000, 0x00004000, 0x00002000,
    0x00000010, 0x00000080, 0x20000000, 0x04000000, 0x10000000, 0x00080000,
    0x00400000, 0x10000000, 0x00000040, 0x04000000, 0x00000008, 0x00000004,
    0x20000000, 0x00004000, 0x00000800, 0x00100000, 0x02000000, 0x00020010,
    0x00004000, 0x80000000, 0x08000000, 0x00200000, 0x04400000, 0x80000000,
    0x00000020, 0x00000080, 0x00400000, 0x00020000, 0x00020000, 0x40000000,
    0x00120120, 0x00018000, 0x00000010, 0x02000000, 0x00000010, 0x00000080,
    0x00000020, 0x00000001, 0x00100000, 0x00010000, 0x00000001, 0x40000000,
    0x00002000, 0x20008000, 0x00100000, 0x01000000, 0x00000020, 0x00004000,
    0x40000002, 0x40000000, 0x00008000, 0x00000002, 0x00020000, 0x00008000,
    0x00010000, 0x04000000, 0x00000020, 0x00000001, 0x04000000, 0x00010000,
    0x00010000, 0x00000010, 0x00400000, 0x00000008, 0x80000000, 0x00000010,
    0x08000000, 0x04000040, 0x00200000, 0x00000002, 0x00000200, 0x00000002,
    0x00000004, 0x00200004, 0x00000200, 0x00000001, 0x00000200, 0x00000100,
    0x00010000, 0x08000000, 0x00000800, 0x00000200, 0x00020000, 0x00020000,
    0x00000200, 0x10000000, 0x02000000, 0x08000000, 0x00000200, 0x02000000,
    0x00000001, 0x00000080, 0x01000000, 0x00000004, 0x00008000, 0x00000400,
    0x02000000, 0x20800000, 0x00000040, 0x02000000, 0x00000080, 0x00000100,
    0x00002000, 0x00000080, 0x00080000, 0x01000000, 0x10000000, 0x00400000,
    0x20000000, 0x00002000, 0x04000000, 0x00500000, 0x00000008, 0x00000800,
    0x00040000, 0x04000080, 0x04000000, 0x02000008, 0x00400000, 0x00008000,
    0x00080000, 0x00020000, 0x01000000, 0x00001000, 0x00800000, 0x00020000,
    0x00000800, 0x20000000, 0x00001000, 0x44000000, 0x00004000, 0x00000001,
    0x00100000, 0x20000000, 0x00000004, 0x00004000, 0x00000800, 0x00004000,
    0x00080000, 0x00100000, 0x00000080, 0x00000800, 0x00000008, 0x00800000,
    0x00100000, 0x01000000, 0x00040000, 0x00000008, 0x00100000, 0x10000000,
    0x00800000, 0x08000000, 0x08000000, 0x00100000, 0x00200000, 0x00008000,
    0x00010000};
    }

    const static UnicodeSet yao_Set{const_cast<UnicodeSet::run_t *>(__yao_Set_runs), 393, 0, const_cast<UnicodeSet::bitquad_t *>(__yao_Set_quads), 211, 0};

    /** Code Point Ranges for ma
    [347b, 347b], [3570, 3570], [3984, 3984], [3a38, 3a38], [3fba, 3fba],
    [401b, 401b], [4023, 4023], [45eb, 45eb], [48d5, 48d5], [49de, 49de],
    [4be6, 4be6], [4cf8, 4cf8], [4e48, 4e48], [508c, 508c], [55ce, 55ce],
    [561b, 561c], [569c, 569c], [5abd, 5abd], [5b24, 5b24], [5b56, 5b56],
    [62b9, 62b9], [6469, 6469], [69aa, 69aa], [6ea4, 6ea4], [7298, 7298],
    [7341, 7341], [746a, 746a], [75f2, 75f2], [7770, 7770], [78bc, 78bc],
    [7923, 7923], [79a1, 79a1], [8534, 8534], [879e, 879e], [87c6, 87c7],
    [8c89, 8c8a], [93b7, 93b7], [9581, 9581], [9761, 9761], [99ac, 99ac],
    [99e1, 99e1], [9a40, 9a40], [9b15, 9b15], [9c22, 9c22], [9dcc, 9dcc],
    [9ebb, 9ebb], [9ebd, 9ebd], [21ee4, 21ee4], [2227f, 22280],
    [222da, 222da], [22cc0, 22cc0], [23a1c, 23a1c], [24cc2, 24cc2],
    [2500f, 2500f], [2524a, 2524a], [25275, 25275], [259d3, 259d3],
    [27aa8, 27aa8], [28cff, 28cff], [2902a, 2902a], [29283, 29283],
    [29536, 29537], [29a32, 29a32], [29d9e, 29d9e], [2a40e, 2a40e],
    [2a49c, 2a49c], [2a4f9, 2a4f9]**/


    namespace {
    const static UnicodeSet::run_t __ma_Set_runs[] = {
    {Empty, 419}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 45}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 58}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 91}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 56}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3073}, {Mixed, 1}, {Empty, 27}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 79}, {Mixed, 1}, {Empty, 105},
    {Mixed, 1}, {Empty, 149}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 17}, {Mixed, 2}, {Empty, 58}, {Mixed, 1}, {Empty, 262},
    {Mixed, 1}, {Empty, 145}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 29400}};
    const static UnicodeSet::bitquad_t  __ma_Set_quads[] = {
    0x08000000, 0x00010000, 0x00000010, 0x01000000, 0x04000000, 0x08000000,
    0x00000008, 0x00000800, 0x00200000, 0x40000000, 0x00000040, 0x01000000,
    0x00000100, 0x00001000, 0x00004000, 0x18000000, 0x10000000, 0x20000000,
    0x00000010, 0x00400000, 0x02000000, 0x00000200, 0x00000400, 0x00000010,
    0x01000000, 0x00000002, 0x00000400, 0x00040000, 0x00010000, 0x10000000,
    0x00000008, 0x00000002, 0x00100000, 0x40000000, 0x000000c0, 0x00000600,
    0x00800000, 0x00000002, 0x00000002, 0x00001000, 0x00000002, 0x00000001,
    0x00200000, 0x00000004, 0x00001000, 0x28000000, 0x00000010, 0x80000000,
    0x00000001, 0x04000000, 0x00000001, 0x10000000, 0x00000004, 0x00008000,
    0x00000400, 0x00200000, 0x00080000, 0x00000100, 0x80000000, 0x00000400,
    0x00000008, 0x00c00000, 0x00040000, 0x40000000, 0x00004000, 0x10000000,
    0x02000000};
    }

    const static UnicodeSet ma_Set{const_cast<UnicodeSet::run_t *>(__ma_Set_runs), 127, 0, const_cast<UnicodeSet::bitquad_t *>(__ma_Set_quads), 67, 0};

    /** Code Point Ranges for lüe
    [347c, 347c], [35c9, 35c9], [40ae, 40ae], [430e, 430e], [46da, 46da],
    [5260, 5260], [5719, 5719], [5bfd, 5bfd], [63a0, 63a0], [64fd, 64fd],
    [7387, 7387], [7565, 7565], [85e5, 85e5], [8a7b, 8a7b], [92dd, 92dd],
    [2088c, 2088c], [20f1f, 20f1f], [262b9, 262b9], [273be, 273be],
    [2740b, 2740b], [2742f, 2742f], [27440, 27440], [2754c, 2754c],
    [2a145, 2a145]**/


    namespace {
    const static UnicodeSet::run_t __lüe_Set_runs[] = {
    {Empty, 419}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 86},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 92}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 116}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 131},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 66}, {Mixed, 1},
    {Empty, 2989}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 668},
    {Mixed, 1}, {Empty, 135}, {Mixed, 1}, {Empty, 2}, {Mixed, 3},
    {Empty, 7}, {Mixed, 1}, {Empty, 351}, {Mixed, 1}, {Empty, 29429}};
    const static UnicodeSet::bitquad_t  __lüe_Set_quads[] = {
    0x10000000, 0x00000200, 0x00004000, 0x00004000, 0x04000000, 0x00000001,
    0x02000000, 0x20000000, 0x00000001, 0x20000000, 0x00000080, 0x00000020,
    0x00000020, 0x08000000, 0x20000000, 0x00001000, 0x80000000, 0x02000000,
    0x40000000, 0x00000800, 0x00008000, 0x00000001, 0x00001000, 0x00000020};
    }

    const static UnicodeSet lüe_Set{const_cast<UnicodeSet::run_t *>(__lüe_Set_runs), 45, 0, const_cast<UnicodeSet::bitquad_t *>(__lüe_Set_quads), 24, 0};

    /** Code Point Ranges for zhao
    [347f, 347f], [355a, 355a], [387d, 387d], [3a04, 3a04], [3df9, 3df9],
    [3e7f, 3e7f], [4203, 4203], [435c, 435c], [436e, 436e], [4472, 4472],
    [4708, 4708], [4756, 4756], [47b4, 47b4], [4c2b, 4c2b], [4f4b, 4f4b],
    [4f7b, 4f7b], [5146, 5146], [53ec, 53ec], [5541, 5541], [5545, 5545],
    [5632, 5632], [5797, 5797], [59b1, 59b1], [627e, 627e], [62db, 62db],
    [65d0, 65d0], [662d, 662d], [6641, 6641], [66cc, 66cc], [671d, 671d],
    [679b, 679b], [6843, 6843], [68f9, 68f9], [6ac2, 6ac2], [6cbc, 6cbc],
    [6dd6, 6dd6], [6fef, 6fef], [70a4, 70a4], [7167, 7167], [722a, 722a],
    [72e3, 72e3], [7475, 7475], [76bd, 76bd], [76c4, 76c4], [7740, 7740],
    [7abc, 7abc], [7b0a, 7b0a], [7b8c, 7b8c], [7f69, 7f69], [7f84, 7f84],
    [8081, 8081], [8087, 8088], [83ec, 83ec], [8457, 8457], [86a4, 86a4],
    [8a54, 8a54], [8d99, 8d99], [91d7, 91d7], [91fd, 91fd], [924a, 924a],
    [9363, 9363], [99cb, 99cb], [9ba1, 9ba1], [9ced, 9ced], [9f02, 9f02],
    [20556, 20556], [2056d, 2056d], [207c5, 207c5], [20804, 20804],
    [20ee5, 20ee5], [2158e, 2158e], [21c5c, 21c5c], [2206c, 2206c],
    [225c8, 225c8], [22870, 22870], [232a7, 232a7], [232cd, 232cd],
    [2381c, 2381c], [24352, 24352], [24457, 24457], [24654, 24654],
    [24fd8, 24fd8], [253e8, 253e8], [25894, 25894], [25d64, 25d64],
    [25dee, 25dee], [265d4, 265d4], [26b14, 26b14], [26e6b, 26e6b],
    [26e93, 26e93], [27cdd, 27cdd], [27cfb, 27cfb], [28c7b, 28c7b],
    [28e78, 28e78], [29600, 29600]**/


    namespace {
    const static UnicodeSet::run_t __zhao_Set_runs[] = {
    {Empty, 419}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 9}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 24},
    {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 69}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 17}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 30},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 33}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 2865}, {Mixed, 2}, {Empty, 18}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 52},
    {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 81},
    {Mixed, 2}, {Empty, 41}, {Mixed, 1}, {Empty, 89}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 75},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 26}, {Mixed, 2},
    {Empty, 113}, {Mixed, 2}, {Empty, 123}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 29519}};
    const static UnicodeSet::bitquad_t  __zhao_Set_quads[] = {
    0x80000000, 0x04000000, 0x20000000, 0x00000010, 0x02000000, 0x80000000,
    0x00000008, 0x10000000, 0x00004000, 0x00040000, 0x00000100, 0x00400000,
    0x00100000, 0x00000800, 0x00000800, 0x08000000, 0x00000040, 0x00001000,
    0x00000022, 0x00040000, 0x00800000, 0x00020000, 0x40000000, 0x08000000,
    0x00010000, 0x00002000, 0x00000002, 0x00001000, 0x20000000, 0x08000000,
    0x00000008, 0x02000000, 0x00000004, 0x10000000, 0x00400000, 0x00008000,
    0x00000010, 0x00000080, 0x00000400, 0x00000008, 0x00200000, 0x20000000,
    0x00000010, 0x00000001, 0x10000000, 0x00000400, 0x00001000, 0x00000200,
    0x00000010, 0x00000182, 0x00001000, 0x00800000, 0x00000010, 0x00100000,
    0x02000000, 0x00800000, 0x20000000, 0x00000400, 0x00000008, 0x00000800,
    0x00000002, 0x00002000, 0x00000004, 0x00400000, 0x00002000, 0x00000020,
    0x00000010, 0x00000020, 0x00004000, 0x10000000, 0x00001000, 0x00000100,
    0x00010000, 0x00000080, 0x00002000, 0x10000000, 0x00040000, 0x00800000,
    0x00100000, 0x01000000, 0x00000100, 0x00100000, 0x00000010, 0x00004000,
    0x00100000, 0x00100000, 0x00000800, 0x00080000, 0x20000000, 0x08000000,
    0x08000000, 0x01000000, 0x00000001};
    }

    const static UnicodeSet zhao_Set{const_cast<UnicodeSet::run_t *>(__zhao_Set_runs), 167, 0, const_cast<UnicodeSet::bitquad_t *>(__zhao_Set_quads), 93, 0};

    /** Code Point Ranges for zhai
    [3480, 3480], [386f, 386f], [3a5f, 3a5f], [3fb9, 3fb9], [4349, 4349],
    [4431, 4431], [451d, 451d], [4e9d, 4e9d], [5074, 5074], [50b5, 50b5],
    [5387, 5387], [538f, 538f], [5547, 5547], [568c, 568c], [5b85, 5b85],
    [5be8, 5be8], [5ea6, 5ea6], [62a7, 62a7], [635a, 635a], [6458, 6458],
    [64c7, 64c7], [64ff, 64ff], [67f4, 67f4], [69b8, 69b8], [6aa1, 6aa1],
    [7274, 7274], [75b5, 75b5], [7635, 7635], [7826, 7826], [796d, 796d],
    [7a84, 7a84], [7c00, 7c00], [7fdf, 7fdf], [81aa, 81aa], [8cac, 8cac],
    [9259, 9259], [99d8, 99d8], [9ab4, 9ab4], [9f4a, 9f4b], [203f0, 203f0],
    [2045e, 2045e], [207b6, 207b6], [20af8, 20af8], [20d60, 20d60],
    [20dd2, 20dd2], [21153, 21153], [21365, 21365], [222ff, 222ff],
    [22bcc, 22bcc], [22d28, 22d28], [23a6d, 23a6d], [247ae, 247ae],
    [24892, 24892], [24ee6, 24ee6], [2536a, 2536a], [25785, 25785],
    [25c3e, 25c3e], [26471, 26471], [26927, 26927], [27cbb, 27cbb],
    [27ecd, 27ecd], [2816a, 2816a], [2874b, 2874b], [293ea, 293ea],
    [2977f, 2977f], [29b2b, 29b2b], [29c73, 29c73], [2a025, 2a025],
    [2a47d, 2a47d], [2a5d2, 2a5d3], [2a607, 2a607], [2a628, 2a628],
    [2a68e, 2a68e]**/


    namespace {
    const static UnicodeSet::run_t __zhai_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 75}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 23}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 61},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 87}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 59}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 2852}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 123}, {Mixed, 1}, {Empty, 70},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 105}, {Mixed, 1},
    {Empty, 105}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 50},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 155}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 100},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 29387}};
    const static UnicodeSet::bitquad_t  __zhai_Set_quads[] = {
    0x00000001, 0x00008000, 0x80000000, 0x02000000, 0x00000200, 0x00020000,
    0x20000000, 0x20000000, 0x00100000, 0x00200000, 0x00008080, 0x00000080,
    0x00001000, 0x00000020, 0x00000100, 0x00000040, 0x00000080, 0x04000000,
    0x01000000, 0x00000080, 0x80000000, 0x00100000, 0x01000000, 0x00000002,
    0x00100000, 0x00200000, 0x00200000, 0x00000040, 0x00002000, 0x00000010,
    0x00000001, 0x80000000, 0x00000400, 0x00001000, 0x02000000, 0x01000000,
    0x00100000, 0x00000c00, 0x00010000, 0x40000000, 0x00400000, 0x01000000,
    0x00000001, 0x00040000, 0x00080000, 0x00000020, 0x80000000, 0x00001000,
    0x00000100, 0x00002000, 0x00004000, 0x00040000, 0x00000040, 0x00000400,
    0x00000020, 0x40000000, 0x00020000, 0x00000080, 0x08000000, 0x00002000,
    0x00000400, 0x00000800, 0x00000400, 0x80000000, 0x00000800, 0x00080000,
    0x00000020, 0x20000000, 0x000c0000, 0x00000080, 0x00000100, 0x00004000};
    }

    const static UnicodeSet zhai_Set{const_cast<UnicodeSet::run_t *>(__zhai_Set_runs), 141, 0, const_cast<UnicodeSet::bitquad_t *>(__zhai_Set_quads), 72, 0};

    /** Code Point Ranges for zha
    [3480, 3480], [350d, 350d], [35ec, 35ec], [379a, 379a], [3878, 3878],
    [398b, 398b], [3aa5, 3aa5], [3cd0, 3cd0], [3d19, 3d19], [3fb4, 3fb4],
    [4039, 4039], [40ce, 40ce], [410d, 410d], [419b, 419b], [421f, 421f],
    [42cf, 42cf], [42fe, 42fe], [4412, 4412], [4562, 4562], [45b3, 45b3],
    [4644, 4644], [46fd, 46fd], [47fb, 47fb], [4977, 4977], [4b9c, 4b9c],
    [4ba2, 4ba2], [4c79, 4c79], [4d59, 4d59], [4da5, 4da5], [4e4d, 4e4d],
    [505e, 505e], [5067, 5067], [518c, 518c], [5273, 5273], [5284, 5284],
    [538f, 538f], [5412, 5412], [548b, 548b], [54a4, 54a4], [54c6, 54c6],
    [54f3, 54f3], [558b, 558b], [55a5, 55a5], [55b3, 55b3], [56c3, 56c3],
    [5953, 5953], [5bb1, 5bb1], [600d, 600d], [624e, 624e], [6260, 6260],
    [62af, 62af], [62c3, 62c3], [6313, 6313], [63d2, 63d2], [63f8, 63f8],
    [6429, 6429], [6463, 6463], [64d6, 64d6], [672d, 672d], [67de, 67de],
    [67e4, 67e5], [67f5, 67f5], [6805, 6805], [6942, 6942], [69a8, 69a8],
    [6a1d, 6a1d], [6e23, 6e23], [6e2b, 6e2b], [6ea0, 6ea0], [6f73, 6f73],
    [7079, 7079], [70b8, 70b8], [7160, 7160], [7250, 7250], [7534, 7534],
    [75c4, 75c4], [76bb, 76bb], [7728, 7728], [781f, 781f], [7b2e, 7b2e],
    [7b91, 7b91], [7d2e, 7d2e], [802b, 802b], [81aa, 81aa], [82f2, 82f2],
    [82f4, 82f4], [8516, 8516], [85f8, 85f8], [86b1, 86b1], [86bb, 86bb],
    [8721, 8721], [89f0, 89f0], [8a50, 8a50], [8ace, 8ace], [8b2f, 8b2f],
    [8b47, 8b47], [8b57, 8b57], [8e37, 8e37], [8e45, 8e45], [8ecb, 8ecb],
    [91a1, 91a1], [9358, 9358], [9598, 9598], [9705, 9705], [97a2, 97a2],
    [9b93, 9b93], [9bba, 9bba], [9c08, 9c08], [9f47, 9f47], [9f5f, 9f5f],
    [9f70, 9f70], [20379, 20379], [204e3, 204e3], [2075a, 2075a],
    [2075d, 2075d], [20899, 20899], [208a1, 208a1], [20b6f, 20b6f],
    [20be9, 20be9], [20c0f, 20c0f], [20f63, 20f63], [213ab, 213ab],
    [215f8, 215f8], [217e2, 217e2], [22104, 22104], [2256e, 2256e],
    [229d6, 229d6], [229fb, 229fb], [236fd, 236fd], [237e6, 237e6],
    [239d6, 239d6], [23e67, 23e67], [23f5b, 23f5b], [24073, 24073],
    [24229, 24229], [24868, 24868], [24c26, 24c26], [24d66, 24d66],
    [24e61, 24e61], [25008, 25009], [2577e, 2577e], [25867, 25867],
    [25b30, 25b30], [25c2d, 25c2d], [25e41, 25e41], [26089, 26089],
    [2646f, 2646f], [26765, 26765], [267f0, 267f0], [26ccf, 26ccf],
    [27120, 27120], [2726b, 2726b], [279fb, 279fb], [27a0a, 27a0a],
    [27a3f, 27a3f], [27a6b, 27a6b], [27b05, 27b05], [27d87, 27d87],
    [27f30, 27f30], [27f36, 27f36], [27f45, 27f45], [27fcc, 27fcc],
    [280b5, 280b5], [28153, 28153], [282d8, 282d8], [28857, 28857],
    [288a6, 288a6], [290e1, 290e1], [290f9, 290f9], [29960, 29960],
    [29a65, 29a65], [29b1f, 29b1f], [29b8e, 29b8e], [29cf6, 29cf6],
    [29db1, 29db1], [29ee2, 29ee2], [29f2b, 29f2b], [29fe4, 29fe4],
    [2a5ed, 2a5ed], [2a5f5, 2a5f5]**/


    namespace {
    const static UnicodeSet::run_t __zha_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 16}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 4}, {Empty, 4}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 17}, {Mixed, 2},
    {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 9}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 22}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 30}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 25}, {Mixed, 2}, {Empty, 2847}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 9}, {Mixed, 2},
    {Empty, 21}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 26},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 34}, {Mixed, 2}, {Empty, 103}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 58}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 59},
    {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 65},
    {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 29392}};
    const static UnicodeSet::bitquad_t  __zha_Set_quads[] = {
    0x00000001, 0x00002000, 0x00001000, 0x04000000, 0x01000000, 0x00000800,
    0x00000020, 0x00010000, 0x02000000, 0x00100000, 0x02000000, 0x00004000,
    0x00002000, 0x08000000, 0x80000000, 0x00008000, 0x40000000, 0x00040000,
    0x00000004, 0x00080000, 0x00000010, 0x20000000, 0x08000000, 0x00800000,
    0x10000000, 0x00000004, 0x02000000, 0x02000000, 0x00000020, 0x00002000,
    0x40000000, 0x00000080, 0x00001000, 0x00080000, 0x00000010, 0x00008000,
    0x00040000, 0x00000800, 0x00000010, 0x00000040, 0x00080000, 0x00000800,
    0x00080020, 0x00000008, 0x00080000, 0x00020000, 0x00002000, 0x00004000,
    0x00000001, 0x00008000, 0x00000008, 0x00080000, 0x00040000, 0x01000000,
    0x00000200, 0x00000008, 0x00400000, 0x00002000, 0x40000000, 0x00200030,
    0x00000020, 0x00000004, 0x00000100, 0x20000000, 0x00000808, 0x00000001,
    0x00080000, 0x02000000, 0x01000000, 0x00000001, 0x00010000, 0x00100000,
    0x00000010, 0x08000000, 0x00000100, 0x80000000, 0x00004000, 0x00020000,
    0x00004000, 0x00000800, 0x00000400, 0x00140000, 0x00400000, 0x01000000,
    0x08020000, 0x00000002, 0x00010000, 0x00010000, 0x00004000, 0x00008000,
    0x00800080, 0x00800000, 0x00000020, 0x00000800, 0x00000002, 0x01000000,
    0x01000000, 0x00000020, 0x00000004, 0x00080000, 0x04000000, 0x00000100,
    0x80000080, 0x00010000, 0x02000000, 0x00000008, 0x24000000, 0x02000000,
    0x00000002, 0x00008000, 0x00000200, 0x00008000, 0x00000008, 0x00000800,
    0x01000000, 0x00000004, 0x00000010, 0x00004000, 0x00400000, 0x08000000,
    0x20000000, 0x00000040, 0x00400000, 0x00000080, 0x08000000, 0x00080000,
    0x00000200, 0x00000100, 0x00000040, 0x00000040, 0x00000002, 0x00000300,
    0x40000000, 0x00000080, 0x00010000, 0x00002000, 0x00000002, 0x00000200,
    0x00008000, 0x00000020, 0x00010000, 0x00008000, 0x00000001, 0x00000800,
    0x08000000, 0x00000400, 0x80000000, 0x00000800, 0x00000020, 0x00000080,
    0x00410000, 0x00000020, 0x00001000, 0x00200000, 0x00080000, 0x01000000,
    0x00800000, 0x00000040, 0x02000002, 0x00000001, 0x00000020, 0x80000000,
    0x00004000, 0x00400000, 0x00020000, 0x00000004, 0x00000800, 0x00000010,
    0x00202000};
    }

    const static UnicodeSet zha_Set{const_cast<UnicodeSet::run_t *>(__zha_Set_runs), 293, 0, const_cast<UnicodeSet::bitquad_t *>(__zha_Set_quads), 169, 0};

    /** Code Point Ranges for yu
    [3481, 3481], [349c, 349c], [369c, 369c], [36a5, 36a5], [377c, 377c],
    [3828, 3828], [388f, 388f], [3922, 3922], [3954, 3954], [395a, 395a],
    [3965, 3965], [399b, 399b], [39bd, 39bd], [39d2, 39d2], [3a80, 3a80],
    [3b02, 3b02], [3c32, 3c32], [3cdb, 3cdb], [3cfc, 3cfc], [3d44, 3d44],
    [3d9b, 3d9b], [3dd2, 3dd2], [3e84, 3e84], [3e9e, 3e9e], [3ec0, 3ec0],
    [3f0c, 3f0c], [3f36, 3f36], [404c, 404c], [4069, 4069], [408a, 408a],
    [409b, 409b], [4128, 4128], [41b0, 41b0], [425b, 425b], [42d6, 42d6],
    [42ed, 42ed], [44ca, 44ca], [4521, 4521], [45e8, 45e8], [4618, 4618],
    [463b, 463b], [4721, 4721], [473d, 473d], [4795, 4795], [479d, 479d],
    [4893, 4893], [4896, 4896], [48a9, 48a9], [48c1, 48c1], [48ff, 48ff],
    [490b, 490b], [494f, 494f], [4a12, 4a12], [4a1e, 4a1e], [4a52, 4a52],
    [4a71, 4a71], [4a7d, 4a7d], [4afb, 4afb], [4b11, 4b11], [4b14, 4b14],
    [4b99, 4b99], [4c25, 4c25], [4d01, 4d01], [4d65, 4d65], [4d6b, 4d6b],
    [4e02, 4e02], [4e88, 4e88], [4e8e, 4e8f], [4f03, 4f03], [4f59, 4f59],
    [4fe3, 4fe3], [504a, 504a], [50b4, 50b4], [50ea, 50ea], [5125, 5125],
    [516a, 516a], [532c, 532c], [5401, 5401], [5433, 5433], [543e, 543e],
    [5537, 5537], [5539, 5539], [5581, 5581], [5585, 5585], [5590, 5590],
    [55bb, 55bb], [564a, 564a], [5662, 5662], [5673, 5673], [5704, 5704],
    [5709, 5709], [5729, 5729], [572b, 572b], [57df, 57df], [5809, 5809],
    [5823, 5823], [582c, 582c], [5965, 5965], [59a4, 59a4], [5a2a, 5a2a],
    [5a31, 5a31], [5a80, 5a80], [5aae, 5aae], [5ad7, 5ad7], [5b29, 5b29],
    [5b87, 5b87], [5b9b, 5b9b], [5bd3, 5bd3], [5bd9, 5bd9], [5c09, 5c09],
    [5cea, 5cea], [5cff, 5cff], [5d1b, 5d1b], [5d33, 5d33], [5d4e, 5d4e],
    [5d5b, 5d5b], [5d8e, 5d8e], [5dbc, 5dbc], [5ebe, 5ebe], [5f67, 5f67],
    [5fa1, 5fa1], [5fec, 5fec], [6086, 6087], [60cc, 60cc], [60d0, 60d0],
    [6108, 6109], [611a, 611a], [617e, 617e], [61ca, 61ca], [6216, 6216],
    [622b, 622b], [625c, 625c], [62d7, 62d7], [6353, 6353], [6365, 6365],
    [63c4, 63c4], [6554, 6554], [6594, 6594], [659e, 659e], [65bc, 65bc],
    [65df, 65df], [6619, 6619], [6631, 6631], [6745, 6745], [6829, 6829],
    [682f, 682f], [6859, 6859], [68a7, 68a7], [68db, 68dc], [68eb, 68eb],
    [6940, 6940], [6970, 6970], [6986, 6986], [6af2, 6af2], [6b25, 6b25],
    [6b32, 6b32], [6b48, 6b48], [6b5f, 6b5f], [6b76, 6b76], [6bd3, 6bd3],
    [6bf9, 6bf9], [6c00, 6c00], [6c59, 6c59], [6c69, 6c69], [6d74, 6d74],
    [6de2, 6de2], [6de4, 6de4], [6def, 6def], [6e1d, 6e1d], [6e61, 6e61],
    [6f01, 6f01], [6f9e, 6f9e], [6fa6, 6fa6], [6fb3, 6fb3], [706a, 706a],
    [7079, 7079], [715c, 715c], [7168, 7168], [71a8, 71a8], [71cf, 71cf],
    [71e0, 71e0], [7229, 7229], [724f, 724f], [72f3, 72f3], [7344, 7344],
    [735d, 735d], [7389, 7389], [738b, 738b], [7397, 7397], [7419, 7419],
    [741f, 741f], [7440, 7440], [745c, 745c], [74b5, 74b5], [756c, 756c],
    [75cf, 75cf], [7600, 7600], [7609, 7609], [7610, 7610], [76c2, 76c2],
    [76d3, 76d3], [776e, 776e], [77de, 77de], [7821, 7821], [7862, 7862],
    [7907, 7907], [791c, 791c], [7964, 7964], [79a6, 79a6], [79b9, 79ba],
    [7a22, 7a22], [7a36, 7a36], [7a65, 7a65], [7a7b, 7a7b], [7aac, 7aac],
    [7ab3, 7ab3], [7afd, 7afd], [7b8a, 7b8a], [7bfd, 7bfd], [7c45, 7c45],
    [7c5e, 7c5e], [7c72, 7c72], [7ca5, 7ca5], [7d06, 7d06], [7dce, 7dce],
    [7df0, 7df0], [7e58, 7e58], [7f6d, 7f6d], [7fad, 7fad], [7fbd, 7fbd],
    [807f, 807f], [80b2, 80b2], [8167, 8167], [8174, 8174], [81fe, 81fe],
    [8201, 8201], [8207, 8207], [8212, 8212], [8245, 8245], [828b, 828b],
    [82d1, 82d1], [831f, 831f], [83c0, 83c0], [83f8, 83f8], [842d, 842e],
    [8438, 8438], [84ae, 84ae], [84f9, 84f9], [851a, 851a], [854d, 854d],
    [8577, 8577], [8581, 8581], [85c7, 85c7], [860c, 860c], [861b, 861b],
    [865e, 865e], [8676, 8676], [870d, 870d], [871f, 871f], [872e, 872e],
    [8753, 8753], [877a, 877a], [87b8, 87b8], [87c8, 87c8], [8858, 8859],
    [8867, 8867], [88d5, 88d5], [8915, 8915], [89a6, 89a6], [8a9e, 8a9e],
    [8adb, 8adb], [8aed, 8aed], [8b23, 8b23], [8b7d, 8b7d], [8c37, 8c37],
    [8c6b, 8c6b], [8c8d, 8c8d], [8c90, 8c90], [8c97, 8c97], [8e30, 8e30],
    [8ec9, 8ec9], [8f0d, 8f0d], [8f3f, 8f3f], [8f5d, 8f5d], [8fc2, 8fc2],
    [9033, 9033], [903e, 903e], [9047, 9047], [9079, 9079], [9098, 9098],
    [90c1, 90c1], [90da, 90da], [9105, 9105], [9151, 9151], [91a7, 91a7],
    [91ea, 91ea], [923a, 923a], [9289, 9289], [92ca, 92ca], [92d9, 92d9],
    [9325, 9325], [935d, 935d], [940d, 940d], [942d, 942d], [95bc, 95bc],
    [95be, 95be], [9653, 9653], [9683, 9683], [9685, 9685], [96a9, 96a9],
    [96d3, 96d3], [96e8, 96e9], [9731, 9731], [9810, 9810], [9828, 9828],
    [9852, 9852], [98eb, 98eb], [9918, 9918], [9947, 9947], [99ad, 99ad],
    [9a1f, 9a1f], [9a48, 9a48], [9ac3, 9ac3], [9b31, 9b31], [9b3b, 9b3b],
    [9b5a, 9b5a], [9b63, 9b63], [9bbd, 9bbd], [9c05, 9c05], [9c4a, 9c4a],
    [9c6e, 9c6e], [9cff, 9cff], [9d25, 9d25], [9d52, 9d52], [9de0, 9de0],
    [9df8, 9df8], [9e06, 9e06], [9e12, 9e12], [9e8c, 9e8c], [9f6c, 9f6c],
    [9f75, 9f75], [2001b, 2001b], [2028f, 2028f], [202df, 202df],
    [203b3, 203b3], [203da, 203da], [20566, 20566], [209c7, 209c7],
    [20ae3, 20ae3], [20c50, 20c50], [20c59, 20c59], [20d2b, 20d2b],
    [20e39, 20e39], [20f75, 20f75], [2104e, 2104e], [2108a, 2108a],
    [211fa, 211fa], [21228, 21228], [212ec, 212ec], [2147e, 2147e],
    [21483, 21483], [2148a, 2148a], [21534, 21534], [21a23, 21a23],
    [21a3f, 21a3f], [21afd, 21afd], [21b0a, 21b0a], [21b1e, 21b1e],
    [21dce, 21dce], [21ee2, 21ee2], [21fe5, 21fe5], [21fef, 21fef],
    [222a7, 222a7], [222c5, 222c5], [2233b, 2233b], [223bb, 223bb],
    [224b0, 224b0], [22522, 22522], [22525, 22525], [2252c, 2252c],
    [22534, 22534], [225a1, 225a1], [226e8, 226e8], [2284e, 2284e],
    [22b81, 22b81], [22bee, 22bee], [22e4f, 22e4f], [22eb4, 22eb4],
    [22f84, 22f84], [232c9, 232c9], [2335b, 2335b], [23543, 23543],
    [23751, 23751], [237f0, 237f0], [23849, 23849], [23892, 23892],
    [238a6, 238a6], [238ce, 238ce], [23a1d, 23a1d], [23a7a, 23a7a],
    [2401d, 2401d], [24558, 24558], [245c3, 245c3], [2468e, 2468e],
    [24739, 24739], [2479e, 2479e], [2497d, 2497d], [249d9, 249d9],
    [24cd5, 24cd5], [24e12, 24e12], [24e6a, 24e6a], [25135, 25135],
    [25189, 25189], [25251, 25251], [25390, 25390], [254be, 254be],
    [25522, 25522], [25604, 25604], [2567f, 2567f], [256e9, 256e9],
    [2574d, 2574d], [25768, 25768], [25bee, 25bee], [25dd4, 25dd4],
    [25dde, 25dde], [25e24, 25e24], [25e2a, 25e2a], [25e54, 25e54],
    [25e9e, 25e9e], [26021, 26021], [26223, 26223], [26238, 26238],
    [262e2, 262e2], [262ef, 262ef], [26398, 26398], [263dc, 263dc],
    [263fb, 263fb], [2641b, 2641b], [26491, 26491], [2686d, 2686d],
    [26949, 26949], [269a9, 269a9], [269ab, 269ab], [269b2, 269b2],
    [26a5e, 26a5e], [26b73, 26b73], [26c40, 26c40], [26c42, 26c43],
    [26cc5, 26cc5], [270e0, 270e0], [2722f, 2722f], [27263, 27263],
    [272a0, 272a0], [2736a, 2736a], [27404, 27404], [27450, 27450],
    [275ea, 275ea], [275f1, 275f1], [27676, 27676], [2778f, 2778f],
    [27aca, 27aca], [27bf1, 27bf1], [27c07, 27c07], [27c6c, 27c6c],
    [27da0, 27da0], [27f2b, 27f2b], [27f2f, 27f2f], [27f9a, 27f9a],
    [27ff7, 27ff7], [2812f, 2812f], [282b1, 282b1], [2859b, 2859b],
    [285dd, 285dd], [28716, 28716], [28748, 28748], [28793, 28793],
    [28a36, 28a36], [28a6c, 28a6c], [28a8e, 28a8e], [28b94, 28b94],
    [28c38, 28c38], [28d49, 28d49], [28d66, 28d66], [28da2, 28da2],
    [28f8c, 28f8c], [290a7, 290a7], [290ef, 290ef], [29215, 29215],
    [29287, 29287], [292c9, 292c9], [292e4, 292e4], [293b9, 293b9],
    [293df, 293df], [293f4, 293f4], [29624, 29624], [29633, 29633],
    [2963b, 2963b], [29684, 29684], [296ea, 296ea], [296ed, 296ed],
    [29757, 29757], [297d1, 297d1], [297f3, 297f3], [29843, 29843],
    [298b6, 298b6], [2993a, 2993a], [2996d, 2996d], [299a1, 299a2],
    [29a17, 29a17], [29a19, 29a19], [29a51, 29a51], [29a58, 29a58],
    [29c2a, 29c2a], [29c4c, 29c4c], [29c71, 29c71], [29cbe, 29cbe],
    [29d4e, 29d4e], [29eb0, 29eb0], [2a040, 2a040], [2a089, 2a089],
    [2a095, 2a095], [2a0b5, 2a0b5], [2a0cd, 2a0ce], [2a1dd, 2a1dd],
    [2a2bb, 2a2bb], [2a2c9, 2a2c9], [2a2ec, 2a2ec], [2a2ee, 2a2ee],
    [2a446, 2a446], [2a44c, 2a44c], [2a45d, 2a45d], [2a4ca, 2a4ca]**/


    namespace {
    const static UnicodeSet::run_t __yu_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 6}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 8}, {Mixed, 3}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 3}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 5}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 4},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 4}, {Empty, 1},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 1}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 2}, {Mixed, 3}, {Empty, 2}, {Mixed, 3}, {Empty, 10},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 2}, {Mixed, 3}, {Empty, 1},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 1}, {Mixed, 3}, {Empty, 1},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 4}, {Empty, 1},
    {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 4}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 5}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 4}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 3}, {Empty, 4}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2820}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 12}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 21}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 21}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 3}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 35}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 5}, {Mixed, 3}, {Empty, 17}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 3},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 7}, {Mixed, 1},
    {Empty, 6}, {Mixed, 3}, {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 29401}};
    const static UnicodeSet::bitquad_t  __yu_Set_quads[] = {
    0x10000002, 0x10000000, 0x00000020, 0x10000000, 0x00000100, 0x00008000,
    0x00000004, 0x04100000, 0x00000020, 0x08000000, 0x20000000, 0x00040000,
    0x00000001, 0x00000004, 0x00040000, 0x08000000, 0x10000000, 0x00000010,
    0x08000000, 0x00040000, 0x40000010, 0x00000001, 0x00001000, 0x00400000,
    0x00001000, 0x00000200, 0x08000400, 0x00000100, 0x00010000, 0x08000000,
    0x00400000, 0x00002000, 0x00000400, 0x00000002, 0x00000100, 0x01000000,
    0x08000000, 0x20000002, 0x20200000, 0x00480000, 0x00000200, 0x00000002,
    0x80000000, 0x00000800, 0x00008000, 0x40040000, 0x00040000, 0x20020000,
    0x08000000, 0x00120000, 0x02000000, 0x00000020, 0x00000002, 0x00000820,
    0x00000004, 0x0000c100, 0x00000008, 0x02000000, 0x00000008, 0x00000400,
    0x00100000, 0x00000400, 0x00000020, 0x00000400, 0x00001000, 0x00000002,
    0x40080000, 0x02800000, 0x00010022, 0x08000000, 0x00000400, 0x00080004,
    0x00000210, 0x00000a00, 0x80000000, 0x00000200, 0x00001008, 0x00000020,
    0x00000010, 0x00020400, 0x00000001, 0x00004000, 0x00800000, 0x00000200,
    0x08000080, 0x02080000, 0x00000200, 0x80000400, 0x08000000, 0x00080000,
    0x08004000, 0x00004000, 0x10000000, 0x40000000, 0x00000080, 0x00000002,
    0x00001000, 0x000000c0, 0x00011000, 0x04000300, 0x40000000, 0x00000400,
    0x00400000, 0x00000800, 0x10000000, 0x00800000, 0x00080000, 0x00000020,
    0x00000010, 0x00100000, 0x40100000, 0x10000000, 0x80000000, 0x02000000,
    0x00020000, 0x00000020, 0x00008200, 0x02000000, 0x00000080, 0x18000000,
    0x00000800, 0x00000001, 0x00010000, 0x00000040, 0x00040000, 0x00040020,
    0x80000100, 0x00400000, 0x00080000, 0x02000000, 0x00000001, 0x02000000,
    0x00000200, 0x00100000, 0x00008014, 0x20000000, 0x00000002, 0x00000002,
    0x40000000, 0x00080040, 0x02000400, 0x10000000, 0x00000100, 0x00000100,
    0x00008000, 0x00000001, 0x00000200, 0x00008000, 0x00080000, 0x20000010,
    0x00800a00, 0x82000000, 0x10000001, 0x00200000, 0x00001000, 0x00008000,
    0x00010201, 0x00080004, 0x00004000, 0x40000000, 0x00000002, 0x00000004,
    0x10000080, 0x00000010, 0x06000040, 0x00400004, 0x08000020, 0x00081000,
    0x20000000, 0x00000400, 0x20000000, 0x40000020, 0x00040000, 0x00000020,
    0x00000040, 0x00004000, 0x00010000, 0x01000000, 0x00002000, 0x20002000,
    0x80000000, 0x00040000, 0x00100080, 0x40000000, 0x00040082, 0x00000020,
    0x00000800, 0x00020000, 0x80000000, 0x00000001, 0x01000000, 0x01006000,
    0x00004000, 0x02000000, 0x04000000, 0x00002000, 0x00800000, 0x00000002,
    0x00000080, 0x08001000, 0x40000000, 0x00400000, 0x80002000, 0x00004000,
    0x00080000, 0x04000000, 0x01000000, 0x00000100, 0x03000000, 0x00000080,
    0x00200000, 0x00200000, 0x00000040, 0x40000000, 0x08000000, 0x00002000,
    0x00000008, 0x20000000, 0x00800000, 0x00000800, 0x00812000, 0x00010000,
    0x00000200, 0x00002000, 0x80000000, 0x20000000, 0x00000004, 0x40080000,
    0x00000080, 0x02000000, 0x01000000, 0x04000002, 0x00000020, 0x00020000,
    0x00000080, 0x00000400, 0x04000000, 0x00000200, 0x02000400, 0x00000020,
    0x20000000, 0x00002000, 0x00002000, 0x50000000, 0x00080000, 0x00000028,
    0x00000200, 0x00080000, 0x00000300, 0x00020000, 0x00010000, 0x00000100,
    0x00040000, 0x00000800, 0x01000000, 0x00000080, 0x00002000, 0x80000000,
    0x00000100, 0x00000008, 0x08020000, 0x04000000, 0x00000008, 0x20000000,
    0x00000020, 0x00000400, 0x00004000, 0x80000000, 0x00000020, 0x00040000,
    0x01000001, 0x00040040, 0x00001000, 0x00201000, 0x08000000, 0x00008000,
    0x80000000, 0x00080000, 0x04000000, 0x00000040, 0x00000080, 0x00000008,
    0x02010000, 0x00000800, 0x02000000, 0x00200000, 0x00004000, 0x00000400,
    0x04000000, 0x00000100, 0x00001000, 0x40000000, 0x00000408, 0x00100000,
    0x80000008, 0x20000000, 0x40000400, 0x00004000, 0x00000004, 0x00008020,
    0x00000080, 0x00000020, 0x08000000, 0x08000000, 0x00010000, 0x00101024,
    0x00000002, 0x00000100, 0x00004000, 0x00000002, 0x00004000, 0x00008000,
    0x00100000, 0x00000010, 0x00000200, 0x08000000, 0x00000008, 0x00020000,
    0x00010000, 0x00000200, 0x00040000, 0x00000040, 0x00004000, 0x20000000,
    0x04000000, 0x20000000, 0x01000000, 0x00000008, 0x00004000, 0x02000000,
    0x40000000, 0x20000000, 0x02000000, 0x00200000, 0x00040000, 0x00000400,
    0x00200000, 0x00000200, 0x00020000, 0x00010000, 0x40000000, 0x00000004,
    0x00000010, 0x80000000, 0x00000200, 0x00002000, 0x00000100, 0x00004000,
    0x40100000, 0x00000410, 0x00100000, 0x40000000, 0x00000002, 0x01000008,
    0x00008004, 0x01000000, 0x10000000, 0x08000000, 0x08000000, 0x00020000,
    0x00002000, 0x00000200, 0x00040a00, 0x40000000, 0x00080000, 0x0000000d,
    0x00000020, 0x00000001, 0x00008000, 0x00000008, 0x00000001, 0x00000400,
    0x00000010, 0x00010000, 0x00020400, 0x00400000, 0x00008000, 0x00000400,
    0x00020000, 0x00000080, 0x00001000, 0x00000001, 0x00008800, 0x04000000,
    0x00800000, 0x00008000, 0x00020000, 0x08000000, 0x20000000, 0x00400000,
    0x00000100, 0x00080000, 0x00400000, 0x00001000, 0x00004000, 0x00100000,
    0x01000000, 0x00000200, 0x00000040, 0x00000004, 0x00001000, 0x00000080,
    0x00008000, 0x00200000, 0x00000080, 0x00000200, 0x00000010, 0x02000000,
    0x80000000, 0x00100000, 0x08080010, 0x00000010, 0x00002400, 0x00800000,
    0x00020000, 0x00080000, 0x00000008, 0x00400000, 0x04000000, 0x00002000,
    0x00000006, 0x02800000, 0x01020000, 0x00000400, 0x00001000, 0x00020000,
    0x40000000, 0x00004000, 0x00010000, 0x00000001, 0x00200200, 0x00200000,
    0x00006000, 0x20000000, 0x08000000, 0x00000200, 0x00005000, 0x20001040,
    0x00000400};
    }

    const static UnicodeSet yu_Set{const_cast<UnicodeSet::run_t *>(__yu_Set_runs), 663, 0, const_cast<UnicodeSet::bitquad_t *>(__yu_Set_quads), 439, 0};

    /** Code Point Ranges for zhuo
    [3482, 3482], [34f8, 34f8], [38ff, 38ff], [39f3, 39f3], [39fb, 39fb],
    [3aac, 3aac], [3e7f, 3e7f], [3e9f, 3e9f], [4090, 4090], [40d7, 40d7],
    [4175, 4175], [41af, 41af], [4401, 4401], [45a6, 45a6], [47b5, 47b5],
    [47fe, 47fe], [4abc, 4abc], [4ace, 4ace], [4b93, 4b93], [4b95, 4b95],
    [4d60, 4d60], [4d75, 4d75], [4d82, 4d82], [4e35, 4e35], [502c, 502c],
    [5262, 5262], [52fa, 52fa], [5353, 5353], [53d5, 53d5], [5544, 5545],
    [555c, 555c], [5663, 5663], [5734, 5734], [588c, 588c], [59b0, 59b0],
    [5a3a, 5a3a], [5f74, 5f74], [62d9, 62d9], [6349, 6349], [6354, 6354],
    [6387, 6387], [64c6, 64c6], [64e2, 64e2], [6580, 6580], [65ab, 65ab],
    [65ae, 65ae], [65b1, 65b2], [666b, 666b], [6753, 6753], [684c, 684c],
    [68c1, 68c1], [68f3, 68f3], [68f9, 68f9], [6913, 6913], [6ae1, 6ae1],
    [6c4b, 6c4b], [6d5e, 6d5e], [6dbf, 6dbf], [6dd6, 6dd6], [6e96, 6e96],
    [6fc1, 6fc1], [6fef, 6fef], [7042, 7042], [707c, 707c], [70aa, 70aa],
    [70f5, 70f5], [712f, 712f], [71cb, 71cb], [72b3, 72b3], [72f5, 72f5],
    [7422, 7422], [7438, 7438], [7740, 7740], [77e0, 77e0], [787a, 787a],
    [799a, 799a], [7a5b, 7a5b], [7a71, 7a71], [7aa1, 7aa1], [7bb8, 7bb8],
    [7be7, 7be7], [7c71, 7c71], [7e73, 7e73], [7f6c, 7f6c], [8049, 8049],
    [80ab, 80ab], [8301, 8301], [8457, 8457], [84d4, 84d4], [855e, 855e],
    [85cb, 85cb], [8743, 8743], [8817, 8817], [883f, 883f], [8ac1, 8ac1],
    [8ad1, 8ad1], [8b36, 8b36], [8da0, 8da0], [8db5, 8db5], [8e14, 8e14],
    [8e60, 8e60], [8e85, 8e85], [914c, 914c], [9275, 9275], [92dc, 92dc],
    [942f, 942f], [9432, 9432], [9d6b, 9d6b], [9ddf, 9ddf], [20851, 20851],
    [20b74, 20b74], [20fe1, 20fe1], [21dff, 21dff], [22041, 22041],
    [22897, 22897], [229c8, 229c8], [22cc7, 22cc7], [22ea1, 22ea1],
    [22f5a, 22f5a], [230c8, 230c8], [230d1, 230d1], [2313b, 2313b],
    [240ee, 240ee], [24250, 24250], [243f8, 243f8], [244e6, 244e6],
    [251cd, 251cd], [252ee, 252ee], [2540a, 2540a], [255c1, 255c1],
    [257ba, 257ba], [25894, 25894], [25ba5, 25ba5], [25be9, 25be9],
    [25dd8, 25dd8], [25dee, 25dee], [25f1a, 25f1a], [26730, 26730],
    [26c39, 26c39], [26ce1, 26ce1], [27092, 27092], [270d4, 270d4],
    [27611, 27611], [27790, 27790], [278bc, 278bc], [27a33, 27a33],
    [27c35, 27c35], [27c52, 27c52], [27c70, 27c70], [2807f, 2807f],
    [2847d, 2847d], [285ae, 285ae], [28878, 28878], [288ac, 288ac],
    [289e7, 289e7], [28bbf, 28bbf], [28e9d, 28e9d], [291b8, 291b8],
    [292c1, 292c1], [29442, 29442], [29a54, 29a54], [29c83, 29c83],
    [29df9, 29df9]**/


    namespace {
    const static UnicodeSet::run_t __zhuo_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 29},
    {Mixed, 2}, {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 21}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 14}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 9}, {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 3},
    {Empty, 14}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 20}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 21}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 73}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2899}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 111}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 125}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 102}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 15}, {Mixed, 3},
    {Empty, 31}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 29456}};
    const static UnicodeSet::bitquad_t  __zhuo_Set_quads[] = {
    0x00000004, 0x01000000, 0x80000000, 0x08080000, 0x00001000, 0x80000000,
    0x80000000, 0x00010000, 0x00800000, 0x00200000, 0x00008000, 0x00000002,
    0x00000040, 0x00200000, 0x40000000, 0x10000000, 0x00004000, 0x00280000,
    0x00200001, 0x00000004, 0x00200000, 0x00001000, 0x00000004, 0x04000000,
    0x00080000, 0x00200000, 0x10000030, 0x00000008, 0x00100000, 0x00001000,
    0x00010000, 0x04000000, 0x00100000, 0x02000000, 0x00100200, 0x00000080,
    0x00000040, 0x00000004, 0x00000001, 0x00064800, 0x00000800, 0x00080000,
    0x00001000, 0x00000002, 0x02080000, 0x00080000, 0x00000002, 0x00000800,
    0x40000000, 0x80000000, 0x00400000, 0x00400000, 0x00000002, 0x00008000,
    0x00000004, 0x10000000, 0x00000400, 0x00200000, 0x00008000, 0x00000800,
    0x00080000, 0x00200000, 0x01000004, 0x00000001, 0x00000001, 0x04000000,
    0x04000000, 0x08000000, 0x00020000, 0x00000002, 0x01000000, 0x00000080,
    0x00020000, 0x00080000, 0x00001000, 0x00000200, 0x00000800, 0x00000002,
    0x00800000, 0x00100000, 0x40000000, 0x00000800, 0x00000008, 0x00800000,
    0x80000000, 0x00020002, 0x00400000, 0x00200001, 0x00100000, 0x00000001,
    0x00000020, 0x00001000, 0x00200000, 0x10000000, 0x00048000, 0x00000800,
    0x80000000, 0x00020000, 0x00100000, 0x00000002, 0x80000000, 0x00000002,
    0x00800000, 0x00000100, 0x00000080, 0x00000002, 0x04000000, 0x00020100,
    0x08000000, 0x00004000, 0x00010000, 0x01000000, 0x00000040, 0x00002000,
    0x00004000, 0x00000400, 0x00000002, 0x04000000, 0x00100000, 0x00000020,
    0x00000200, 0x01000000, 0x00004000, 0x04000000, 0x00010000, 0x02000000,
    0x00000002, 0x00040000, 0x00100000, 0x00020000, 0x00010000, 0x10000000,
    0x00080000, 0x00200000, 0x00040000, 0x00010000, 0x80000000, 0x20000000,
    0x00004000, 0x01000000, 0x00001000, 0x00000080, 0x80000000, 0x20000000,
    0x01000000, 0x00000002, 0x00000004, 0x00100000, 0x00000008, 0x02000000};
    }

    const static UnicodeSet zhuo_Set{const_cast<UnicodeSet::run_t *>(__zhuo_Set_runs), 269, 0, const_cast<UnicodeSet::bitquad_t *>(__zhuo_Set_quads), 150, 0};

    /** Code Point Ranges for ran
    [3484, 3484], [36a9, 36a9], [3723, 3723], [3993, 3993], [3caf, 3caf],
    [4383, 4383], [4459, 4459], [4533, 4533], [457c, 457c], [48f8, 48f8],
    [4921, 4921], [4cff, 4cff], [5189, 5189], [5465, 5465], [562b, 562b],
    [5aa3, 5aa3], [67d3, 67d3], [67df, 67df], [6a6a, 6a6a], [7136, 7136],
    [71af, 71af], [71c3, 71c3], [73c3, 73c3], [7e4e, 7e4e], [80b0, 80b0],
    [82d2, 82d2], [86ba, 86ba], [887b, 887b], [8e68, 8e68], [9aef, 9aef],
    [2028c, 2028c], [20900, 20900], [20bcd, 20bcd], [20c5e, 20c5e],
    [2159d, 2159d], [21709, 21709], [2172b, 2172b], [224d2, 224d2],
    [23c26, 23c26], [2467c, 2467c], [2486e, 2486e], [24c4b, 24c4b],
    [24c97, 24c97], [2502b, 2502b], [2502d, 2502d], [258fa, 258fa],
    [25b15, 25b15], [25cda, 25cda], [26ac9, 26ac9], [28e4c, 28e4c],
    [290f5, 290f5], [298a1, 298a1], [29d8e, 29d8e], [2a4d8, 2a4d8],
    [2a4da, 2a4da], [2a6ae, 2a6ae]**/


    namespace {
    const static UnicodeSet::run_t __ran_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 104}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 53},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 15}, {Mixed, 1},
    {Empty, 83}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 99}, {Mixed, 1}, {Empty, 2876},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 11},
    {Mixed, 2}, {Empty, 108}, {Mixed, 1}, {Empty, 186}, {Mixed, 1},
    {Empty, 81}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 69}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 111}, {Mixed, 1}, {Empty, 283}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 29386}};
    const static UnicodeSet::bitquad_t  __ran_Set_quads[] = {
    0x00000010, 0x00000200, 0x00000008, 0x00080000, 0x00008000, 0x00000008,
    0x02000000, 0x00080000, 0x10000000, 0x01000000, 0x00000002, 0x80000000,
    0x00000200, 0x00000020, 0x00000800, 0x00000008, 0x80080000, 0x00000400,
    0x00400000, 0x00008000, 0x00000008, 0x00000008, 0x00004000, 0x00010000,
    0x00040000, 0x04000000, 0x08000000, 0x00000100, 0x00008000, 0x00001000,
    0x00000001, 0x00002000, 0x40000000, 0x20000000, 0x00000200, 0x00000800,
    0x00040000, 0x00000040, 0x10000000, 0x00004000, 0x00000800, 0x00800000,
    0x00002800, 0x04000000, 0x00200000, 0x04000000, 0x00000200, 0x00001000,
    0x00200000, 0x00000002, 0x00004000, 0x05000000, 0x00004000};
    }

    const static UnicodeSet ran_Set{const_cast<UnicodeSet::run_t *>(__ran_Set_runs), 103, 0, const_cast<UnicodeSet::bitquad_t *>(__ran_Set_quads), 53, 0};

    /** Code Point Ranges for qi
    [3485, 3485], [35a2, 35a2], [3793, 3793], [379a, 379a], [37d3, 37d3],
    [37e2, 37e2], [380c, 380c], [3831, 3831], [38ec, 38ec], [3953, 3953],
    [3a7b, 3a7b], [3a7d, 3a7e], [3b24, 3b24], [3b91, 3b91], [3c17, 3c17],
    [3c1f, 3c1f], [3c66, 3c66], [3f2e, 3f2e], [3fa8, 3fa8], [4019, 4019],
    [4048, 4048], [412b, 412b], [4164, 4164], [4169, 4169], [4172, 4172],
    [41cd, 41cd], [427b, 427b], [43a2, 43a2], [43c5, 43c5], [43cc, 43cc],
    [43e0, 43e0], [43ff, 43ff], [4474, 4474], [44bb, 44bb], [44c5, 44c5],
    [44eb, 44eb], [4507, 4507], [453e, 453e], [45c1, 45c1], [45e9, 45e9],
    [4644, 4644], [4689, 4689], [468d, 468d], [46f4, 46f4], [479a, 479a],
    [47c4, 47c4], [47f7, 47f7], [484b, 484b], [4854, 4854], [48c0, 48c0],
    [48db, 48db], [4953, 4953], [495b, 495b], [4962, 4962], [4a53, 4a53],
    [4a6f, 4a6f], [4acf, 4acf], [4ad1, 4ad1], [4ad4, 4ad4], [4b23, 4b23],
    [4b6b, 4b6c], [4be5, 4be5], [4c34, 4c34], [4cac, 4cac], [4ce2, 4ce2],
    [4cf6, 4cf6], [4d92, 4d92], [4d9e, 4d9e], [4e03, 4e03], [4e0c, 4e0c],
    [4e5e, 4e5e], [4e93, 4e93], [4e9d, 4e9d], [4e9f, 4e9f], [4f01, 4f01],
    [4f0e, 4f0e], [4fdf, 4fdf], [501b, 501b], [5048, 5048], [50b6, 50b6],
    [50db, 50db], [5176, 5176], [5207, 5207], [523a, 523a], [5258, 5258],
    [52e4, 52e4], [5403, 5403], [542f, 542f], [5431, 5431], [5447, 5447],
    [546e, 546e], [54a0, 54a0], [552d, 552d], [5553, 5553], [55b0, 55b0],
    [5601, 5601], [5668, 5668], [573b, 573b], [57fc, 57fc], [5921, 5921],
    [5947, 5947], [5951, 5951], [59bb, 59bb], [5a38, 5a38], [5a4d, 5a4d],
    [5bbf, 5bbf], [5c7a, 5c7a], [5c90, 5c90], [5c93, 5c93], [5d0e, 5d0e],
    [5df1, 5df1], [5e3a, 5e3a], [5e7e, 5e7e], [5fd4, 5fd4], [5fee, 5fef],
    [5ffe, 5ffe], [6053, 6053], [605d, 605d], [60bd, 60bd], [6112, 6112],
    [612d, 612d], [613e, 613e], [617c, 617c], [61a9, 61a9], [61e0, 61e0],
    [621a, 621a], [6262, 6262], [6271, 6271], [627a, 627a], [6280, 6280],
    [62b5, 62b5], [6308, 6308], [6391, 6391], [63ed, 63ed], [6456, 6456],
    [652f, 652f], [6532, 6532], [6567, 6567], [65c2, 65c2], [65d7, 65d7],
    [6675, 6675], [671e, 671f], [675e, 675e], [679d, 679d], [67d2, 67d2],
    [6814, 6814], [68a9, 68a9], [68c4, 68c4], [68cb, 68cb], [68e8, 68e8],
    [68f2, 68f2], [69bf, 69bf], [69ed, 69ed], [6b2b, 6b2b], [6b3a, 6b3a],
    [6b67, 6b67], [6c14, 6c14], [6c23, 6c23], [6c54, 6c54], [6c7d, 6c7d],
    [6c8f, 6c8f], [6ce3, 6ce3], [6d13, 6d13], [6dc7, 6dc7], [6dd2, 6dd2],
    [6e46, 6e47], [6eaa, 6eaa], [6eca, 6eca], [6f06, 6f06], [6f2c, 6f2c],
    [6fdd, 6fdd], [6fdf, 6fdf], [7081, 7081], [710f, 710f], [7309, 7309],
    [7382, 7382], [7398, 7398], [7426, 7426], [742a, 742a], [7508, 7508],
    [752d, 752d], [7566, 7566], [7578, 7578], [75a7, 75a7], [76c0, 76c0],
    [76f5, 76f5], [77f5, 77f5], [780c, 780c], [7895, 7895], [78b6, 78b6],
    [78ce, 78ce], [78dc, 78dc], [78e7, 78e7], [78e9, 78e9], [7918, 7918],
    [793a, 793a], [7941, 7941], [7947, 7948], [797a, 797a], [79a8, 79a8],
    [7a18, 7a18], [7a3d, 7a3d], [7cb8, 7cb8], [7d5c, 7d5c], [7da5, 7da6],
    [7da8, 7da8], [7dae, 7dae], [7dba, 7dba], [7dc0, 7dc0], [7ddd, 7ddd],
    [7e83, 7e83], [7f4a, 7f4a], [8006, 8006], [8090, 8090], [80b5, 80b5],
    [81cd, 81cd], [8219, 8219], [8269, 8269], [8291, 8291], [829e, 829e],
    [82aa, 82aa], [8401, 8401], [840b, 840b], [847a, 847a], [85ba, 85ba],
    [85c4, 85c4], [8604, 8604], [8691, 8691], [8694, 8694], [869a, 869a],
    [871e, 871e], [8787, 8787], [87e3, 87e3], [87ff, 87ff], [8810, 8810],
    [8879, 8879], [88b3, 88b3], [88ff, 88ff], [89ed, 89ed], [8a16, 8a16],
    [8ac6, 8ac6], [8aff, 8aff], [8c48, 8c48], [8d77, 8d77], [8d9e, 8d9e],
    [8dbf, 8dbf], [8dc2, 8dc2], [8e11, 8e11], [8e16, 8e16], [8e26, 8e26],
    [8e4a, 8e4a], [8ea9, 8ea9], [8ed9, 8ed9], [8edd, 8edd], [8fc4, 8fc4],
    [8fc9, 8fc9], [9017, 9017], [90ea, 90ea], [913f, 913f], [91ee, 91ee],
    [9321, 9321], [93da, 93da], [9416, 9416], [95d9, 95d9], [9691, 9691],
    [970b, 970b], [980e, 980e], [9951, 9951], [9a0e, 9a0f], [9b10, 9b10],
    [9b3e, 9b3f], [9ba8, 9ba8], [9bd5, 9bd5], [9c2d, 9c2d], [9d78, 9d78],
    [9d88, 9d88], [9e02, 9e02], [9e92, 9e92], [9ea1, 9ea1], [9f1c, 9f1c],
    [9f4a, 9f4a], [9f6e, 9f6e], [2006d, 2006d], [2015a, 2015a],
    [20294, 20294], [203b0, 203b0], [2043e, 2043e], [204ea, 204ea],
    [20536, 20536], [209d2, 209d2], [20af8, 20af8], [20d29, 20d29],
    [20d39, 20d39], [2136a, 2136a], [213ab, 213ab], [215be, 215be],
    [21896, 21896], [2198d, 2198d], [21ab5, 21ab5], [21ac1, 21ac1],
    [21c54, 21c54], [21d52, 21d52], [21dde, 21dde], [21e49, 21e49],
    [21e53, 21e53], [21e58, 21e58], [21e69, 21e69], [21e93, 21e93],
    [21eb8, 21eb8], [21ee7, 21ee7], [21ef0, 21ef0], [21f7c, 21f7c],
    [22052, 22052], [22341, 22341], [22346, 22346], [22351, 22351],
    [22506, 22506], [22520, 22520], [22731, 22731], [22792, 22792],
    [22896, 22896], [2289e, 2289e], [229bd, 229bd], [22a61, 22a61],
    [22d30, 22d30], [22eb5, 22eb5], [22eb7, 22eb7], [22ecb, 22ecb],
    [22eda, 22eda], [22eea, 22eea], [22fa6, 22fa6], [22faa, 22faa],
    [23253, 23253], [233f6, 233f6], [23518, 23518], [236fa, 236fa],
    [23aa0, 23aa0], [23af1, 23af1], [23bc6, 23bc6], [23da0, 23da0],
    [23fa4, 23fa4], [2460c, 2460c], [24a8c, 24a8c], [24cc3, 24cc3],
    [24ce4, 24ce4], [24dcd, 24dcd], [24e78, 24e78], [24e97, 24e97],
    [24f05, 24f05], [24fe1, 24fe1], [2503b, 2503b], [2511c, 2511c],
    [251da, 251da], [25250, 25250], [25259, 25259], [25277, 25277],
    [2527b, 2527b], [25301, 25301], [254fe, 254fe], [25529, 25529],
    [255ab, 255ab], [25925, 25925], [25adf, 25adf], [25dc7, 25dc7],
    [25f18, 25f18], [25f73, 25f73], [2610a, 2610a], [26226, 26226],
    [2650c, 2650c], [2658a, 2658a], [26638, 26638], [2664a, 2664a],
    [2668a, 2668a], [266f0, 266f0], [26879, 26879], [269c9, 269c9],
    [269ef, 269ef], [26a63, 26a63], [26a8a, 26a8a], [26ae1, 26ae1],
    [26b72, 26b72], [26bbc, 26bbc], [26e06, 26e06], [26e13, 26e13],
    [26e17, 26e17], [271dc, 271dc], [272c9, 272c9], [2731e, 2731e],
    [273aa, 273aa], [27495, 27495], [274d1, 274d1], [27549, 27549],
    [27617, 27617], [27627, 27627], [2765e, 2765e], [2767e, 2767e],
    [276a8, 276a8], [2782a, 2782a], [27858, 27858], [2787a, 2787a],
    [27bef, 27bef], [27c19, 27c19], [27ed5, 27ed5], [27f15, 27f15],
    [27f18, 27f18], [27f53, 27f53], [28050, 28050], [28278, 28278],
    [282b0, 282b0], [28464, 28464], [28485, 28485], [2866c, 2866c],
    [28678, 28678], [287a2, 287a2], [28966, 28966], [28a8c, 28a8c],
    [28c5c, 28c5c], [28d46, 28d46], [28d4e, 28d4e], [28e12, 28e12],
    [28e14, 28e14], [28f9b, 28f9b], [2926c, 2926c], [2949b, 2949b],
    [294a8, 294a8], [29826, 29826], [29828, 29828], [29942, 29942],
    [2998b, 2998b], [299cc, 299cc], [29a18, 29a18], [29a1d, 29a1d],
    [29caa, 29caa], [29ce3, 29ce3], [29d2a, 29d2a], [29dfe, 29dfe],
    [29e1e, 29e1e], [29e75, 29e75], [29eb2, 29eb2], [2a029, 2a029],
    [2a09b, 2a09b], [2a116, 2a116], [2a12d, 2a12d], [2a17e, 2a17e],
    [2a486, 2a486], [2a491, 2a491], [2a52a, 2a52a], [2a5c5, 2a5c6],
    [2a5cd, 2a5cd], [2a5cf, 2a5cf], [2a667, 2a667]**/


    namespace {
    const static UnicodeSet::run_t __qi_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 1}, {Mixed, 4}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 3}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 5}, {Empty, 4}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 6}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 4}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 10},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 2}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 3}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 5}, {Empty, 2},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 7},
    {Mixed, 2}, {Empty, 3}, {Mixed, 8}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 19}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 10}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 5}, {Mixed, 2}, {Empty, 10},
    {Mixed, 1}, {Empty, 8}, {Mixed, 4}, {Empty, 1}, {Mixed, 3}, {Empty, 2},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2823}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 4}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 15}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 11},
    {Mixed, 3}, {Empty, 5}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 50}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 17},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 10}, {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 4}, {Empty, 1}, {Mixed, 1},
    {Empty, 11}, {Mixed, 3}, {Empty, 27}, {Mixed, 2}, {Empty, 21},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 13}, {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 16},
    {Mixed, 2}, {Empty, 27}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 29388}};
    const static UnicodeSet::bitquad_t  __qi_Set_quads[] = {
    0x00000020, 0x00000004, 0x04080000, 0x00080000, 0x00000004, 0x00001000,
    0x00020000, 0x00001000, 0x00080000, 0x68000000, 0x00000010, 0x00020000,
    0x80800000, 0x00000040, 0x00004000, 0x00000100, 0x02000000, 0x00000100,
    0x00000800, 0x00040210, 0x00002000, 0x08000000, 0x00000004, 0x00001020,
    0x80000001, 0x00100000, 0x08000000, 0x00000020, 0x00000800, 0x00000080,
    0x40000000, 0x00000002, 0x00000200, 0x00000010, 0x00002200, 0x00100000,
    0x04000000, 0x00000010, 0x00800000, 0x00100800, 0x08000001, 0x08080000,
    0x00000004, 0x00080000, 0x00008000, 0x00128000, 0x00000008, 0x00001800,
    0x00000020, 0x00100000, 0x00001000, 0x00400004, 0x40040000, 0x00001008,
    0x40000000, 0xa0080000, 0x00004002, 0x80000000, 0x08000000, 0x00000100,
    0x00400000, 0x08000000, 0x00400000, 0x00000080, 0x04000000, 0x01000000,
    0x00000010, 0x00000008, 0x00028000, 0x00000080, 0x00004000, 0x00000001,
    0x00002000, 0x00080000, 0x00010000, 0x00000002, 0x00000100, 0x08000000,
    0x10000000, 0x00000002, 0x00020080, 0x08000000, 0x01000000, 0x00002000,
    0x80000000, 0x04000000, 0x00090000, 0x00004000, 0x00020000, 0x04000000,
    0x40000000, 0x00100000, 0x4000c000, 0x20080000, 0x20000000, 0x00040000,
    0x40002000, 0x10000000, 0x00000200, 0x00000001, 0x04000000, 0x04020004,
    0x00000001, 0x00200000, 0x00000100, 0x00020000, 0x00002000, 0x00400000,
    0x00048000, 0x00000080, 0x00800004, 0x00200000, 0xc0000000, 0x40000000,
    0x20000000, 0x00040000, 0x00100000, 0x00000200, 0x00000810, 0x00040100,
    0x80000000, 0x00002000, 0x04000800, 0x00000080, 0x00100000, 0x00000008,
    0x00100000, 0x20000000, 0x00008000, 0x00000008, 0x00080000, 0x00040080,
    0x000000c0, 0x00000400, 0x00000400, 0x00000040, 0x00001000, 0xa0000000,
    0x00000002, 0x00008000, 0x00000200, 0x01000004, 0x00000440, 0x00000100,
    0x00002000, 0x01000040, 0x00000080, 0x00000001, 0x00200000, 0x00200000,
    0x00001000, 0x00200000, 0x00400000, 0x10004000, 0x00000280, 0x01000000,
    0x04000000, 0x00000182, 0x04000000, 0x00000100, 0x01000000, 0x20000000,
    0x01000000, 0x10000000, 0x04004160, 0x20000001, 0x00000008, 0x00000400,
    0x00000040, 0x00010000, 0x00200000, 0x00002000, 0x02000000, 0x00000200,
    0x40020000, 0x00000400, 0x00000802, 0x04000000, 0x04000000, 0x00000010,
    0x00000010, 0x04120000, 0x40000000, 0x00000080, 0x80000008, 0x00010000,
    0x02000000, 0x00080000, 0x80000000, 0x00002000, 0x00400000, 0x00000040,
    0x80000000, 0x00000100, 0x00800000, 0x40000000, 0x80000000, 0x00000004,
    0x00420000, 0x00000040, 0x00000400, 0x00000200, 0x22000000, 0x00000210,
    0x00800000, 0x00000400, 0x80000000, 0x00004000, 0x00000002, 0x04000000,
    0x00400000, 0x02000000, 0x00020000, 0x00000800, 0x00004000, 0x00020000,
    0x0000c000, 0x00010000, 0xc0000000, 0x00000100, 0x00200000, 0x00002000,
    0x01000000, 0x00000100, 0x00000004, 0x00040000, 0x00000002, 0x10000000,
    0x00000400, 0x00004000, 0x00002000, 0x04000000, 0x00100000, 0x00010000,
    0x40000000, 0x00000400, 0x00400000, 0x00040000, 0x01000000, 0x02000200,
    0x00000400, 0x00000800, 0x40000000, 0x00400000, 0x00002000, 0x00200000,
    0x00000002, 0x00100000, 0x00040000, 0x40000000, 0x01080200, 0x00000200,
    0x00080000, 0x01000000, 0x00010080, 0x10000000, 0x00040000, 0x00020042,
    0x00000040, 0x00000001, 0x00020000, 0x00040000, 0x40400000, 0x20000000,
    0x00000002, 0x00010000, 0x00a00000, 0x04000800, 0x00000400, 0x00000440,
    0x00080000, 0x00400000, 0x01000000, 0x04000000, 0x00000001, 0x00020000,
    0x00000040, 0x00000001, 0x00000010, 0x00001000, 0x00001000, 0x00000008,
    0x00000010, 0x00002000, 0x01000000, 0x00800000, 0x00000020, 0x00000002,
    0x08000000, 0x10000000, 0x04000000, 0x02010000, 0x08800000, 0x00000002,
    0x40000000, 0x00000200, 0x00000800, 0x00000020, 0x80000000, 0x00000080,
    0x01000000, 0x00080000, 0x00000400, 0x00000040, 0x00001000, 0x00000400,
    0x01000000, 0x00000400, 0x00000400, 0x00010000, 0x02000000, 0x00000200,
    0x00008000, 0x00000008, 0x00000400, 0x00000002, 0x00040000, 0x10000000,
    0x00880040, 0x10000000, 0x00000200, 0x40000000, 0x00000400, 0x00200000,
    0x00020000, 0x00000200, 0x00800000, 0x00000080, 0x40000000, 0x40000000,
    0x00000100, 0x00000400, 0x01000000, 0x04000000, 0x00008000, 0x02000000,
    0x00200000, 0x01200000, 0x00080000, 0x00010000, 0x01000000, 0x00010000,
    0x00000010, 0x00000020, 0x01001000, 0x00000004, 0x00000040, 0x00001000,
    0x10000000, 0x00004040, 0x00140000, 0x08000000, 0x00001000, 0x08000000,
    0x00000100, 0x00000140, 0x00000004, 0x00000800, 0x00001000, 0x21000000,
    0x00000400, 0x00000008, 0x00000400, 0x40000000, 0x40000000, 0x00200000,
    0x00040000, 0x00000200, 0x08000000, 0x00400000, 0x00002000, 0x40000000,
    0x00020040, 0x00000400, 0x0000a060, 0x00000080};
    }

    const static UnicodeSet qi_Set{const_cast<UnicodeSet::run_t *>(__qi_Set_runs), 573, 0, const_cast<UnicodeSet::bitquad_t *>(__qi_Set_quads), 376, 0};

    /** Code Point Ranges for han
    [3488, 3488], [35a4, 35a4], [3615, 3615], [361a, 361a], [3654, 3654],
    [3673, 3673], [37cf, 37cf], [38a8, 38a8], [3937, 3937], [3991, 3991],
    [3a14, 3a14], [3a8b, 3a8b], [3b80, 3b80], [3c39, 3c39], [3ca6, 3ca6],
    [3d44, 3d44], [3db0, 3db0], [3e96, 3e96], [3e9d, 3e9d], [4054, 4054],
    [4204, 4204], [438f, 438f], [43af, 43af], [43f7, 43f7], [4404, 4404],
    [44ff, 44ff], [457f, 457f], [4594, 4594], [45d9, 45d9], [45e3, 45e3],
    [4636, 4636], [46de, 46de], [4717, 4717], [48fb, 48fb], [4934, 4934],
    [4af2, 4af2], [4ba7, 4ba7], [4d83, 4d83], [4ee0, 4ee0], [4f44, 4f44],
    [50bc, 50bc], [51fd, 51fd], [5382, 5382], [5388, 5388], [542b, 542b],
    [5481, 5481], [5505, 5505], [558a, 558a], [5682, 5682], [57be, 57be],
    [5a22, 5a22], [5ae8, 5ae8], [5bd2, 5bd2], [5c7d, 5c7d], [5d21, 5d21],
    [5d45, 5d45], [5d4c, 5d4c], [5e79, 5e79], [5fd3, 5fd3], [608d, 608d],
    [611f, 611f], [61a8, 61a8], [61be, 61be], [625e, 625e], [634d, 634d],
    [6496, 6496], [64bc, 64bc], [653c, 653c], [65f0, 65f1], [6657, 6658],
    [66b5, 66b5], [687f, 687f], [6892, 6892], [6937, 6937], [69a6, 69a6],
    [6b26, 6b26], [6b5b, 6b5b], [6c57, 6c57], [6c75, 6c75], [6cd4, 6cd4],
    [6d5b, 6d5b], [6d6b, 6d6b], [6d86, 6d86], [6db5, 6db5], [6dca, 6dca],
    [6de6, 6de6], [6f22, 6f22], [6f89, 6f89], [6f8f, 6f8f], [6fa3, 6fa3],
    [701a, 701a], [7058, 7058], [710a, 710a], [7113, 7113], [71af, 71af],
    [72b4, 72b4], [7400, 7400], [7518, 7518], [751d, 751d], [7694, 7694],
    [7745, 7745], [77f8, 77f8], [7b12, 7b12], [7f55, 7f55], [7ff0, 7ff0],
    [80a3, 80a3], [839f, 839f], [83e1, 83e1], [850a, 850a], [862b, 862b],
    [8677, 8677], [86b6, 86b6], [872c, 872d], [8792, 8792], [8b40, 8b40],
    [8c3d, 8c3d], [8c43, 8c43], [8ed2, 8ed2], [9097, 9097], [90af, 90af],
    [9163, 9163], [91ec, 91ec], [9210, 9210], [92ce, 92ce], [92e1, 92e1],
    [9588, 9588], [95de, 95de], [96d7, 96d7], [976c, 976c], [97d3, 97d3],
    [9807, 9807], [981c, 981c], [9837, 9837], [9844, 9844], [9869, 9869],
    [99a0, 99a0], [99af, 99af], [99fb, 99fb], [9b2b, 9b2b], [9b7d, 9b7d],
    [9cf1, 9cf1], [9dbe, 9dbe], [9f3e, 9f3e], [205f4, 205f4],
    [20887, 20887], [2092e, 2092e], [2093e, 2093e], [20974, 20974],
    [2098a, 2098a], [20c92, 20c92], [20d78, 20d78], [20e44, 20e44],
    [20f66, 20f66], [20fd1, 20fd1], [21040, 21040], [211dc, 211dc],
    [218d4, 218d4], [21b16, 21b16], [21ddb, 21ddb], [21ee1, 21ee1],
    [22035, 22035], [220d7, 220d7], [2211c, 2211c], [221de, 221de],
    [22398, 22398], [22508, 22508], [22514, 22514], [229e6, 229e6],
    [2343a, 2343a], [234b7, 234b7], [2361e, 2361e], [236f4, 236f4],
    [2377d, 2377d], [23885, 23885], [2389f, 2389f], [238ba, 238ba],
    [23d77, 23d77], [24009, 24009], [24310, 24310], [247b6, 247b6],
    [24b2f, 24b2f], [24b59, 24b59], [24cc9, 24cc9], [24e15, 24e15],
    [24fe7, 24fe7], [25010, 25010], [251a1, 251a1], [251cc, 251cc],
    [25270, 25270], [25931, 25931], [262e3, 262e3], [26485, 26485],
    [2649d, 2649d], [266dc, 266dc], [26706, 26706], [2679e, 2679e],
    [26956, 26956], [26ea6, 26ea6], [27083, 27083], [270d9, 270d9],
    [2745a, 2745a], [27b7b, 27b7b], [27bb0, 27bb0], [27bb3, 27bb3],
    [27bd8, 27bd8], [27c2a, 27c2a], [27d4a, 27d4a], [27e63, 27e63],
    [27f94, 27f94], [28044, 28044], [286ce, 286ce], [28888, 28888],
    [28e17, 28e17], [29119, 29119], [29216, 29216], [29223, 29223],
    [29392, 29392], [29560, 29560], [295ba, 295ba], [295e4, 295e4],
    [297bf, 297bf], [2983b, 2983b], [2998a, 2998a], [29b65, 29b65],
    [29e51, 29e51], [29e7c, 29e7c], [29f09, 29f09], [29f9d, 29f9d],
    [2a05f, 2a05f]**/


    namespace {
    const static UnicodeSet::run_t __han_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 1},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11},
    {Mixed, 2}, {Empty, 7}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 6}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 19}, {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 5}, {Mixed, 2}, {Empty, 20},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 4}, {Empty, 9},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 2869}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 23},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 81}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 8}, {Mixed, 2}, {Empty, 37}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 27}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 12}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 77},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 56}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 51}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 7}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 22}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 29437}};
    const static UnicodeSet::bitquad_t  __han_Set_quads[] = {
    0x00000100, 0x00000010, 0x04200000, 0x00100000, 0x00080000, 0x00008000,
    0x00000100, 0x00800000, 0x00020000, 0x00100000, 0x00000800, 0x00000001,
    0x02000000, 0x00000040, 0x00000010, 0x00010000, 0x20400000, 0x00100000,
    0x00000010, 0x00008000, 0x00008000, 0x00800000, 0x00000010, 0x80000000,
    0x80000000, 0x00100000, 0x02000000, 0x00000008, 0x00400000, 0x40000000,
    0x00800000, 0x08000000, 0x00100000, 0x00040000, 0x00000080, 0x00000008,
    0x00000001, 0x00000010, 0x10000000, 0x20000000, 0x00000104, 0x00000800,
    0x00000002, 0x00000020, 0x00000400, 0x00000004, 0x40000000, 0x00000004,
    0x00000100, 0x00040000, 0x20000000, 0x00000002, 0x00001020, 0x02000000,
    0x00080000, 0x00002000, 0x80000000, 0x40000100, 0x40000000, 0x00002000,
    0x00400000, 0x10000000, 0x10000000, 0x00030000, 0x01800000, 0x00200000,
    0x80000000, 0x00040000, 0x00800000, 0x00000040, 0x00000040, 0x08000000,
    0x00800000, 0x00200000, 0x00100000, 0x08000000, 0x00000800, 0x00000040,
    0x00200000, 0x00000400, 0x00000040, 0x00000004, 0x00008200, 0x00000008,
    0x04000000, 0x01000000, 0x00080400, 0x00008000, 0x00100000, 0x00000001,
    0x21000000, 0x00100000, 0x00000020, 0x01000000, 0x00040000, 0x00200000,
    0x00010000, 0x00000008, 0x80000000, 0x00000002, 0x00000400, 0x00000800,
    0x00800000, 0x00400000, 0x00003000, 0x00040000, 0x00000001, 0x20000000,
    0x00000008, 0x00040000, 0x00800000, 0x00008000, 0x00000008, 0x00001000,
    0x00010000, 0x00004000, 0x00000002, 0x00000100, 0x40000000, 0x00800000,
    0x00001000, 0x00080000, 0x10000080, 0x00800000, 0x00000010, 0x00000200,
    0x00008001, 0x08000000, 0x00000800, 0x20000000, 0x00020000, 0x40000000,
    0x40000000, 0x00100000, 0x00000080, 0x40004000, 0x00100000, 0x00000400,
    0x00040000, 0x01000000, 0x00000010, 0x00000040, 0x00020000, 0x00000001,
    0x10000000, 0x00100000, 0x00400000, 0x08000000, 0x00000002, 0x00200000,
    0x00800000, 0x10000000, 0x40000000, 0x01000000, 0x00100100, 0x00000040,
    0x04000000, 0x00800000, 0x40000000, 0x00100000, 0x20000000, 0x80000020,
    0x04000000, 0x00800000, 0x00000200, 0x00010000, 0x00400000, 0x00008000,
    0x02000000, 0x00000200, 0x00200000, 0x00000080, 0x00010000, 0x00000002,
    0x00001000, 0x00010000, 0x00020000, 0x00000008, 0x20000020, 0x10000000,
    0x00000040, 0x40000000, 0x00400000, 0x00000040, 0x00000008, 0x02000000,
    0x04000000, 0x08000000, 0x00090000, 0x01000000, 0x00000400, 0x00000400,
    0x00000008, 0x00100000, 0x00000010, 0x00004000, 0x00000100, 0x00800000,
    0x02000000, 0x00400000, 0x00000008, 0x00040000, 0x00000001, 0x04000000,
    0x00000010, 0x80000000, 0x08000000, 0x00000400, 0x00000020, 0x00020000,
    0x10000000, 0x00000200, 0x20000000, 0x80000000};
    }

    const static UnicodeSet han_Set{const_cast<UnicodeSet::run_t *>(__han_Set_runs), 367, 0, const_cast<UnicodeSet::bitquad_t *>(__han_Set_quads), 214, 0};

    /** Code Point Ranges for se
    [348a, 348a], [3976, 3976], [3ba6, 3ba6], [3c47, 3c47], [3d14, 3d14],
    [3f8a, 3f8a], [4262, 4262], [4282, 4282], [453c, 453c], [4a1b, 4a1b],
    [55c7, 55c7], [585e, 585e], [5be8, 5be8], [5ee7, 5ee7], [612c, 612c],
    [61ce, 61ce], [62fa, 62fa], [64cc, 64cc], [681c, 681c], [69ed, 69ed],
    [6b70, 6b70], [6ce3, 6ce3], [6d13, 6d13], [6eb9, 6eb9], [6f2c, 6f2c],
    [6f80, 6f80], [6fc7, 6fc7], [7417, 7417], [745f, 745f], [74b1, 74b1],
    [7637, 7637], [7a61, 7a61], [7ca3, 7ca3], [7e6c, 7e6c], [8272, 8272],
    [8594, 8594], [8669, 8669], [8b45, 8b45], [8f56, 8f56], [924d, 924d],
    [92ab, 92ab], [938d, 938d], [93a9, 93a9], [93fc, 93fc], [95df, 95df],
    [96ed, 96ed], [98cb, 98cb], [203b8, 203b8], [207e6, 207e6],
    [207e9, 207e9], [208b3, 208b3], [20d6d, 20d6d], [20f7c, 20f7c],
    [20fd7, 20fd7], [21adf, 21adf], [21d76, 21d76], [2200b, 2200b],
    [220e2, 220e2], [22849, 22849], [22c62, 22c62], [2369f, 2369f],
    [23f64, 23f64], [24067, 24067], [24597, 24597], [246f7, 246f7],
    [24fbf, 24fbf], [2523d, 2523d], [25c41, 25c41], [25df9, 25df9],
    [25ee8, 25ee8], [26184, 26184], [26405, 26405], [27208, 27208],
    [27493, 27493], [27497, 27497], [27a37, 27a37], [28199, 28199],
    [290d1, 290d1], [2911c, 2911c], [291e3, 291e3], [292af, 292af],
    [29359, 29359], [293eb, 293eb], [29561, 29561], [29c19, 29c19]**/


    namespace {
    const static UnicodeSet::run_t __se_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 20}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 93}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 11}, {Mixed, 2},
    {Empty, 12}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 2902}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 87},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 80}, {Mixed, 1}, {Empty, 70}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 80}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 111}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 121}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 29471}};
    const static UnicodeSet::bitquad_t  __se_Set_quads[] = {
    0x00000400, 0x00400000, 0x00000040, 0x00000080, 0x00100000, 0x00000400,
    0x00000004, 0x00000004, 0x10000000, 0x08000000, 0x00000080, 0x40000000,
    0x00000100, 0x00000080, 0x00001000, 0x00004000, 0x04000000, 0x00001000,
    0x10000000, 0x00002000, 0x00010000, 0x00000008, 0x00080000, 0x02000000,
    0x00001000, 0x00000001, 0x00000080, 0x00800000, 0x80000000, 0x00020000,
    0x00800000, 0x00000002, 0x00000008, 0x00001000, 0x00040000, 0x00100000,
    0x00000200, 0x00000020, 0x00400000, 0x00002000, 0x00000800, 0x00002000,
    0x00000200, 0x10000000, 0x80000000, 0x00002000, 0x00000800, 0x01000000,
    0x00000240, 0x00080000, 0x00002000, 0x10000000, 0x00800000, 0x80000000,
    0x00400000, 0x00000800, 0x00000004, 0x00000200, 0x00000004, 0x80000000,
    0x00000010, 0x00000080, 0x00800000, 0x00800000, 0x80000000, 0x20000000,
    0x00000002, 0x02000000, 0x00000100, 0x00000010, 0x00000020, 0x00000100,
    0x00880000, 0x00800000, 0x02000000, 0x00020000, 0x10000000, 0x00000008,
    0x00008000, 0x02000000, 0x00000800, 0x00000002, 0x02000000};
    }

    const static UnicodeSet se_Set{const_cast<UnicodeSet::run_t *>(__se_Set_runs), 161, 0, const_cast<UnicodeSet::bitquad_t *>(__se_Set_quads), 83, 0};

    /** Code Point Ranges for sa
    [348e, 348e], [36ab, 36ab], [3f42, 3f42], [429b, 429b], [4465, 4465],
    [4663, 4663], [46fd, 46fd], [4ee8, 4ee8], [5345, 5345], [644b, 644b],
    [6492, 6492], [6503, 6503], [6aab, 6aab], [6ad2, 6ad2], [6bba, 6bba],
    [6ce7, 6ce7], [6d12, 6d12], [6f75, 6f75], [7051, 7051], [7e9a, 7e9a],
    [810e, 810e], [8521, 8521], [85a9, 85a9], [8a2f, 8a2f], [8dbf, 8dbf],
    [8ea0, 8ea0], [9212, 9212], [939d, 939d], [93fe, 93fe], [9705, 9705],
    [9778, 9778], [9788, 9788], [98af, 98af], [99ba, 99ba], [203b7, 203b7],
    [20983, 20983], [20b19, 20b19], [20bbf, 20bbf], [20c61, 20c61],
    [20fd3, 20fd3], [21133, 21133], [21425, 21425], [21481, 21481],
    [224d4, 224d4], [2256c, 2256c], [22d8d, 22d8d], [22ee8, 22ee8],
    [2302f, 2302f], [23624, 23624], [23702, 23702], [23b2c, 23b2c],
    [252cc, 252cc], [25d6f, 25d6f], [25e17, 25e17], [25ee6, 25ee6],
    [2683f, 2683f], [26ec5, 26ec5], [26f27, 26f27], [27015, 27015],
    [27b5d, 27b5d], [280db, 280db], [28182, 28182], [28416, 28416],
    [28dc6, 28dc6], [29185, 29185], [29395, 29395], [29405, 29405],
    [295c9, 295c9], [295de, 295de], [298de, 298de], [29a1e, 29a1e]**/


    namespace {
    const static UnicodeSet::run_t __sa_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 68},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 63},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 135}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 44}, {Mixed, 2},
    {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 18}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 113}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2895},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 129}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 64}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 188}, {Mixed, 1}, {Empty, 84},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 73},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 89}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 77},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 29487}};
    const static UnicodeSet::bitquad_t  __sa_Set_quads[] = {
    0x00004000, 0x00000800, 0x00000004, 0x08000000, 0x00000020, 0x00000008,
    0x20000000, 0x00000100, 0x00000020, 0x00000800, 0x00040000, 0x00000008,
    0x00000800, 0x00040000, 0x04000000, 0x00000080, 0x00040000, 0x00200000,
    0x00020000, 0x04000000, 0x00004000, 0x00000002, 0x00000200, 0x00008000,
    0x80000000, 0x00000001, 0x00040000, 0x20000000, 0x40000000, 0x00000020,
    0x01000000, 0x00000100, 0x00008000, 0x04000000, 0x00800000, 0x00000008,
    0x02000000, 0x80000000, 0x00000002, 0x00080000, 0x00080000, 0x00000020,
    0x00000002, 0x00100000, 0x00001000, 0x00002000, 0x00000100, 0x00008000,
    0x00000010, 0x00000004, 0x00001000, 0x00001000, 0x00008000, 0x00800000,
    0x00000040, 0x80000000, 0x00000020, 0x00000080, 0x00200000, 0x20000000,
    0x08000000, 0x00000004, 0x00400000, 0x00000040, 0x00000020, 0x00200000,
    0x00000020, 0x40000200, 0x40000000, 0x40000000};
    }

    const static UnicodeSet sa_Set{const_cast<UnicodeSet::run_t *>(__sa_Set_runs), 135, 0, const_cast<UnicodeSet::bitquad_t *>(__sa_Set_quads), 70, 0};

    /** Code Point Ranges for kui
    [3491, 3491], [355f, 355f], [3653, 3653], [367a, 367a], [368d, 368d],
    [3a12, 3a12], [40ec, 40ec], [45af, 45af], [4646, 4646], [4661, 4661],
    [479a, 479a], [47f8, 47f8], [480f, 480f], [4811, 4811], [483f, 483f],
    [4906, 4906], [4ad4, 4ad4], [4ae5, 4ae5], [4bd3, 4bd3], [4be3, 4be3],
    [4c0e, 4c0e], [4e8f, 4e8f], [5080, 5080], [5232, 5232], [5331, 5331],
    [559f, 559f], [55b9, 55b9], [5633, 5633], [5914, 5914], [594e, 594e],
    [5abf, 5abf], [5b07, 5b07], [5c2f, 5c2f], [5dcb, 5dcb], [5dd9, 5dd9],
    [609d, 609d], [6127, 6127], [6192, 6192], [6223, 6223], [63c6, 63c6],
    [6646, 6646], [668c, 668c], [694f, 694f], [6951, 6951], [6a3b, 6a3b],
    [6ac6, 6ac6], [6b33, 6b33], [6b78, 6b78], [6ba8, 6ba8], [6f70, 6f70],
    [7143, 7143], [72aa, 72aa], [76d4, 76d4], [777d, 777d], [77b6, 77b6],
    [78c8, 78c8], [7aba, 7aba], [7c23, 7c23], [7c44, 7c44], [7f3a, 7f3a],
    [8067, 8067], [806d, 806d], [8075, 8075], [80ff, 80ff], [8143, 8143],
    [81ad, 81ad], [81fe, 81fe], [8475, 8475], [848d, 848d], [8562, 8562],
    [85c8, 85c8], [862c, 862c], [8641, 8641], [8667, 8667], [8770, 8770],
    [89d6, 89d6], [8b09, 8b09], [8dec, 8dec], [8e29, 8e29], [8ea8, 8ea8],
    [9035, 9035], [9108, 9108], [9377, 9377], [9400, 9400], [95cb, 95cb],
    [95da, 95da], [9803, 9804], [980d, 980d], [982f, 982f], [985d, 985d],
    [993d, 993d], [994b, 994b], [9997, 9997], [9a24, 9a24], [9b41, 9b41],
    [9bad, 9bad], [202be, 202be], [208e0, 208e0], [20fe5, 20fe5],
    [21324, 21324], [21420, 21420], [214be, 214be], [214f0, 214f0],
    [2191e, 2191e], [21bf5, 21bf5], [22333, 22333], [2273d, 2273d],
    [22f00, 22f00], [23132, 23132], [2396e, 2396e], [239fc, 239fc],
    [24182, 24182], [243dc, 243dc], [24d6e, 24d6e], [25047, 25047],
    [253d9, 253d9], [25736, 25736], [25a8a, 25a8a], [26762, 26762],
    [270a0, 270a0], [27111, 27111], [2735c, 2735c], [2744b, 2744b],
    [27777, 27777], [27866, 27866], [2786b, 2786b], [278a6, 278a6],
    [27ddb, 27ddb], [27edc, 27edc], [27ef2, 27ef2], [288c8, 288c8],
    [28f8e, 28f8e], [28f97, 28f97], [293e3, 293e3], [294d7, 294d7],
    [2955c, 2955c], [2982e, 2982e], [29c85, 29c85], [29cb7, 29cb7],
    [29d49, 29d49], [29e4d, 29e4d], [2a1b4, 2a1b4], [2a5a2, 2a5a2]**/


    namespace {
    const static UnicodeSet::run_t __kui_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7},
    {Mixed, 3}, {Empty, 27}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 8}, {Mixed, 1},
    {Empty, 2}, {Mixed, 3}, {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 2},
    {Empty, 6}, {Mixed, 3}, {Empty, 19}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 18}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 11}, {Mixed, 2},
    {Empty, 22}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 19}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 3}, {Empty, 7}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 17}, {Mixed, 3}, {Empty, 6}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2871}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 57}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 60}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 76},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 102},
    {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 78}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 34}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 29394}};
    const static UnicodeSet::bitquad_t  __kui_Set_quads[] = {
    0x00020000, 0x80000000, 0x00080000, 0x04000000, 0x00002000, 0x00040000,
    0x00001000, 0x00008000, 0x00000040, 0x00000002, 0x04000000, 0x01000000,
    0x00028000, 0x80000000, 0x00000040, 0x00100000, 0x00000020, 0x00080000,
    0x00000008, 0x00004000, 0x00008000, 0x00000001, 0x00040000, 0x00020000,
    0x80000000, 0x02000000, 0x00080000, 0x00100000, 0x00004000, 0x80000000,
    0x00000080, 0x00008000, 0x02000800, 0x20000000, 0x00000080, 0x00040000,
    0x00000008, 0x00000040, 0x00000040, 0x00001000, 0x00028000, 0x08000000,
    0x00000040, 0x00080000, 0x01000000, 0x00000100, 0x00010000, 0x00000008,
    0x00000400, 0x00100000, 0x20000000, 0x00400000, 0x00000100, 0x04000000,
    0x00000008, 0x00000010, 0x04000000, 0x00202080, 0x80000000, 0x00000008,
    0x00002000, 0x40000000, 0x00200000, 0x00002000, 0x00000004, 0x00000100,
    0x00001000, 0x00000002, 0x00000080, 0x00010000, 0x00400000, 0x00000200,
    0x00001000, 0x00000200, 0x00000100, 0x00200000, 0x00000100, 0x00800000,
    0x00000001, 0x04000800, 0x00002018, 0x00008000, 0x20000000, 0x20000000,
    0x00000800, 0x00800000, 0x00000010, 0x00000002, 0x00002000, 0x40000000,
    0x00000001, 0x00000020, 0x00000010, 0x00000001, 0x40000000, 0x00010000,
    0x40000000, 0x00200000, 0x00080000, 0x20000000, 0x00000001, 0x00040000,
    0x00004000, 0x10000000, 0x00000004, 0x10000000, 0x00004000, 0x00000080,
    0x02000000, 0x00400000, 0x00000400, 0x00000004, 0x00000001, 0x00020000,
    0x10000000, 0x00000800, 0x00800000, 0x00000840, 0x00000040, 0x08000000,
    0x10000000, 0x00040000, 0x00000100, 0x00804000, 0x00000008, 0x00800000,
    0x10000000, 0x00004000, 0x00000020, 0x00800000, 0x00000200, 0x00002000,
    0x00100000, 0x00000004};
    }

    const static UnicodeSet kui_Set{const_cast<UnicodeSet::run_t *>(__kui_Set_runs), 233, 0, const_cast<UnicodeSet::bitquad_t *>(__kui_Set_quads), 134, 0};

    /** Code Point Ranges for hui
    [3491, 3491], [3707, 3707], [3780, 3780], [38db, 38db], [3a39, 3a39],
    [3a53, 3a53], [3a68, 3a68], [3ace, 3ace], [3c25, 3c25], [3c71, 3c71],
    [3dc4, 3dc4], [3dc7, 3dc7], [3e46, 3e46], [3e94, 3e94], [3faf, 3faf],
    [4064, 4064], [4095, 4095], [40e3, 40e3], [43e8, 43e8], [4547, 4547],
    [45b6, 45b6], [4661, 4661], [46fc, 46fc], [470b, 470b], [4710, 4710],
    [4745, 4745], [4888, 4888], [4927, 4927], [49e5, 49e5], [4a48, 4a48],
    [4aed, 4aed], [4d7b, 4d7b], [4d90, 4d90], [4f6a, 4f6a], [5136, 5136],
    [532f, 532f], [5349, 5349], [53c0, 53c0], [54b4, 54b4], [5599, 5599],
    [5612, 5612], [5645, 5645], [5666, 5666], [56de, 56de], [571a, 571a],
    [58ae, 58ae], [58de, 58de], [5a4e, 5a4e], [5a88, 5a88], [5b12, 5b12],
    [5b48, 5b48], [5bed, 5bed], [5e51, 5e51], [5ec6, 5ec6], [5f57, 5f57],
    [5f59, 5f59], [5f8a, 5f8a], [5fbb, 5fbb], [5fbd, 5fbd], [605a, 605b],
    [6062, 6062], [6094, 6094], [60e0, 60e0], [6167, 6167], [6232, 6232],
    [62fb, 62fb], [63ee, 63ee], [649d, 649d], [6666, 6666], [6689, 6689],
    [66b3, 66b3], [6703, 6703], [6932, 6932], [694e, 694e], [69e5, 69e5],
    [6a5e, 6a5e], [6a93, 6a93], [6a9c, 6a9c], [6bc1, 6bc1], [6bc7, 6bc7],
    [6cac, 6cac], [6ccb, 6ccb], [6d03, 6d04], [6da3, 6da3], [6e4f, 6e4f],
    [6f53, 6f53], [6fae, 6fae], [6fca, 6fca], [7008, 7008], [7070, 7070],
    [70dc, 70dc], [70e0, 70e0], [7147, 7147], [7152, 7152], [71ec, 71ec],
    [71f4, 71f4], [7369, 7369], [743f, 743f], [74af, 74af], [75d0, 75d0],
    [7623, 7623], [7693, 7693], [772d, 772d], [7762, 7762], [7773, 7773],
    [77ba, 77ba], [7988, 7988], [7a62, 7a62], [7bf2, 7bf2], [7e62, 7e62],
    [7e6a, 7e6a], [7fec, 7fec], [7ffd, 7ffd], [8294, 8294], [8334, 8334],
    [8490, 8490], [8527, 8527], [8559, 8559], [8588, 8589], [85f1, 85f1],
    [862c, 862c], [8633, 8633], [866b, 866b], [867a, 867a], [8698, 8698],
    [86d4, 86d5], [879d, 879d], [87ea, 87ea], [8918, 8918], [8958, 8958],
    [8a6f, 8a6f], [8a7c, 8a7c], [8aa8, 8aa8], [8af1, 8af1], [8b53, 8b53],
    [8b6e, 8b6e], [8c57, 8c57], [8cc4, 8cc4], [8f1d, 8f1d], [8f20, 8f20],
    [8ff4, 8ff4], [9055, 9055], [928a, 928a], [93f8, 93f8], [942c, 942c],
    [9474, 9474], [95e0, 95e0], [9693, 9693], [96b3, 96b3], [9767, 9767],
    [97bc, 97bc], [97cb, 97cb], [97e2, 97e2], [982e, 982e], [986a, 986a],
    [992f, 992f], [9bb0, 9bb0], [9c34, 9c34], [9ebe, 9ebe], [9f3f, 9f3f],
    [20357, 20357], [204ca, 204ca], [209e9, 209e9], [20c65, 20c65],
    [20c9b, 20c9b], [20f61, 20f61], [20fd4, 20fd4], [212d9, 212d9],
    [213c1, 213c1], [214be, 214be], [21726, 21726], [21895, 21895],
    [2194b, 2194b], [21b5b, 21b5b], [21be5, 21be5], [21c0b, 21c0b],
    [21e4e, 21e4e], [21e6f, 21e6f], [22021, 22021], [22123, 22123],
    [2216b, 2216b], [22284, 22284], [22287, 22287], [2257a, 2257a],
    [227fe, 227fe], [22bf7, 22bf7], [22ed4, 22ed4], [23113, 23113],
    [232d8, 232d8], [2332d, 2332d], [23a36, 23a36], [23e00, 23e00],
    [240fd, 240fd], [241b3, 241b3], [24226, 24226], [2430b, 2430b],
    [2455a, 2455a], [2470b, 2470b], [24721, 24721], [247e4, 247e4],
    [24cf3, 24cf3], [24e01, 24e01], [24f88, 24f88], [25020, 25020],
    [250cc, 250cc], [25294, 25294], [2530d, 2530d], [2534b, 2534b],
    [2552f, 2552f], [25c75, 25c75], [25d2f, 25d2f], [25db5, 25db5],
    [25e03, 25e03], [26086, 26086], [2648e, 2648e], [26799, 26799],
    [26856, 26856], [26b79, 26b79], [26f50, 26f50], [27247, 27247],
    [273e7, 273e7], [275a2, 275a2], [275cf, 275cf], [275fc, 275fc],
    [279fe, 279fe], [27b28, 27b28], [27b7e, 27b7e], [27cd0, 27cd0],
    [282a2, 282a2], [28379, 28379], [285e5, 285e5], [28607, 28607],
    [28632, 28632], [286e4, 286e4], [28997, 28997], [28d58, 28d58],
    [29036, 29036], [290fe, 290fe], [29181, 29181], [291fb, 291fb],
    [2948f, 2948f], [294b3, 294b3], [29501, 29501], [295dd, 295dd],
    [298b1, 298b1], [29da5, 29da5], [29edf, 29edf], [2a01f, 2a01f],
    [2a02c, 2a02c], [2a211, 2a211], [2a282, 2a282], [2a3c7, 2a3c7],
    [2a3cf, 2a3cf], [2a440, 2a440], [2a595, 2a595], [2a6c2, 2a6c2]**/


    namespace {
    const static UnicodeSet::run_t __hui_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 10}, {Mixed, 3}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 19},
    {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 15}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 4}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 3}, {Empty, 2}, {Mixed, 1},
    {Empty, 16}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 17}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2848},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 19}, {Mixed, 2}, {Empty, 22}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 17}, {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 55}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 13},
    {Mixed, 3}, {Empty, 31}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 19}, {Mixed, 3}, {Empty, 5}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 20}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 14}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 29385}};
    const static UnicodeSet::bitquad_t  __hui_Set_quads[] = {
    0x00020000, 0x00000080, 0x00000001, 0x08000000, 0x02000000, 0x00080000,
    0x00000100, 0x00004000, 0x00000020, 0x00020000, 0x00000090, 0x00000040,
    0x00100000, 0x00008000, 0x00000010, 0x00200000, 0x00000008, 0x00000100,
    0x00000080, 0x00400000, 0x00000002, 0x10000000, 0x00010800, 0x00000020,
    0x00000100, 0x00000080, 0x00000020, 0x00000100, 0x00002000, 0x08000000,
    0x00010000, 0x00000400, 0x00400000, 0x00008000, 0x00000200, 0x00000001,
    0x00100000, 0x02000000, 0x00040000, 0x00000020, 0x00000040, 0x40000000,
    0x04000000, 0x00004000, 0x40000000, 0x00004000, 0x00000100, 0x00040000,
    0x00000100, 0x00002000, 0x00020000, 0x00000040, 0x02800000, 0x00000400,
    0x28000000, 0x0c000000, 0x00000004, 0x00100000, 0x00000001, 0x00000080,
    0x00040000, 0x08000000, 0x00004000, 0x20000000, 0x00000040, 0x00000200,
    0x00080000, 0x00000008, 0x00040000, 0x00004000, 0x00000020, 0x40000000,
    0x10080000, 0x00000082, 0x00001000, 0x00000800, 0x00000018, 0x00000008,
    0x00008000, 0x00080000, 0x00004000, 0x00000400, 0x00000100, 0x00010000,
    0x10000000, 0x00000001, 0x00040080, 0x00101000, 0x00000200, 0x80000000,
    0x00008000, 0x00010000, 0x00000008, 0x00080000, 0x00002000, 0x00080004,
    0x04000000, 0x00000100, 0x00000004, 0x00040000, 0x00000404, 0x20001000,
    0x00100000, 0x00100000, 0x00010000, 0x00000080, 0x02000000, 0x00000300,
    0x00020000, 0x00081000, 0x04000800, 0x01000000, 0x00300000, 0x20000000,
    0x00000400, 0x01000000, 0x01000000, 0x10008000, 0x00000100, 0x00020000,
    0x00080000, 0x00004000, 0x00800000, 0x00000010, 0x20000000, 0x00000001,
    0x00100000, 0x00200000, 0x00000400, 0x01000000, 0x00001000, 0x00100000,
    0x00000001, 0x00080000, 0x00080000, 0x00000080, 0x10000000, 0x00000800,
    0x00000004, 0x00004000, 0x00000400, 0x00008000, 0x00010000, 0x00100000,
    0x40000000, 0x80000000, 0x00800000, 0x00000400, 0x00000200, 0x00000020,
    0x08000000, 0x00000002, 0x00100000, 0x02000000, 0x00000002, 0x40000000,
    0x00000040, 0x00200000, 0x00000800, 0x08000000, 0x00000020, 0x00000800,
    0x00004000, 0x00008000, 0x00000002, 0x00000008, 0x00000800, 0x00000090,
    0x04000000, 0x40000000, 0x00800000, 0x00100000, 0x00080000, 0x01000000,
    0x00002000, 0x00400000, 0x00000001, 0x20000000, 0x00080000, 0x00000040,
    0x00000800, 0x04000000, 0x00000800, 0x00000002, 0x00000010, 0x00080000,
    0x00000002, 0x00000100, 0x00000001, 0x00001000, 0x00100000, 0x00002000,
    0x00000800, 0x00008000, 0x00200000, 0x00008000, 0x00200000, 0x00000008,
    0x00000040, 0x00004000, 0x02000000, 0x00400000, 0x02000000, 0x00010000,
    0x00000080, 0x00000080, 0x00000004, 0x00008000, 0x10000000, 0x40000000,
    0x00000100, 0x40000000, 0x00010000, 0x00000004, 0x02000000, 0x00000020,
    0x00000080, 0x00040000, 0x00000010, 0x00800000, 0x01000000, 0x00400000,
    0x40000000, 0x00000002, 0x08000000, 0x00008000, 0x00080000, 0x00000002,
    0x20000000, 0x00020000, 0x00000020, 0x80000000, 0x80000000, 0x00001000,
    0x00020000, 0x00000004, 0x00008080, 0x00000001, 0x00200000, 0x00000004};
    }

    const static UnicodeSet hui_Set{const_cast<UnicodeSet::run_t *>(__hui_Set_runs), 413, 0, const_cast<UnicodeSet::bitquad_t *>(__hui_Set_quads), 240, 0};

    /** Code Point Ranges for ta
    [3493, 3493], [35f3, 35f3], [36e5, 36e5], [38db, 38db], [39fa, 39fa],
    [3b7c, 3b7c], [3bd3, 3bd3], [3bda, 3bda], [3ff9, 3ff9], [40bf, 40bf],
    [420b, 420b], [4233, 4233], [4308, 4308], [4347, 4347], [435d, 435d],
    [4393, 4393], [445c, 445c], [447d, 447d], [44e0, 44e0], [471a, 471a],
    [4a9a, 4a9a], [4cf4, 4cf4], [4d6c, 4d6c], [4d80, 4d81], [4ed6, 4ed6],
    [509d, 509d], [547e, 547e], [54c8, 54c8], [55d2, 55d2], [5683, 5683],
    [584c, 584c], [5854, 5854], [592a, 592a], [5979, 5979], [5b83, 5b83],
    [5d09, 5d09], [62d3, 62d3], [6428, 6428], [642d, 642d], [64bb, 64bb],
    [6999, 6999], [69bb, 69bb], [6a7d, 6a7d], [6bfe, 6bfe], [6c93, 6c93],
    [6dbe, 6dbe], [6e9a, 6e9a], [6ebb, 6ebb], [6f2f, 6f2f], [6fbe, 6fbe],
    [6fcc, 6fcc], [6fd5, 6fd5], [7260, 7260], [72e7, 72e7], [737a, 737a],
    [79a2, 79a2], [8345, 8345], [891f, 891f], [8abb, 8abb], [8b76, 8b76],
    [8dbf, 8dbf], [8e0f, 8e0f], [8e4b, 8e4b], [8e79, 8e79], [8fbe, 8fbe],
    [9054, 9054], [905d, 905d], [9062, 9062], [9248, 9248], [9314, 9314],
    [9389, 9389], [9391, 9391], [95d2, 95d2], [95df, 95df], [95e5, 95e5],
    [9788, 9788], [979c, 979c], [97b3, 97b3], [97c3, 97c3], [9c28, 9c28],
    [20d32, 20d32], [20dcd, 20dcd], [21096, 21096], [21329, 21329],
    [220d5, 220d5], [227a0, 227a0], [22e89, 22e89], [235f6, 235f6],
    [2374b, 2374b], [23942, 23942], [23977, 23977], [23bda, 23bda],
    [24125, 24125], [244bb, 244bb], [246e3, 246e3], [24810, 24810],
    [2481f, 2481f], [24ffd, 24ffd], [255d3, 255d3], [26352, 26352],
    [26407, 26407], [26447, 26447], [26472, 26472], [26476, 26476],
    [2647c, 2647c], [269db, 269db], [269de, 269df], [269e5, 269e5],
    [269f1, 269f1], [26a0e, 26a0e], [26a99, 26a99], [26b5f, 26b5f],
    [26c46, 26c46], [26d91, 26d91], [26fbd, 26fbd], [2730f, 2730f],
    [27523, 27523], [27586, 27586], [27aa6, 27aa6], [27b91, 27b91],
    [280da, 280da], [281b0, 281b0], [2832d, 2832d], [284ec, 284ec],
    [2852f, 2852f], [2864e, 2864e], [28c0f, 28c0f], [28d5d, 28d5d],
    [28d80, 28d80], [292c5, 292c5], [29307, 29307], [29309, 29309],
    [29310, 29310], [29318, 29318], [293bd, 293bd], [29951, 29951],
    [29aca, 29aca], [29dfd, 29dfd], [29e97, 29e97], [2a08c, 2a08c],
    [2a515, 2a515], [2a601, 2a601]**/


    namespace {
    const static UnicodeSet::run_t __ta_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 38}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 14}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 17}, {Mixed, 2},
    {Empty, 12}, {Mixed, 3}, {Empty, 34}, {Mixed, 1}, {Empty, 2951},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 108}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 58}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 18},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 107}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 42}, {Mixed, 3},
    {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 29391}};
    const static UnicodeSet::bitquad_t  __ta_Set_quads[] = {
    0x00080000, 0x00080000, 0x00000020, 0x08000000, 0x04000000, 0x10000000,
    0x04080000, 0x02000000, 0x80000000, 0x00000800, 0x00080000, 0x00000100,
    0x20000080, 0x00080000, 0x10000000, 0x20000000, 0x00000001, 0x04000000,
    0x04000000, 0x00100000, 0x00001000, 0x00000003, 0x00400000, 0x20000000,
    0x40000000, 0x00000100, 0x00040000, 0x00000008, 0x00101000, 0x00000400,
    0x02000000, 0x00000008, 0x00000200, 0x00080000, 0x00002100, 0x08000000,
    0x02000000, 0x08000000, 0x20000000, 0x40000000, 0x00080000, 0x40000000,
    0x04000000, 0x08000000, 0x00008000, 0x40000000, 0x00201000, 0x00000001,
    0x00000080, 0x04000000, 0x00000004, 0x00000020, 0x80000000, 0x08000000,
    0x00400000, 0x80000000, 0x00008000, 0x00000800, 0x02000000, 0x40000000,
    0x20100000, 0x00000004, 0x00000100, 0x00100000, 0x00020200, 0x80040000,
    0x00000020, 0x10000100, 0x00080000, 0x00000008, 0x00000100, 0x00040000,
    0x00002000, 0x00400000, 0x00000200, 0x00200000, 0x00000001, 0x00000200,
    0x00400000, 0x00000800, 0x00000004, 0x00800000, 0x04000000, 0x00000020,
    0x08000000, 0x00000008, 0x80010000, 0x20000000, 0x00080000, 0x00040000,
    0x00000080, 0x00000080, 0x10440000, 0xc8000000, 0x00020020, 0x00004000,
    0x02000000, 0x80000000, 0x00000040, 0x00020000, 0x20000000, 0x00008000,
    0x00000008, 0x00000040, 0x00000040, 0x00020000, 0x04000000, 0x00010000,
    0x00002000, 0x00001000, 0x00008000, 0x00004000, 0x00008000, 0x20000000,
    0x00000001, 0x00000020, 0x01010280, 0x20000000, 0x00020000, 0x00000400,
    0x20000000, 0x00800000, 0x00001000, 0x00200000, 0x00000002};
    }

    const static UnicodeSet ta_Set{const_cast<UnicodeSet::run_t *>(__ta_Set_runs), 221, 0, const_cast<UnicodeSet::bitquad_t *>(__ta_Set_quads), 125, 0};

    /** Code Point Ranges for du
    [3494, 3494], [34c3, 34c3], [3798, 3798], [386f, 386f], [39fb, 39fb],
    [3f84, 3f84], [403e, 403e], [421e, 421e], [4401, 4401], [4417, 4417],
    [47fb, 47fb], [48b1, 48b1], [49a0, 49a0], [4a72, 4a72], [4bb7, 4bb7],
    [4c29, 4c29], [4ca7, 4ca7], [5125, 5125], [5262, 5262], [526b, 526b],
    [5335, 5335], [53be, 53be], [561f, 561f], [5663, 5663], [571f, 571f],
    [5835, 5835], [5857, 5857], [5992, 5992], [59ac, 59ac], [5b3b, 5b3b],
    [5b85, 5b85], [5e3e, 5e3e], [5ea6, 5ea6], [6581, 6581], [6675, 6675],
    [668f, 668f], [675c, 675c], [6a1a, 6a1a], [6a50, 6a50], [6add, 6add],
    [6bac, 6bac], [6bb0, 6bb0], [6bd2, 6bd2], [6e21, 6e21], [7006, 7006],
    [7258, 7258], [72a2, 72a2], [7368, 7368], [743d, 743d], [74c4, 74c4],
    [76be, 76be], [7763, 7763], [776a, 776a], [7779, 7779], [78a1, 78a1],
    [79fa, 79fa], [7ac7, 7ac7], [7afa, 7afa], [7be4, 7be4], [7e9b, 7e9b],
    [7f5c, 7f5c], [809a, 809a], [828f, 828f], [8370, 8370], [8773, 8773],
    [8839, 8839], [88fb, 88fb], [8961, 8961], [89a9, 89a9], [8a6b, 8a6b],
    [8b80, 8b80], [8b9f, 8b9f], [8c44, 8c44], [8ced, 8ced], [8d15, 8d15],
    [90fd, 90fd], [918f, 918f], [9316, 9316], [934d, 934d], [937a, 937a],
    [945f, 945f], [95cd, 95cd], [967c, 967c], [976f, 976f], [97c7, 97c7],
    [97e3, 97e3], [97e5, 97e5], [9813, 9813], [9a33, 9a33], [9ad1, 9ad1],
    [9ef7, 9ef7], [20269, 20269], [20814, 20814], [20820, 20820],
    [208f0, 208f0], [21368, 21368], [21389, 21389], [2175c, 2175c],
    [2225c, 2225c], [22742, 22742], [22dfa, 22dfa], [22f5a, 22f5a],
    [22f80, 22f80], [22f85, 22f85], [239c3, 239c3], [23a32, 23a32],
    [23ad4, 23ad4], [23c2c, 23c2c], [2469a, 2469a], [246a1, 246a1],
    [24afb, 24afb], [24b02, 24b02], [24b2a, 24b2a], [24d31, 24d31],
    [24d4a, 24d4a], [24dae, 24dae], [25001, 25001], [25032, 25032],
    [250fe, 250fe], [2546f, 2546f], [254c7, 254c7], [254cd, 254cd],
    [255a0, 255a0], [255bf, 255bf], [2575f, 2575f], [2577e, 2577e],
    [25bd6, 25bd6], [25c97, 25c97], [25cc9, 25cc9], [25cf2, 25cf2],
    [26337, 26337], [263d5, 263d5], [26634, 26634], [2664b, 2664b],
    [26688, 26688], [266ef, 266ef], [26844, 26844], [26cd4, 26cd4],
    [26e87, 26e87], [26ea5, 26ea5], [2707f, 2707f], [272cc, 272cc],
    [27430, 27430], [27460, 27460], [2752c, 2752c], [276d4, 276d4],
    [277b9, 277b9], [27c35, 27c35], [27dff, 27dff], [27fa5, 27fa5],
    [280ad, 280ad], [282c8, 282c8], [2835b, 2835b], [283d4, 283d4],
    [28f4d, 28f4d], [297be, 297be], [2994b, 2994b], [299c8, 299c8],
    [29a33, 29a33], [29a6e, 29a6e], [29d5a, 29d5a], [2a1c6, 2a1c6],
    [2a379, 2a379], [2a41e, 2a41e]**/


    namespace {
    const static UnicodeSet::run_t __du_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 9}, {Mixed, 2},
    {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 18},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 30}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 3}, {Empty, 16}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 2843}, {Mixed, 1}, {Empty, 44},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 83}, {Mixed, 2},
    {Empty, 29}, {Mixed, 1}, {Empty, 87}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 81}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 82},
    {Mixed, 2}, {Empty, 33}, {Mixed, 3}, {Empty, 15}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 18}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 34}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 49}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 18}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 13}, {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 91}, {Mixed, 1},
    {Empty, 66}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 29407}};
    const static UnicodeSet::bitquad_t  __du_Set_quads[] = {
    0x00100000, 0x00000008, 0x01000000, 0x00008000, 0x08000000, 0x00000010,
    0x40000000, 0x40000000, 0x00800002, 0x08000000, 0x00020000, 0x00000001,
    0x00040000, 0x00800000, 0x00000200, 0x00000080, 0x00000020, 0x00000804,
    0x00200000, 0x40000000, 0x80000000, 0x00000008, 0x80000000, 0x00200000,
    0x00800000, 0x00040000, 0x00001000, 0x08000000, 0x00000020, 0x40000000,
    0x00000040, 0x00000002, 0x00200000, 0x00008000, 0x10000000, 0x04000000,
    0x00010000, 0x20000000, 0x00011000, 0x00040000, 0x00000002, 0x00000040,
    0x01000000, 0x00000004, 0x00000100, 0x20000000, 0x00000010, 0x40000000,
    0x02000408, 0x00000002, 0x04000000, 0x00000080, 0x04000000, 0x00000010,
    0x08000000, 0x10000000, 0x04000000, 0x00008000, 0x00010000, 0x00080000,
    0x02000000, 0x08000000, 0x00000002, 0x00000200, 0x00000800, 0x80000001,
    0x00000010, 0x00002000, 0x00200000, 0x20000000, 0x00008000, 0x00400000,
    0x00002000, 0x04000000, 0x80000000, 0x00002000, 0x10000000, 0x00008000,
    0x00000080, 0x00000028, 0x00080000, 0x00080000, 0x00020000, 0x00800000,
    0x00000200, 0x00100000, 0x00000001, 0x00010000, 0x00000100, 0x00000200,
    0x10000000, 0x10000000, 0x00000004, 0x04000000, 0x04000000, 0x00000021,
    0x00000008, 0x00040000, 0x00100000, 0x00001000, 0x04000000, 0x00000002,
    0x08000000, 0x00000004, 0x00000400, 0x00020000, 0x00000400, 0x00004000,
    0x00000002, 0x00040000, 0x40000000, 0x00008000, 0x00002080, 0x80000001,
    0x80000000, 0x40000000, 0x00400000, 0x00800000, 0x00000200, 0x00040000,
    0x00800000, 0x00200000, 0x00100000, 0x00000800, 0x00000100, 0x00008000,
    0x00000010, 0x00100000, 0x00000080, 0x00000020, 0x80000000, 0x00001000,
    0x00010000, 0x00000001, 0x00001000, 0x00100000, 0x02000000, 0x00200000,
    0x80000000, 0x00000020, 0x00002000, 0x00000100, 0x08000000, 0x00100000,
    0x00002000, 0x40000000, 0x00000800, 0x00000100, 0x00080000, 0x00004000,
    0x04000000, 0x00000040, 0x02000000, 0x40000000};
    }

    const static UnicodeSet du_Set{const_cast<UnicodeSet::run_t *>(__du_Set_runs), 269, 0, const_cast<UnicodeSet::bitquad_t *>(__du_Set_quads), 154, 0};

    /** Code Point Ranges for tu
    [3494, 3494], [37ee, 37ee], [3b78, 3b78], [3ecc, 3ecc], [3ee0, 3ee0],
    [3eec, 3eec], [4177, 4177], [4511, 4511], [4598, 4598], [46e2, 46e2],
    [47ae, 47ae], [4808, 4808], [48c4, 48c4], [48dd, 48dd], [4905, 4905],
    [4a63, 4a63], [4f59, 4f59], [5154, 5154], [51c3, 51c3], [51f8, 51f8],
    [5410, 5410], [550b, 550b], [555a, 555a], [5716, 5716], [571f, 571f],
    [580d, 580d], [5817, 5817], [5857, 5857], [58bf, 58bf], [5b8a, 5b8a],
    [5c60, 5c60], [5d5e, 5d5e], [5d80, 5d80], [5ea9, 5ea9], [5edc, 5edc],
    [5f92, 5f92], [6022, 6022], [6087, 6087], [6348, 6348], [6378, 6378],
    [63ec, 63ec], [6455, 6455], [6581, 6581], [675c, 675c], [688c, 688c],
    [6aa1, 6aa1], [6d82, 6d82], [6d8b, 6d8b], [6e65, 6e65], [6f73, 6f73],
    [7479, 7479], [75dc, 75dc], [760f, 760f], [79c3, 79c3], [7a0c, 7a0c],
    [7a81, 7a81], [7b61, 7b61], [815e, 815e], [816f, 816f], [837c, 837c],
    [83df, 83df], [8456, 8456], [84a4, 84a4], [8d83, 8d83], [8dcc, 8dcc],
    [8dff, 8dff], [8fcc, 8fcc], [9014, 9014], [9174, 9174], [91f7, 91f7],
    [922f, 922f], [92c0, 92c0], [92f5, 92f5], [934e, 934e], [999f, 999f],
    [99fc, 99fc], [9d4c, 9d4c], [9d5a, 9d5a], [9d75, 9d75], [9d9f, 9d9f],
    [9dcb, 9dcb], [9df5, 9df5], [9f35, 9f35], [202b2, 202b2],
    [20780, 20780], [207f6, 207f6], [20ad3, 20ad3], [20aee, 20aee],
    [20cf6, 20cf6], [20e02, 20e02], [20eec, 20eec], [211e9, 211e9],
    [21e02, 21e02], [21eb4, 21eb4], [2225c, 2225c], [22740, 22740],
    [22b33, 22b33], [2315d, 2315d], [23225, 23225], [23487, 23487],
    [2353b, 2353b], [2363b, 2363b], [23973, 23973], [23cb1, 23cb1],
    [2465b, 2465b], [247ea, 247ea], [24dff, 24dff], [2508b, 2508b],
    [2595b, 2595b], [259e3, 259e3], [25a1c, 25a1c], [25bdd, 25bdd],
    [25c7b, 25c7b], [26505, 26505], [2676c, 2676c], [26a64, 26a64],
    [276d7, 276d7], [279f6, 279f6], [27ccc, 27ccc], [2866d, 2866d],
    [2875b, 2875b], [288ac, 288ac], [28a37, 28a37], [28d29, 28d29],
    [298ee, 298ee], [2997d, 2997d], [29e03, 29e03], [2a44f, 2a44f]**/


    namespace {
    const static UnicodeSet::run_t __tu_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 26}, {Mixed, 2}, {Empty, 19}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 21}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 46}, {Mixed, 2}, {Empty, 15}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 70}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 14},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 26}, {Mixed, 3}, {Empty, 1}, {Mixed, 2}, {Empty, 9}, {Mixed, 1},
    {Empty, 2843}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 15}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 96}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 76}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 68},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 98}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 93}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 29405}};
    const static UnicodeSet::bitquad_t  __tu_Set_quads[] = {
    0x00100000, 0x00004000, 0x01000000, 0x00001000, 0x00001001, 0x00800000,
    0x00020000, 0x01000000, 0x00000004, 0x00004000, 0x00000100, 0x20000010,
    0x00000020, 0x00000008, 0x02000000, 0x00100000, 0x00000008, 0x01000000,
    0x00010000, 0x00000800, 0x04000000, 0x80400000, 0x00802000, 0x00800000,
    0x80000000, 0x00000400, 0x00000001, 0x40000000, 0x00000001, 0x00000200,
    0x10000000, 0x00040000, 0x00000004, 0x00000080, 0x00000100, 0x01000000,
    0x00001000, 0x00200000, 0x00000002, 0x10000000, 0x00001000, 0x00000002,
    0x00000804, 0x00000020, 0x00080000, 0x02000000, 0x10000000, 0x00008000,
    0x00000008, 0x00001000, 0x00000002, 0x00000002, 0x40000000, 0x00008000,
    0x10000000, 0x80000000, 0x00400000, 0x00000010, 0x00000008, 0x00001000,
    0x80000000, 0x00001000, 0x00100000, 0x00100000, 0x00800000, 0x00008000,
    0x00000001, 0x00200000, 0x00004000, 0x80000000, 0x10000000, 0x04001000,
    0x00200000, 0x80000000, 0x00000800, 0x00200000, 0x00200000, 0x00040000,
    0x00000001, 0x00400000, 0x00080000, 0x00004000, 0x00400000, 0x00000004,
    0x00001000, 0x00000200, 0x00000004, 0x00100000, 0x10000000, 0x00000001,
    0x00080000, 0x20000000, 0x00000020, 0x00000080, 0x08000000, 0x08000000,
    0x00080000, 0x00020000, 0x08000000, 0x00000400, 0x80000000, 0x00000800,
    0x08000000, 0x00000008, 0x10000000, 0x20000000, 0x08000000, 0x00000020,
    0x00001000, 0x00000010, 0x00800000, 0x00400000, 0x00001000, 0x00002000,
    0x08000000, 0x00001000, 0x00800000, 0x00000200, 0x00004000, 0x20000000,
    0x00000008, 0x00008000};
    }

    const static UnicodeSet tu_Set{const_cast<UnicodeSet::run_t *>(__tu_Set_runs), 221, 0, const_cast<UnicodeSet::bitquad_t *>(__tu_Set_quads), 122, 0};

    /** Code Point Ranges for yang
    [3495, 3495], [3526, 3526], [37c5, 37c5], [39b9, 39b9], [3b15, 3b15],
    [3e8a, 3e8a], [3fee, 3fee], [4369, 4369], [4446, 4446], [448b, 448b],
    [45b9, 45b9], [4b50, 4b50], [4c40, 4c40], [4d6e, 4d6e], [4ef0, 4ef0],
    [4f52, 4f52], [4f6f, 4f6f], [52b7, 52b7], [52dc, 52dc], [536c, 536c],
    [5489, 5489], [5771, 5771], [579f, 579f], [592e, 592e], [59ce, 59ce],
    [5a78, 5a78], [5c07, 5c07], [5c9f, 5c9f], [5d35, 5d35], [5d38, 5d38],
    [5f89, 5f89], [600f, 600f], [6059, 6059], [6113, 6113], [6143, 6143],
    [61e9, 61e9], [62b0, 62b0], [63da, 63da], [6501, 6501], [6602, 6602],
    [6620, 6620], [6698, 6698], [67cd, 67cd], [6837, 6837], [694a, 694a],
    [6967, 6967], [6a23, 6a23], [6b4d, 6b4d], [6b83, 6b83], [6c1c, 6c1c],
    [6c27, 6c27], [6cf1, 6cf1], [6d0b, 6d0b], [6e6f, 6e6f], [6f3e, 6f3e],
    [6f52, 6f52], [7001, 7001], [70b4, 70b4], [70ca, 70ca], [716c, 716c],
    [73dc, 73dc], [7452, 7452], [75d2, 75d2], [760d, 760d], [7662, 7662],
    [770f, 770f], [773b, 773b], [7993, 7993], [79e7, 79e7], [7d3b, 7d3b],
    [7f8a, 7f8a], [7f8f, 7f8f], [7f95, 7f95], [80e6, 80e6], [82f1, 82f1],
    [86d8, 86d8], [8a47, 8a47], [8a73, 8a73], [8af9, 8af9], [8eee, 8eee],
    [8f30, 8f30], [9260, 9260], [935a, 935a], [967d, 967d], [96f5, 96f5],
    [9719, 9719], [9737, 9737], [9785, 9785], [98ba, 98ba], [990a, 990a],
    [99da, 99da], [9c11, 9c11], [9d26, 9d26], [9d39, 9d39], [9e09, 9e09],
    [20375, 20375], [208b4, 208b4], [20bb4, 20bb4], [21818, 21818],
    [21842, 21842], [21a76, 21a76], [21e55, 21e55], [223d9, 223d9],
    [227e3, 227e3], [22d47, 22d47], [22f55, 22f55], [230dd, 230dd],
    [2325a, 2325a], [2342b, 2342b], [235f9, 235f9], [247a2, 247a2],
    [24890, 24890], [248ae, 248ae], [24e21, 24e21], [250b8, 250b8],
    [250fd, 250fd], [2549e, 2549e], [2581c, 2581c], [25975, 25975],
    [25b34, 25b34], [25cdc, 25cdc], [26355, 26355], [26372, 26372],
    [26379, 26379], [263f1, 263f1], [26b75, 26b75], [26bd2, 26bd2],
    [26d0a, 26d0a], [26f34, 26f34], [274f2, 274f2], [27974, 27974],
    [27adb, 27adb], [27cb1, 27cb1], [27d4c, 27d4c], [282d5, 282d5],
    [282fd, 282fd], [28394, 28394], [284ab, 284ab], [2858c, 2858c],
    [289a1, 289a1], [28c5d, 28c5d], [28e48, 28e48], [28f50, 28f50],
    [29291, 29291], [292ec, 292ec], [2991f, 2991f], [29cb4, 29cb4],
    [29d28, 29d28], [2a4db, 2a4db], [2a56b, 2a56b], [2a6bb, 2a6bb]**/


    namespace {
    const static UnicodeSet::run_t __yang_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 25}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 22}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 5}, {Mixed, 2}, {Empty, 10},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 27}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 3},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2858}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 98},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 141}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 43}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 51}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 43},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 48}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 60},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 29386}};
    const static UnicodeSet::bitquad_t  __yang_Set_quads[] = {
    0x00200000, 0x00000040, 0x00000020, 0x02000000, 0x00200000, 0x00000400,
    0x00004000, 0x00000200, 0x00000040, 0x00000800, 0x02000000, 0x00010000,
    0x00000001, 0x00004000, 0x00010000, 0x00040000, 0x00008000, 0x00800000,
    0x10000000, 0x00001000, 0x00000200, 0x00020000, 0x80000000, 0x00004000,
    0x00004000, 0x01000000, 0x00000080, 0x80000000, 0x01200000, 0x00000200,
    0x00008000, 0x02000000, 0x00080000, 0x00000008, 0x00000200, 0x00010000,
    0x04000000, 0x00000002, 0x00000004, 0x00000001, 0x01000000, 0x00002000,
    0x00800000, 0x00000400, 0x00000080, 0x00000008, 0x00002000, 0x00000008,
    0x10000000, 0x00000080, 0x00020000, 0x00000800, 0x00008000, 0x40000000,
    0x00040000, 0x00000002, 0x00100000, 0x00000400, 0x00001000, 0x10000000,
    0x00040000, 0x00040000, 0x00002000, 0x00000004, 0x00008000, 0x08000000,
    0x00080000, 0x00000080, 0x08000000, 0x00208400, 0x00000040, 0x00020000,
    0x01000000, 0x00000080, 0x00080000, 0x02000000, 0x00004000, 0x00010000,
    0x00000001, 0x04000000, 0x20000000, 0x00200000, 0x02000000, 0x00800000,
    0x00000020, 0x04000000, 0x00000400, 0x04000000, 0x00020000, 0x02000040,
    0x00000200, 0x00200000, 0x00100000, 0x00100000, 0x01000000, 0x00000004,
    0x00400000, 0x00200000, 0x02000000, 0x00000008, 0x00000080, 0x00200000,
    0x20000000, 0x04000000, 0x00000800, 0x02000000, 0x00000004, 0x00010000,
    0x00004000, 0x00000002, 0x01000000, 0x20000000, 0x40000000, 0x10000000,
    0x00200000, 0x00100000, 0x10000000, 0x00200000, 0x02040000, 0x00020000,
    0x00200000, 0x00040000, 0x00000400, 0x00100000, 0x00040000, 0x00100000,
    0x08000000, 0x00020000, 0x00001000, 0x00200000, 0x20000000, 0x00100000,
    0x00000800, 0x00001000, 0x00000002, 0x20000000, 0x00000100, 0x00010000,
    0x00020000, 0x00001000, 0x80000000, 0x00100000, 0x00000100, 0x08000000,
    0x00000800, 0x08000000};
    }

    const static UnicodeSet yang_Set{const_cast<UnicodeSet::run_t *>(__yang_Set_runs), 261, 0, const_cast<UnicodeSet::bitquad_t *>(__yang_Set_quads), 146, 0};

    /** Code Point Ranges for mian
    [3499, 3499], [36ef, 36ef], [3743, 3743], [3770, 3770], [3848, 3848],
    [3a3a, 3a3a], [3c03, 3c03], [3d10, 3d10], [40c7, 40c7], [43c3, 43c3],
    [46c9, 46c9], [4904, 4904], [4af5, 4af5], [4bf6, 4bf6], [4c13, 4c13],
    [4e0f, 4e0f], [4fdb, 4fdb], [506d, 506d], [514d, 514d], [5195, 5195],
    [51a5, 51a5], [52c9, 52c9], [52d4, 52d4], [5595, 5595], [5a29, 5a29],
    [5a94, 5a94], [5b35, 5b35], [5b80, 5b80], [6110, 6110], [68c9, 68c9],
    [6ab0, 6ab0], [6acb, 6acb], [6c94, 6c94], [6cef, 6cef], [6e4e, 6e4e],
    [6e63, 6e63], [6fa0, 6fa0], [7251, 7251], [7704, 7704], [7720, 7720],
    [7791, 7791], [77c8, 77c8], [77ca, 77ca], [7d7b, 7d7b], [7ddc, 7ddc],
    [7de1, 7de1], [7dec, 7dec], [817c, 817c], [81f1, 81f1], [8287, 8287],
    [83ac, 83ac], [8442, 8442], [8752, 8752], [8820, 8820], [9762, 9762],
    [9766, 9766], [9bb8, 9bb8], [9eaa, 9eaa], [9efd, 9efd], [214b3, 214b3],
    [21562, 21562], [219cd, 219cd], [219d2, 219d2], [21beb, 21beb],
    [220ee, 220ee], [228d4, 228d4], [2314d, 2314d], [23860, 23860],
    [239fe, 239fe], [2511d, 2511d], [252bf, 252bf], [25302, 25302],
    [25935, 25935], [25ee9, 25ee9], [25f9d, 25f9d], [26b1b, 26b1b],
    [26f43, 26f43], [27b47, 27b47], [27e28, 27e28], [28265, 28265],
    [287fa, 287fa], [2885e, 2885e], [28c9b, 28c9b], [28cbe, 28cbe],
    [29239, 29239], [292e0, 292e0], [29b1e, 29b1e], [29b89, 29b89],
    [2a07c, 2a07c], [2a3ca, 2a3ca]**/


    namespace {
    const static UnicodeSet::run_t __mian_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 15}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 61}, {Mixed, 1},
    {Empty, 14}, {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 9}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 37}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 27}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 121}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2989}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 67}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 184},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 91}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 95}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 33}, {Mixed, 2}, {Empty, 43}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 29409}};
    const static UnicodeSet::bitquad_t  __mian_Set_quads[] = {
    0x02000000, 0x00008000, 0x00000008, 0x00010000, 0x00000100, 0x04000000,
    0x00000008, 0x00010000, 0x00000080, 0x00000008, 0x00000200, 0x00000010,
    0x00200000, 0x00400000, 0x00080000, 0x00008000, 0x08000000, 0x00002000,
    0x00002000, 0x00200000, 0x00000020, 0x00100200, 0x00200000, 0x00000200,
    0x00100000, 0x00200000, 0x00000001, 0x00010000, 0x00000200, 0x00010000,
    0x00000800, 0x00100000, 0x00008000, 0x00004000, 0x00000008, 0x00000001,
    0x00020000, 0x00000010, 0x00000001, 0x00020000, 0x00000500, 0x08000000,
    0x10000000, 0x00001002, 0x10000000, 0x00020000, 0x00000080, 0x00001000,
    0x00000004, 0x00040000, 0x00000001, 0x00000044, 0x01000000, 0x00000400,
    0x20000000, 0x00080000, 0x00000004, 0x00042000, 0x00000800, 0x00004000,
    0x00100000, 0x00002000, 0x00000001, 0x40000000, 0x20000000, 0x80000000,
    0x00000004, 0x00200000, 0x00000200, 0x20000000, 0x08000000, 0x00000008,
    0x00000080, 0x00000100, 0x00000020, 0x04000000, 0x40000000, 0x08000000,
    0x40000000, 0x02000000, 0x00000001, 0x40000000, 0x00000200, 0x10000000,
    0x00000400};
    }

    const static UnicodeSet mian_Set{const_cast<UnicodeSet::run_t *>(__mian_Set_runs), 155, 0, const_cast<UnicodeSet::bitquad_t *>(__mian_Set_quads), 85, 0};

    /** Code Point Ranges for wen
    [349a, 349a], [35a7, 35a7], [35c3, 35c3], [3848, 3848], [3a09, 3a09],
    [3b08, 3b08], [3ba7, 3ba7], [3cf7, 3cf7], [3f14, 3f14], [4407, 4407],
    [499f, 499f], [4c1a, 4c1a], [514d, 514d], [520e, 520e], [543b, 543b],
    [5445, 5445], [5461, 5461], [554f, 554f], [598f, 598f], [5a29, 5a29],
    [5f63, 5f63], [5fde, 5fdf], [6120, 6120], [6286, 6286], [63fe, 63fe],
    [6587, 6587], [6627, 6627], [687d, 687d], [6985, 6985], [6b7e, 6b7e],
    [6b81, 6b81], [6b9f, 6b9f], [6c76, 6c76], [6e02, 6e02], [6e29, 6e29],
    [7086, 7086], [7174, 7174], [739f, 739f], [73f3, 73f3], [7465, 7465],
    [74ba, 74ba], [7612, 7612], [761f, 761f], [773c, 773c], [7a69, 7a69],
    [7b0f, 7b0f], [7d0a, 7d0b], [7d7b, 7d7b], [7dfc, 7dfc], [805e, 805e],
    [80b3, 80b3], [8115, 8115], [82a0, 82a0], [83ac, 83ac], [8570, 8570],
    [85f4, 85f4], [868a, 868a], [891e, 891e], [8c71, 8c71], [8f3c, 8f3c],
    [95bf, 95bf], [95e6, 95e6], [9650, 9650], [96ef, 96ef], [97de, 97de],
    [9850, 9850], [99bc, 99bc], [9b70, 9b70], [9c1b, 9c1b], [9cfc, 9cfc],
    [9d0d, 9d0d], [9d16, 9d16], [9f24, 9f24], [20422, 20422],
    [20bf3, 20bf3], [2104b, 2104b], [22fbf, 22fbf], [2373a, 2373a],
    [23d8c, 23d8c], [246c1, 246c1], [24855, 24855], [24d52, 24d52],
    [25055, 25055], [250ee, 250ee], [2598a, 2598a], [259da, 259da],
    [25b3c, 25b3c], [2659e, 2659e], [2676e, 2676e], [267d5, 267d5],
    [269af, 269af], [26bb6, 26bb6], [27581, 27581], [27687, 27687],
    [281b2, 281b2], [28735, 28735], [287f8, 287f8], [28dad, 28dad],
    [28e29, 28e29], [2988c, 2988c], [29948, 29948], [29b4b, 29b4b],
    [2a278, 2a278]**/


    namespace {
    const static UnicodeSet::run_t __wen_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 19},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 16}, {Mixed, 3}, {Empty, 6}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 14}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 12},
    {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 51},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 2855}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 250},
    {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 73}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 68}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 82}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 88}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 82}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 29420}};
    const static UnicodeSet::bitquad_t  __wen_Set_quads[] = {
    0x04000000, 0x00000080, 0x00000008, 0x00000100, 0x00000200, 0x00000100,
    0x00000080, 0x00800000, 0x00100000, 0x00000080, 0x80000000, 0x04000000,
    0x00002000, 0x00004000, 0x08000000, 0x00000020, 0x00000002, 0x00008000,
    0x00008000, 0x00000200, 0x00000008, 0xc0000000, 0x00000001, 0x00000040,
    0x40000000, 0x00000080, 0x00000080, 0x20000000, 0x00000020, 0x40000000,
    0x80000002, 0x00400000, 0x00000004, 0x00000200, 0x00000040, 0x00100000,
    0x80000000, 0x00080000, 0x00000020, 0x04000000, 0x80040000, 0x10000000,
    0x00000200, 0x00008000, 0x00000c00, 0x08000000, 0x10000000, 0x40000000,
    0x00080000, 0x00200000, 0x00000001, 0x00001000, 0x00010000, 0x00100000,
    0x00000400, 0x40000000, 0x00020000, 0x10000000, 0x80000000, 0x00000040,
    0x00010000, 0x00008000, 0x40000000, 0x00010000, 0x10000000, 0x00010000,
    0x08000000, 0x10000000, 0x00402000, 0x00000010, 0x00000004, 0x00080000,
    0x00000800, 0x80000000, 0x04000000, 0x00001000, 0x00000002, 0x00200000,
    0x00040000, 0x00200000, 0x00004000, 0x00000400, 0x04000000, 0x10000000,
    0x40000000, 0x00004000, 0x00200000, 0x00008000, 0x00400000, 0x00000002,
    0x00000080, 0x00040000, 0x00200000, 0x01000000, 0x00002000, 0x00000200,
    0x00001000, 0x00000100, 0x00000800, 0x01000000};
    }

    const static UnicodeSet wen_Set{const_cast<UnicodeSet::run_t *>(__wen_Set_runs), 189, 0, const_cast<UnicodeSet::bitquad_t *>(__wen_Set_quads), 100, 0};

    /** Code Point Ranges for diao
    [349b, 349b], [368b, 368b], [38af, 38af], [38ff, 38ff], [3a95, 3a95],
    [3e66, 3e66], [408f, 408f], [40aa, 40aa], [40bd, 40bd], [412a, 412a],
    [4246, 4246], [4519, 4519], [461f, 461f], [4bfe, 4bfe], [4cbd, 4cbd],
    [4cc2, 4cc2], [4f04, 4f04], [4f7b, 4f7b], [501c, 501c], [51cb, 51cb],
    [5200, 5201], [53fc, 53fc], [5541, 5541], [595d, 595d], [5b25, 5b25],
    [5c4c, 5c4c], [5f14, 5f14], [5f34, 5f34], [5f6b, 5f6b], [625a, 625a],
    [6311, 6311], [6389, 6389], [6566, 6566], [6906, 6906], [6ba6, 6ba6],
    [6c48, 6c48], [6dcd, 6dcd], [7431, 7431], [7639, 7639], [7797, 7797],
    [77f5, 77f5], [7889, 7889], [7a20, 7a20], [7ab5, 7ab5], [7ae8, 7ae8],
    [7cf6, 7cf6], [7d69, 7d69], [7da2, 7da2], [839c, 839c], [84e7, 84e7],
    [85cb, 85cb], [866d, 866d], [86c1, 86c1], [8729, 8729], [8a0b, 8a0b],
    [8a82, 8a82], [8abf, 8abf], [8c82, 8c82], [8d99, 8d99], [8df3, 8df3],
    [8e14, 8e14], [8efa, 8efa], [91e3, 91e3], [929a, 929a], [92b1, 92b1],
    [92fd, 92fd], [932d, 932d], [9443, 9443], [96d5, 96d5], [96ff, 96ff],
    [9b61, 9b61], [9bdb, 9bdb], [9ce5, 9ce5], [9ced, 9ced], [9d43, 9d43],
    [9d70, 9d70], [2010f, 2010f], [206a5, 206a5], [206bb, 206bb],
    [206ea, 206ea], [2093c, 2093c], [20951, 20951], [20db0, 20db0],
    [21c2f, 21c2f], [22055, 22055], [22126, 22126], [221b4, 221b4],
    [23a70, 23a70], [24577, 24577], [24b48, 24b48], [24c69, 24c69],
    [2506e, 2506e], [25b90, 25b90], [25c9f, 25c9f], [25faf, 25faf],
    [2610b, 2610b], [26a23, 26a23], [26a4d, 26a4d], [26d8c, 26d8c],
    [26e14, 26e14], [27148, 27148], [27628, 27629], [27723, 27723],
    [28c11, 28c11], [28e13, 28e13], [2901c, 2901c], [2922e, 2922e],
    [292d9, 292d9], [29f97, 29f97]**/


    namespace {
    const static UnicodeSet::run_t __diao_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 16}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
    {Empty, 17}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 21},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 4}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 35},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 2844}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 17}, {Mixed, 2}, {Empty, 34},
    {Mixed, 1}, {Empty, 115}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 197},
    {Mixed, 1}, {Empty, 87}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 88},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 72}, {Mixed, 2}, {Empty, 25},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 166},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 101},
    {Mixed, 1}, {Empty, 29443}};
    const static UnicodeSet::bitquad_t  __diao_Set_quads[] = {
    0x08000000, 0x00000800, 0x00008000, 0x80000000, 0x00200000, 0x00000040,
    0x00008000, 0x20000400, 0x00000400, 0x00000040, 0x02000000, 0x80000000,
    0x40000000, 0x20000000, 0x00000004, 0x00000010, 0x08000000, 0x10000000,
    0x00000800, 0x00000003, 0x10000000, 0x00000002, 0x20000000, 0x00000020,
    0x00001000, 0x00100000, 0x00100000, 0x00000800, 0x04000000, 0x00020000,
    0x00000200, 0x00000040, 0x00000040, 0x00000040, 0x00000100, 0x00002000,
    0x00020000, 0x02000000, 0x00800000, 0x00200000, 0x00000200, 0x00000001,
    0x00200000, 0x00000100, 0x00400000, 0x00000200, 0x00000004, 0x10000000,
    0x00000080, 0x00000800, 0x00002000, 0x00000002, 0x00000200, 0x00000800,
    0x00000004, 0x80000000, 0x00000004, 0x02000000, 0x00080000, 0x00100000,
    0x04000000, 0x00000008, 0x04000000, 0x00020000, 0x20000000, 0x00002000,
    0x00000008, 0x00200000, 0x80000000, 0x00000002, 0x08000000, 0x00002020,
    0x00000008, 0x00010000, 0x00008000, 0x08000020, 0x00000400, 0x10000000,
    0x00020000, 0x00010000, 0x00008000, 0x00200000, 0x00000040, 0x00100000,
    0x00010000, 0x00800000, 0x00000100, 0x00000200, 0x00004000, 0x00010000,
    0x80000000, 0x00008000, 0x00000800, 0x00000008, 0x00002000, 0x00001000,
    0x00100000, 0x00000100, 0x00000300, 0x00000008, 0x00020000, 0x00080000,
    0x10000000, 0x00004000, 0x02000000, 0x00800000};
    }

    const static UnicodeSet diao_Set{const_cast<UnicodeSet::run_t *>(__diao_Set_runs), 193, 0, const_cast<UnicodeSet::bitquad_t *>(__diao_Set_quads), 106, 0};

    /** Code Point Ranges for mie
    [349d, 349d], [3a62, 3a62], [407e, 407e], [423c, 423c], [4329, 4329],
    [460a, 460a], [4a4f, 4a4f], [4e5c, 4e5c], [54a9, 54aa], [5b6d, 5b6d],
    [5e6d, 5e6d], [61f1, 61f1], [6423, 6423], [6ad7, 6ad7], [6ec5, 6ec5],
    [700e, 700e], [70d5, 70d5], [771c, 771c], [7bfe, 7bfe], [7f8b, 7f8b],
    [8511, 8511], [881b, 881b], [884a, 884a], [8995, 8995], [9456, 9456],
    [9c74, 9c74], [9d13, 9d13], [20e97, 20e97], [215ba, 215ba],
    [21799, 21799], [217ec, 217ec], [229bc, 229bc], [229de, 229de],
    [22a16, 22a16], [242be, 242be], [243ff, 243ff], [25132, 25132],
    [25253, 25253], [252da, 252da], [25328, 25328], [258eb, 258eb],
    [25d52, 25d52], [25e34, 25e34], [25f58, 25f58], [25f9d, 25f9d],
    [261ea, 261ea], [27005, 27005], [2709d, 2709d], [288f1, 288f1],
    [29520, 29520], [29c77, 29c77], [2a1f4, 2a1f4], [2a33a, 2a33a],
    [2a48d, 2a48d]**/


    namespace {
    const static UnicodeSet::run_t __mie_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 47},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 85}, {Mixed, 1}, {Empty, 64}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 2955}, {Mixed, 1}, {Empty, 56},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 141}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 196},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 105}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 112}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 194}, {Mixed, 1}, {Empty, 97}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 29403}};
    const static UnicodeSet::bitquad_t  __mie_Set_quads[] = {
    0x20000000, 0x00000004, 0x40000000, 0x10000000, 0x00000200, 0x00000400,
    0x00008000, 0x10000000, 0x00000600, 0x00002000, 0x00002000, 0x00020000,
    0x00000008, 0x00800000, 0x00000020, 0x00004000, 0x00200000, 0x10000000,
    0x40000000, 0x00000800, 0x00020000, 0x08000000, 0x00000400, 0x00200000,
    0x00400000, 0x00100000, 0x00080000, 0x00800000, 0x04000000, 0x02000000,
    0x00001000, 0x10000000, 0x40000000, 0x00400000, 0x40000000, 0x80000000,
    0x00040000, 0x00080000, 0x04000000, 0x00000100, 0x00000800, 0x00040000,
    0x00100000, 0x01000000, 0x20000000, 0x00000400, 0x00000020, 0x20000000,
    0x00020000, 0x00000001, 0x00800000, 0x00100000, 0x04000000, 0x00002000};
    }

    const static UnicodeSet mie_Set{const_cast<UnicodeSet::run_t *>(__mie_Set_runs), 107, 0, const_cast<UnicodeSet::bitquad_t *>(__mie_Set_quads), 54, 0};

    /** Code Point Ranges for wa
    [349d, 349d], [39da, 39da], [3f18, 3f18], [4145, 4145], [436a, 436a],
    [43b3, 43b3], [45af, 45af], [46b4, 46b4], [481a, 481a], [4a1f, 4a1f],
    [4bc9, 4bc9], [4d77, 4d77], [4f64, 4f64], [51f9, 51f9], [52b8, 52b8],
    [5493, 5493], [54c7, 54c7], [5532, 5532], [5558, 5558], [55d7, 55d7],
    [55e2, 55e2], [59fd, 59fd], [5a03, 5a03], [5aa7, 5aa7], [5e13, 5e13],
    [5f8d, 5f8d], [6316, 6316], [6432, 6432], [6c59, 6c59], [6d3c, 6d3c],
    [6e9b, 6e9b], [74e6, 74e6], [74e9, 74e9], [7556, 7556], [7a75, 7a75],
    [7a8a, 7a8a], [7a90, 7a90], [7aaa, 7aaa], [8049, 8049], [817d, 817d],
    [86d9, 86d9], [889c, 889c], [896a, 896a], [8b41, 8b41], [8b4c, 8b4c],
    [90b7, 90b7], [977a, 977a], [978b, 978b], [97e4, 97e4], [9bad, 9bad],
    [9ef3, 9ef3], [9f03, 9f03], [20c8e, 20c8e], [20d3a, 20d3a],
    [20e41, 20e41], [2104c, 2104c], [2169f, 2169f], [219d7, 219d7],
    [22208, 22208], [2340e, 2340e], [23889, 23889], [2389a, 2389a],
    [24787, 24787], [24b26, 24b26], [24b3f, 24b3f], [24bb0, 24bb0],
    [24fd7, 24fd7], [2593a, 2593a], [2595f, 2595f], [25fc9, 25fc9],
    [2660d, 2660d], [26635, 26635], [266a9, 266a9], [267ad, 267ad],
    [26919, 26919], [26aea, 26aea], [279ca, 279ca], [28004, 28004],
    [28a76, 28a76], [2939f, 2939f], [29a1a, 29a1a], [29a3e, 29a3e],
    [29a64, 29a64], [29ffa, 29ffa]**/


    namespace {
    const static UnicodeSet::run_t __wa_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3},
    {Mixed, 2}, {Empty, 31}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 40}, {Mixed, 3}, {Empty, 44},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 53}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 25},
    {Mixed, 2}, {Empty, 2923}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 49},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 65}, {Mixed, 1},
    {Empty, 143}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 119},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 74}, {Mixed, 2}, {Empty, 51},
    {Mixed, 1}, {Empty, 49}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 118}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 82},
    {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 51}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 29440}};
    const static UnicodeSet::bitquad_t  __wa_Set_quads[] = {
    0x20000000, 0x04000000, 0x01000000, 0x00000020, 0x00000400, 0x00080000,
    0x00008000, 0x00100000, 0x04000000, 0x80000000, 0x00000200, 0x00800000,
    0x00000010, 0x02000000, 0x01000000, 0x00080000, 0x00000080, 0x00040000,
    0x01000000, 0x00800000, 0x00000004, 0x20000000, 0x00000008, 0x00000080,
    0x00080000, 0x00002000, 0x00400000, 0x00040000, 0x02000000, 0x10000000,
    0x08000000, 0x00000240, 0x00400000, 0x00200000, 0x00010400, 0x00000400,
    0x00000200, 0x20000000, 0x02000000, 0x10000000, 0x00000400, 0x00001002,
    0x00800000, 0x04000000, 0x00000800, 0x00000010, 0x00002000, 0x00080000,
    0x00000008, 0x00004000, 0x04000000, 0x00000002, 0x00001000, 0x80000000,
    0x00800000, 0x00000100, 0x00004000, 0x04000200, 0x00000080, 0x80000040,
    0x00010000, 0x00800000, 0x04000000, 0x80000000, 0x00000200, 0x00002000,
    0x00200000, 0x00000200, 0x00002000, 0x02000000, 0x00000400, 0x00000400,
    0x00000010, 0x00400000, 0x80000000, 0x04000000, 0x40000000, 0x00000010,
    0x04000000};
    }

    const static UnicodeSet wa_Set{const_cast<UnicodeSet::run_t *>(__wa_Set_runs), 139, 0, const_cast<UnicodeSet::bitquad_t *>(__wa_Set_quads), 79, 0};

    /** Code Point Ranges for niao
    [349f, 349f], [3821, 3821], [40f5, 40f5], [498a, 498a], [5acb, 5acb],
    [5b32, 5b32], [5c25, 5c25], [5c3f, 5c3f], [6a22, 6a22], [6eba, 6eba],
    [8132, 8132], [832e, 832e], [8526, 8526], [88ca, 88ca], [892d, 892d],
    [9ce5, 9ce5], [204b0, 204b0], [2160f, 2160f], [2174b, 2174b],
    [21752, 21752], [2183f, 2183f], [22e23, 22e23], [237ca, 237ca],
    [24cb6, 24cb6], [25902, 25902], [25f87, 25f87], [28cc0, 28cc0],
    [28f56, 28f56], [29594, 29594], [29b51, 29b51], [2a15d, 2a15d],
    [2a23c, 2a23c]**/


    namespace {
    const static UnicodeSet::run_t __niao_Set_runs[] = {
    {Empty, 420}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 69},
    {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 137}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 111},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 147}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 157}, {Mixed, 1},
    {Empty, 2877}, {Mixed, 1}, {Empty, 138}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 175}, {Mixed, 1},
    {Empty, 76}, {Mixed, 1}, {Empty, 166}, {Mixed, 1}, {Empty, 98},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 361}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 29422}};
    const static UnicodeSet::bitquad_t  __niao_Set_quads[] = {
    0x80000000, 0x00000002, 0x00200000, 0x00000400, 0x00000800, 0x00040000,
    0x80000020, 0x00000004, 0x04000000, 0x00040000, 0x00004000, 0x00000040,
    0x00000400, 0x00002000, 0x00000020, 0x00010000, 0x00008000, 0x00040800,
    0x80000000, 0x00000008, 0x00000400, 0x00400000, 0x00000004, 0x00000080,
    0x00000001, 0x00400000, 0x00100000, 0x00020000, 0x20000000, 0x10000000};
    }

    const static UnicodeSet niao_Set{const_cast<UnicodeSet::run_t *>(__niao_Set_runs), 61, 0, const_cast<UnicodeSet::bitquad_t *>(__niao_Set_quads), 30, 0};

    /** Code Point Ranges for you
    [34a1, 34a1], [3571, 3571], [35c0, 35c0], [36ad, 36ad], [36dc, 36dc],
    [3911, 3911], [3acd, 3acd], [3c36, 3c36], [3c4a, 3c4a], [3cca, 3cca],
    [3cdb, 3cdb], [3d17, 3d17], [3dad, 3dad], [3f55, 3f55], [3f9e, 3f9e],
    [4001, 4001], [414e, 414e], [419c, 419c], [4343, 4343], [447b, 447b],
    [44b4, 44b4], [45bb, 45bb], [4683, 4683], [46bb, 46bb], [47a5, 47a5],
    [4973, 4973], [4b00, 4b00], [4c42, 4c42], [4cd1, 4cd1], [4eb4, 4eb4],
    [4f18, 4f18], [4f51, 4f51], [4f91, 4f91], [5064, 5064], [512a, 512a],
    [5198, 5198], [5363, 5363], [53c8, 53c8], [53cb, 53cb], [53f3, 53f3],
    [53f9, 53f9], [5466, 5466], [54ca, 54ca], [5500, 5500], [5698, 5698],
    [56ff, 56ff], [5773, 5773], [5965, 5965], [598b, 598b], [59f7, 59f7],
    [5ba5, 5ba5], [5c22, 5c22], [5c24, 5c24], [5cdf, 5cdf], [5cf3, 5cf3],
    [5e7c, 5e7d], [5eae, 5eae], [5fe7, 5fe7], [601e, 601e], [602e, 602e],
    [60a0, 60a0], [6182, 6182], [61ee, 61ee], [622d, 622d], [6270, 6270],
    [63c2, 63c2], [63c4, 63c4], [6538, 6538], [65bf, 65bf], [6709, 6709],
    [6713, 6713], [67da, 67da], [682f, 682f], [6884, 6884], [688e, 688e],
    [6962, 6962], [69f1, 69f1], [6afe, 6afe], [6c53, 6c53], [6c7c, 6c7c],
    [6c8b, 6c8b], [6cb9, 6cb9], [6cc5, 6cc5], [6cd1, 6cd1], [6d5f, 6d5f],
    [6e38, 6e38], [6e75, 6e75], [6efa, 6efa], [7000, 7000], [7256, 7256],
    [7270, 7270], [72b9, 72b9], [72d6, 72d6], [7336, 7337], [7376, 7376],
    [7531, 7531], [7534, 7534], [75a3, 75a3], [75cf, 75cf], [7950, 7950],
    [79de, 79de], [7e47, 7e47], [7e8b, 7e8b], [7f91, 7f91], [7f97, 7f97],
    [8030, 8030], [8048, 8048], [8071, 8071], [80ac, 80ac], [811c, 811c],
    [8129, 8129], [82c3, 82c3], [839c, 839c], [83a0, 83a0], [83a4, 83a4],
    [8555, 8555], [8698, 8698], [86b0, 86b0], [86b4, 86b4], [870f, 870f],
    [8763, 8764], [890e, 890e], [8a27, 8a27], [8a98, 8a98], [8c81, 8c81],
    [8f36, 8f36], [8ff6, 8ff6], [900c, 900c], [904a, 904a], [90ae, 90ae],
    [90f5, 90f5], [913e, 913e], [9149, 9149], [916d, 916d], [91c9, 91c9],
    [923e, 923e], [92aa, 92aa], [92b9, 92b9], [99c0, 99c0], [9b77, 9b77],
    [9b8b, 9b8b], [9bc8, 9bc8], [9e80, 9e80], [9edd, 9edd], [9f2c, 9f2c],
    [2058b, 2058b], [20633, 20633], [208a2, 208a2], [209e0, 209e0],
    [209ea, 209ea], [209f4, 209f4], [20a26, 20a26], [20bab, 20bab],
    [211c0, 211c0], [21230, 21230], [21235, 21235], [212a7, 212a7],
    [212e7, 212e7], [21733, 21733], [21bc9, 21bc9], [21bd9, 21bd9],
    [21e92, 21e92], [21e96, 21e96], [221b6, 221b6], [22213, 22213],
    [222e3, 222e3], [224ff, 224ff], [2259f, 2259f], [227c5, 227c5],
    [22aa5, 22aa5], [22fda, 22fda], [23068, 23068], [23144, 23144],
    [2317a, 2317a], [233de, 233de], [234d0, 234d0], [234db, 234db],
    [23884, 23884], [2389c, 2389c], [238dc, 238dc], [238f8, 238f8],
    [2390e, 2390e], [23921, 23921], [239d7, 239d7], [239e5, 239e5],
    [23e20, 23e20], [23fe4, 23fe4], [24118, 24118], [24355, 24355],
    [2461c, 2461c], [248d9, 248d9], [24927, 24927], [2492c, 2492c],
    [24a8e, 24a8e], [24c4e, 24c4e], [24d28, 24d28], [24e08, 24e08],
    [2567e, 2567e], [2571a, 2571a], [25758, 25758], [258ef, 258ef],
    [25bde, 25bde], [25d15, 25d15], [25f5f, 25f5f], [26393, 26393],
    [263c7, 263c7], [26478, 26478], [266a5, 266a5], [26963, 26963],
    [26a72, 26a72], [26ce7, 26ce7], [26ce9, 26ce9], [26cf7, 26cf7],
    [26d75, 26d75], [26dff, 26dff], [26e19, 26e19], [27025, 27025],
    [27172, 27172], [27195, 27195], [27198, 27198], [27358, 27358],
    [2764f, 2764f], [27836, 27836], [27879, 27879], [27c30, 27c30],
    [27ceb, 27ceb], [2846b, 2846b], [285f0, 285f0], [28601, 28601],
    [28635, 28635], [28642, 28642], [286d5, 286d5], [28874, 28874],
    [28d1c, 28d1c], [28e19, 28e19], [2920f, 2920f], [29463, 29463],
    [295da, 295da], [29608, 29608], [29613, 29613], [29737, 29737],
    [29939, 29939], [29958, 29958], [29c8e, 29c8e], [29d11, 29d11],
    [29d19, 29d19], [29e4a, 29e4a], [29f08, 29f08], [29f47, 29f47],
    [29fec, 29fec]**/


    namespace {
    const static UnicodeSet::run_t __you_Set_runs[] = {
    {Empty, 421}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 17}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 15}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 3}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 10}, {Mixed, 5}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 17}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 27}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 4}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 12}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 12},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 56}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2866}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 1}, {Mixed, 4}, {Empty, 4},
    {Mixed, 2}, {Empty, 33}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 9}, {Mixed, 2},
    {Empty, 13}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 11}, {Mixed, 4},
    {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 15}, {Mixed, 2},
    {Empty, 25}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 29440}};
    const static UnicodeSet::bitquad_t  __you_Set_quads[] = {
    0x00000002, 0x00020000, 0x00000001, 0x00002000, 0x10000000, 0x00020000,
    0x00002000, 0x00400000, 0x00000400, 0x08000400, 0x00800000, 0x00002000,
    0x00200000, 0x40000000, 0x00000002, 0x00004000, 0x10000000, 0x00000008,
    0x08000000, 0x00100000, 0x08000000, 0x00000008, 0x08000000, 0x00000020,
    0x00080000, 0x00000001, 0x00000004, 0x00020000, 0x00100000, 0x01000000,
    0x00020000, 0x00020000, 0x00000010, 0x00000400, 0x01000000, 0x00000008,
    0x00000900, 0x02080000, 0x00000040, 0x00000400, 0x00000001, 0x01000000,
    0x80000000, 0x00080000, 0x00000020, 0x00000800, 0x00800000, 0x00000020,
    0x00000014, 0x80000000, 0x00080000, 0x30000000, 0x00004000, 0x00000080,
    0x40000000, 0x00004000, 0x00000001, 0x00000004, 0x00004000, 0x00002000,
    0x00010000, 0x00000014, 0x01000000, 0x80000000, 0x00080200, 0x04000000,
    0x00008000, 0x00004010, 0x00000004, 0x00020000, 0x40000000, 0x00080000,
    0x10000000, 0x00000800, 0x02000000, 0x00020020, 0x80000000, 0x01000000,
    0x00200000, 0x04000000, 0x00000001, 0x00400000, 0x00010000, 0x02000000,
    0x00400000, 0x00c00000, 0x00400000, 0x00120000, 0x00000008, 0x00008000,
    0x00010000, 0x40000000, 0x00000080, 0x00000800, 0x00820000, 0x00010000,
    0x00000100, 0x00020000, 0x00001000, 0x10000000, 0x00000200, 0x00000008,
    0x10000000, 0x00000011, 0x00200000, 0x01000000, 0x00110000, 0x00008000,
    0x00000018, 0x00004000, 0x00000080, 0x01000000, 0x00000002, 0x00400000,
    0x00400000, 0x00001000, 0x00000400, 0x00004000, 0x00200000, 0x40000000,
    0x00000200, 0x00002000, 0x00000200, 0x40000000, 0x02000400, 0x00000001,
    0x00800000, 0x00000800, 0x00000100, 0x00000001, 0x20000000, 0x00001000,
    0x00000800, 0x00080000, 0x00000004, 0x00100401, 0x00000040, 0x00000800,
    0x00000001, 0x00210000, 0x00000080, 0x00000080, 0x00080000, 0x02000200,
    0x00440000, 0x00400000, 0x00080000, 0x00000008, 0x80000000, 0x80000000,
    0x00000020, 0x00000020, 0x04000000, 0x00000100, 0x00000010, 0x04000000,
    0x40000000, 0x08010000, 0x10000010, 0x10000000, 0x01000000, 0x00004000,
    0x00000002, 0x00800000, 0x00000020, 0x00000001, 0x00000010, 0x01000000,
    0x00200000, 0x10000000, 0x02000000, 0x00001080, 0x00004000, 0x00004000,
    0x00000100, 0x00000100, 0x40000000, 0x04000000, 0x01000000, 0x00008000,
    0x40000000, 0x00200000, 0x80000000, 0x00080000, 0x00000080, 0x01000000,
    0x00000020, 0x00000008, 0x00040000, 0x00800280, 0x00200000, 0x80000000,
    0x02000000, 0x00000020, 0x00040000, 0x01200000, 0x01000000, 0x00008000,
    0x00400000, 0x02000000, 0x00010000, 0x00000800, 0x00000800, 0x00010000,
    0x00000002, 0x00200000, 0x00000004, 0x00200000, 0x00100000, 0x10000000,
    0x02000000, 0x00008000, 0x00000008, 0x04000000, 0x00080100, 0x00800000,
    0x02000000, 0x01000000, 0x00004000, 0x02020000, 0x00000400, 0x00000100,
    0x00000080, 0x00001000};
    }

    const static UnicodeSet you_Set{const_cast<UnicodeSet::run_t *>(__you_Set_runs), 379, 0, const_cast<UnicodeSet::bitquad_t *>(__you_Set_quads), 224, 0};

    /** Code Point Ranges for che
    [34a4, 34a4], [3934, 3934], [3a0b, 3a0b], [3b1a, 3b1a], [3c4c, 3c4c],
    [3ce7, 3ce7], [3d54, 3d54], [3f9d, 3f9d], [3fed, 3fed], [4064, 4064],
    [429e, 429e], [4486, 4486], [46a2, 46a2], [47a3, 47a3], [49ea, 49ea],
    [4c29, 4c29], [4fe5, 4fe5], [5056, 5056], [52f6, 52f6], [546b, 546b],
    [5513, 5513], [55a2, 55a2], [577c, 577c], [5972, 5972], [5b85, 5b85],
    [5c3a, 5c3a], [5c6e, 5c6e], [5fb9, 5fb9], [626f, 626f], [62c6, 62c6],
    [63a3, 63a3], [63ca, 63ca], [6470, 6470], [64a4, 64a4], [65a5, 65a5],
    [6c60, 6c60], [6f88, 6f88], [70e2, 70e2], [70f2, 70f2], [7221, 7221],
    [77ae, 77ae], [7868, 7869], [8045, 8045], [8397, 8397], [86fc, 86fc],
    [8a40, 8a40], [8b35, 8b35], [8eca, 8eca], [8fe0, 8fe0], [9819, 9819],
    [21dd6, 21dd6], [221db, 221db], [2228f, 2228f], [226c1, 226c1],
    [23a0a, 23a0a], [242bf, 242bf], [2455b, 2455b], [245b7, 245b7],
    [245d9, 245d9], [2496d, 2496d], [24e5e, 24e5e], [25be5, 25be5],
    [25fca, 25fca], [264cd, 264cd], [266d6, 266d6], [2765d, 2765d],
    [27f33, 27f33], [28020, 28020], [2814a, 2814a], [28e61, 28e61],
    [290bb, 290bb], [2939a, 2939a], [294b7, 294b7], [295d9, 295d9],
    [29d1f, 29d1f], [2a3ba, 2a3ba]**/


    namespace {
    const static UnicodeSet::run_t __che_Set_runs[] = {
    {Empty, 421}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 62}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 64},
    {Mixed, 1}, {Empty, 3117}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 153},
    {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 28}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 108}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 123},
    {Mixed, 1}, {Empty, 70}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 104}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 57}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 29410}};
    const static UnicodeSet::bitquad_t  __che_Set_quads[] = {
    0x00000010, 0x00100000, 0x00000800, 0x04000000, 0x00001000, 0x00000080,
    0x00100000, 0x20000000, 0x00002000, 0x00000010, 0x40000000, 0x00000040,
    0x00000004, 0x00000008, 0x00000400, 0x00000200, 0x00000020, 0x00400000,
    0x00400000, 0x00000800, 0x00080000, 0x00000004, 0x10000000, 0x00040000,
    0x00000020, 0x04000000, 0x00004000, 0x02000000, 0x00008000, 0x00000040,
    0x00000008, 0x00000400, 0x00010000, 0x00000010, 0x00000020, 0x00000001,
    0x00000100, 0x00040004, 0x00000002, 0x00004000, 0x00000300, 0x00000020,
    0x00800000, 0x10000000, 0x00000001, 0x00200000, 0x00000400, 0x00000001,
    0x02000000, 0x00400000, 0x08000000, 0x00008000, 0x00000002, 0x00000400,
    0x80000000, 0x08000000, 0x00800000, 0x02000000, 0x00002000, 0x40000000,
    0x00000020, 0x00000400, 0x00002000, 0x00400000, 0x20000000, 0x00080000,
    0x00000001, 0x00000400, 0x00000002, 0x08000000, 0x04000000, 0x00800000,
    0x02000000, 0x80000000, 0x04000000};
    }

    const static UnicodeSet che_Set{const_cast<UnicodeSet::run_t *>(__che_Set_runs), 147, 0, const_cast<UnicodeSet::bitquad_t *>(__che_Set_quads), 75, 0};

    /** Code Point Ranges for feng
    [34a5, 34a5], [356b, 356b], [36d4, 36d4], [3702, 3702], [3826, 3826],
    [385d, 385d], [3980, 3980], [3d6f, 3d6f], [4031, 4031], [43ce, 43ce],
    [44a0, 44a0], [47ea, 47ea], [4a6c, 4a6c], [4a7c, 4a7c], [4e30, 4e30],
    [4ef9, 4ef9], [4ff8, 4ff8], [5051, 5051], [552a, 552a], [57c4, 57c4],
    [5838, 5838], [5906, 5906], [5949, 5949], [59a6, 59a6], [5bf7, 5bf7],
    [5c01, 5c01], [5cef, 5cef], [5d36, 5d36], [6340, 6340], [6367, 6367],
    [6453, 6453], [65b9, 65b9], [687b, 687b], [6953, 6953], [6a92, 6a92],
    [6cdb, 6cdb], [6d72, 6d72], [6e22, 6e22], [6e57, 6e57], [6f28, 6f28],
    [7043, 7043], [7090, 7090], [70fd, 70fd], [7128, 7128], [7148, 7148],
    [71a2, 71a2], [728e, 728e], [7326, 7326], [752e, 752e], [760b, 760b],
    [78b8, 78b8], [7bc8, 7bc8], [7e2b, 7e2b], [80a8, 80a8], [823d, 823d],
    [8242, 8242], [8391, 8391], [8451, 8451], [8634, 8634], [868c, 868c],
    [8702, 8702], [882d, 882d], [8982, 8982], [8af7, 8af7], [8c4a, 8c4a],
    [8c50, 8c50], [8cf5, 8cf5], [9004, 9004], [9022, 9022], [9146, 9146],
    [92d2, 92d2], [974a, 974a], [98a8, 98a8], [99ae, 99ae], [9cf3, 9cf3],
    [9d6c, 9d6c], [9eb7, 9eb7], [2125a, 2125a], [21556, 21556],
    [21a1b, 21a1b], [21d5e, 21d5e], [221eb, 221eb], [224f1, 224f1],
    [22a8b, 22a8b], [23fdd, 23fdd], [24580, 24580], [25292, 25292],
    [2536e, 2536e], [256dd, 256dd], [25ddc, 25ddc], [25f48, 25f48],
    [26701, 26701], [269c1, 269c1], [27189, 27189], [2736f, 2736f],
    [27979, 27979], [27fb3, 27fb3], [2876d, 2876d], [28a65, 28a65],
    [28cab, 28cab], [28ea2, 28ea2], [29267, 29267], [292a9, 292a9],
    [292ee, 292ee], [2942f, 2942f], [29635, 29635], [29650, 29650],
    [29663, 29663], [29a8c, 29a8c], [2a403, 2a403]**/


    namespace {
    const static UnicodeSet::run_t __feng_Set_runs[] = {
    {Empty, 421}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 17}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 48}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 11}, {Mixed, 2},
    {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 24}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 2972}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 169},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 103}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 55},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 61}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 15}, {Mixed, 3}, {Empty, 32}, {Mixed, 1}, {Empty, 75},
    {Mixed, 1}, {Empty, 29407}};
    const static UnicodeSet::bitquad_t  __feng_Set_quads[] = {
    0x00000020, 0x00000800, 0x00100000, 0x00000004, 0x00000040, 0x20000000,
    0x00000001, 0x00008000, 0x00020000, 0x00004000, 0x00000001, 0x00000400,
    0x10001000, 0x00010000, 0x02000000, 0x01000000, 0x00020000, 0x00000400,
    0x00000010, 0x01000000, 0x00000040, 0x00000200, 0x00000040, 0x00800000,
    0x00000002, 0x00008000, 0x00400000, 0x00000001, 0x00000080, 0x00080000,
    0x02000000, 0x08000000, 0x00080000, 0x00040000, 0x08000000, 0x00040000,
    0x00000004, 0x00800000, 0x00000100, 0x00000008, 0x00010000, 0x20000000,
    0x00000100, 0x00000100, 0x00000004, 0x00004000, 0x00000040, 0x00004000,
    0x00000800, 0x01000000, 0x00000100, 0x00000800, 0x00000100, 0x20000000,
    0x00000004, 0x00020000, 0x00020000, 0x00100000, 0x00001000, 0x00000004,
    0x00002000, 0x00000004, 0x00800000, 0x00010400, 0x00200000, 0x00000010,
    0x00000004, 0x00000040, 0x00040000, 0x00000400, 0x00000100, 0x00004000,
    0x00080000, 0x00001000, 0x00800000, 0x04000000, 0x00400000, 0x08000000,
    0x40000000, 0x00000800, 0x00020000, 0x00000800, 0x20000000, 0x00000001,
    0x00040000, 0x00004000, 0x20000000, 0x10000000, 0x00000100, 0x00000002,
    0x00000002, 0x00000200, 0x00008000, 0x02000000, 0x00080000, 0x00002000,
    0x00000020, 0x00000800, 0x00000004, 0x00000080, 0x00000200, 0x00004000,
    0x00008000, 0x00200000, 0x00010000, 0x00000008, 0x00001000, 0x00000008};
    }

    const static UnicodeSet feng_Set{const_cast<UnicodeSet::run_t *>(__feng_Set_runs), 199, 0, const_cast<UnicodeSet::bitquad_t *>(__feng_Set_quads), 108, 0};

    /** Code Point Ranges for gu
    [34b4, 34b4], [39fd, 39fd], [3c60, 3c60], [3f0b, 3f0b], [3f7d, 3f7d],
    [3fb6, 3fb6], [4007, 4007], [4026, 4026], [4030, 4030], [417d, 417d],
    [41e2, 41e2], [4249, 4249], [435b, 435b], [4428, 4428], [443b, 443b],
    [44e2, 44e2], [473c, 473c], [4870, 4870], [4ba9, 4ba9], [4d9c, 4d9c],
    [4f30, 4f30], [51c5, 51c5], [53e4, 53e4], [544a, 544a], [5471, 5471],
    [5474, 5474], [5495, 5495], [54cc, 54cc], [5502, 5502], [5552, 5552],
    [55d7, 55d7], [560f, 560f], [56fa, 56fa], [580c, 580c], [5903, 5903],
    [59d1, 59d1], [5af4, 5af4], [5b64, 5b64], [5bb6, 5bb6], [5c33, 5c33],
    [5d13, 5d13], [5d2e, 5d2e], [6018, 6018], [6132, 6132], [6262, 6262],
    [6545, 6545], [67af, 67af], [67e7, 67e7], [688f, 688f], [68dd, 68dd],
    [6996, 6996], [69be, 69be], [6a6d, 6a6d], [6ace, 6ace], [6c69, 6c69],
    [6cbd, 6cbd], [6cd2, 6cd2], [6dc8, 6dc8], [6ed1, 6ed1], [7014, 7014],
    [7138, 7138], [726f, 726f], [727f, 727f], [74e0, 74e0], [75fc, 75fc],
    [768b, 768b], [76ec, 76ec], [77bd, 77bd], [78c6, 78c6], [797b, 797b],
    [7a12, 7a12], [7a40, 7a40], [7b8d, 7b8d], [7b9b, 7b9b], [7e0e, 7e0e],
    [7f5b, 7f5b], [7f5f, 7f5f], [7f96, 7f96], [80a1, 80a1], [80cd, 80cd],
    [81cc, 81cc], [82e6, 82e6], [82fd, 82fd], [83c7, 83c7], [83f0, 83f0],
    [84c7, 84c7], [85a3, 85a3], [86c4, 86c4], [86cc, 86cc], [8831, 8831],
    [89d2, 89d2], [89da, 89da], [8a41, 8a41], [8c37, 8c37], [8cc8, 8cc8],
    [8ef1, 8ef2], [8f42, 8f42], [8f9c, 8f9c], [9164, 9164], [9232, 9232],
    [9237, 9237], [932e, 932e], [96c7, 96c7], [96e2, 96e2], [9867, 9867],
    [9936, 9936], [9aa8, 9aa8], [9ab0, 9ab0], [9b95, 9b95], [9bdd, 9bdd],
    [9d23, 9d23], [9d60, 9d60], [9dbb, 9dbb], [9f13, 9f14], [20479, 20479],
    [20dde, 20dde], [20ee7, 20ee7], [20f7f, 20f7f], [215f7, 215f7],
    [21dd3, 21dd3], [21f42, 21f42], [22773, 22773], [22847, 22847],
    [22a8f, 22a8f], [23010, 23010], [235ab, 235ab], [239a9, 239a9],
    [239ad, 239ad], [23a0d, 23a0d], [23a3a, 23a3a], [23ab8, 23ab8],
    [23ac0, 23ac0], [23c6b, 23c6b], [23c96, 23c96], [24171, 24171],
    [246b1, 246b1], [250b0, 250b0], [2542c, 2542c], [25833, 25833],
    [25b9d, 25b9d], [25d60, 25d60], [25fcd, 25fcd], [26232, 26232],
    [262ac, 262ac], [262c6, 262c6], [263b0, 263b0], [26ea0, 26ea0],
    [26fab, 26fab], [271bb, 271bb], [271e1, 271e1], [277e3, 277e3],
    [278e1, 278e1], [27b15, 27b15], [27cf8, 27cf8], [27d4e, 27d4e],
    [2880b, 2880b], [28ab7, 28ab7], [28b15, 28b15], [28d50, 28d50],
    [28e2f, 28e2f], [29020, 29020], [2964f, 2964f], [29cb1, 29cb1],
    [29d21, 29d21], [2a12e, 2a12e], [2a1d7, 2a1d7], [2a577, 2a577]**/


    namespace {
    const static UnicodeSet::run_t __gu_Set_runs[] = {
    {Empty, 421}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 22}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 28}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2858}, {Mixed, 1},
    {Empty, 74}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 51}, {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3},
    {Mixed, 2}, {Empty, 12}, {Mixed, 2}, {Empty, 38}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 79}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 87},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 85}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 50},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 29396}};
    const static UnicodeSet::bitquad_t  __gu_Set_quads[] = {
    0x00100000, 0x20000000, 0x00000001, 0x00000800, 0x20000000, 0x00400000,
    0x00000080, 0x00010040, 0x20000000, 0x00000004, 0x00000200, 0x08000000,
    0x08000100, 0x00000004, 0x10000000, 0x00010000, 0x00000200, 0x10000000,
    0x00010000, 0x00000020, 0x00000010, 0x00000400, 0x00120000, 0x00200000,
    0x00001000, 0x00000004, 0x00040000, 0x00800000, 0x00008000, 0x04000000,
    0x00001000, 0x00000008, 0x00020000, 0x00100000, 0x00000010, 0x00400000,
    0x00080000, 0x00080000, 0x00004000, 0x01000000, 0x00040000, 0x00000004,
    0x00000020, 0x00008000, 0x00000080, 0x00008000, 0x20000000, 0x00400000,
    0x40000000, 0x00002000, 0x00004000, 0x00000200, 0x20000000, 0x00040000,
    0x00000100, 0x00020000, 0x00100000, 0x01000000, 0x80008000, 0x00000001,
    0x10000000, 0x00000800, 0x00001000, 0x20000000, 0x00000040, 0x08000000,
    0x00040000, 0x00000001, 0x08002000, 0x00004000, 0x88000000, 0x00400000,
    0x00000002, 0x00002000, 0x00001000, 0x20000040, 0x00000080, 0x00010000,
    0x00000080, 0x00000008, 0x00001010, 0x00020000, 0x04040000, 0x00000002,
    0x00800000, 0x00000100, 0x00060000, 0x00000004, 0x10000000, 0x00000010,
    0x00840000, 0x00004000, 0x00000080, 0x00000004, 0x00000080, 0x00400000,
    0x00010100, 0x00200000, 0x20000000, 0x00000008, 0x00000001, 0x08000000,
    0x00180000, 0x02000000, 0x40000000, 0x00000080, 0x80000000, 0x00800000,
    0x00080000, 0x00000004, 0x00080000, 0x00000080, 0x00008000, 0x00010000,
    0x00000800, 0x00002200, 0x00002000, 0x04000000, 0x01000000, 0x00000001,
    0x00000800, 0x00400000, 0x00020000, 0x00020000, 0x00010000, 0x00001000,
    0x00080000, 0x20000000, 0x00000001, 0x00002000, 0x00040000, 0x00001000,
    0x00000040, 0x00010000, 0x00000001, 0x00000800, 0x08000000, 0x00000002,
    0x00000008, 0x00000002, 0x00200000, 0x01000000, 0x00004000, 0x00000800,
    0x00800000, 0x00200000, 0x00010000, 0x00008000, 0x00000001, 0x00008000,
    0x00020000, 0x00000002, 0x00004000, 0x00800000, 0x00800000};
    }

    const static UnicodeSet gu_Set{const_cast<UnicodeSet::run_t *>(__gu_Set_runs), 285, 0, const_cast<UnicodeSet::bitquad_t *>(__gu_Set_quads), 155, 0};

    /** Code Point Ranges for sui
    [34b8, 34b8], [395e, 395e], [3edf, 3edf], [3efd, 3efd], [4157, 4157],
    [424c, 424c], [4539, 4539], [4714, 4714], [4814, 4814], [4875, 4875],
    [4959, 4959], [49cc, 49cc], [4a8e, 4a8e], [4b49, 4b49], [4bff, 4bff],
    [5020, 5020], [54f8, 54f8], [55fa, 55fa], [57e3, 57e3], [590a, 590a],
    [5a1e, 5a1e], [5b18, 5b18], [5c3f, 5c3f], [5f57, 5f57], [633c, 633c],
    [648b, 648b], [65de, 65de], [6a96, 6a96], [6b72, 6b72], [6bf8, 6bf8],
    [6d7d, 6d7d], [6ed6, 6ed6], [6fbb, 6fbb], [6fc9, 6fc9], [7021, 7021],
    [71a3, 71a3], [71e7, 71e7], [74b2, 74b2], [74cd, 74cd], [772d, 772d],
    [775f, 775f], [7762, 7762], [788e, 788e], [795f, 795f], [79ad, 79ad],
    [7a57, 7a57], [7a5f, 7a5f], [7bf2, 7bf2], [7cb9, 7cb9], [7d8f, 7d8f],
    [7e17, 7e17], [7e40, 7e40], [7e50, 7e50], [7e78, 7e78], [813a, 813a],
    [81b8, 81b8], [837d, 837e], [838e, 838e], [8470, 8470], [84d1, 84d1],
    [895a, 895a], [8ab6, 8ab6], [8ce5, 8ce5], [9042, 9042], [907a, 907a],
    [9083, 9083], [93f8, 93f8], [964f, 964f], [968a, 968b], [96a7, 96a8],
    [96d6, 96d6], [9743, 9743], [9796, 9796], [97e2, 97e2], [9ad3, 9ad3],
    [20331, 20331], [20578, 20578], [20a0c, 20a0c], [20b65, 20b65],
    [2145e, 2145e], [21753, 21753], [21da3, 21da3], [21dfc, 21dfc],
    [21e56, 21e56], [22155, 22155], [221e5, 221e5], [2223c, 2223c],
    [224b1, 224b1], [227e9, 227e9], [23127, 23127], [23a61, 23a61],
    [23b84, 23b84], [23be7, 23be7], [23bef, 23bef], [2486a, 2486a],
    [24b2b, 24b2b], [24b62, 24b62], [24bd6, 24bd6], [24ec4, 24ec4],
    [252b4, 252b4], [25578, 25578], [2585c, 2585c], [2593c, 2593c],
    [25c75, 25c75], [25d26, 25d26], [25dbb, 25dbb], [260d2, 260d2],
    [26111, 26111], [26175, 26175], [261c0, 261c0], [2624e, 2624e],
    [26d6d, 26d6d], [26e0f, 26e0f], [270da, 270da], [27191, 27191],
    [27227, 27227], [27322, 27322], [277b8, 277b8], [2784f, 2784f],
    [27a27, 27a27], [27c88, 27c88], [27e19, 27e19], [2818f, 2818f],
    [28489, 28489], [288e2, 288e2], [28dc3, 28dc3], [28fa1, 28fa1],
    [28fac, 28fac], [290c3, 290c3], [29329, 29329], [2935a, 2935a],
    [293b0, 293b0], [293d8, 293d8], [293da, 293da], [293f2, 293f2],
    [295f6, 295f6], [29647, 29647], [2974c, 2974c], [29785, 29785],
    [29bb4, 29bb4]**/


    namespace {
    const static UnicodeSet::run_t __sui_Set_runs[] = {
    {Empty, 421}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 43},
    {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21},
    {Mixed, 2}, {Empty, 18}, {Mixed, 3}, {Empty, 8}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 21}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 26}, {Mixed, 3}, {Empty, 26},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 2882}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 70},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 73},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 99},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 88},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 18}, {Mixed, 2}, {Empty, 2}, {Mixed, 3},
    {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 29474}};
    const static UnicodeSet::bitquad_t  __sui_Set_quads[] = {
    0x01000000, 0x40000000, 0x80000000, 0x20000000, 0x00800000, 0x00001000,
    0x02000000, 0x00100000, 0x00100000, 0x00200000, 0x02000000, 0x00001000,
    0x00004000, 0x00000200, 0x80000000, 0x00000001, 0x01000000, 0x04000000,
    0x00000008, 0x00000400, 0x40000000, 0x01000000, 0x80000000, 0x00800000,
    0x10000000, 0x00000800, 0x40000000, 0x00400000, 0x00040000, 0x01000000,
    0x20000000, 0x00400000, 0x08000000, 0x00000200, 0x00000002, 0x00000008,
    0x00000080, 0x00040000, 0x00002000, 0x00002000, 0x80000000, 0x00000004,
    0x00004000, 0x80000000, 0x00002000, 0x80800000, 0x00040000, 0x02000000,
    0x00008000, 0x00800000, 0x00010001, 0x01000000, 0x04000000, 0x01000000,
    0x60000000, 0x00004000, 0x00010000, 0x00020000, 0x04000000, 0x00400000,
    0x00000020, 0x00000004, 0x04000000, 0x00000008, 0x01000000, 0x00008000,
    0x00000c00, 0x00000180, 0x00400000, 0x00000008, 0x00400000, 0x00000004,
    0x00080000, 0x00020000, 0x01000000, 0x00001000, 0x00000020, 0x40000000,
    0x00080000, 0x00000008, 0x10000000, 0x00400000, 0x00200000, 0x00000020,
    0x10000000, 0x00020000, 0x00000200, 0x00000080, 0x00000002, 0x00000010,
    0x00008080, 0x00000400, 0x00000800, 0x00000004, 0x00400000, 0x00000010,
    0x00100000, 0x01000000, 0x10000000, 0x10000000, 0x00200000, 0x00000040,
    0x08000000, 0x00040000, 0x00020000, 0x00200000, 0x00000001, 0x00004000,
    0x00002000, 0x00008000, 0x04000000, 0x00020000, 0x00000080, 0x00000004,
    0x01000000, 0x00008000, 0x00000080, 0x00000100, 0x02000000, 0x00008000,
    0x00000200, 0x00000004, 0x00000008, 0x00001002, 0x00000008, 0x00000200,
    0x04000000, 0x00010000, 0x05000000, 0x00040000, 0x00400000, 0x00000080,
    0x00001000, 0x00000020, 0x00100000};
    }

    const static UnicodeSet sui_Set{const_cast<UnicodeSet::run_t *>(__sui_Set_runs), 243, 0, const_cast<UnicodeSet::bitquad_t *>(__sui_Set_quads), 135, 0};

    /** Code Point Ranges for man
    [34bc, 34bc], [3662, 3662], [36e7, 36e7], [3d58, 3d58], [3ff8, 3ff8],
    [417c, 417c], [42a1, 42a1], [443d, 443d], [44a5, 44a5], [4555, 4555],
    [46f2, 46f2], [4731, 4731], [4762, 4762], [47c2, 47c2], [486c, 486c],
    [4bf6, 4bf6], [50c8, 50c8], [57cb, 57cb], [5881, 5881], [59cf, 59cf],
    [5ada, 5ada], [5c58, 5c58], [5e54, 5e55], [6097, 6097], [6162, 6162],
    [6172, 6172], [6471, 6471], [66fc, 66fc], [69fe, 69fe], [6a20, 6a20],
    [6eff, 6eff], [6f2b, 6f2b], [6fab, 6fab], [71b3, 71b3], [734c, 734c],
    [774c, 774c], [779e, 779e], [77d5, 77d5], [7d7b, 7d7b], [7e35, 7e35],
    [8504, 8504], [8513, 8513], [87ce, 87ce], [883b, 883b], [8b3e, 8b3e],
    [8e63, 8e63], [9124, 9124], [93cb, 93cb], [93dd, 93dd], [9794, 9794],
    [9862, 9862], [9945, 9945], [9b17, 9b18], [9c3b, 9c3b], [21562, 21562],
    [2189a, 2189a], [21ee9, 21ee9], [22988, 22988], [22fdc, 22fdc],
    [2305c, 2305c], [2414e, 2414e], [24718, 24718], [25291, 25291],
    [259ed, 259ed], [25b08, 25b08], [25c88, 25c88], [25c91, 25c91],
    [2638c, 2638c], [26514, 26514], [2718f, 2718f], [275b5, 275b5],
    [2771e, 2771e], [27c7c, 27c7c], [28c9b, 28c9b], [28cbe, 28cbe],
    [2914d, 2914d], [29193, 29193], [29226, 29226], [296ce, 296ce],
    [296df, 296df], [29b1e, 29b1e], [29b89, 29b89], [2a23f, 2a23f],
    [2a369, 2a369], [2a46a, 2a46a]**/


    namespace {
    const static UnicodeSet::run_t __man_Set_runs[] = {
    {Empty, 421}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 3017}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 50}, {Mixed, 1}, {Empty, 84}, {Mixed, 1}, {Empty, 49},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 135}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 91}, {Mixed, 1}, {Empty, 58},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 99},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 128}, {Mixed, 2}, {Empty, 36},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 29404}};
    const static UnicodeSet::bitquad_t  __man_Set_quads[] = {
    0x10000000, 0x00000004, 0x00000080, 0x01000000, 0x01000000, 0x10000000,
    0x00000002, 0x20000000, 0x00000020, 0x00200000, 0x00040000, 0x00020000,
    0x00000004, 0x00000004, 0x00001000, 0x00400000, 0x00000100, 0x00000800,
    0x00000002, 0x00008000, 0x04000000, 0x01000000, 0x00300000, 0x00800000,
    0x00040004, 0x00020000, 0x10000000, 0x40000000, 0x00000001, 0x80000000,
    0x00000800, 0x00000800, 0x00080000, 0x00001000, 0x00001000, 0x40000000,
    0x00200000, 0x08000000, 0x00200000, 0x00080010, 0x00004000, 0x08000000,
    0x40000000, 0x00000008, 0x00000010, 0x20000800, 0x00100000, 0x00000004,
    0x00000020, 0x01800000, 0x08000000, 0x00000004, 0x04000000, 0x00000200,
    0x00000100, 0x10000000, 0x10000000, 0x00004000, 0x01000000, 0x00020000,
    0x00002000, 0x00000100, 0x00020100, 0x00001000, 0x00100000, 0x00008000,
    0x00200000, 0x40000000, 0x10000000, 0x08000000, 0x40000000, 0x00002000,
    0x00080000, 0x00000040, 0x80004000, 0x40000000, 0x00000200, 0x80000000,
    0x00000200, 0x00000400};
    }

    const static UnicodeSet man_Set{const_cast<UnicodeSet::run_t *>(__man_Set_runs), 159, 0, const_cast<UnicodeSet::bitquad_t *>(__man_Set_quads), 80, 0};

    /** Code Point Ranges for quan
    [34bd, 34bd], [402c, 402c], [4110, 4110], [415a, 415a], [428e, 428e],
    [432f, 432f], [444f, 444f], [47d2, 47d2], [4830, 4830], [4e32, 4e32],
    [4f7a, 4f7a], [5168, 5168], [5238, 5238], [52f8, 52f8], [5377, 5377],
    [5573, 5573], [5708, 5708], [5733, 5733], [57e2, 57e2], [59fe, 59fe],
    [5a58, 5a58], [5b49, 5b49], [5cd1, 5cd1], [5dcf, 5dcf], [5f2e, 5f2e],
    [606e, 606e], [609b, 609b], [60d3, 60d3], [62f3, 62f4], [6372, 6372],
    [6813, 6813], [684a, 684a], [68ec, 68ec], [69eb, 69eb], [6b0a, 6b0a],
    [6c71, 6c71], [6cc9, 6cc9], [6e76, 6e76], [7065, 7065], [70c7, 70c7],
    [7276, 7277], [7288, 7288], [72ac, 72ac], [72cb, 72cb], [737e, 737e],
    [7454, 7454], [753d, 753d], [754e, 754e], [75ca, 75ca], [77d4, 77d4],
    [7b4c, 7b4c], [7d14, 7d14], [7d5f, 7d5f], [7da3, 7da3], [7e13, 7e13],
    [8143, 8143], [8343, 8343], [8472, 8472], [8647, 8647], [8737, 8737],
    [8838, 8838], [89e0, 89e0], [8a6e, 8a6e], [8b1c, 8b1c], [8b54, 8b54],
    [8de7, 8de7], [8e21, 8e21], [8f07, 8f07], [9144, 9144], [919b, 919b],
    [9293, 9293], [9409, 9409], [97cf, 97cf], [9874, 9874], [99e9, 99e9],
    [9b08, 9b08], [9c01, 9c01], [9e1b, 9e1b], [9f64, 9f64], [206ee, 206ee],
    [20939, 20939], [20959, 20959], [211ee, 211ee], [21209, 21209],
    [21645, 21645], [21650, 21650], [21c1d, 21c1d], [21d14, 21d14],
    [21e9f, 21e9f], [21fe8, 21fe8], [22355, 22355], [223a0, 223a0],
    [22446, 22446], [22511, 22511], [22ad4, 22ad4], [23374, 23374],
    [23e0b, 23e0b], [2470d, 2470d], [24977, 24977], [24b20, 24b20],
    [24c1d, 24c1d], [24dc4, 24dc4], [25060, 25060], [25078, 25078],
    [2590a, 2590a], [25e73, 25e73], [262d3, 262d3], [26345, 26345],
    [263ee, 263ee], [264f0, 264f0], [26a1a, 26a1a], [2723e, 2723e],
    [2736d, 2736d], [27e3e, 27e3e], [286c8, 286c8], [28729, 28729],
    [287e0, 287e0], [28a17, 28a17], [28a78, 28a78], [294eb, 294eb],
    [29618, 29618], [2972c, 2972c], [2a23b, 2a23b], [2a402, 2a402]**/


    namespace {
    const static UnicodeSet::run_t __quan_Set_runs[] = {
    {Empty, 421}, {Mixed, 1}, {Empty, 91}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 12},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 4}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2875},
    {Mixed, 1}, {Empty, 17}, {Mixed, 2}, {Empty, 68}, {Mixed, 2},
    {Empty, 33}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 68},
    {Mixed, 1}, {Empty, 84}, {Mixed, 1}, {Empty, 71}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 68}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 64}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 85}, {Mixed, 1}, {Empty, 68},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 83}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 87}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 29407}};
    const static UnicodeSet::bitquad_t  __quan_Set_quads[] = {
    0x20000000, 0x00001000, 0x00010000, 0x04000000, 0x00004000, 0x00008000,
    0x00008000, 0x00040000, 0x00010000, 0x00040000, 0x04000000, 0x00000100,
    0x01000000, 0x01000000, 0x00800000, 0x00080000, 0x00000100, 0x00080000,
    0x00000004, 0x40000000, 0x01000000, 0x00000200, 0x00020000, 0x00008000,
    0x00004000, 0x00004000, 0x08000000, 0x00080000, 0x00180000, 0x00040000,
    0x00080000, 0x00000400, 0x00001000, 0x00000800, 0x00000400, 0x00020000,
    0x00000200, 0x00400000, 0x00000020, 0x00000080, 0x00c00000, 0x00000100,
    0x00001000, 0x00000800, 0x40000000, 0x00100000, 0x20000000, 0x00004000,
    0x00000400, 0x00100000, 0x00001000, 0x00100000, 0x80000000, 0x00000008,
    0x00080000, 0x00000008, 0x00000008, 0x00040000, 0x00000080, 0x00800000,
    0x01000000, 0x00000001, 0x00004000, 0x10000000, 0x00100000, 0x00000080,
    0x00000002, 0x00000080, 0x00000010, 0x08000000, 0x00080000, 0x00000200,
    0x00008000, 0x00100000, 0x00000200, 0x00000100, 0x00000002, 0x08000000,
    0x00000010, 0x00004000, 0x02000000, 0x02000000, 0x00004000, 0x00000200,
    0x00010020, 0x20000000, 0x00100000, 0x80000000, 0x00000100, 0x00200000,
    0x00000001, 0x00000040, 0x00020000, 0x00100000, 0x00100000, 0x00000800,
    0x00002000, 0x00800000, 0x00000001, 0x20000000, 0x00000010, 0x01000001,
    0x00000400, 0x00080000, 0x00080000, 0x00000020, 0x00004000, 0x00010000,
    0x04000000, 0x40000000, 0x00002000, 0x40000000, 0x00000100, 0x00000200,
    0x00000001, 0x00800000, 0x01000000, 0x00000800, 0x01000000, 0x00001000,
    0x08000000, 0x00000004};
    }

    const static UnicodeSet quan_Set{const_cast<UnicodeSet::run_t *>(__quan_Set_runs), 229, 0, const_cast<UnicodeSet::bitquad_t *>(__quan_Set_quads), 122, 0};

    /** Code Point Ranges for shi
    [34be, 34be], [35b7, 35b7], [3881, 3881], [3ad1, 3ad1], [3c41, 3c41],
    [3ccf, 3ccf], [3e6c, 3e6c], [407a, 407a], [40a0, 40a0], [4137, 4137],
    [4215, 4215], [4293, 4293], [4324, 4324], [4333, 4333], [43c9, 43c9],
    [43e1, 43e1], [44a8, 44a8], [45a8, 45a8], [45d0, 45d0], [467e, 467e],
    [46c8, 46c8], [4734, 4734], [47d7, 47d7], [492d, 492d], [4999, 4999],
    [49b9, 49b9], [4a43, 4a43], [4c04, 4c04], [4cbd, 4cbd], [4da1, 4da1],
    [4e16, 4e16], [4e8b, 4e8b], [4ec0, 4ec0], [4ed5, 4ed5], [4f3c, 4f3c],
    [4f7f, 4f7f], [4f8d, 4f8d], [519f, 519f], [52e2, 52e2], [5319, 5319],
    [5341, 5341], [5394, 5394], [53d3, 53d3], [53f2, 53f2], [545e, 545e],
    [54b6, 54b6], [5511, 5511], [5547, 5547], [55dc, 55dc], [5618, 5618],
    [566c, 566c], [57f6, 57f6], [5824, 5824], [5852, 5852], [58eb, 58eb],
    [5931, 5931], [596d, 596d], [59cb, 59cb], [59fc, 59fc], [5a9e, 5a9e],
    [5b15, 5b15], [5ba4, 5ba4], [5bb2, 5bb2], [5bd4, 5bd4], [5be6, 5be6],
    [5bfa, 5bfa], [5c38, 5c38], [5c4d, 5c4e], [5cd9, 5cd9], [5d3c, 5d3c],
    [5e02, 5e02], [5e2b, 5e2b], [5f0f, 5f0f], [5f11, 5f11], [5f56, 5f56],
    [5fa5, 5fa5], [5fd5, 5fd5], [5fef, 5fef], [6040, 6040], [6043, 6043],
    [60ff, 60ff], [623a, 623a], [62ed, 62ed], [62fe, 62fe], [6308, 6308],
    [63d0, 63d0], [63d3, 63d3], [65af, 65af], [65bd, 65bd], [662f, 6630],
    [6642, 6642], [67be, 67be], [67f9, 67f9], [67ff, 67ff], [683b, 683b],
    [6974, 6974], [69af, 69af], [6aa1, 6aa1], [6b96, 6b96], [6bba, 6bba],
    [6c0f, 6c0f], [6c41, 6c41], [6cb6, 6cb6], [6db2, 6db2], [6e5c, 6e5c],
    [6e64, 6e64], [6ea1, 6ea1], [6eae, 6eae], [6ebc, 6ebc], [6fa4, 6fa4],
    [6fa8, 6fa8], [6fd5, 6fd5], [7051, 7051], [70bb, 70bb], [70d2, 70d2],
    [72e7, 72e7], [72f6, 72f6], [7345, 7345], [7461, 7461], [7564, 7564],
    [75d1, 75d1], [7702, 7702], [770e, 770e], [7721, 7721], [7757, 7757],
    [77e2, 77e2], [77f3, 77f3], [793a, 793a], [794f, 794f], [79f2, 79f2],
    [7b6e, 7b6e], [7bb7, 7bb7], [7be9, 7be9], [7c2d, 7c2d], [7d41, 7d41],
    [7e79, 7e79], [8006, 8006], [80a2, 80a2], [820d, 820d], [8210, 8210],
    [8213, 8213], [8479, 8479], [8492, 8492], [8494, 8494], [84cd, 84cd],
    [8755, 8755], [8768, 8768], [87ab, 87ab], [8906, 8906], [8937, 8937],
    [8979, 8979], [8996, 8996], [89e2, 89e2], [8a11, 8a11], [8a66, 8a66],
    [8a69, 8a69], [8a93, 8a93], [8adf, 8adf], [8b1a, 8b1a], [8b58, 8b58],
    [8c49, 8c49], [8c55, 8c55], [8cb0, 8cb0], [8d6b, 8d6b], [8de9, 8de9],
    [8e36, 8e36], [8efe, 8efe], [9002, 9002], [901d, 901d], [9048, 9048],
    [905e, 905e], [9069, 9069], [9070, 9070], [907e, 907e], [90bf, 90bf],
    [90dd, 90dd], [91b3, 91b3], [91c3, 91c3], [91cb, 91cb], [91f6, 91f6],
    [9230, 9230], [9242, 9243], [9247, 9248], [9250, 9250], [927d, 927d],
    [92b4, 92b4], [9349, 9349], [9366, 9366], [93a9, 93a9], [98df, 98df],
    [98ed, 98ed], [98fe, 98fe], [9919, 9919], [99b6, 99b6], [99db, 99db],
    [9b73, 9b73], [9bf4, 9bf4], [9c23, 9c24], [9cf2, 9cf2], [9cfe, 9cfe],
    [9db3, 9db3], [9f2b, 9f2b], [9f2d, 9f2d], [9f5b, 9f5b], [20057, 20057],
    [201f3, 201f3], [204e4, 204e4], [2062a, 2062a], [20865, 20865],
    [2097f, 2097f], [20a54, 20a54], [20afa, 20afa], [20bf0, 20bf0],
    [20c1a, 20c1a], [20c34, 20c34], [20dc7, 20dc7], [21017, 21017],
    [21093, 21093], [21175, 21175], [21278, 21278], [216bc, 216bc],
    [217d5, 217d5], [2180b, 2180b], [218ea, 218ea], [21af5, 21af5],
    [21c2f, 21c2f], [21c41, 21c41], [21d88, 21d88], [21dc8, 21dc8],
    [21e94, 21e94], [22015, 22015], [22053, 22053], [220f0, 220f0],
    [223ef, 223ef], [2276c, 2276c], [227ef, 227ef], [229cf, 229cf],
    [22a1d, 22a1d], [22ebf, 22ebf], [22ed8, 22ed8], [22eeb, 22eeb],
    [22f09, 22f0a], [23052, 23052], [23198, 23198], [233da, 233da],
    [2368c, 2368c], [23918, 23918], [239da, 239da], [23b10, 23b10],
    [241b0, 241b0], [2424f, 2424f], [24466, 24466], [245bb, 245bb],
    [24723, 24723], [248bc, 248bc], [24bc4, 24bc4], [24bdc, 24bdc],
    [24e24, 24e24], [24e4c, 24e4c], [25154, 25154], [2515e, 2515e],
    [251f2, 251f2], [25378, 25378], [2544f, 2544f], [256e8, 256e8],
    [25730, 25730], [25965, 25965], [25af4, 25af4], [25afd, 25afd],
    [25c30, 25c30], [25f36, 25f36], [25fc5, 25fc5], [25fee, 25fee],
    [2633f, 2633f], [26488, 26488], [26502, 26502], [26525, 26525],
    [266a8, 266a8], [26c2f, 26c2f], [26cca, 26cca], [26fc7, 26fc7],
    [27139, 27139], [27296, 27296], [272d2, 272d2], [27340, 27340],
    [2756f, 2756f], [27702, 27702], [2774a, 2774a], [277b2, 277b2],
    [2781c, 2781c], [27821, 27821], [27956, 27956], [279c5, 279c5],
    [27a79, 27a79], [27cc5, 27cc5], [27d4b, 27d4b], [27ef8, 27ef8],
    [2848d, 2848d], [284a7, 284a7], [28669, 28669], [287c2, 287c2],
    [28c61, 28c61], [28d2f, 28d2f], [28e1d, 28e1d], [28f44, 28f44],
    [292e1, 292e1], [29482, 29482], [295ce, 295ce], [29662, 29662],
    [296cc, 296cc], [296cf, 296cf], [29950, 29950], [29b2d, 29b2d],
    [29b50, 29b50], [29c22, 29c22], [2a014, 2a014], [2a2a2, 2a2a2],
    [2a4fb, 2a4fb], [2a4ff, 2a4ff], [2a5e7, 2a5e7]**/


    namespace {
    const static UnicodeSet::run_t __shi_Set_runs[] = {
    {Empty, 421}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 15},
    {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 1},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 16},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 3}, {Empty, 4},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 18}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 19},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 1},
    {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 6},
    {Mixed, 3}, {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 40}, {Mixed, 3}, {Empty, 4},
    {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11},
    {Mixed, 2}, {Empty, 2823}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 3}, {Empty, 12}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 9}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 36}, {Mixed, 4}, {Empty, 9}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 18},
    {Mixed, 2}, {Empty, 23}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 25}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 11},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 44}, {Mixed, 2},
    {Empty, 13}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 29392}};
    const static UnicodeSet::bitquad_t  __shi_Set_quads[] = {
    0x40000000, 0x00800000, 0x00000002, 0x00020000, 0x00000002, 0x00008000,
    0x00001000, 0x04000000, 0x00000001, 0x00800000, 0x00200000, 0x00080000,
    0x00080010, 0x00000200, 0x00000002, 0x00000100, 0x00000100, 0x00010000,
    0x40000000, 0x00000100, 0x00100000, 0x00800000, 0x00002000, 0x02000000,
    0x02000000, 0x00000008, 0x00000010, 0x20000000, 0x00000002, 0x00400000,
    0x00000800, 0x00200001, 0x10000000, 0x80000000, 0x00002000, 0x80000000,
    0x00000004, 0x02000000, 0x00000002, 0x00100000, 0x00080000, 0x00040000,
    0x40000000, 0x00400000, 0x00020000, 0x00000080, 0x10000000, 0x01000000,
    0x00001000, 0x00400000, 0x00000010, 0x00040000, 0x00000800, 0x00020000,
    0x00002000, 0x00000800, 0x10000000, 0x40000000, 0x00200000, 0x00040010,
    0x00100000, 0x04000040, 0x01000000, 0x00006000, 0x02000000, 0x10000000,
    0x00000004, 0x00000800, 0x00028000, 0x00400000, 0x00000020, 0x00200000,
    0x00008000, 0x00000009, 0x80000000, 0x04000000, 0x40002000, 0x00000100,
    0x00090000, 0x20008000, 0x00018000, 0x00000004, 0x40000000, 0x82000000,
    0x08000000, 0x00100000, 0x00008000, 0x00000002, 0x00400000, 0x04000000,
    0x00008000, 0x00000002, 0x00400000, 0x00040000, 0x10000000, 0x00000010,
    0x10004002, 0x00000110, 0x00200000, 0x00020000, 0x08000000, 0x00040000,
    0x00400080, 0x00000020, 0x00000002, 0x00000010, 0x00020000, 0x00004004,
    0x00000002, 0x00800000, 0x00080004, 0x04000000, 0x00008000, 0x00040000,
    0x00004000, 0x00800000, 0x00000200, 0x00002000, 0x00000002, 0x02000000,
    0x00000040, 0x00000004, 0x00092000, 0x02000000, 0x00140000, 0x00002000,
    0x00200000, 0x00000100, 0x00000800, 0x00000040, 0x00800000, 0x02000000,
    0x00400000, 0x00000004, 0x00020000, 0x00000240, 0x00080000, 0x80000000,
    0x04000000, 0x01000000, 0x00200200, 0x00010000, 0x00000800, 0x00000200,
    0x00400000, 0x40000000, 0x20000004, 0x40000100, 0x40010200, 0x80000000,
    0x20000000, 0x00080000, 0x00000808, 0x00400000, 0x00010000, 0x0001018c,
    0x20000000, 0x00100000, 0x00000200, 0x00000040, 0x00000200, 0x80000000,
    0x40002000, 0x02000000, 0x00400000, 0x08000000, 0x00080000, 0x00100000,
    0x00000018, 0x40040000, 0x00080000, 0x00002800, 0x08000000, 0x00800000,
    0x00080000, 0x00000010, 0x00000400, 0x00000020, 0x80000000, 0x00100000,
    0x04000000, 0x00010000, 0x04000000, 0x00100000, 0x00000080, 0x00800000,
    0x00080000, 0x00200000, 0x01000000, 0x10000000, 0x00200000, 0x00000800,
    0x00000400, 0x00200000, 0x00008000, 0x00000002, 0x00000100, 0x00000100,
    0x00100000, 0x00200000, 0x00080000, 0x00010000, 0x00008000, 0x00001000,
    0x00008000, 0x00008000, 0x20000000, 0x80000000, 0x01000000, 0x00000800,
    0x00000600, 0x00040000, 0x01000000, 0x04000000, 0x00001000, 0x01000000,
    0x04000000, 0x00010000, 0x00010000, 0x00008000, 0x00000040, 0x08000000,
    0x00000008, 0x10000000, 0x10000010, 0x00000010, 0x00001000, 0x40100000,
    0x00040000, 0x01000000, 0x00008000, 0x00000100, 0x00010000, 0x00000020,
    0x20100000, 0x00010000, 0x00400000, 0x00000020, 0x00004000, 0x80000000,
    0x00000100, 0x00000004, 0x00000020, 0x00000100, 0x00008000, 0x00000400,
    0x00000080, 0x02000000, 0x00400000, 0x00040000, 0x00000001, 0x00008000,
    0x00000004, 0x00000400, 0x00040000, 0x10000000, 0x00000002, 0x00400000,
    0x00000020, 0x02000000, 0x00000020, 0x00000800, 0x01000000, 0x00002000,
    0x00000080, 0x00000200, 0x00000004, 0x00000002, 0x00008000, 0x20000000,
    0x00000010, 0x00000002, 0x00000004, 0x00004000, 0x00000004, 0x00009000,
    0x00010000, 0x00002000, 0x00010000, 0x00000004, 0x00100000, 0x00000004,
    0x88000000, 0x00000080};
    }

    const static UnicodeSet shi_Set{const_cast<UnicodeSet::run_t *>(__shi_Set_runs), 465, 0, const_cast<UnicodeSet::bitquad_t *>(__shi_Set_quads), 284, 0};

    /** Code Point Ranges for zhen
    [34c4, 34c4], [3598, 3598], [3630, 3630], [38c0, 38c0], [3a9b, 3a9b],
    [3bb3, 3bb3], [3be2, 3be2], [3c7d, 3c7d], [3c80, 3c80], [3d28, 3d28],
    [3f09, 3f09], [4015, 4015], [40a6, 40a7], [40cc, 40cc], [422f, 422f],
    [43d6, 43d6], [47f4, 47f4], [4834, 4834], [4869, 4869], [4ab4, 4ab4],
    [4abe, 4abe], [4ac3, 4ac3], [4aec, 4aec], [4cf2, 4cf2], [4fb2, 4fb2],
    [5075, 5075], [5507, 5507], [5733, 5733], [576b, 576b], [586b, 586b],
    [59eb, 59eb], [5ac3, 5ac3], [5bca, 5bca], [5c52, 5c52], [5e2a, 5e2a],
    [5f2b, 5f2b], [614e, 614e], [6221, 6221], [62ae, 62ae], [630b, 630b],
    [632f, 632f], [63d5, 63d5], [6438, 6438], [659f, 659f], [6623, 6623],
    [6715, 6715], [6795, 6795], [67ae, 67ae], [681a, 681a], [686d, 686d],
    [6939, 6939], [6968, 6968], [6990, 6990], [699b, 699b], [69c7, 69c7],
    [6b9d, 6b9d], [6cb4, 6cb4], [6e5e, 6e5e], [6eb1, 6eb1], [6ec7, 6ec7],
    [6f67, 6f67], [6fb5, 6fb5], [7349, 7349], [73cd, 73cd], [7467, 7467],
    [7471, 7471], [7504, 7504], [755b, 755b], [75b9, 75b9], [7715, 7715],
    [771e, 771e], [7739, 7739], [7827, 7827], [78aa, 78aa], [798e, 798e],
    [799b, 799b], [7a39, 7a39], [7ae7, 7ae7], [7bb4, 7bb4], [7c48, 7c48],
    [7d16, 7d16], [7d3e, 7d3e], [7e1d, 7e1d], [7e25, 7e25], [8044, 8044],
    [80d7, 80d7], [81fb, 81fb], [8474, 8474], [8496, 8496], [84c1, 84c1],
    [85bd, 85bd], [8704, 8704], [8897, 8897], [88d6, 88d6], [8a3a, 8a3a],
    [8b13, 8b13], [8c9e, 8c9e], [8cd1, 8cd1], [8d81, 8d81], [8eeb, 8eeb],
    [8f43, 8f43], [8fb4, 8fb4], [9156, 9156], [91dd, 91dd], [9202, 9202],
    [9241, 9241], [9356, 9356], [937c, 937c], [93ae, 93ae], [9663, 9663],
    [9673, 9673], [9707, 9707], [9755, 9755], [99d7, 99d7], [9b12, 9b12],
    [9b9d, 9b9d], [9c75, 9c75], [9d06, 9d06], [9eee, 9eee], [9ef0, 9ef1],
    [9f0e, 9f0e], [20631, 20631], [206f6, 206f6], [20839, 20839],
    [20b13, 20b13], [20d67, 20d67], [20e38, 20e38], [211d1, 211d1],
    [211d6, 211d6], [2123f, 2123f], [21ec8, 21ec8], [223c8, 223c8],
    [230f5, 230f5], [233d6, 233d6], [23485, 23485], [234c0, 234c0],
    [23618, 23618], [239b5, 239b5], [23b3b, 23b3b], [23c7d, 23c7d],
    [23fce, 23fce], [246a8, 246a8], [24dcc, 24dcc], [25158, 25158],
    [25598, 25598], [25924, 25924], [25a98, 25a98], [25fdc, 25fdc],
    [2605f, 2605f], [26cf3, 26cf3], [26e2e, 26e2e], [2781d, 2781d],
    [2791b, 2791b], [27bac, 27bac], [28311, 28311], [283e4, 283e4],
    [28ccc, 28ccc], [2911b, 2911b], [291dc, 291dc], [292a1, 292a1],
    [292a8, 292a8], [29458, 29458], [29480, 29480], [29488, 29488],
    [294aa, 294aa], [29b16, 29b16], [29fba, 29fba], [2a067, 2a067],
    [2a1f3, 2a1f3], [2a432, 2a432], [2a473, 2a473]**/


    namespace {
    const static UnicodeSet::run_t __zhen_Set_runs[] = {
    {Empty, 422}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 4}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 17}, {Mixed, 3}, {Empty, 15}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 6}, {Mixed, 2}, {Empty, 16}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 19}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 2872}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 100}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 104}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 100}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 78},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 58}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 70},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 50}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 29404}};
    const static UnicodeSet::bitquad_t  __zhen_Set_quads[] = {
    0x00000010, 0x01000000, 0x00010000, 0x00000001, 0x08000000, 0x00080000,
    0x00000004, 0x20000000, 0x00000001, 0x00000100, 0x00000200, 0x00200000,
    0x000000c0, 0x00001000, 0x00008000, 0x00400000, 0x00100000, 0x00100000,
    0x00000200, 0x40100000, 0x00000008, 0x00001000, 0x00040000, 0x00040000,
    0x00200000, 0x00000080, 0x00080000, 0x00000800, 0x00000800, 0x00000800,
    0x00000008, 0x00000400, 0x00040000, 0x00000400, 0x00000800, 0x00004000,
    0x00000002, 0x00004000, 0x00000800, 0x00008000, 0x00200000, 0x01000000,
    0x80000000, 0x00000008, 0x00200000, 0x00200000, 0x00004000, 0x04000000,
    0x00002000, 0x02000000, 0x00000100, 0x08010000, 0x00000080, 0x20000000,
    0x00100000, 0x40000000, 0x00020000, 0x00000080, 0x00000080, 0x00200000,
    0x00000200, 0x00002000, 0x00020080, 0x00000010, 0x08000000, 0x02000000,
    0x40200000, 0x02000000, 0x00000080, 0x00000400, 0x08004000, 0x02000000,
    0x00000080, 0x00100000, 0x00000100, 0x00400000, 0x40000000, 0x20000000,
    0x00000020, 0x00000010, 0x00800000, 0x08000000, 0x00100000, 0x00400000,
    0x00000002, 0x20000000, 0x00000010, 0x00800000, 0x00400000, 0x04000000,
    0x00080000, 0x40000000, 0x00020000, 0x00000002, 0x00000800, 0x00000008,
    0x00100000, 0x00400000, 0x20000000, 0x00000004, 0x00000002, 0x00400000,
    0x10000000, 0x00004000, 0x00080008, 0x00000080, 0x00200000, 0x00800000,
    0x00040000, 0x20000000, 0x00200000, 0x00000040, 0x00034000, 0x00004000,
    0x00020000, 0x00400000, 0x02000000, 0x00080000, 0x00000080, 0x01000000,
    0x00420000, 0x80000000, 0x00000100, 0x00000100, 0x00200000, 0x00400000,
    0x00000020, 0x00000001, 0x01000000, 0x00200000, 0x08000000, 0x20000000,
    0x00004000, 0x00000100, 0x00001000, 0x01000000, 0x01000000, 0x00000010,
    0x01000000, 0x10000000, 0x80000000, 0x00080000, 0x00004000, 0x20000000,
    0x08000000, 0x00001000, 0x00020000, 0x00000010, 0x00001000, 0x08000000,
    0x10000000, 0x00000102, 0x01000000, 0x00000101, 0x00000400, 0x00400000,
    0x04000000, 0x00000080, 0x00080000, 0x00040000, 0x00080000};
    }

    const static UnicodeSet zhen_Set{const_cast<UnicodeSet::run_t *>(__zhen_Set_runs), 293, 0, const_cast<UnicodeSet::bitquad_t *>(__zhen_Set_quads), 161, 0};

    /** Code Point Ranges for ting
    [34c5, 34c5], [3e76, 3e76], [3f17, 3f17], [404e, 404e], [414d, 414d],
    [41f8, 41f8], [42fc, 42fc], [45f4, 45f4], [4990, 4990], [4bd5, 4bd5],
    [4c53, 4c53], [4d7a, 4d7a], [4ead, 4ead], [4fb1, 4fb1], [4fb9, 4fb9],
    [505c, 505c], [542c, 542c], [5722, 5722], [5960, 5960], [5a17, 5a17],
    [5a77, 5a77], [5d49, 5d49], [5e81, 5e81], [5e8d, 5e8d], [5ead, 5ead],
    [5ef3, 5ef3], [5ef7, 5ef7], [5fca, 5fca], [633a, 633a], [673e, 673e],
    [686f, 686f], [6883, 6883], [695f, 695f], [69b3, 69b3], [6c40, 6c40],
    [6d8f, 6d8f], [6e1f, 6e1f], [6fce, 6fce], [70f4, 70f4], [70f6, 70f6],
    [73f5, 73f5], [73fd, 73fd], [753a, 753a], [7b73, 7b73], [7d8e, 7d8e],
    [8013, 8013], [8064, 8064], [807d, 807d], [8121, 8121], [8247, 8247],
    [827c, 827c], [839b, 839b], [8476, 8476], [8713, 8713], [874f, 874f],
    [8a94, 8a94], [8aea, 8aea], [9092, 9092], [92cc, 92cc], [95ae, 95ae],
    [9706, 9706], [9793, 9793], [9832, 9832], [9f2e, 9f2e], [2011a, 2011a],
    [2054a, 2054a], [2060b, 2060b], [2123c, 2123c], [2151b, 2151b],
    [22b2b, 22b2b], [22f44, 22f44], [230b4, 230b4], [2313f, 2313f],
    [23261, 23261], [245de, 245de], [24616, 24616], [24c79, 24c79],
    [25191, 25191], [25448, 25448], [25976, 25976], [25ad9, 25ad9],
    [25d11, 25d11], [2626c, 2626c], [2643f, 2643f], [26562, 26562],
    [265df, 265df], [2675e, 2675e], [274f4, 274f4], [275a8, 275a8],
    [27c29, 27c29], [27dba, 27dba], [28057, 28057], [2826c, 2826c],
    [282a1, 282a1], [284cd, 284cd], [28cd1, 28cd1], [28cdd, 28cdd],
    [29186, 29186], [29434, 29434], [29459, 29459], [2949e, 2949e],
    [29a11, 29a11], [29e47, 29e47], [2a2b6, 2a2b6]**/


    namespace {
    const static UnicodeSet::run_t __ting_Set_runs[] = {
    {Empty, 422}, {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 55}, {Mixed, 1},
    {Empty, 2830}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 96}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 176}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 154}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 50},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 108}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 51},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 63}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 20}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 29418}};
    const static UnicodeSet::bitquad_t  __ting_Set_quads[] = {
    0x00000020, 0x00400000, 0x00800000, 0x00004000, 0x00002000, 0x01000000,
    0x10000000, 0x00100000, 0x00010000, 0x00200000, 0x00080000, 0x04000000,
    0x00002000, 0x02020000, 0x10000000, 0x00001000, 0x00000004, 0x00000001,
    0x00800000, 0x00800000, 0x00000200, 0x00002002, 0x00002000, 0x00880000,
    0x00000400, 0x04000000, 0x40000000, 0x00008000, 0x00000008, 0x80000000,
    0x00080000, 0x00000001, 0x00008000, 0x80000000, 0x00004000, 0x00500000,
    0x20200000, 0x04000000, 0x00080000, 0x00004000, 0x00080000, 0x20000010,
    0x00000002, 0x00000080, 0x10000000, 0x08000000, 0x00400000, 0x00080000,
    0x00008000, 0x00100000, 0x00000400, 0x00040000, 0x00001000, 0x00004000,
    0x00000040, 0x00080000, 0x00040000, 0x00004000, 0x04000000, 0x00000400,
    0x00000800, 0x10000000, 0x08000000, 0x00000800, 0x00000010, 0x00100000,
    0x80000000, 0x00000002, 0x40000000, 0x00400000, 0x02000000, 0x00020000,
    0x00000100, 0x00400000, 0x02000000, 0x00020000, 0x00001000, 0x80000000,
    0x00000004, 0x80000000, 0x40000000, 0x00100000, 0x00000100, 0x00000200,
    0x04000000, 0x00800000, 0x00001000, 0x00000002, 0x00002000, 0x20020000,
    0x00000040, 0x00100000, 0x02000000, 0x40000000, 0x00020000, 0x00000080,
    0x00400000};
    }

    const static UnicodeSet ting_Set{const_cast<UnicodeSet::run_t *>(__ting_Set_runs), 187, 0, const_cast<UnicodeSet::bitquad_t *>(__ting_Set_quads), 97, 0};

    /** Code Point Ranges for bing
    [34c8, 34c8], [450a, 450a], [45d2, 45d2], [4d35, 4d35], [4e19, 4e19],
    [4e26, 4e26], [4f75, 4f75], [504b, 504b], [5175, 5175], [51ab, 51ab],
    [51b0, 51b0], [5bce, 5bce], [5c4f, 5c4f], [5e73, 5e73], [5e77, 5e77],
    [5eb0, 5eb0], [6032, 6032], [62a6, 62a6], [62fc, 62fc], [63a4, 63a4],
    [6452, 6452], [661e, 661e], [663a, 663a], [678b, 678b], [67c4, 67c4],
    [681f, 681f], [6824, 6824], [68b9, 68b9], [6ab3, 6ab3], [70b3, 70b3],
    [71f9, 71f9], [7415, 7415], [75c5, 75c5], [75ed, 75ed], [765b, 765b],
    [772a, 772a], [79c9, 79c9], [7a1f, 7a1f], [7a89, 7a89], [7d63, 7d63],
    [7d86, 7d86], [82ea, 82ea], [86c3, 86c3], [8a81, 8a81], [8df0, 8df0],
    [90b4, 90b4], [9235, 9235], [927c, 927c], [9643, 9643], [9750, 9750],
    [979e, 979e], [97b8, 97b8], [9905, 9905], [9ba9, 9ba9], [202a7, 202a7],
    [2049d, 2049d], [206e5, 206e5], [20c5b, 20c5b], [211e4, 211e4],
    [2159b, 2159b], [2169b, 2169b], [21c8d, 21c8d], [21e7e, 21e7e],
    [221a9, 221a9], [2229c, 2229c], [223b4, 223b4], [22527, 22527],
    [2314d, 2314d], [239aa, 239aa], [23c1c, 23c1c], [255ac, 255ac],
    [25c82, 25c82], [2687b, 2687b], [26f39, 26f39], [26fc5, 26fc5],
    [281b1, 281b1], [282f2, 282f2], [28e57, 28e57], [29296, 29296],
    [292d2, 292d2], [293c2, 293c2], [29b1d, 29b1d], [29b9f, 29b9f],
    [29d81, 29d81], [2a470, 2a470]**/


    namespace {
    const static UnicodeSet::run_t __bing_Set_runs[] = {
    {Empty, 422}, {Mixed, 1}, {Empty, 129}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 80}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 13}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 47},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 13}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 22}, {Mixed, 2}, {Empty, 42}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 2871}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 47},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 96}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 204}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 94}, {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 142}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 90}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 29404}};
    const static UnicodeSet::bitquad_t  __bing_Set_quads[] = {
    0x00000100, 0x00000400, 0x00040000, 0x00200000, 0x02000000, 0x00000040,
    0x00200000, 0x00000800, 0x00200000, 0x00010800, 0x00004000, 0x00008000,
    0x00880000, 0x00010000, 0x00040000, 0x00000040, 0x10000000, 0x00000010,
    0x00040000, 0x40000000, 0x04000000, 0x00000800, 0x00000010, 0x80000000,
    0x00000010, 0x02000000, 0x00080000, 0x00080000, 0x02000000, 0x00200000,
    0x00000020, 0x00002000, 0x08000000, 0x00000400, 0x00000200, 0x80000000,
    0x00000200, 0x00000008, 0x00000040, 0x00000400, 0x00000008, 0x00000002,
    0x00010000, 0x00100000, 0x00200000, 0x10000000, 0x00000008, 0x00010000,
    0x40000000, 0x01000000, 0x00000020, 0x00000200, 0x00000080, 0x20000000,
    0x00000020, 0x08000000, 0x00000010, 0x08000000, 0x08000000, 0x00002000,
    0x40000000, 0x00000200, 0x10000000, 0x00100000, 0x00000080, 0x00002000,
    0x00000400, 0x10000000, 0x00001000, 0x00000004, 0x08000000, 0x02000000,
    0x00000020, 0x00020000, 0x00040000, 0x00800000, 0x00400000, 0x00040000,
    0x00000004, 0x20000000, 0x80000000, 0x00000002, 0x00010000};
    }

    const static UnicodeSet bing_Set{const_cast<UnicodeSet::run_t *>(__bing_Set_runs), 155, 0, const_cast<UnicodeSet::bitquad_t *>(__bing_Set_quads), 83, 0};

    /** Code Point Ranges for huo
    [34c9, 34c9], [35aa, 35aa], [35f2, 35f2], [361e, 361e], [398e, 398e],
    [399c, 399c], [3a47, 3a47], [3d81, 3d81], [3da1, 3da1], [3e0c, 3e0c],
    [3ea2, 3ea2], [4068, 4068], [4084, 4084], [4106, 4106], [425f, 425f],
    [4438, 4438], [48f6, 48f6], [499d, 499d], [4a25, 4a25], [4b09, 4b09],
    [4c25, 4c25], [4f19, 4f19], [4f78, 4f78], [4ff0, 4ff0], [5268, 5268],
    [5290, 5290], [5316, 5316], [5419, 5419], [5475, 5475], [548c, 548c],
    [5684, 5684], [56af, 56af], [56bf, 56bf], [58d1, 58d1], [5925, 5925],
    [596f, 596f], [59e1, 59e1], [60d1, 60d1], [6216, 6216], [626e, 626e],
    [6347, 6347], [639d, 639d], [6409, 6409], [64ed, 64ed], [6509, 6509],
    [66e4, 66e4], [6947, 6947], [6ab4, 6ab4], [6c8e, 6c8e], [6d3b, 6d3b],
    [6e71, 6e71], [6f37, 6f37], [6fca, 6fca], [6fe9, 6fe9], [7016, 7016],
    [706b, 706c], [7103, 7103], [7372, 7372], [74e0, 74e0], [7668, 7668],
    [7713, 7713], [77c6, 77c6], [77d0, 77d0], [790a, 790a], [798d, 798d],
    [79f3, 79f3], [7a6b, 7a6b], [7be7, 7be7], [8020, 8020], [802f, 802f],
    [8195, 8195], [81db, 81db], [8267, 8267], [843f, 843f], [84a6, 84a6],
    [85ff, 85ff], [8816, 8816], [8ad5, 8ad5], [8b0b, 8b0b], [8c41, 8c41],
    [8c70, 8c70], [8ca8, 8ca8], [8d8a, 8d8a], [8d8f, 8d8f], [904e, 904e],
    [90a9, 90a9], [9225, 9225], [944a, 944a], [9584, 9584], [96bb, 96bb],
    [970d, 970d], [9743, 9743], [9a1e, 9a1e], [2065e, 2065e],
    [20bd0, 20bd0], [21134, 21134], [214d8, 214d8], [21a9e, 21a9e],
    [21be2, 21be2], [21f9c, 21f9c], [21fff, 21fff], [220ce, 220ce],
    [222d2, 222d2], [22747, 22747], [22795, 22795], [23138, 23138],
    [23252, 23252], [23928, 23928], [24079, 24079], [24184, 24184],
    [242b4, 242b4], [243d8, 243d8], [24430, 24430], [24b01, 24b01],
    [24ed9, 24ed9], [251d9, 251d9], [252ae, 252ae], [254a0, 254a0],
    [25668, 25668], [25742, 25742], [25f65, 25f65], [2644c, 2644c],
    [26471, 26471], [264a7, 264a7], [26a2f, 26a2f], [27191, 27191],
    [27934, 27934], [27bc6, 27bc6], [27bf1, 27bf1], [27d7b, 27d7b],
    [27e74, 27e74], [2831d, 2831d], [28436, 28436], [2860c, 2860c],
    [28640, 28640], [28dee, 28dee], [29180, 29180], [297ba, 297ba],
    [297e8, 297e8], [297f8, 297f8], [29990, 29990], [29aad, 29aad],
    [29b73, 29b73], [2a4a9, 2a4a9]**/


    namespace {
    const static UnicodeSet::run_t __huo_Set_runs[] = {
    {Empty, 422}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 27}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 25}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 13}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 15}, {Mixed, 2},
    {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 14}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 2913}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 64}, {Mixed, 1}, {Empty, 38}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 58}, {Mixed, 1},
    {Empty, 60}, {Mixed, 1}, {Empty, 20}, {Mixed, 2}, {Empty, 11},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 60}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 73}, {Mixed, 1},
    {Empty, 29402}};
    const static UnicodeSet::bitquad_t  __huo_Set_quads[] = {
    0x00000200, 0x00000400, 0x00040000, 0x40000000, 0x10004000, 0x00000080,
    0x00000002, 0x00000002, 0x00001000, 0x00000004, 0x00000100, 0x00000010,
    0x00000040, 0x80000000, 0x01000000, 0x00400000, 0x20000000, 0x00000020,
    0x00000200, 0x00000020, 0x02000000, 0x01000000, 0x00010000, 0x00000100,
    0x00010000, 0x00400000, 0x02000000, 0x00200000, 0x00001000, 0x00000010,
    0x80008000, 0x00020000, 0x00000020, 0x00008000, 0x00000002, 0x00020000,
    0x00400000, 0x00004000, 0x00000080, 0x20000000, 0x00000200, 0x00002000,
    0x00000200, 0x00000010, 0x00000080, 0x00100000, 0x00004000, 0x08000000,
    0x00020000, 0x00800000, 0x00000400, 0x00000200, 0x00400000, 0x00001800,
    0x00000008, 0x00040000, 0x00000001, 0x00000100, 0x00080000, 0x00010040,
    0x00000400, 0x00002000, 0x00080000, 0x00000800, 0x00000080, 0x00008001,
    0x00200000, 0x08000000, 0x00000080, 0x80000000, 0x00000040, 0x80000000,
    0x00400000, 0x00200000, 0x00000800, 0x00000002, 0x00010000, 0x00000100,
    0x00008400, 0x00004000, 0x00000200, 0x00000020, 0x00000400, 0x00000010,
    0x08000000, 0x00002000, 0x00000008, 0x40000000, 0x40000000, 0x00010000,
    0x00100000, 0x01000000, 0x40000000, 0x00000004, 0x10000000, 0x80000000,
    0x00004000, 0x00040000, 0x00000080, 0x00200000, 0x01000000, 0x00040000,
    0x00000100, 0x02000000, 0x00000010, 0x00100000, 0x01000000, 0x00010000,
    0x00000002, 0x02000000, 0x02000000, 0x00004000, 0x00000001, 0x00000100,
    0x00000004, 0x00000020, 0x00001000, 0x00020000, 0x00000080, 0x00008000,
    0x00020000, 0x00100000, 0x00000040, 0x00020000, 0x08000000, 0x00100000,
    0x20000000, 0x00400000, 0x00001000, 0x00000001, 0x00004000, 0x00000001,
    0x04000000, 0x01000100, 0x00010000, 0x00002000, 0x00080000, 0x00000200};
    }

    const static UnicodeSet huo_Set{const_cast<UnicodeSet::run_t *>(__huo_Set_runs), 253, 0, const_cast<UnicodeSet::bitquad_t *>(__huo_Set_quads), 138, 0};

    /** Code Point Ranges for dong
    [34ca, 34ca], [35a6, 35a6], [35e2, 35e2], [36b5, 36b5], [38a5, 38a5],
    [38da, 38da], [38eb, 38eb], [3a02, 3a02], [3f2f, 3f2f], [40a2, 40a2],
    [419a, 419a], [4376, 4376], [4792, 4792], [4c24, 4c24], [4cc9, 4cc9],
    [4d54, 4d54], [4f97, 4f97], [5032, 5032], [51ac, 51ac], [51cd, 51cd],
    [52d5, 52d5], [52ed, 52ed], [549a, 549a], [578c, 578c], [57ec, 57ec],
    [58a5, 58a5], [59db, 59db], [5a3b, 5a3b], [5b1e, 5b1e], [5cd2, 5cd2],
    [5d20, 5d20], [5d2c, 5d2c], [606b, 606b], [61c2, 61c2], [6219, 6219],
    [630f, 630f], [63f0, 63f0], [6771, 6771], [6850, 6850], [68df, 68df],
    [6c21, 6c21], [6d1e, 6d1e], [6db7, 6db7], [6e69, 6e69], [70d4, 70d4],
    [72ea, 72ea], [752c, 752c], [7850, 7850], [7b17, 7b17], [7b52, 7b52],
    [7b69, 7b69], [7bbd, 7bbd], [7d67, 7d67], [80f4, 80f4], [8156, 8156],
    [82f3, 82f3], [83c4, 83c4], [8463, 8463], [856b, 856b], [8740, 8740],
    [8855, 8855], [8a77, 8a77], [8acc, 8acc], [8ff5, 8ff5], [916e, 916e],
    [9718, 9718], [99e7, 99e7], [9a06, 9a06], [9bdf, 9bdf], [9d87, 9d87],
    [9f15, 9f15], [20109, 20109], [22505, 22505], [226d4, 226d4],
    [22cfe, 22cfe], [23fc5, 23fc5], [2492e, 2492e], [249aa, 249aa],
    [24c9a, 24c9a], [24dc6, 24dc6], [25ace, 25ace], [25cd8, 25cd8],
    [26842, 26842], [27113, 27113], [271bc, 271bc], [274d5, 274d5],
    [2784d, 2784d], [27bfe, 27bfe], [27cb4, 27cb4], [27ce3, 27ce3],
    [27f13, 27f13], [27f29, 27f29], [27f7f, 27f7f], [28a67, 28a67],
    [28fe2, 28fe2], [29093, 29093], [29424, 29424], [29435, 29435],
    [2970d, 2970d], [298f3, 298f3], [29b69, 29b69], [2a408, 2a408],
    [2a526, 2a526]**/


    namespace {
    const static UnicodeSet::run_t __dong_Set_runs[] = {
    {Empty, 422}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 15}, {Mixed, 3}, {Empty, 8},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 11}, {Mixed, 2}, {Empty, 7}, {Mixed, 2}, {Empty, 12},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 22}, {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2831}, {Mixed, 1},
    {Empty, 287}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 150}, {Mixed, 1}, {Empty, 74}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 103}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 91},
    {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 87}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 29398}};
    const static UnicodeSet::bitquad_t  __dong_Set_quads[] = {
    0x00000400, 0x00000040, 0x00000004, 0x00200000, 0x00000020, 0x04000000,
    0x00000800, 0x00000004, 0x00008000, 0x00000004, 0x04000000, 0x00400000,
    0x00040000, 0x00000010, 0x00000200, 0x00100000, 0x00800000, 0x00040000,
    0x00001000, 0x00002000, 0x00200000, 0x00002000, 0x04000000, 0x00001000,
    0x00001000, 0x00000020, 0x08000000, 0x08000000, 0x40000000, 0x00040000,
    0x00001001, 0x00000800, 0x00000004, 0x02000000, 0x00008000, 0x00010000,
    0x00020000, 0x00010000, 0x80000000, 0x00000002, 0x40000000, 0x00800000,
    0x00000200, 0x00100000, 0x00000400, 0x00001000, 0x00010000, 0x00800000,
    0x00040000, 0x00000200, 0x20000000, 0x00000080, 0x00100000, 0x00400000,
    0x00080000, 0x00000010, 0x00000008, 0x00000800, 0x00000001, 0x00200000,
    0x00800000, 0x00001000, 0x00200000, 0x00004000, 0x01000000, 0x00000080,
    0x00000040, 0x80000000, 0x00000080, 0x00200000, 0x00000200, 0x00000020,
    0x00100000, 0x40000000, 0x00000020, 0x00004000, 0x00000400, 0x04000000,
    0x00000040, 0x00004000, 0x01000000, 0x00000004, 0x00080000, 0x10000000,
    0x00200000, 0x00002000, 0x40000000, 0x00100000, 0x00000008, 0x00080000,
    0x00000200, 0x80000000, 0x00000080, 0x00000004, 0x00080000, 0x00200010,
    0x00002000, 0x00080000, 0x00000200, 0x00000100, 0x00000040};
    }

    const static UnicodeSet dong_Set{const_cast<UnicodeSet::run_t *>(__dong_Set_runs), 189, 0, const_cast<UnicodeSet::bitquad_t *>(__dong_Set_quads), 101, 0};

    /** Code Point Ranges for gong
    [34cb, 34cb], [34da, 34da], [3536, 3536], [356c, 356c], [3928, 3928],
    [39ec, 39ec], [3ad2, 3ad2], [3bef, 3bef], [3f26, 3f26], [40ac, 40ac],
    [41e8, 41e8], [4354, 4354], [4435, 4435], [4508, 4508], [4857, 4857],
    [48bc, 48bc], [4c38, 4c38], [4c4b, 4c4b], [4cb2, 4cb2], [4ccd, 4ccd],
    [4f9b, 4f9b], [516c, 516c], [5171, 5171], [529f, 529f], [5311, 5311],
    [53b7, 53b7], [54a3, 54a3], [55ca, 55ca], [5868, 5868], [5bab, 5bab],
    [5de5, 5de5], [5de9, 5de9], [5e4a, 5e4a], [5efe, 5efe], [5f13, 5f13],
    [606d, 606d], [6129, 6129], [62f1, 62f2], [653b, 653b], [675b, 675b],
    [6760, 6760], [6831, 6831], [6c5e, 6c5e], [6e31, 6e31], [7195, 7195],
    [73d9, 73d9], [7598, 7598], [78bd, 78bd], [78fa, 78fa], [7926, 7926],
    [7be2, 7be2], [7d05, 7d05], [80b1, 80b1], [8679, 8679], [86a3, 86a3],
    [86e9, 86e9], [89e5, 89e5], [8ca2, 8ca2], [8d1b, 8d1b], [8eac, 8eac],
    [8f01, 8f01], [91ed, 91ed], [92be, 92be], [945b, 945b], [978f, 978f],
    [9af8, 9af8], [9b5f, 9b5f], [9f8f, 9f8f], [9f94, 9f94], [201d2, 201d2],
    [20315, 20315], [20796, 20796], [21515, 21515], [21691, 21691],
    [217eb, 217eb], [2201c, 2201c], [22060, 22060], [225b7, 225b7],
    [22e01, 22e01], [24150, 24150], [24a36, 24a36], [24b33, 24b33],
    [24c68, 24c68], [259e1, 259e1], [25a10, 25a10], [25acb, 25acb],
    [25e32, 25e32], [2611c, 2611c], [26229, 26229], [262ab, 262ab],
    [263fa, 263fa], [264f3, 264f3], [26538, 26538], [26797, 26797],
    [267a8, 267a8], [269a7, 269a7], [26a7c, 26a7c], [26b18, 26b18],
    [26d61, 26d61], [271b7, 271b7], [273a1, 273a1], [2760f, 2760f],
    [2826b, 2826b], [282a7, 282a7], [282d1, 282d1], [282dd, 282dd],
    [282f7, 282f7], [284b1, 284b1], [288c2, 288c2], [28951, 28951],
    [28a2d, 28a2d], [28d1b, 28d1b], [290d9, 290d9], [2930c, 2930c],
    [29423, 29423], [296d8, 296d8], [2a10c, 2a10c], [2a3e0, 2a3e0],
    [2a3e2, 2a3e2]**/


    namespace {
    const static UnicodeSet::run_t __gong_Set_runs[] = {
    {Empty, 422}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 27}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 21}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 16}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 2833},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 107}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 153},
    {Mixed, 1}, {Empty, 70}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 107}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 2},
    {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 98}, {Mixed, 1},
    {Empty, 1}, {Mixed, 3}, {Empty, 13}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 81},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 29408}};
    const static UnicodeSet::bitquad_t  __gong_Set_quads[] = {
    0x04000800, 0x00400000, 0x00001000, 0x00000100, 0x00001000, 0x00040000,
    0x00008000, 0x00000040, 0x00001000, 0x00000100, 0x00100000, 0x00200000,
    0x00000100, 0x00800000, 0x10000000, 0x01000000, 0x00000800, 0x00040000,
    0x00002000, 0x08000000, 0x00021000, 0x80000000, 0x00020000, 0x00800000,
    0x00000008, 0x00000400, 0x00000100, 0x00000800, 0x00000220, 0x00000400,
    0x40000000, 0x00080000, 0x00002000, 0x00000200, 0x00060000, 0x08000000,
    0x08000000, 0x00000001, 0x00020000, 0x40000000, 0x00020000, 0x00200000,
    0x02000000, 0x01000000, 0x20000000, 0x04000000, 0x00000040, 0x00000004,
    0x00000020, 0x00020000, 0x02000000, 0x00000008, 0x00000200, 0x00000020,
    0x00000004, 0x08000000, 0x00001000, 0x00000002, 0x00002000, 0x40000000,
    0x08000000, 0x00008000, 0x01000000, 0x80000000, 0x00108000, 0x00040000,
    0x00200000, 0x00400000, 0x00200000, 0x00020000, 0x00000800, 0x10000000,
    0x00000001, 0x00800000, 0x00000002, 0x00010000, 0x00400000, 0x00080000,
    0x00000100, 0x00000002, 0x00010000, 0x00000800, 0x00040000, 0x10000000,
    0x00000200, 0x00000800, 0x04000000, 0x00080000, 0x01000000, 0x00800000,
    0x00000100, 0x00000080, 0x10000000, 0x01000000, 0x00000002, 0x00800000,
    0x00000002, 0x00008000, 0x00000800, 0x00000080, 0x20020000, 0x00800000,
    0x00020000, 0x00000004, 0x00020000, 0x00002000, 0x08000000, 0x02000000,
    0x00001000, 0x00000008, 0x01000000, 0x00001000, 0x00000005};
    }

    const static UnicodeSet gong_Set{const_cast<UnicodeSet::run_t *>(__gong_Set_runs), 211, 0, const_cast<UnicodeSet::bitquad_t *>(__gong_Set_quads), 113, 0};

    /** Code Point Ranges for cheng
    [34cc, 34cc], [36f5, 36f5], [3a03, 3a03], [3c82, 3c82], [3f29, 3f29],
    [404e, 404e], [4107, 4107], [4191, 4191], [41b5, 41b5], [41f8, 41f8],
    [4532, 4532], [455d, 455d], [45c0, 45c0], [4698, 4698], [47d3, 47d3],
    [47eb, 47eb], [4ac6, 4ac6], [4e1e, 4e1e], [4e58, 4e58], [4fb1, 4fb1],
    [5000, 5000], [5096, 5096], [50dc, 50dc], [51c0, 51c0], [5448, 5448],
    [55c6, 55c6], [564c, 564c], [57ce, 57ce], [57d5, 57d5], [57e9, 57e9],
    [584d, 584d], [5a0d, 5a0d], [5bac, 5bac], [5cf8, 5cf8], [5d4a, 5d4a],
    [5eb1, 5eb1], [5f8e, 5f8e], [5fb5, 5fb5], [609c, 609c], [6195, 6195],
    [61f2, 61f2], [6210, 6210], [627f, 627f], [6330, 6330], [6381, 6381],
    [6436, 6436], [645a, 645a], [6491, 6491], [649c, 649c], [655e, 655e],
    [665f, 665f], [673e, 673e], [67fd, 67fd], [68d6, 68d6], [68e6, 68e6],
    [68f1, 68f1], [69cd, 69cd], [6a18, 6a18], [6a55, 6a56], [6a59, 6a59],
    [6a89, 6a89], [6a99, 6a99], [6c36, 6c36], [6d06, 6d06], [6d67, 6d67],
    [6d7e, 6d7e], [6de8, 6de8], [6e5e, 6e5e], [6e97, 6e97], [6f82, 6f82],
    [6f84, 6f84], [7013, 7013], [722f, 722f], [725a, 725a], [73f5, 73f5],
    [73f9, 73f9], [7424, 7424], [7472, 7472], [757b, 757b], [76db, 76db],
    [76ef, 76ef], [7748, 7748], [7756, 7756], [77a0, 77a0], [77c3, 77c3],
    [7880, 7880], [79e4, 79e4], [7a0b, 7a0b], [7a31, 7a31], [7a6a, 7a6a],
    [7ac0, 7ac0], [7b6c, 7b6c], [7d7e, 7d7e], [8100, 8100], [812d, 812d],
    [837f, 837f], [8670, 8670], [87f6, 87f6], [88ce, 88ce], [89d5, 89d5],
    [8aa0, 8aa0], [8d6c, 8d6c], [8d9f, 8d9f], [8e1c, 8e1c], [8e5a, 8e5a],
    [901e, 901e], [90d5, 90d5], [90e2, 90e2], [9172, 9172], [9192, 9192],
    [92ee, 92ee], [9397, 9397], [93f3, 93f3], [93ff, 93ff], [943a, 943a],
    [9637, 9637], [9757, 9757], [9a01, 9a01], [9a2c, 9a2c], [9ee8, 9ee8],
    [203e7, 203e7], [204f7, 204f7], [20560, 20560], [20cfd, 20cfd],
    [2175a, 2175a], [2193f, 2193f], [21f4a, 21f4a], [2241e, 2241e],
    [22524, 22524], [2273b, 2273c], [227ca, 227ca], [22ed3, 22ed3],
    [22f8a, 22f8a], [22fe6, 22fe7], [2300f, 2300f], [2397a, 2397b],
    [24181, 24181], [24540, 24540], [245d3, 245d3], [24fe3, 24fe3],
    [258b2, 258b2], [25971, 25971], [264ec, 264ec], [269a2, 269a2],
    [27848, 27848], [27bd2, 27bd2], [27d94, 27d94], [27db8, 27db8],
    [27dd2, 27dd2], [2804e, 2804e], [2815d, 2815d], [282ec, 282ec],
    [28324, 28324], [2838b, 2838b], [28790, 28790], [28b43, 28b43],
    [28e5a, 28e5a], [29077, 29077], [291dc, 291dc], [29646, 29646],
    [296e6, 296e6], [297a6, 297a6], [29919, 29919], [29af9, 29af9],
    [29bce, 29bce], [2a04b, 2a04b]**/


    namespace {
    const static UnicodeSet::run_t __cheng_Set_runs[] = {
    {Empty, 422}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 25}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 22}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 16}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 10}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 28}, {Mixed, 2}, {Empty, 17}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 21}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 21}, {Mixed, 2},
    {Empty, 37}, {Mixed, 1}, {Empty, 2855}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 59}, {Mixed, 1},
    {Empty, 82}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 55},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 74},
    {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 80}, {Mixed, 1}, {Empty, 69},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 91}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 116}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 13}, {Mixed, 3}, {Empty, 19}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 29437}};
    const static UnicodeSet::bitquad_t  __cheng_Set_quads[] = {
    0x00001000, 0x00200000, 0x00000008, 0x00000004, 0x00000200, 0x00004000,
    0x00000080, 0x00020000, 0x00200000, 0x01000000, 0x00040000, 0x20000000,
    0x00000001, 0x01000000, 0x00080000, 0x00000800, 0x00000040, 0x40000000,
    0x01000000, 0x00020000, 0x00000001, 0x00400000, 0x10000000, 0x00000001,
    0x00000100, 0x00000040, 0x00001000, 0x00204000, 0x00000200, 0x00002000,
    0x00002000, 0x00001000, 0x01000000, 0x00000400, 0x00020000, 0x00004000,
    0x00200000, 0x10000000, 0x00200000, 0x00040000, 0x00010000, 0x80000000,
    0x00010000, 0x00000002, 0x00400000, 0x04000000, 0x10020000, 0x40000000,
    0x80000000, 0x40000000, 0x20000000, 0x00400000, 0x00020040, 0x00002000,
    0x01000000, 0x02600000, 0x02000200, 0x00400000, 0x00000040, 0x40000080,
    0x00000100, 0x40000000, 0x00800000, 0x00000014, 0x00080000, 0x00008000,
    0x04000000, 0x02200000, 0x00000010, 0x00040000, 0x08000000, 0x08000000,
    0x00008000, 0x00400100, 0x00000001, 0x00000008, 0x00000001, 0x00000010,
    0x00000800, 0x00020000, 0x00000400, 0x00000001, 0x00001000, 0x40000000,
    0x00000001, 0x00002000, 0x80000000, 0x00010000, 0x00400000, 0x00004000,
    0x00200000, 0x00000001, 0x00001000, 0x80000000, 0x10000000, 0x04000000,
    0x40000000, 0x00200000, 0x00000004, 0x00040000, 0x00040000, 0x00004000,
    0x00800000, 0x80080000, 0x04000000, 0x00800000, 0x00800000, 0x00000002,
    0x00001000, 0x00000100, 0x00000080, 0x00800000, 0x00000001, 0x20000000,
    0x04000000, 0x80000000, 0x00000400, 0x40000000, 0x00000010, 0x18000000,
    0x00000400, 0x00080000, 0x00000400, 0x000000c0, 0x00008000, 0x0c000000,
    0x00000002, 0x00000001, 0x00080000, 0x00000008, 0x00040000, 0x00020000,
    0x00001000, 0x00000004, 0x00000100, 0x00040000, 0x00100000, 0x01000000,
    0x00040000, 0x00004000, 0x20000000, 0x00001000, 0x00000010, 0x00000800,
    0x00010000, 0x00000008, 0x04000000, 0x00800000, 0x10000000, 0x00000040,
    0x00000040, 0x00000040, 0x02000000, 0x02000000, 0x00004000, 0x00000800};
    }

    const static UnicodeSet cheng_Set{const_cast<UnicodeSet::run_t *>(__cheng_Set_runs), 271, 0, const_cast<UnicodeSet::bitquad_t *>(__cheng_Set_quads), 156, 0};

    /** Code Point Ranges for qin
    [34ce, 34ce], [3542, 3542], [354b, 354b], [3626, 3626], [37ac, 37ac],
    [3908, 3908], [3a52, 3a52], [3a81, 3a81], [3b97, 3b97], [3c7d, 3c7d],
    [3f9b, 3f9b], [3fa3, 3fa3], [40e1, 40e2], [421c, 421c], [4537, 4537],
    [4737, 4737], [4aec, 4aec], [4c3c, 4c3c], [4d56, 4d56], [4fb5, 4fb5],
    [512d, 512d], [52e4, 52e4], [5422, 5423], [551a, 551a], [55ea, 55ea],
    [5659, 5659], [5745, 5745], [57c1, 57c1], [57d0, 57d0], [5807, 5807],
    [5890, 5890], [5ac0, 5ac0], [5be2, 5be2], [5bf4, 5bf4], [5d94, 5d94],
    [5d9c, 5d9c], [5e88, 5e88], [5ed1, 5ed1], [5ff4, 5ff4], [616c, 616c],
    [61c3, 61c4], [6272, 6272], [628b, 628b], [6366, 6366], [6407, 6407],
    [64b3, 64b3], [64d2, 64d2], [65b3, 65b3], [6611, 6611], [68ab, 68ab],
    [69ff, 69ff], [6a6c, 6a6c], [6a8e, 6a8e], [6aec, 6aec], [6b3d, 6b3d],
    [6c81, 6c81], [6d78, 6d78], [6eb1, 6eb1], [6ef2, 6ef2], [6fbf, 6fbf],
    [7019, 7019], [7434, 7434], [763d, 763d], [77dc, 77dc], [79bd, 79bd],
    [79e6, 79e6], [7b09, 7b09], [7d85, 7d85], [8039, 8039], [80a3, 80a3],
    [81e4, 81e4], [82a9, 82a9], [82b9, 82b9], [83e3, 83e3], [83f3, 83f3],
    [84c1, 84c1], [85fd, 85fd], [8604, 8604], [8699, 8699], [8793, 8793],
    [87bc, 87bc], [8804, 8804], [887e, 887f], [89aa, 89aa], [8a9b, 8a9b],
    [8d7a, 8d7a], [8d7e, 8d7e], [9202, 9202], [920a, 920a], [9219, 9219],
    [92df, 92df], [96c2, 96c2], [9772, 9772], [981c, 981c], [9849, 9849],
    [9869, 9869], [99f8, 99f8], [9b35, 9b35], [9bbc, 9bbc], [9cf9, 9cf9],
    [9d6d, 9d6d], [204ff, 204ff], [2050e, 2050e], [205b6, 205b6],
    [20605, 20605], [20718, 20718], [2098e, 2098e], [20ee8, 20ee8],
    [21ae7, 21ae7], [21d51, 21d51], [21e62, 21e62], [22af2, 22af2],
    [22c76, 22c76], [231b2, 231b2], [235af, 235af], [23723, 23723],
    [23890, 23890], [23a20, 23a20], [23a84, 23a84], [2464b, 2464b],
    [246a9, 246a9], [24953, 24953], [24d3d, 24d3d], [24d42, 24d42],
    [24ff3, 24ff3], [2536f, 2536f], [2538a, 2538a], [253a1, 253a1],
    [2560b, 2560b], [25c67, 25c67], [25d67, 25d67], [269cb, 269cb],
    [26bc8, 26bc8], [27858, 27858], [27bc3, 27bc3], [27f12, 27f12],
    [27f8f, 27f8f], [2867d, 2867d], [286e3, 286e3], [28fb0, 28fb0],
    [29088, 29088], [29396, 29396], [29419, 29419], [294d2, 294d2],
    [2951d, 2951d], [2951f, 2951f], [2a4ad, 2a4ad], [2a4af, 2a4af],
    [2a65f, 2a65f]**/


    namespace {
    const static UnicodeSet::run_t __qin_Set_runs[] = {
    {Empty, 422}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 24}, {Mixed, 2}, {Empty, 9}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2875}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 95}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 99}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 93},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 30}, {Mixed, 2}, {Empty, 20}, {Mixed, 1}, {Empty, 27},
    {Mixed, 3}, {Empty, 18}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 98}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 99}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 124}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 29389}};
    const static UnicodeSet::bitquad_t  __qin_Set_quads[] = {
    0x00004000, 0x00000804, 0x00000040, 0x00001000, 0x00000100, 0x00040000,
    0x00000002, 0x00800000, 0x20000000, 0x08000000, 0x00000008, 0x00000006,
    0x10000000, 0x00800000, 0x00800000, 0x00001000, 0x10000000, 0x00400000,
    0x00200000, 0x00002000, 0x00000010, 0x0000000c, 0x04000000, 0x00000400,
    0x02000000, 0x00000020, 0x00010002, 0x00000080, 0x00010000, 0x00000001,
    0x00100004, 0x10100000, 0x00000100, 0x00020000, 0x00100000, 0x00001000,
    0x00000018, 0x00040000, 0x00000800, 0x00000040, 0x00000080, 0x00080000,
    0x00040000, 0x00080000, 0x00020000, 0x00000800, 0x80000000, 0x00001000,
    0x00004000, 0x00001000, 0x20000000, 0x00000002, 0x01000000, 0x00020000,
    0x00040000, 0x80000000, 0x02000000, 0x00100000, 0x20000000, 0x10000000,
    0x20000000, 0x00000040, 0x00000200, 0x00000020, 0x02000000, 0x00000008,
    0x00000010, 0x02000200, 0x00080008, 0x00000002, 0x20000000, 0x00000010,
    0x02000000, 0x00080000, 0x10000000, 0x00000010, 0xc0000000, 0x00000400,
    0x08000000, 0x44000000, 0x02000404, 0x80000000, 0x00000004, 0x00040000,
    0x10000000, 0x00000200, 0x00000200, 0x01000000, 0x00200000, 0x10000000,
    0x02000000, 0x00002000, 0x80000000, 0x00004000, 0x00400000, 0x00000020,
    0x01000000, 0x00004000, 0x00000100, 0x00000080, 0x00020000, 0x00000004,
    0x00040000, 0x00400000, 0x00040000, 0x00008000, 0x00000008, 0x00010000,
    0x00000001, 0x00000010, 0x00000800, 0x00000200, 0x00080000, 0x20000000,
    0x00000004, 0x00080000, 0x00008000, 0x00000400, 0x00000002, 0x00000800,
    0x00000080, 0x00000080, 0x00000800, 0x00000100, 0x01000000, 0x00000008,
    0x00040000, 0x00008000, 0x20000000, 0x00000008, 0x00010000, 0x00000100,
    0x00400000, 0x02000000, 0x00040000, 0xa0000000, 0x0000a000, 0x80000000};
    }

    const static UnicodeSet qin_Set{const_cast<UnicodeSet::run_t *>(__qin_Set_runs), 255, 0, const_cast<UnicodeSet::bitquad_t *>(__qin_Set_quads), 138, 0};

    /** Code Point Ranges for jiong
    [34cf, 34cf], [392f, 392f], [3bcb, 3bcb], [3de1, 3de1], [4143, 4143],
    [50d2, 50d2], [5182, 5182], [518b, 518b], [518f, 518f], [56e7, 56e7],
    [5770, 5770], [57a7, 57a7], [6243, 6244], [660b, 660b], [6cc2, 6cc2],
    [6d7b, 6d7b], [6f83, 6f83], [7005, 7005], [7085, 7085], [70af, 70af],
    [715a, 715b], [7192, 7192], [71b2, 71b2], [7a98, 7a98], [7d45, 7d45],
    [81e6, 81e6], [81e9, 81e9], [8927, 8927], [8fe5, 8fe5], [9284, 9284],
    [93a3, 93a3], [9848, 9848], [99c9, 99c9], [99eb, 99eb], [20555, 20555],
    [205b7, 205b7], [211a9, 211a9], [220b6, 220b6], [22117, 22117],
    [2317b, 2317b], [23532, 23532], [23544, 23544], [24307, 24307],
    [2601d, 2601d], [2736e, 2736e], [28d00, 28d00], [294fa, 294fa],
    [296b1, 296b1], [2a503, 2a503], [2a54d, 2a54d]**/


    namespace {
    const static UnicodeSet::run_t __jiong_Set_runs[] = {
    {Empty, 422}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 123}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 84},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 70}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 2906}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 95}, {Mixed, 1}, {Empty, 119},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 130}, {Mixed, 1},
    {Empty, 29}, {Mixed, 2}, {Empty, 109}, {Mixed, 1}, {Empty, 231},
    {Mixed, 1}, {Empty, 154}, {Mixed, 1}, {Empty, 204}, {Mixed, 1},
    {Empty, 62}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 114},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 29397}};
    const static UnicodeSet::bitquad_t  __jiong_Set_quads[] = {
    0x00008000, 0x00008000, 0x00000800, 0x00000002, 0x00000008, 0x00040000,
    0x00008804, 0x00000080, 0x00010000, 0x00000080, 0x00000018, 0x00000800,
    0x00000004, 0x08000000, 0x00000008, 0x00000020, 0x00000020, 0x00008000,
    0x0c000000, 0x00040000, 0x00040000, 0x01000000, 0x00000020, 0x00000240,
    0x00000080, 0x00000020, 0x00000010, 0x00000008, 0x00000100, 0x00000200,
    0x00000800, 0x00200000, 0x00800000, 0x00000200, 0x00400000, 0x00800000,
    0x08000000, 0x00040000, 0x00000010, 0x00000080, 0x20000000, 0x00004000,
    0x00000001, 0x04000000, 0x00020000, 0x00000008, 0x00002000};
    }

    const static UnicodeSet jiong_Set{const_cast<UnicodeSet::run_t *>(__jiong_Set_runs), 87, 0, const_cast<UnicodeSet::bitquad_t *>(__jiong_Set_quads), 47, 0};

    /** Code Point Ranges for lu
    [34d0, 34d0], [352a, 352a], [35a8, 35a8], [36ec, 36ec], [3719, 3719],
    [37e4, 37e4], [3820, 3820], [389a, 389a], [3987, 3987], [3a90, 3a90],
    [3a96, 3a96], [3aad, 3aad], [3afd, 3afd], [3b54, 3b54], [3bdd, 3bdd],
    [3c7a, 3c7a], [3f3e, 3f3e], [3fd6, 3fd6], [40d9, 40d9], [4312, 4312],
    [4361, 4361], [4391, 4391], [43bc, 43bc], [4402, 4402], [4635, 4635],
    [4684, 4684], [47ff, 47ff], [485c, 485c], [4968, 4968], [4a6e, 4a6e],
    [4c15, 4c15], [4c5a, 4c5a], [4c90, 4c90], [4d2a, 4d2a], [4f93, 4f93],
    [50c7, 50c7], [516d, 516d], [5279, 5279], [52e0, 52e0], [5364, 5364],
    [5695, 5695], [56a7, 56a7], [5725, 5725], [5774, 5774], [5876, 5876],
    [58da, 58da], [5a3d, 5a3d], [5ccd, 5ccd], [5ed8, 5ed8], [5eec, 5eec],
    [5f54, 5f54], [622e, 622e], [645d, 645d], [64c4, 64c4], [64fc, 64fc],
    [6504, 6504], [650e, 650e], [66e5, 66e5], [6902, 6902], [6a1a, 6a1a],
    [6ad3, 6ad3], [6ae8, 6ae8], [6c0c, 6c0c], [6dd5, 6dd5], [6e0c, 6e0c],
    [6ef7, 6ef7], [6f09, 6f09], [6f5e, 6f5e], [7018, 7018], [719d, 719d],
    [7210, 7210], [7379, 7379], [7388, 7388], [742d, 742d], [7490, 7490],
    [74b7, 74b7], [74d0, 74d0], [752a, 752a], [7633, 7633], [76dd, 76dd],
    [76e7, 76e7], [7769, 7769], [77d1, 77d1], [7849, 7849], [788c, 788c],
    [78df, 78e0], [7984, 7984], [7a11, 7a11], [7a4b, 7a4b], [7b93, 7b93],
    [7c0f, 7c0f], [7c2c, 7c2c], [7c36, 7c36], [7c59, 7c5a], [7cb6, 7cb6],
    [7dd1, 7dd1], [7e46, 7e46], [7e91, 7e91], [7f4f, 7f4f], [7fcf, 7fcf],
    [8194, 8194], [819a, 819a], [81da, 81da], [8263, 8263], [826b, 826b],
    [82a6, 82a6], [83c9, 83c9], [84fc, 84fc], [850d, 850d], [8557, 8557],
    [8606, 8606], [8642, 8642], [865c, 865c], [87b0, 87b0], [8826, 8826],
    [89d2, 89d2], [89ee, 89ee], [89fb, 89fb], [8c37, 8c37], [8cc1, 8cc2],
    [8da2, 8da2], [8def, 8def], [8e1b, 8e1b], [8e57, 8e57], [8f05, 8f05],
    [8f46, 8f46], [8f64, 8f64], [902f, 902f], [911c, 911c], [916a, 916a],
    [9181, 9181], [9332, 9332], [9334, 9334], [93d5, 93d5], [93f4, 93f4],
    [942a, 942a], [9465, 9465], [946a, 946a], [9678, 9678], [9732, 9732],
    [9871, 9871], [9a04, 9a04], [9a3c, 9a3c], [9b6f, 9b6f], [9be5, 9be5],
    [9c73, 9c73], [9c78, 9c78], [9d66, 9d66], [9d71, 9d71], [9dfa, 9dfa],
    [9e15, 9e15], [9e75, 9e75], [9e7f, 9e7f], [9e93, 9e93], [9ef8, 9ef8],
    [2003d, 2003d], [20fdb, 20fdb], [21014, 21014], [21274, 21274],
    [21cf4, 21cf4], [21d06, 21d06], [21dcf, 21dcf], [220a4, 220a4],
    [222a9, 222a9], [222e1, 222e1], [227e7, 227e7], [22aeb, 22aeb],
    [22bc5, 22bc5], [22cb8, 22cb8], [22ef5, 22ef5], [22fac, 22fac],
    [23793, 23793], [23950, 23950], [23a4f, 23a4f], [23c40, 23c40],
    [23f1f, 23f1f], [2476e, 2476e], [247d8, 247d8], [2488a, 2488a],
    [248c3, 248c3], [24a0d, 24a0d], [24b1b, 24b1b], [24ba7, 24ba7],
    [24ebc, 24ebc], [24ef1, 24ef1], [24f7a, 24f7a], [24ff4, 24ff4],
    [25014, 25014], [25035, 25035], [2521b, 2521b], [25276, 25276],
    [254a8, 254a8], [2568a, 2568a], [256de, 256de], [256ea, 256ea],
    [258e4, 258e4], [25af0, 25af0], [25c8e, 25c8e], [25d87, 25d87],
    [262d4, 262d4], [26315, 26315], [2631f, 2631f], [265d3, 265d3],
    [26a87, 26a87], [26e10, 26e10], [26f0b, 26f0b], [26f42, 26f42],
    [26f4e, 26f4e], [26f9e, 26f9e], [26fb7, 26fb7], [26fca, 26fca],
    [26fd6, 26fd6], [27026, 27026], [271a3, 271a3], [271c4, 271c4],
    [27309, 27309], [2730d, 2730d], [27433, 27433], [27a39, 27a39],
    [27ad3, 27ad3], [27f65, 27f65], [28078, 28078], [281d6, 281d6],
    [28320, 28320], [283d4, 283d4], [28f50, 28f50], [29105, 29105],
    [29144, 29144], [2932b, 2932b], [2937c, 2937c], [294ea, 294ea],
    [296fc, 296fc], [298f1, 298f1], [29bdc, 29bdc], [2a256, 2a256],
    [2a263, 2a263], [2a344, 2a344], [2a444, 2a444], [2a48f, 2a48f],
    [2a58c, 2a58c]**/


    namespace {
    const static UnicodeSet::run_t __lu_Set_runs[] = {
    {Empty, 422}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 24},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 3}, {Mixed, 3}, {Empty, 14}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 2825}, {Mixed, 1}, {Empty, 124},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 83}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 14},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 15},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 91}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 51}, {Mixed, 2},
    {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 29395}};
    const static UnicodeSet::bitquad_t  __lu_Set_quads[] = {
    0x00010000, 0x00000400, 0x00000100, 0x00001000, 0x02000000, 0x00000010,
    0x00000001, 0x04000000, 0x00000080, 0x00410000, 0x00002000, 0x20000000,
    0x00100000, 0x20000000, 0x04000000, 0x40000000, 0x00400000, 0x02000000,
    0x00040000, 0x00000002, 0x00020000, 0x10000000, 0x00000004, 0x00200000,
    0x00000010, 0x80000000, 0x10000000, 0x00000100, 0x00004000, 0x00200000,
    0x04000000, 0x00010000, 0x00000400, 0x00080000, 0x00000080, 0x00002000,
    0x02000000, 0x00000001, 0x00000010, 0x00200000, 0x00000080, 0x00000020,
    0x00100000, 0x00400000, 0x04000000, 0x20000000, 0x00002000, 0x01000000,
    0x00001000, 0x00100000, 0x00004000, 0x20000000, 0x00000010, 0x10000000,
    0x00004010, 0x00000020, 0x00000004, 0x04000000, 0x00080000, 0x00000100,
    0x00001000, 0x00200000, 0x00001000, 0x00800000, 0x00000200, 0x40000000,
    0x01000000, 0x20000000, 0x00010000, 0x02000000, 0x00000100, 0x00002000,
    0x00010000, 0x00800000, 0x00010000, 0x00000400, 0x00080000, 0x20000000,
    0x00000080, 0x00000200, 0x00020000, 0x00000200, 0x00001000, 0x80000000,
    0x00000001, 0x00000010, 0x00020000, 0x00000800, 0x00080000, 0x00008000,
    0x00401000, 0x06000000, 0x00400000, 0x00020000, 0x00000040, 0x00020000,
    0x00008000, 0x00008000, 0x04100000, 0x04000000, 0x00000808, 0x00000040,
    0x00000200, 0x10000000, 0x00002000, 0x00800000, 0x00000040, 0x10000004,
    0x00010000, 0x00000040, 0x00040000, 0x08004000, 0x00800000, 0x00000006,
    0x00000004, 0x00008000, 0x08000000, 0x00800000, 0x00000020, 0x00000040,
    0x00000010, 0x00008000, 0x10000000, 0x00000400, 0x00000002, 0x00140000,
    0x00200000, 0x00100000, 0x00000400, 0x00000420, 0x01000000, 0x00040000,
    0x00020000, 0x00000010, 0x10000000, 0x00008000, 0x00000020, 0x01080000,
    0x00020040, 0x04000000, 0x00200000, 0x80200000, 0x00080000, 0x01000000,
    0x20000000, 0x08000000, 0x00100000, 0x00100000, 0x00100000, 0x00000040,
    0x00008000, 0x00000010, 0x00000200, 0x00000002, 0x00000080, 0x00000800,
    0x00000020, 0x01000000, 0x00200000, 0x00001000, 0x00080000, 0x00010000,
    0x00008000, 0x00000001, 0x80000000, 0x00004000, 0x01000000, 0x00000400,
    0x00000008, 0x00002000, 0x08000000, 0x00000080, 0x10000000, 0x00020000,
    0x04000000, 0x00100000, 0x00100000, 0x00200000, 0x08000000, 0x00400000,
    0x00000100, 0x00000400, 0x40000000, 0x00000400, 0x00000010, 0x00010000,
    0x00004000, 0x00000080, 0x00100000, 0x80200000, 0x00080000, 0x00000080,
    0x00010000, 0x00000800, 0x00004004, 0x40000000, 0x00800000, 0x00400400,
    0x00000040, 0x00000008, 0x00000010, 0x00002200, 0x00080000, 0x02000000,
    0x00080000, 0x00000020, 0x01000000, 0x00400000, 0x00000001, 0x00100000,
    0x00010000, 0x00000020, 0x00000010, 0x00000800, 0x10000000, 0x00000400,
    0x10000000, 0x00020000, 0x10000000, 0x00400000, 0x00000008, 0x00000010,
    0x00000010, 0x00008000, 0x00001000};
    }

    const static UnicodeSet lu_Set{const_cast<UnicodeSet::run_t *>(__lu_Set_runs), 383, 0, const_cast<UnicodeSet::bitquad_t *>(__lu_Set_quads), 225, 0};

    /** Code Point Ranges for nan
    [34d3, 34d3], [3af1, 3af1], [3b2e, 3b2e], [4212, 4212], [4296, 4296],
    [46c1, 46c1], [48f8, 48f8], [4a45, 4a45], [5189, 5189], [5357, 5357],
    [5583, 5583], [56dd, 56dd], [56e1, 56e1], [59a0, 59a0], [5a1a, 5a1a],
    [5a7b, 5a7b], [5ae8, 5ae8], [5f07, 5f07], [6201, 6201], [63c7, 63c7],
    [6524, 6524], [6694, 6694], [67df, 67df], [6960, 6960], [6e73, 6e73],
    [7058, 7058], [7537, 7537], [7558, 7558], [7f71, 7f71], [8169, 8169],
    [83ae, 83ae], [8433, 8433], [877b, 877b], [8af5, 8af5], [8d67, 8d67],
    [96e3, 96e3], [211a4, 211a4], [211b1, 211b2], [22a88, 22a88],
    [22b37, 22b37], [24314, 24314], [24c63, 24c63], [24f72, 24f72],
    [24fcf, 24fcf], [26340, 26340], [266da, 266da], [26767, 26767],
    [26d88, 26d88], [271d9, 271d9], [27574, 27574], [27e5e, 27e5e],
    [28839, 28839], [289b3, 289b3], [28d0c, 28d0c], [28d18, 28d18],
    [28d74, 28d74], [29160, 29160], [29211, 29211], [29236, 29236],
    [29e5e, 29e5e]**/


    namespace {
    const static UnicodeSet::run_t __nan_Set_runs[] = {
    {Empty, 422}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 21},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 38},
    {Mixed, 2}, {Empty, 80}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 75}, {Mixed, 1}, {Empty, 3029}, {Mixed, 1}, {Empty, 198},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 190}, {Mixed, 1},
    {Empty, 74}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 155}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 70}, {Mixed, 1},
    {Empty, 78}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 96}, {Mixed, 1}, {Empty, 29453}};
    const static UnicodeSet::bitquad_t  __nan_Set_quads[] = {
    0x00080000, 0x00020000, 0x00004000, 0x00040000, 0x00400000, 0x00000002,
    0x01000000, 0x00000020, 0x00000200, 0x00800000, 0x00000008, 0x20000000,
    0x00000002, 0x00000001, 0x04000000, 0x08000000, 0x00000100, 0x00000080,
    0x00000002, 0x00000080, 0x00000010, 0x00100000, 0x80000000, 0x00000001,
    0x00080000, 0x01000000, 0x00800000, 0x01000000, 0x00020000, 0x00000200,
    0x00004000, 0x00080000, 0x08000000, 0x00200000, 0x00000080, 0x00000008,
    0x00060010, 0x00000100, 0x00800000, 0x00100000, 0x00000008, 0x00040000,
    0x00008000, 0x00000001, 0x04000000, 0x00000080, 0x00000100, 0x02000000,
    0x00100000, 0x40000000, 0x02000000, 0x00080000, 0x01001000, 0x00100000,
    0x00000001, 0x00020000, 0x00400000, 0x40000000};
    }

    const static UnicodeSet nan_Set{const_cast<UnicodeSet::run_t *>(__nan_Set_runs), 111, 0, const_cast<UnicodeSet::bitquad_t *>(__nan_Set_quads), 58, 0};

    /** Code Point Ranges for bi
    [34d6, 34d6], [3620, 3620], [3629, 3629], [3644, 3644], [36b0, 36b0],
    [3832, 3832], [3840, 3840], [3859, 3859], [38b0, 38b0], [38b8, 38b8],
    [39d9, 39d9], [3a8f, 3a8f], [3aa4, 3aa4], [3bbf, 3bbf], [3bc5, 3bc5],
    [3c78, 3c78], [3cfc, 3cfc], [3d52, 3d52], [3ef6, 3ef6], [3feb, 3feb],
    [3ff0, 3ff0], [4023, 4023], [40fe, 40fe], [4136, 4136], [427e, 427e],
    [42d4, 42d4], [4318, 4318], [431f, 431f], [43df, 43df], [43e2, 43e2],
    [43f6, 43f6], [4557, 4557], [45a9, 45a9], [4621, 4621], [469c, 469c],
    [47c6, 47c6], [47e4, 47e4], [480b, 480b], [49d7, 49d7], [4a5b, 4a5b],
    [4a90, 4a90], [4ac1, 4ac1], [4afe, 4afe], [4b1b, 4b1b], [4ba0, 4ba1],
    [4d57, 4d57], [4ef3, 4ef3], [4f4a, 4f4a], [4f56, 4f56], [4f5b, 4f5b],
    [4ffe, 4ffe], [506a, 506a], [5315, 5315], [5351, 5351], [5421, 5421],
    [5487, 5487], [555a, 555a], [55f6, 55f6], [5752, 5752], [57e4, 57e4],
    [581b, 581b], [58c1, 58c1], [5970, 5970], [59a3, 59a3], [59bc, 59bc],
    [5a1d, 5a1d], [5a62, 5a62], [5ab2, 5ab2], [5b16, 5b16], [5c44, 5c44],
    [5d25, 5d25], [5e01, 5e01], [5e45, 5e45], [5e63, 5e63], [5e87, 5e87],
    [5eb3, 5eb3], [5ee6, 5ee6], [5f0a, 5f0a], [5f3c, 5f3c], [5f43, 5f43],
    [5f7c, 5f7c], [5fc5, 5fc5], [602d, 602d], [6036, 6036], [6082, 6082],
    [610a, 610a], [610e, 610e], [62c2, 62c2], [636d, 636d], [655d, 655d],
    [6583, 6583], [65c7, 65c7], [670d, 670d], [673c, 673c], [6787, 6788],
    [67c0, 67c0], [67f2, 67f2], [6890, 6890], [6911, 6911], [6945, 6945],
    [6a97, 6a97], [6b8d, 6b8d], [6bd4, 6bd4], [6bd6, 6bd6], [6c98, 6c98],
    [6ccc, 6ccc], [6ce2, 6ce2], [6e62, 6e62], [6eed, 6eed], [6f77, 6f77],
    [6fde, 6fde], [714f, 714f], [719a, 719a], [72f4, 72f4], [7358, 7359],
    [73cc, 73cc], [74a7, 74a7], [7540, 7540], [7550, 7550], [7562, 7562],
    [7595, 7595], [75aa, 75aa], [75f9, 75f9], [7680, 7680], [7695, 7695],
    [77a5, 77a5], [78a7, 78a7], [7955, 7955], [79d5, 79d5], [79d8, 79d8],
    [7a2b, 7a2b], [7b13, 7b13], [7b46, 7b46], [7b84, 7b85], [7be6, 7be6],
    [7bf3, 7bf3], [7c83, 7c83], [7d15, 7d15], [7d34, 7d34], [7dbc, 7dbc],
    [7e2a, 7e2a], [7e74, 7e74], [7f77, 7f77], [7f7c, 7f7c], [7fcd, 7fcd],
    [805b, 805b], [80a5, 80a5], [80b6, 80b6], [80b8, 80b8], [80c7, 80c7],
    [813e, 813e], [8177, 8177], [81c2, 81c2], [822d, 822d], [8298, 8298],
    [82fe, 82fe], [8300, 8300], [8378, 8378], [8406, 8406], [84d6, 84d6],
    [84fd, 84fd], [853d, 853d], [859c, 859c], [8617, 8617], [8651, 8651],
    [870c, 870c], [8795, 8795], [8890, 8890], [88ab, 88ab], [88e8, 88e8],
    [895e, 895e], [8963, 8963], [89f1, 89f1], [8a56, 8a56], [8c4d, 8c4d],
    [8c8f, 8c8f], [8cb1, 8cb1], [8cbb, 8cbb], [8cc1, 8cc1], [8d14, 8d14],
    [8ddb, 8ddb], [8e3e, 8e3e], [8e55, 8e55], [8e83, 8e84], [8f9f, 8f9f],
    [903c, 903c], [907f, 907f], [90b2, 90b2], [9119, 9119], [9128, 9128],
    [912a, 912a], [921a, 921a], [924d, 924d], [930d, 930d], [939e, 939e],
    [93ce, 93ce], [9434, 9434], [9588, 9589], [959f, 959f], [9642, 9642],
    [965b, 965b], [9674, 9674], [9781, 9781], [979e, 979e], [97b8, 97b8],
    [97e0, 97e0], [98f6, 98f6], [9946, 9946], [999d, 999d], [99a5, 99a5],
    [99dc, 99dc], [9a46, 9a46], [9ac0, 9ac0], [9af2, 9af2], [9b53, 9b53],
    [9b6e, 9b6e], [9b85, 9b85], [9ba9, 9ba9], [9c0f, 9c0f], [9d13, 9d13],
    [9d56, 9d56], [9d9d, 9d9d], [9ddd, 9ddd], [9de9, 9de9], [9e0a, 9e0a],
    [9f0a, 9f0a], [9f3b, 9f3b], [2023a, 2023a], [202ef, 202ef],
    [2040c, 2040c], [204f7, 204f7], [206e1, 206e1], [20842, 20842],
    [20988, 20988], [209c5, 209c5], [20a18, 20a18], [20a7f, 20a7f],
    [20b08, 20b08], [20b83, 20b83], [20f69, 20f69], [216d7, 216d7],
    [2181a, 2181a], [21cc4, 21cc4], [21ede, 21ede], [21f76, 21f76],
    [2207d, 2207d], [22169, 22169], [22341, 22341], [22426, 22426],
    [225ac, 225ac], [2260d, 2260d], [22797, 22797], [227f5, 227f5],
    [22845, 22845], [22a52, 22a52], [22cbe, 22cbe], [22ccb, 22ccb],
    [22d29, 22d29], [23049, 23049], [23062, 23062], [232f9, 232f9],
    [23513, 23513], [2357e, 2357e], [23625, 23625], [236a1, 236a1],
    [2374d, 2374d], [238a0, 238a0], [23963, 23963], [23987, 23987],
    [239a2, 239a2], [23a69, 23a69], [23b90, 23b90], [23bf4, 23bf4],
    [23d28, 23d28], [24080, 24080], [24179, 24179], [24419, 24419],
    [245da, 245da], [2465e, 2465e], [2473b, 2473b], [24778, 24778],
    [2483a, 2483a], [2485d, 2485d], [248a3, 248a3], [24d58, 24d58],
    [24dd2, 24dd2], [24e5d, 24e5d], [24e66, 24e66], [24ed6, 24ed6],
    [24f4a, 24f4a], [251af, 251af], [25217, 25217], [253e0, 253e0],
    [256d8, 256d8], [257d7, 257d7], [258a6, 258a6], [25cc6, 25cc6],
    [25d2c, 25d2c], [26018, 26018], [26096, 26096], [2645e, 2645e],
    [26506, 26506], [2681e, 2681e], [2692b, 2692b], [26b7c, 26b7c],
    [26bdb, 26bdb], [26c19, 26c19], [26c54, 26c54], [26cc8, 26cc8],
    [26e23, 26e23], [273fb, 273fb], [27480, 27480], [274c4, 274c4],
    [274ce, 274ce], [2776c, 2776c], [27903, 27903], [27951, 27951],
    [27ae4, 27ae4], [27c9c, 27c9c], [27ce0, 27ce0], [27f31, 27f31],
    [28157, 28157], [282e5, 282e5], [282e9, 282e9], [28428, 28428],
    [2868d, 2868d], [28693, 28693], [287f5, 287f5], [28814, 28814],
    [28c8b, 28c8b], [28cf2, 28cf2], [28d70, 28d70], [28e3c, 28e3c],
    [28ec0, 28ec0], [28efc, 28efc], [2926b, 2926b], [292b0, 292b0],
    [293c2, 293c2], [2947b, 2947b], [298da, 298da], [29a96, 29a96],
    [29aa7, 29aa7], [29b67, 29b67], [29bc3, 29bc3], [29ca2, 29ca2],
    [29fb3, 29fb3], [2a2dc, 2a2dc], [2a304, 2a304], [2a36a, 2a36a],
    [2a3fa, 2a3fa], [2a404, 2a404]**/


    namespace {
    const static UnicodeSet::run_t __bi_Set_runs[] = {
    {Empty, 422}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 7}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 10},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 3}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 4},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 4}, {Empty, 1}, {Mixed, 5}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 4}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 8},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 2}, {Mixed, 4}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 7}, {Mixed, 2}, {Empty, 2839}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 18}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 24}, {Mixed, 2}, {Empty, 19},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 5}, {Mixed, 3}, {Empty, 5}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 35},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 27}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 29407}};
    const static UnicodeSet::bitquad_t  __bi_Set_quads[] = {
    0x00400000, 0x00000201, 0x00000010, 0x00010000, 0x00040000, 0x02000001,
    0x01010000, 0x02000000, 0x00008000, 0x00000010, 0x80000000, 0x00000020,
    0x01000000, 0x10000000, 0x00040000, 0x00400000, 0x00010800, 0x00000008,
    0x40000000, 0x00400000, 0x40000000, 0x00100000, 0x81000000, 0x80000000,
    0x00400004, 0x00800000, 0x00000200, 0x00000002, 0x10000000, 0x00000040,
    0x00000010, 0x00000800, 0x00800000, 0x08000000, 0x00010000, 0x00000002,
    0x40000000, 0x08000000, 0x00000003, 0x00800000, 0x00080000, 0x08400400,
    0x40000000, 0x00000400, 0x00200000, 0x00020000, 0x00000002, 0x00000080,
    0x04000000, 0x00400000, 0x00040000, 0x00000010, 0x08000000, 0x00000002,
    0x00010000, 0x10000008, 0x20000000, 0x00000004, 0x00040000, 0x00400000,
    0x00000010, 0x00000020, 0x00000002, 0x00000020, 0x00000008, 0x00000080,
    0x00080000, 0x00000040, 0x00000400, 0x10000000, 0x00000008, 0x10000000,
    0x00000020, 0x00402000, 0x00000004, 0x00004400, 0x00000004, 0x00002000,
    0x20000000, 0x00000008, 0x00000080, 0x00002000, 0x10000000, 0x00000180,
    0x00000001, 0x00040000, 0x00010000, 0x00020000, 0x00000020, 0x00800000,
    0x00002000, 0x00500000, 0x01000000, 0x00001000, 0x00000004, 0x00000004,
    0x00002000, 0x00800000, 0x40000000, 0x00008000, 0x04000000, 0x00100000,
    0x03000000, 0x00001000, 0x00000080, 0x00010001, 0x00000004, 0x00200000,
    0x00000400, 0x02000000, 0x00200001, 0x00000020, 0x00000080, 0x00200000,
    0x01200000, 0x00000800, 0x00080000, 0x00000040, 0x00000030, 0x00080040,
    0x00000008, 0x00200000, 0x00100000, 0x10000000, 0x00000400, 0x00100000,
    0x10800000, 0x00002000, 0x08000000, 0x01400020, 0x00000080, 0x40000000,
    0x00800000, 0x00000004, 0x00002000, 0x01000000, 0x40000000, 0x00000001,
    0x01000000, 0x00000040, 0x00400000, 0x20000000, 0x20000000, 0x10000000,
    0x00800000, 0x00020000, 0x00001000, 0x00200000, 0x00010000, 0x00000800,
    0x00000100, 0x40000000, 0x00000008, 0x00020000, 0x00400000, 0x00002000,
    0x00008000, 0x08020000, 0x00000002, 0x00100000, 0x08000000, 0x40000000,
    0x00200000, 0x00000018, 0x80000000, 0x10000000, 0x80000000, 0x00040000,
    0x02000000, 0x00000500, 0x04000000, 0x00002000, 0x00002000, 0x40000000,
    0x00004000, 0x00100000, 0x80000300, 0x08000004, 0x00100000, 0x40000002,
    0x01000000, 0x00000001, 0x00400000, 0x00000040, 0x20000000, 0x00000020,
    0x10000000, 0x00000040, 0x00000001, 0x00040000, 0x00080000, 0x00004000,
    0x00000020, 0x00000200, 0x00008000, 0x00080000, 0x00400000, 0x20000000,
    0x20000000, 0x00000200, 0x00000400, 0x00000400, 0x08000000, 0x04000000,
    0x00008000, 0x00001000, 0x00800000, 0x00000002, 0x00000004, 0x00000100,
    0x00000020, 0x01000000, 0x80000000, 0x00000100, 0x00000008, 0x00000200,
    0x00800000, 0x04000000, 0x00000010, 0x40000000, 0x00400000, 0x20000000,
    0x00000200, 0x00000002, 0x00000040, 0x00001000, 0x00002000, 0x00800000,
    0x00200000, 0x00000020, 0x00040000, 0x40000000, 0x00000800, 0x00000200,
    0x00000200, 0x00000004, 0x02000000, 0x00080000, 0x40000000, 0x00000020,
    0x00000002, 0x00002000, 0x00000001, 0x00000008, 0x00000080, 0x00000004,
    0x00000200, 0x00010000, 0x00100000, 0x00000100, 0x00000001, 0x02000000,
    0x02000000, 0x04000000, 0x40000000, 0x08000000, 0x01000000, 0x04000000,
    0x20000000, 0x00000008, 0x01000000, 0x00040000, 0x20000000, 0x00000040,
    0x00400000, 0x00000400, 0x00008000, 0x00800000, 0x00000001, 0x01000000,
    0x00800000, 0x00000040, 0x00000040, 0x00001000, 0x01000000, 0x00400000,
    0x40000000, 0x00000040, 0x40000000, 0x00000800, 0x10000000, 0x08000000,
    0x02000000, 0x00100000, 0x00000100, 0x00000008, 0x08000000, 0x00000001,
    0x00004010, 0x00001000, 0x00000008, 0x00020000, 0x00000010, 0x10000000,
    0x00000001, 0x00020000, 0x00800000, 0x00000220, 0x00000100, 0x00082000,
    0x00200000, 0x00100000, 0x00000800, 0x00040000, 0x00010000, 0x10000000,
    0x00000001, 0x10000000, 0x00000800, 0x00010000, 0x00000004, 0x08000000,
    0x04000000, 0x00400000, 0x00000080, 0x00000080, 0x00000008, 0x00000004,
    0x00080000, 0x10000000, 0x00000010, 0x00000400, 0x04000000, 0x00000010};
    }

    const static UnicodeSet bi_Set{const_cast<UnicodeSet::run_t *>(__bi_Set_runs), 541, 0, const_cast<UnicodeSet::bitquad_t *>(__bi_Set_quads), 324, 0};

    /** Code Point Ranges for qia
    [34de, 34de], [34e3, 34e4], [3909, 3909], [39ce, 39ce], [3bab, 3bab],
    [404d, 404d], [4092, 4092], [4213, 4213], [46e9, 46e9], [480d, 480d],
    [4a10, 4a10], [4bca, 4bca], [4d97, 4d97], [4f49, 4f49], [50f9, 50f9],
    [51be, 51be], [5361, 5361], [54ad, 54ad], [5736, 5736], [5ba2, 5ba2],
    [5e22, 5e22], [6070, 6070], [6118, 6118], [62b2, 62b2], [62e4, 62e4],
    [6308, 6308], [6390, 6390], [63e2, 63e2], [6433, 6433], [64d6, 64d6],
    [696c, 696c], [6b8e, 6b8e], [6d3d, 6d3d], [75b4, 75b4], [77fb, 77fb],
    [7848, 7848], [78cd, 78cd], [7d5c, 7d5c], [845c, 845c], [8dd2, 8dd2],
    [9160, 9160], [9ac2, 9ac2], [9b9a, 9b9a], [20563, 20563],
    [20724, 20724], [20758, 20758], [2075b, 2075b], [20ccc, 20ccc],
    [21627, 21627], [2192b, 2192b], [22b8c, 22b8c], [22f23, 22f23],
    [23074, 23074], [2361f, 2361f], [238df, 238df], [23a04, 23a04],
    [24af6, 24af6], [24d79, 24d79], [251cc, 251cc], [25270, 25270],
    [253b8, 253b8], [2599e, 2599e], [25d2d, 25d2d], [26763, 26763],
    [26e09, 26e09], [27a76, 27a76], [2994c, 2994c], [29a71, 29a71],
    [29b81, 29b81], [29dfb, 29dfb], [2a63a, 2a63a]**/


    namespace {
    const static UnicodeSet::run_t __qia_Set_runs[] = {
    {Empty, 422}, {Mixed, 2}, {Empty, 32}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 67}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 75}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2894}, {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 43},
    {Mixed, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 146}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 134}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 81}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 98},
    {Mixed, 1}, {Empty, 246}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 65},
    {Mixed, 1}, {Empty, 29390}};
    const static UnicodeSet::bitquad_t  __qia_Set_quads[] = {
    0x40000000, 0x00000018, 0x00000200, 0x00004000, 0x00000800, 0x00002000,
    0x00040000, 0x00080000, 0x00000200, 0x00002000, 0x00010000, 0x00000400,
    0x00800000, 0x00000200, 0x02000000, 0x40000000, 0x00000002, 0x00002000,
    0x00400000, 0x00000004, 0x00000004, 0x00010000, 0x01000000, 0x00040000,
    0x00000010, 0x00000100, 0x00010000, 0x00000004, 0x00080000, 0x00400000,
    0x00001000, 0x00004000, 0x20000000, 0x00100000, 0x08000000, 0x00000100,
    0x00002000, 0x10000000, 0x10000000, 0x00040000, 0x00000001, 0x00000004,
    0x04000000, 0x00000008, 0x00000010, 0x09000000, 0x00001000, 0x00000080,
    0x00000800, 0x00001000, 0x00000008, 0x00100000, 0x80000000, 0x80000000,
    0x00000010, 0x00400000, 0x02000000, 0x00001000, 0x00010000, 0x01000000,
    0x40000000, 0x00002000, 0x00000008, 0x00000200, 0x00400000, 0x00001000,
    0x00020000, 0x00000002, 0x08000000, 0x04000000};
    }

    const static UnicodeSet qia_Set{const_cast<UnicodeSet::run_t *>(__qia_Set_runs), 135, 0, const_cast<UnicodeSet::bitquad_t *>(__qia_Set_quads), 70, 0};

    /** Code Point Ranges for pi
    [34df, 34df], [3525, 3525], [3a22, 3a22], [3a3d, 3a3d], [3bb0, 3bb0],
    [3bc5, 3bc5], [3c5f, 3c5f], [3cea, 3cea], [3d68, 3d68], [3f30, 3f30],
    [3f6c, 3f6c], [3fd9, 3fd9], [41d1, 41d1], [43d8, 43d8], [4440, 4440],
    [4444, 4444], [46b0, 46b0], [46b9, 46b9], [4818, 4818], [485f, 485f],
    [490f, 490f], [4928, 4928], [4935, 4935], [49bc, 49bc], [4ab9, 4ab9],
    [4acc, 4acc], [4ae0, 4ae0], [4bf1, 4bf1], [4c26, 4c26], [4cb9, 4cb9],
    [4d3d, 4d3d], [4e15, 4e15], [4ef3, 4ef3], [4f13, 4f13], [4f3e, 4f3e],
    [4ffe, 4ffe], [50fb, 50fb], [526f, 526f], [5288, 5288], [5339, 5339],
    [5351, 5351], [5426, 5426], [5564, 5564], [567c, 567c], [568a, 568a],
    [56ad, 56ad], [572e, 572e], [574f, 574f], [576f, 576f], [57e4, 57e4],
    [57f9, 57f9], [594a, 594a], [599a, 599a], [5ab2, 5ab2], [5ad3, 5ad3],
    [5c41, 5c41], [5caf, 5caf], [5d25, 5d25], [5d8f, 5d8f], [5e14, 5e14],
    [5e80, 5e80], [5e87, 5e87], [5eb3, 5eb3], [6036, 6036], [6082, 6082],
    [61b5, 61b5], [6251, 6251], [6279, 6279], [62ab, 62ab], [62b7, 62b7],
    [62c2, 62c2], [63ca, 63ca], [64d7, 64d7], [65c7, 65c7], [6707, 6707],
    [6787, 6788], [6911, 6911], [6bd4, 6bd4], [6bd7, 6bd7], [6bde, 6bde],
    [6de0, 6de0], [6f4e, 6f4e], [6fbc, 6fbc], [6fde, 6fde], [708b, 708b],
    [7137, 7137], [72d3, 72d3], [7308, 7308], [7435, 7435], [7513, 7513],
    [756a, 756a], [7588, 7588], [758b, 758b], [75b2, 75b2], [75de, 75de],
    [75e6, 75e6], [7656, 7656], [76ae, 76ae], [7765, 7765], [7812, 7812],
    [7914, 7915], [79db, 79db], [79e0, 79e0], [7a2b, 7a2b], [7b13, 7b13],
    [7be6, 7be6], [7bfa, 7bfa], [7c83, 7c83], [7d15, 7d15], [7f77, 7f77],
    [7f86, 7f86], [7fcd, 7fcd], [801a, 801a], [80b6, 80b6], [8134, 8134],
    [813e, 813e], [818d, 818d], [8298, 8298], [82c9, 82c9], [82e4, 82e4],
    [8406, 8406], [8543, 8543], [859c, 859c], [868c, 868d], [86bd, 86be],
    [8731, 8731], [8795, 8795], [87b7, 87b7], [88ab, 88ab], [88e8, 88e8],
    [8ac0, 8ac0], [8b6c, 8b6c], [8c7e, 8c7e], [8c94, 8c94], [8f9f, 8f9f],
    [90b3, 90b3], [90eb, 90eb], [9131, 9131], [91fd, 91fd], [9208, 9208],
    [921a, 921a], [9232, 9232], [9239, 9239], [925f, 925f], [9294, 9294],
    [92a2, 92a2], [930d, 930d], [939e, 939e], [95e2, 95e2], [9630, 9630],
    [9642, 9642], [9674, 9674], [96a6, 96a6], [9739, 9739], [979e, 979e],
    [9817, 9817], [99d3, 99d3], [9aec, 9aec], [9b6e, 9b6e], [9b7e, 9b7e],
    [9b8d, 9b8d], [9d04, 9d04], [9d67, 9d67], [9dff, 9dff], [9e0a, 9e0a],
    [9f19, 9f19], [20731, 20731], [20844, 20844], [20a38, 20a38],
    [20aae, 20aae], [20bd4, 20bd4], [20bed, 20bed], [20d6c, 20d6c],
    [20e66, 20e66], [2129d, 2129d], [216d8, 216d8], [216e1, 216e1],
    [2199f, 2199f], [21cae, 21cae], [21d8c, 21d8c], [21eae, 21eae],
    [221f3, 221f3], [224d6, 224d6], [22797, 22797], [22c18, 22c18],
    [22c67, 22c67], [22ef9, 22ef9], [22f87, 22f87], [22fb1, 22fb1],
    [234cb, 234cb], [2352c, 2352c], [235b0, 235b0], [2388b, 2388b],
    [23a89, 23a89], [23b09, 23b09], [23b2e, 23b2e], [23b3c, 23b3c],
    [23d2a, 23d2a], [23e5a, 23e5a], [23e6e, 23e6e], [24083, 24083],
    [245bf, 245bf], [24622, 24622], [24624, 24624], [24639, 24639],
    [246aa, 246aa], [2473b, 2473b], [24b2d, 24b2d], [24c4d, 24c4d],
    [24d23, 24d23], [24dd2, 24dd2], [24f1c, 24f1c], [24fc7, 24fc7],
    [24fce, 24fce], [24fd0, 24fd0], [24fd9, 24fd9], [25018, 25018],
    [25501, 25501], [2593b, 2593b], [25be1, 25be1], [25c7c, 25c7c],
    [26018, 26018], [260cb, 260cb], [26281, 26281], [26629, 26629],
    [26632, 26632], [26922, 26922], [26a2d, 26a2d], [26c3d, 26c3d],
    [26cc8, 26cc8], [26e7d, 26e7d], [2745c, 2745c], [274ce, 274ce],
    [27641, 27641], [279fa, 279fa], [27aab, 27aab], [27cba, 27cba],
    [27cfc, 27cfc], [27d09, 27d09], [27f91, 27f91], [2821a, 2821a],
    [28434, 28434], [2845c, 2845c], [2893d, 2893d], [289e6, 289e6],
    [28c90, 28c90], [28d61, 28d61], [28d69, 28d69], [28ea4, 28ea4],
    [28ec0, 28ec0], [29519, 29519], [295eb, 295eb], [29730, 29730],
    [298da, 298da], [29aeb, 29aeb], [2a106, 2a106], [2a1ca, 2a1ca],
    [2a295, 2a295], [2a308, 2a308], [2a59e, 2a59e], [2a6ce, 2a6ce]**/


    namespace {
    const static UnicodeSet::run_t __pi_Set_runs[] = {
    {Empty, 422}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 3}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 3}, {Empty, 5},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 4},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7},
    {Mixed, 3}, {Empty, 3}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 11},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 11},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2}, {Mixed, 5}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 18}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 23}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 4}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 2880}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 8}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 33}, {Mixed, 2}, {Empty, 20},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 40}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 15}, {Mixed, 1}, {Empty, 8}, {Mixed, 2},
    {Empty, 16}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 19}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 16},
    {Mixed, 2}, {Empty, 38}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 2},
    {Empty, 49}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 29385}};
    const static UnicodeSet::bitquad_t  __pi_Set_quads[] = {
    0x80000000, 0x00000020, 0x20000004, 0x00010000, 0x00000020, 0x80000000,
    0x00000400, 0x00000100, 0x00010000, 0x00001000, 0x02000000, 0x00020000,
    0x01000000, 0x00000011, 0x02010000, 0x01000000, 0x80000000, 0x00008000,
    0x00200100, 0x10000000, 0x02000000, 0x00001000, 0x00000001, 0x00020000,
    0x00000040, 0x02000000, 0x20000000, 0x00200000, 0x00080000, 0x00080000,
    0x40000000, 0x40000000, 0x08000000, 0x00008000, 0x00000100, 0x02000000,
    0x00020000, 0x00000040, 0x00000010, 0x10000000, 0x00000400, 0x00002000,
    0x00004000, 0x00008000, 0x00008000, 0x02000010, 0x00000400, 0x04000000,
    0x00040000, 0x00080000, 0x00000002, 0x00008000, 0x00000020, 0x00008000,
    0x00100000, 0x00000081, 0x00080000, 0x00400000, 0x00000004, 0x00200000,
    0x00020000, 0x02000000, 0x00800800, 0x00000004, 0x00000400, 0x00800000,
    0x00000080, 0x00000080, 0x00000180, 0x00020000, 0x40900000, 0x00000001,
    0x00004000, 0x10000000, 0x40000000, 0x00000800, 0x00800000, 0x00080000,
    0x00000100, 0x00200000, 0x00080000, 0x00000400, 0x00000900, 0x00040000,
    0x40000000, 0x00000040, 0x00400000, 0x00004000, 0x00000020, 0x00040000,
    0x00300000, 0x08000000, 0x00000001, 0x00000800, 0x00080000, 0x04000040,
    0x00000008, 0x00200000, 0x00800000, 0x00000040, 0x00002000, 0x04000000,
    0x00400000, 0x40100000, 0x00002000, 0x01000000, 0x00000200, 0x00000010,
    0x00000040, 0x00000008, 0x10000000, 0x00003000, 0x60000000, 0x00020000,
    0x00200000, 0x00800000, 0x00000800, 0x00000100, 0x00000001, 0x00001000,
    0x40000000, 0x00100000, 0x80000000, 0x00080000, 0x00000800, 0x00020000,
    0x20000000, 0x04000100, 0x02040000, 0x80000000, 0x00100000, 0x00000004,
    0x00002000, 0x40000000, 0x00000004, 0x00010000, 0x00000004, 0x00100000,
    0x00000040, 0x02000000, 0x40000000, 0x00800000, 0x00080000, 0x00001000,
    0x40004000, 0x00002000, 0x00000010, 0x00000080, 0x80000000, 0x00000400,
    0x02000000, 0x00020000, 0x00000010, 0x01000000, 0x00004000, 0x00100000,
    0x00002000, 0x00001000, 0x00000040, 0x20000000, 0x01000000, 0x00000002,
    0x80000000, 0x00004000, 0x00001000, 0x00004000, 0x00080000, 0x00400000,
    0x00800000, 0x01000000, 0x00000080, 0x02000000, 0x00000080, 0x00020000,
    0x00000800, 0x00001000, 0x00010000, 0x00000800, 0x00000200, 0x00000200,
    0x10004000, 0x00000400, 0x04000000, 0x00004000, 0x00000008, 0x80000000,
    0x02000014, 0x00000400, 0x08000000, 0x00002000, 0x00002000, 0x00000008,
    0x00040000, 0x10000000, 0x02014080, 0x01000000, 0x00000002, 0x08000000,
    0x00000002, 0x10000000, 0x01000000, 0x00000800, 0x00000002, 0x00040200,
    0x00000004, 0x00002000, 0x20000000, 0x00000100, 0x20000000, 0x10000000,
    0x00004000, 0x00000002, 0x04000000, 0x00000800, 0x04000000, 0x10000000,
    0x00000200, 0x00020000, 0x04000000, 0x00100000, 0x10000000, 0x20000000,
    0x00000040, 0x00010000, 0x00000202, 0x00000010, 0x00000001, 0x02000000,
    0x00000800, 0x00010000, 0x04000000, 0x00000800, 0x00000040, 0x00000400,
    0x00200000, 0x00000100, 0x40000000, 0x00004000};
    }

    const static UnicodeSet pi_Set{const_cast<UnicodeSet::run_t *>(__pi_Set_runs), 391, 0, const_cast<UnicodeSet::bitquad_t *>(__pi_Set_quads), 238, 0};

    /** Code Point Ranges for dian
    [34e0, 34e0], [36b2, 36b2], [376a, 376a], [379f, 379f], [3d98, 3d98],
    [3f2d, 3f2d], [4021, 4021], [4344, 4344], [47cd, 47cd], [4a47, 4a47],
    [4f43, 4f43], [4f54, 4f54], [5178, 5178], [53a7, 53a7], [5538, 5538],
    [576b, 576b], [57dd, 57dd], [588a, 588a], [58c2, 58c2], [5960, 5960],
    [5a5d, 5a5d], [5a70, 5a70], [5d6e, 5d6e], [5dd4, 5dd4], [5e97, 5e97],
    [60e6, 60e6], [6242, 6242], [62c8, 62c8], [6382, 6382], [6527, 6527],
    [6541, 6541], [69c7, 69c7], [6a42, 6a42], [6a5d, 6a5d], [6bbf, 6bbf],
    [6cbe, 6cbe], [6d8e, 6d8e], [6dc0, 6dc0], [6ec7, 6ec7], [6fb1, 6fb1],
    [73b7, 73b7], [7414, 7414], [7538, 7538], [75f6, 75f6], [7628, 7628],
    [765c, 765c], [7672, 7672], [7898, 7898], [78f9, 78f9], [7c1f, 7c1f],
    [814d, 814d], [84a7, 84a7], [8547, 8547], [8713, 8714], [8a40, 8a40],
    [8e2e, 8e2e], [8e4e, 8e4e], [923f, 923f], [963d, 963d], [96fb, 96fb],
    [975b, 975b], [9815, 9815], [985a, 985a], [9a54, 9a54], [9ede, 9ede],
    [9f7b, 9f7b], [20458, 20458], [208a3, 208a3], [20a77, 20a77],
    [20ac9, 20ac9], [20da7, 20da7], [21c47, 21c47], [21f13, 21f13],
    [2215d, 2215d], [2256f, 2256f], [225a9, 225a9], [22ec5, 22ec5],
    [231d6, 231d6], [23482, 23482], [238a5, 238a5], [238c8, 238c8],
    [238e3, 238e3], [239db, 239db], [23a80, 23a80], [23aaa, 23aaa],
    [24836, 24836], [24a71, 24a71], [24ff6, 24ff6], [25151, 25151],
    [251de, 251de], [2547c, 2547c], [2588f, 2588f], [2599f, 2599f],
    [259d1, 259d1], [25b8f, 25b8f], [25ce2, 25ce2], [25d2b, 25d2b],
    [25d4f, 25d4f], [26146, 26146], [264bb, 264bb], [26552, 26552],
    [26f44, 26f44], [2713a, 2713a], [2737f, 2737f], [27f4d, 27f4d],
    [28200, 28200], [290b5, 290b5], [29120, 29120], [29140, 29140],
    [29194, 29194], [29944, 29944], [29b11, 29b11], [2a469, 2a469],
    [2a4fc, 2a4fc], [2a59a, 2a59a]**/


    namespace {
    const static UnicodeSet::run_t __dian_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 47}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 23}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 35}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 16}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 30}, {Mixed, 2},
    {Empty, 30}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 2854}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 116}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 32}, {Mixed, 3},
    {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 107},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 31}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 79}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 94},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 116}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 61}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 29395}};
    const static UnicodeSet::bitquad_t  __dian_Set_quads[] = {
    0x00000001, 0x00040000, 0x00000400, 0x80000000, 0x01000000, 0x00002000,
    0x00000002, 0x00000010, 0x00002000, 0x00000080, 0x00100008, 0x01000000,
    0x00000080, 0x01000000, 0x00000800, 0x20000000, 0x00000400, 0x00000004,
    0x00000001, 0x20000000, 0x00010000, 0x00004000, 0x00100000, 0x00800000,
    0x00000040, 0x00000004, 0x00000100, 0x00000004, 0x00000080, 0x00000002,
    0x00000080, 0x20000004, 0x80000000, 0x40000000, 0x00004000, 0x00000001,
    0x00000080, 0x00020000, 0x00800000, 0x00100000, 0x01000000, 0x00400000,
    0x00000100, 0x10000000, 0x00040000, 0x01000000, 0x02000000, 0x80000000,
    0x00002000, 0x00000080, 0x00000080, 0x00180000, 0x00000001, 0x00004000,
    0x00004000, 0x80000000, 0x20000000, 0x08000000, 0x08000000, 0x00200000,
    0x04000000, 0x00100000, 0x40000000, 0x08000000, 0x01000000, 0x00000008,
    0x00800000, 0x00000200, 0x00000080, 0x00000080, 0x00080000, 0x20000000,
    0x00008000, 0x00000200, 0x00000020, 0x00400000, 0x00000004, 0x00000020,
    0x00000100, 0x00000008, 0x08000000, 0x00000001, 0x00000400, 0x00400000,
    0x00020000, 0x00400000, 0x00020000, 0x40000000, 0x10000000, 0x00008000,
    0x80000000, 0x00020000, 0x00008000, 0x00000004, 0x00000800, 0x00008000,
    0x00000040, 0x08000000, 0x00040000, 0x00000010, 0x04000000, 0x80000000,
    0x00002000, 0x00000001, 0x00200000, 0x00000001, 0x00000001, 0x00100000,
    0x00000010, 0x00020000, 0x00000200, 0x10000000, 0x04000000};
    }

    const static UnicodeSet dian_Set{const_cast<UnicodeSet::run_t *>(__dian_Set_runs), 205, 0, const_cast<UnicodeSet::bitquad_t *>(__dian_Set_quads), 113, 0};

    /** Code Point Ranges for fu
    [34e1, 34e1], [3517, 3517], [354a, 354a], [356e, 356e], [3695, 3695],
    [3698, 3698], [37ca, 37ca], [3805, 3805], [3914, 3914], [3931, 3931],
    [3a64, 3a64], [3a84, 3a84], [3ad9, 3ad9], [3b3c, 3b3c], [3b6a, 3b6a],
    [3c97, 3c97], [3cc7, 3cc7], [3dc6, 3dc6], [3f6c, 3f6c], [3f88, 3f88],
    [40a4, 40a4], [40fd, 40fd], [40ff, 40ff], [412e, 412e], [420f, 420f],
    [42e8, 42e8], [42f9, 42f9], [4317, 4317], [4356, 4356], [4394, 4394],
    [4484, 4484], [4487, 4487], [44cf, 44cf], [44f5, 44f5], [4530, 4530],
    [45c4, 45c4], [4600, 4600], [479e, 479e], [47a4, 47a4], [47af, 47af],
    [47d4, 47d4], [47ee, 47ee], [4835, 4835], [484d, 484d], [49a3, 49a3],
    [49de, 49de], [4a17, 4a17], [4a31, 4a31], [4a49, 4a49], [4a94, 4a94],
    [4a99, 4a99], [4b6e, 4b6e], [4b78, 4b78], [4bf1, 4bf1], [4c50, 4c50],
    [4cd5, 4cd5], [4d7e, 4d7e], [4e0d, 4e0d], [4e40, 4e40], [4ec5, 4ec5],
    [4ed8, 4ed8], [4f0f, 4f0f], [4f15, 4f15], [4f5b, 4f5b], [4fcc, 4fcc],
    [4fd8, 4fd8], [4fdb, 4fdb], [4fef, 4fef], [5069, 506a], [5085, 5085],
    [51b9, 51b9], [521c, 521c], [526f, 526f], [5305, 5305], [5310, 5310],
    [544b, 544b], [5488, 5488], [5490, 5490], [54f9, 54fa], [5638, 5638],
    [577f, 577f], [5798, 5798], [57ba, 57ba], [5831, 5831], [590d, 590d],
    [592b, 592b], [598b, 598b], [59c7, 59c7], [5a10, 5a10], [5a4f, 5a4f],
    [5a66, 5a66], [5b0e, 5b0e], [5b5a, 5b5a], [5b75, 5b75], [5b93, 5b93],
    [5bcc, 5bcc], [5c03, 5c03], [5caa, 5caa], [5cca, 5cca], [5dff, 5dff],
    [5e17, 5e17], [5e45, 5e45], [5e5e, 5e5e], [5e9c, 5e9c], [5f17, 5f17],
    [5f23, 5f23], [5f73, 5f73], [5f7f, 5f7f], [5fa9, 5fa9], [6000, 6000],
    [6024, 6024], [602b, 602b], [61ef, 61ef], [6276, 6276], [62c2, 62c2],
    [62ca, 62ca], [634a, 634a], [636c, 636c], [638a, 638a], [64ab, 64ab],
    [6577, 6577], [65a7, 65a7], [670d, 670d], [678e, 678e], [67b9, 67b9],
    [67ce, 67ce], [67eb, 67eb], [67ed, 67ed], [683f, 683f], [6874, 6874],
    [68f4, 68f4], [6931, 6931], [6991, 6991], [6c1f, 6c1f], [6c71, 6c71],
    [6c95, 6c95], [6cb8, 6cb8], [6ced, 6ced], [6d11, 6d11], [6d6e, 6d6e],
    [6daa, 6daa], [6ea5, 6ea5], [6ecf, 6ecf], [6f93, 6f93], [70a5, 70a5],
    [70f0, 70f0], [7236, 7236], [739e, 739e], [73b8, 73b8], [7408, 7408],
    [74b7, 74b7], [752b, 752b], [7536, 7536], [7549, 7549], [7550, 7550],
    [7557, 7557], [7641, 7641], [7829, 7829], [7953, 7954], [798f, 798f],
    [79ff, 79ff], [7a03, 7a03], [7a2a, 7a2a], [7ace, 7ace], [7b26, 7b26],
    [7b30, 7b30], [7b5f, 7b5f], [7b81, 7b81], [7b99, 7b99], [7c20, 7c20],
    [7cb0, 7cb0], [7d28, 7d28], [7d31, 7d31], [7d3c, 7d3c], [7d65, 7d65],
    [7d8d, 7d8d], [7d92, 7d92], [7e1b, 7e1b], [7e80, 7e80], [7f58, 7f58],
    [7f66, 7f66], [7fc7, 7fc7], [80d5, 80d5], [812f, 812f], [8150, 8151],
    [8179, 8179], [819a, 819a], [8240, 8240], [8274, 8274], [8299, 8299],
    [82a3, 82a3], [82be, 82be], [82fb, 82fb], [8300, 8300], [832f, 832f],
    [8342, 8342], [8374, 8374], [8386, 8386], [83a9, 83a9], [83d4, 83d4],
    [8409, 8409], [842f, 842f], [844d, 844d], [84f2, 84f2], [8567, 8567],
    [8659, 8659], [86a5, 86a5], [86a8, 86a8], [86b9, 86b9], [86d7, 86d7],
    [8705, 8705], [8709, 8709], [875c, 875c], [8760, 8760], [876e, 876e],
    [886d, 886d], [889a, 889a], [889d, 889d], [88b1, 88b1], [8907, 8907],
    [8914, 8914], [8946, 8946], [8986, 8986], [8a03, 8a03], [8a42, 8a42],
    [8ae8, 8ae8], [8c67, 8c67], [8ca0, 8ca0], [8cbb, 8cbb], [8ce6, 8ce6],
    [8cfb, 8cfb], [8d74, 8d74], [8dba, 8dba], [8dd7, 8dd7], [8e3e, 8e3e],
    [8ef5, 8ef5], [8f14, 8f14], [8f39, 8f39], [8f3b, 8f3b], [8fd8, 8fd8],
    [909a, 909a], [909e, 909e], [90cd, 90cd], [90d9, 90d9], [90db, 90db],
    [911c, 911c], [917b, 917b], [91dc, 91dc], [9207, 9207], [9258, 9258],
    [925c, 925c], [9307, 9307], [9351, 9351], [961c, 961c], [9644, 9644],
    [965a, 965a], [97b4, 97b4], [97cd, 97cd], [97db, 97db], [982b, 982b],
    [98b0, 98b0], [99a5, 99a5], [99d9, 99d9], [9af4, 9af4], [9b34, 9b34],
    [9b84, 9b84], [9b92, 9b92], [9c12, 9c12], [9cec, 9cec], [9cfa, 9cfa],
    [9d14, 9d14], [9d69, 9d69], [9d9d, 9d9d], [9ea9, 9ea9], [9efb, 9efc],
    [202e9, 202e9], [2033d, 2033d], [204d7, 204d7], [207cc, 207cc],
    [20842, 20842], [208fe, 208fe], [20abb, 20abb], [20b1d, 20b1d],
    [20cbd, 20cbd], [213ea, 213ea], [2141d, 2141d], [217aa, 217aa],
    [2181e, 2181e], [21984, 21984], [21afa, 21afa], [21b07, 21b07],
    [21d5b, 21d5b], [2203c, 2203c], [22040, 22040], [22080, 22080],
    [22086, 22086], [22339, 22339], [223cd, 223cd], [22492, 22492],
    [225eb, 225eb], [225f2, 225f2], [2260d, 2260d], [227a6, 227a6],
    [22832, 22832], [22bcb, 22bcb], [22c06, 22c06], [22ec0, 22ec0],
    [22eee, 22eee], [23023, 23023], [2303e, 2303e], [2310e, 2310e],
    [231b5, 231b5], [2347f, 2347f], [23627, 23627], [23792, 23792],
    [2394b, 2394b], [23b58, 23b58], [23e4b, 23e4b], [23edc, 23edc],
    [23fc6, 23fc6], [241ae, 241ae], [24268, 24268], [2457e, 2457e],
    [24664, 24664], [2466d, 2466d], [24754, 24754], [2475f, 2475f],
    [2482a, 2482a], [24b5f, 24b5f], [24c08, 24c08], [24c7d, 24c7d],
    [24d96, 24d96], [24e11, 24e11], [24e17, 24e17], [24fed, 24fed],
    [25111, 25111], [25113, 25113], [254ab, 254ab], [254b0, 254b0],
    [2562c, 2562c], [25998, 25998], [259f7, 259f7], [25a0d, 25a0d],
    [25a8b, 25a8b], [25a9a, 25a9a], [25c1b, 25c1b], [25c40, 25c40],
    [25c9b, 25c9b], [25cc7, 25cc7], [25df1, 25df1], [25f3c, 25f3c],
    [25fa7, 25fa7], [2608a, 2608a], [261c1, 261c1], [262a6, 262a6],
    [262be, 262be], [2638e, 2638e], [263ad, 263ad], [26421, 26421],
    [26479, 26479], [2650d, 2650d], [26580, 26580], [26a08, 26a08],
    [26a0b, 26a0b], [26a21, 26a21], [26a61, 26a61], [26bb9, 26bb9],
    [26c3a, 26c3a], [26c56, 26c56], [26cab, 26cab], [26cd3, 26cd3],
    [26e31, 26e31], [26e89, 26e89], [26f4f, 26f4f], [26fc1, 26fc1],
    [2702e, 2702e], [27034, 27034], [2710f, 2710f], [27248, 27248],
    [2724a, 2724a], [27308, 27308], [27482, 27482], [27499, 27499],
    [27561, 27561], [2759a, 2759a], [27971, 27971], [27cc2, 27cc2],
    [27d0c, 27d0c], [27ef3, 27ef3], [27f17, 27f17], [27f31, 27f31],
    [27ff3, 27ff3], [28052, 28052], [282e9, 282e9], [28325, 28325],
    [28451, 28451], [28693, 28693], [2899b, 2899b], [28d43, 28d43],
    [28d5f, 28d5f], [28e85, 28e85], [28f9a, 28f9a], [29086, 29086],
    [2908e, 2908e], [29094, 29095], [2917f, 2917f], [2927d, 2927d],
    [292df, 292df], [292e8, 292e8], [2930f, 2930f], [2934f, 2934f],
    [2937f, 2937f], [2939b, 2939b], [2941a, 2941a], [2946c, 2946c],
    [29499, 29499], [294ba, 294ba], [294d6, 294d6], [295ac, 295ac],
    [295bc, 295bc], [29732, 29732], [29837, 29837], [298b0, 298b0],
    [298bf, 298bf], [298dc, 298dc], [298f8, 298f8], [29b19, 29b19],
    [29b7a, 29b7a], [29cce, 29cce], [29cd0, 29cd0], [29d69, 29d69],
    [29d79, 29d79], [29fbf, 29fbf], [29fe7, 29fe7], [2a03a, 2a03a],
    [2a080, 2a080], [2a08b, 2a08b], [2a0be, 2a0be], [2a0d3, 2a0d3],
    [2a1a0, 2a1a0], [2a290, 2a290], [2a34f, 2a34f]**/


    namespace {
    const static UnicodeSet::run_t __fu_Set_runs[] = {
    {Empty, 423}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 9}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 4}, {Empty, 1}, {Mixed, 2}, {Empty, 10}, {Mixed, 2}, {Empty, 1},
    {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 9}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 8}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 3}, {Mixed, 4}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 1},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 7},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 4}, {Empty, 5},
    {Mixed, 4}, {Empty, 1}, {Mixed, 8}, {Empty, 1}, {Mixed, 3}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 7},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2847}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 57}, {Mixed, 2}, {Empty, 28}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 10}, {Mixed, 2},
    {Empty, 17}, {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 12}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 21}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 35},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 30}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 3}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 2}, {Mixed, 3}, {Empty, 1}, {Mixed, 3}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 4}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 16}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 3}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 29413}};
    const static UnicodeSet::bitquad_t  __fu_Set_quads[] = {
    0x00000002, 0x00800000, 0x00000400, 0x00004000, 0x01200000, 0x00000400,
    0x00000020, 0x00100000, 0x00020000, 0x00000010, 0x00000010, 0x02000000,
    0x10000000, 0x00000400, 0x00800000, 0x00000080, 0x00000040, 0x00001000,
    0x00000100, 0x00000010, 0xa0000000, 0x00004000, 0x00008000, 0x02000100,
    0x00800000, 0x00400000, 0x00100000, 0x00000090, 0x00008000, 0x00200000,
    0x00010000, 0x00000010, 0x00000001, 0x40000000, 0x00008010, 0x00100000,
    0x00004000, 0x00200000, 0x00002000, 0x00000008, 0x40000000, 0x00800000,
    0x00020000, 0x00000200, 0x02100000, 0x01004000, 0x00020000, 0x00010000,
    0x00200000, 0x40000000, 0x00002000, 0x00000001, 0x01000020, 0x00208000,
    0x08000000, 0x09001000, 0x00008000, 0x00000600, 0x00000020, 0x02000000,
    0x10000000, 0x00008000, 0x00010020, 0x00000800, 0x00010100, 0x06000000,
    0x01000000, 0x80000000, 0x01000000, 0x04000000, 0x00020000, 0x00002000,
    0x00000800, 0x00000800, 0x00000080, 0x00010000, 0x00008000, 0x00000040,
    0x00004000, 0x04000000, 0x00200000, 0x00080000, 0x00001000, 0x00000008,
    0x00000400, 0x00000400, 0x80000000, 0x00800000, 0x40000020, 0x10000000,
    0x00800000, 0x00000008, 0x80080000, 0x00000200, 0x00000001, 0x00000810,
    0x00008000, 0x00400000, 0x00000404, 0x00000400, 0x00001000, 0x00000400,
    0x00000800, 0x00800000, 0x00000080, 0x00002000, 0x00004000, 0x02000000,
    0x00004000, 0x00002800, 0x80000000, 0x00100000, 0x00100000, 0x00020000,
    0x00020000, 0x80000000, 0x00020000, 0x00200000, 0x01000000, 0x00002000,
    0x00020000, 0x00004000, 0x00000400, 0x00000020, 0x00008000, 0x00080000,
    0x00000020, 0x00010000, 0x00400000, 0x40000000, 0x01000000, 0x00000100,
    0x00800000, 0x00400800, 0x00810200, 0x00000002, 0x00000200, 0x00180000,
    0x00008000, 0x80000000, 0x00000008, 0x00000400, 0x00004000, 0x00010040,
    0x80000000, 0x02000002, 0x00000001, 0x00010000, 0x10020100, 0x00000020,
    0x00042000, 0x08000000, 0x00000001, 0x01000000, 0x00000040, 0x00000080,
    0x00200000, 0x00008000, 0x00030000, 0x02000000, 0x04000000, 0x00000001,
    0x00100000, 0x02000000, 0x40000008, 0x08000000, 0x00000001, 0x00008000,
    0x00000004, 0x00100000, 0x00000040, 0x00000200, 0x00100000, 0x00000200,
    0x00008000, 0x00002000, 0x00040000, 0x00000080, 0x02000000, 0x02000120,
    0x00800000, 0x00000220, 0x10000000, 0x00004001, 0x00002000, 0x24000000,
    0x00020000, 0x00100080, 0x00000040, 0x00000040, 0x00000008, 0x00000004,
    0x00000100, 0x00000080, 0x08000001, 0x08000040, 0x00100000, 0x04000000,
    0x00800000, 0x40000000, 0x00200000, 0x00100000, 0x0a000000, 0x01000000,
    0x44000000, 0x0a002000, 0x10000000, 0x08000000, 0x10000000, 0x00000080,
    0x11000000, 0x00000080, 0x00020000, 0x10000000, 0x04000010, 0x00100000,
    0x08002000, 0x00000800, 0x00010000, 0x00000020, 0x02000000, 0x00100000,
    0x00100000, 0x00040010, 0x00040000, 0x04001000, 0x00100000, 0x00000200,
    0x20000000, 0x00000200, 0x18000000, 0x00000200, 0x20000000, 0x00800000,
    0x00001000, 0x00000004, 0x40000000, 0x08000000, 0x20000000, 0x20000000,
    0x00000400, 0x20000000, 0x00000400, 0x40000000, 0x00000010, 0x04000000,
    0x00000080, 0x08000000, 0x10000000, 0x00000001, 0x00000041, 0x02000000,
    0x00002000, 0x00040000, 0x00040800, 0x00002000, 0x00000040, 0x00040000,
    0x00000800, 0x00000040, 0x00000001, 0x00004000, 0x40000008, 0x00004000,
    0x00200000, 0x80000000, 0x00000080, 0x00040000, 0x00000800, 0x01000000,
    0x00000800, 0x10000000, 0x00000040, 0x00004000, 0x00000100, 0x40000000,
    0x00002010, 0x80100000, 0x00000400, 0x80000000, 0x00000100, 0x20000000,
    0x00400000, 0x00820000, 0x00002000, 0x000a0000, 0x00010800, 0x00001000,
    0x01000000, 0x00800000, 0x00002000, 0x04000800, 0x08000000, 0x00000001,
    0x08000000, 0x00000080, 0x00020000, 0x10000000, 0x00000080, 0x00000400,
    0x00000002, 0x40000040, 0x00004000, 0x00002000, 0x00000002, 0x02000000,
    0x00002000, 0x00000001, 0x00000900, 0x00000002, 0x00000002, 0x02000000,
    0x04000000, 0x00400000, 0x00000800, 0x00080000, 0x00020000, 0x00000200,
    0x00008000, 0x00000002, 0x00104000, 0x00008000, 0x00000500, 0x00000100,
    0x02000004, 0x00000002, 0x04000000, 0x00020000, 0x00000004, 0x00001000,
    0x00080000, 0x00800000, 0x00020000, 0x00080000, 0x00040000, 0x00000200,
    0x00000020, 0x00020000, 0x00080000, 0x08000000, 0x80000008, 0x00000020,
    0x04000000, 0x00304040, 0x80000000, 0x20000000, 0x80000000, 0x00000100,
    0x00008000, 0x00008000, 0x80000000, 0x08000000, 0x04000000, 0x00001000,
    0x02000000, 0x04000000, 0x00400000, 0x10001000, 0x00040000, 0x00800000,
    0x80010000, 0x10000000, 0x01000000, 0x02000000, 0x04000000, 0x00014000,
    0x02000200, 0x80000000, 0x00000080, 0x04000000, 0x00000801, 0x40000000,
    0x00080000, 0x00000001, 0x00010000, 0x00008000};
    }

    const static UnicodeSet fu_Set{const_cast<UnicodeSet::run_t *>(__fu_Set_runs), 569, 0, const_cast<UnicodeSet::bitquad_t *>(__fu_Set_quads), 376, 0};

    /** Code Point Ranges for gua
    [34e1, 34e1], [39d3, 39d3], [3c59, 3c59], [4028, 4028], [4211, 4211],
    [43e6, 43e6], [44b7, 44b7], [4ada, 4ada], [4bcf, 4bcf], [518e, 518e],
    [526e, 526e], [5280, 5280], [5366, 5366], [5471, 5471], [54b6, 54b6],
    [54bc, 54bc], [576c, 576c], [5be1, 5be1], [60f4, 60f4], [6302, 6302],
    [6356, 6356], [64d6, 64d6], [6b44, 6b44], [713b, 713b], [7171, 7171],
    [74dc, 74dc], [7d53, 7d53], [7dfa, 7dfa], [7f63, 7f63], [7f6b, 7f6b],
    [80cd, 80cd], [820c, 820c], [82fd, 82fd], [88bf, 88bf], [8902, 8902],
    [8a7f, 8a7f], [8ae3, 8ae3], [8d8f, 8d8f], [8e3b, 8e3b], [929b, 929b],
    [92bd, 92bd], [98b3, 98b3], [9a27, 9a27], [9d30, 9d30], [201a3, 201a3],
    [20225, 20225], [202b0, 202b0], [2067c, 2067c], [206d2, 206d2],
    [20735, 20735], [207d7, 207d7], [20ba0, 20ba0], [20bd1, 20bd1],
    [20d6f, 20d6f], [21701, 21701], [2317b, 2317b], [2419c, 2419c],
    [2513c, 2513c], [25213, 25213], [25752, 25752], [27910, 27910],
    [27ffc, 27ffc], [28d43, 28d43], [2988d, 2988d], [29ece, 29ece],
    [2a1dc, 2a1dc]**/


    namespace {
    const static UnicodeSet::run_t __gua_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 34},
    {Mixed, 2}, {Empty, 47}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 2851}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 30},
    {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 76}, {Mixed, 1},
    {Empty, 210}, {Mixed, 1}, {Empty, 128}, {Mixed, 1}, {Empty, 124},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 269}, {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 106},
    {Mixed, 1}, {Empty, 89}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 29425}};
    const static UnicodeSet::bitquad_t  __gua_Set_quads[] = {
    0x00000002, 0x00080000, 0x02000000, 0x00000100, 0x00020000, 0x00000040,
    0x00800000, 0x04000000, 0x00008000, 0x00004000, 0x00004000, 0x00000001,
    0x00000040, 0x00020000, 0x10400000, 0x00001000, 0x00000002, 0x00100000,
    0x00000004, 0x00400000, 0x00400000, 0x00000010, 0x08000000, 0x00020000,
    0x10000000, 0x00080000, 0x04000000, 0x00000808, 0x00002000, 0x00001000,
    0x20000000, 0x80000000, 0x00000004, 0x80000000, 0x00000008, 0x00008000,
    0x08000000, 0x08000000, 0x20000000, 0x00080000, 0x00000080, 0x00010000,
    0x00000008, 0x00000020, 0x00010000, 0x10000000, 0x00040000, 0x00200000,
    0x00800000, 0x00000001, 0x00020000, 0x00008000, 0x00000002, 0x08000000,
    0x10000000, 0x10000000, 0x00080000, 0x00040000, 0x00010000, 0x10000000,
    0x00000008, 0x00002000, 0x00004000, 0x10000000};
    }

    const static UnicodeSet gua_Set{const_cast<UnicodeSet::run_t *>(__gua_Set_runs), 123, 0, const_cast<UnicodeSet::bitquad_t *>(__gua_Set_quads), 64, 0};

    /** Code Point Ranges for luo
    [34e2, 34e2], [350f, 350f], [3785, 3785], [39ac, 39ac], [3a61, 3a61],
    [3abe, 3abe], [3c01, 3c01], [3c7b, 3c7b], [3e39, 3e39], [3f08, 3f08],
    [3f4b, 3f4b], [3fa7, 3fa7], [3fda, 3fda], [4029, 4029], [40d5, 40d5],
    [41d4, 41d4], [4237, 4237], [4253, 4253], [42a8, 42a8], [4334, 4334],
    [438a, 438a], [45cd, 45cd], [4b91, 4b91], [4d39, 4d39], [5138, 5138],
    [513d, 513d], [5246, 5246], [54af, 54af], [56c9, 56c9], [5cc8, 5cc8],
    [633c, 633c], [634b, 634b], [6370, 6370], [645e, 645e], [650e, 650e],
    [651e, 651e], [652d, 652d], [66ea, 66ea], [679c, 679c], [683c, 683c],
    [6a02, 6a02], [6a50, 6a50], [6adf, 6adf], [6b0f, 6b0f], [6b19, 6b19],
    [6d1b, 6d1b], [6f2f, 6f2f], [6ffc, 6ffc], [70d9, 70d9], [720d, 720d],
    [7296, 7296], [7313, 7313], [7380, 7380], [73de, 73de], [7630, 7630],
    [7673, 7673], [76aa, 76aa], [7822, 7822], [784c, 784c], [7866, 7866],
    [788c, 788c], [792b, 792b], [7b3f, 7b3f], [7c6e, 7c6e], [7d61, 7d61],
    [7e99, 7e99], [7f85, 7f85], [8161, 8161], [81dd, 81dd], [8316, 8316],
    [843d, 843d], [84cf, 84cf], [863f, 863f], [86d2, 86d2], [873e, 873e],
    [8778, 8778], [87ba, 87ba], [8803, 8803], [8821, 8821], [88bc, 88bc],
    [88f8, 88f8], [89b6, 89b6], [89bc, 89bc], [8a7b, 8a7b], [8def, 8def],
    [8e92, 8e92], [8eb6, 8eb6], [908f, 908f], [916a, 916a], [927b, 927b],
    [93af, 93af], [947c, 947c], [96d2, 96d2], [9831, 9831], [9960, 9960],
    [99f1, 99f1], [9a3e, 9a3e], [9ba5, 9ba5], [9c73, 9c73], [9d45, 9d45],
    [9e01, 9e01], [203e2, 203e2], [20716, 20716], [20db1, 20db1],
    [20ed0, 20ed0], [20ee1, 20ee1], [21046, 21046], [21186, 21186],
    [21922, 21922], [21fcf, 21fcf], [2217e, 2217e], [22e86, 22e86],
    [22e91, 22e91], [2307b, 2307b], [2309e, 2309e], [236d7, 236d7],
    [23704, 23704], [23722, 23722], [239f3, 239f3], [23a2a, 23a2a],
    [23d5f, 23d5f], [24137, 24137], [24516, 24516], [2451d, 2451d],
    [245c0, 245c0], [24a17, 24a17], [24b01, 24b01], [24f65, 24f65],
    [24f7c, 24f7c], [2585c, 2585c], [25bdb, 25bdb], [26181, 26181],
    [268c7, 268c7], [268d6, 268d6], [268db, 268db], [26fcc, 26fcc],
    [2713f, 2713f], [27226, 27226], [277cc, 277cc], [27b65, 27b65],
    [27df3, 27df3], [27e50, 27e50], [281fd, 281fd], [283d2, 283d2],
    [287e5, 287e5], [28b05, 28b05], [28c20, 28c20], [290a3, 290a3],
    [29259, 29259], [2929a, 2929a], [2932d, 2932d], [2936a, 2936a],
    [2938a, 2938a], [29bb9, 29bb9], [29d47, 29d47], [29f0a, 29f0a],
    [29f70, 29f70], [2a1f1, 2a1f1], [2a230, 2a230], [2a333, 2a333],
    [2a386, 2a386], [2a44b, 2a44b]**/


    namespace {
    const static UnicodeSet::run_t __luo_Set_runs[] = {
    {Empty, 423}, {Mixed, 2}, {Empty, 19}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 50}, {Mixed, 3}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 4}, {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2862},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 52}, {Mixed, 1},
    {Empty, 8}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 60}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 104}, {Mixed, 1}, {Empty, 14}, {Mixed, 2},
    {Empty, 49}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 21},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 70}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 57}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 64}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 29405}};
    const static UnicodeSet::bitquad_t  __luo_Set_quads[] = {
    0x00000004, 0x00008000, 0x00000020, 0x00001000, 0x00000002, 0x40000000,
    0x00000002, 0x08000000, 0x02000000, 0x00000100, 0x00000800, 0x00000080,
    0x04000000, 0x00000200, 0x00200000, 0x00100000, 0x00800000, 0x00080000,
    0x00000100, 0x00100000, 0x00000400, 0x00002000, 0x00020000, 0x02000000,
    0x21000000, 0x00000040, 0x00008000, 0x00000200, 0x00000100, 0x10000000,
    0x00000800, 0x00010000, 0x40000000, 0x40004000, 0x00002000, 0x00000400,
    0x10000000, 0x10000000, 0x00000004, 0x00010000, 0x80000000, 0x02008000,
    0x08000000, 0x00008000, 0x10000000, 0x02000000, 0x00002000, 0x00400000,
    0x00080000, 0x00000001, 0x40000000, 0x00010000, 0x00080000, 0x00000400,
    0x00000004, 0x00001000, 0x00000040, 0x00001000, 0x00000800, 0x80000000,
    0x00004000, 0x00000002, 0x02000000, 0x00000020, 0x00000002, 0x20000000,
    0x00400000, 0x20000000, 0x00008000, 0x80000000, 0x00040000, 0x40000000,
    0x01000000, 0x04000000, 0x00000008, 0x00000002, 0x10000000, 0x01000000,
    0x10400000, 0x08000000, 0x00008000, 0x00040000, 0x00400000, 0x00008000,
    0x00000400, 0x08000000, 0x00008000, 0x10000000, 0x00040000, 0x00020000,
    0x00000001, 0x00020000, 0x40000000, 0x00000020, 0x00080000, 0x00000020,
    0x00000002, 0x00000004, 0x00400000, 0x00020000, 0x00010000, 0x00000002,
    0x00000040, 0x00000040, 0x00000004, 0x00008000, 0x40000000, 0x00020040,
    0x08000000, 0x40000000, 0x00800000, 0x00000010, 0x00000004, 0x00080000,
    0x00000400, 0x80000000, 0x00800000, 0x20400000, 0x00000001, 0x00800000,
    0x00000002, 0x10000020, 0x10000000, 0x08000000, 0x00000002, 0x08400080,
    0x00001000, 0x80000000, 0x00000040, 0x00001000, 0x00000020, 0x00080000,
    0x00010000, 0x20000000, 0x00040000, 0x00000020, 0x00000020, 0x00000001,
    0x00000008, 0x02000000, 0x04000000, 0x00002000, 0x00000400, 0x00000400,
    0x02000000, 0x00000080, 0x00000400, 0x00010000, 0x00020000, 0x00010000,
    0x00080000, 0x00000040, 0x00000800};
    }

    const static UnicodeSet luo_Set{const_cast<UnicodeSet::run_t *>(__luo_Set_runs), 277, 0, const_cast<UnicodeSet::bitquad_t *>(__luo_Set_quads), 153, 0};

    /** Code Point Ranges for ge
    [34e3, 34e3], [35b5, 35b5], [35c6, 35c6], [3837, 3837], [390e, 390e],
    [39b4, 39b4], [3abe, 3abe], [3b58, 3b58], [3d67, 3d67], [4165, 4165],
    [4213, 4213], [4505, 4505], [45d8, 45d8], [46ff, 46ff], [48ec, 48ec],
    [49c4, 49c4], [4a23, 4a23], [4a50, 4a50], [4a61, 4a61], [4ae6, 4ae6],
    [4b23, 4b23], [4c1b, 4c1b], [4e2a, 4e2a], [4ecb, 4ecb], [4ee1, 4ee1],
    [4f6b, 4f6b], [4f6e, 4f6e], [500b, 500b], [5047, 5047], [5272, 5272],
    [530c, 530c], [53ef, 53ef], [5404, 5404], [5408, 5408], [5424, 5424],
    [5444, 5444], [54af, 54af], [54e5, 54e5], [54ff, 54ff], [55dd, 55dd],
    [5605, 5605], [5676, 5676], [572a, 572a], [5865, 5865], [5c79, 5c79],
    [6105, 6105], [6208, 6208], [6213, 6213], [6228, 6228], [6262, 6262],
    [630c, 630c], [643f, 643f], [64d6, 64d6], [64f1, 64f1], [675a, 675a],
    [683c, 683c], [69c5, 69c5], [6b4c, 6b4c], [6d69, 6d69], [6ec6, 6ec6],
    [6ed2, 6ed2], [726b, 726b], [72b5, 72b5], [7332, 7332], [7366, 7366],
    [7599, 7599], [781d, 781d], [784c, 784c], [79f4, 79f4], [7b87, 7b87],
    [7d07, 7d07], [8090, 8090], [80f3, 80f3], [8188, 8188], [81c8, 81c8],
    [81f5, 81f5], [8238, 8238], [8316, 8316], [83cf, 83cf], [845b, 845b],
    [84cb, 84cb], [867c, 867c], [86d2, 86d2], [86e4, 86e4], [88bc, 88bc],
    [88d3, 88d3], [89e1, 89e1], [8a65, 8a65], [8afd, 8afd], [8f35, 8f35],
    [8f55, 8f55], [9240, 9240], [927b, 927b], [927f, 927f], [9391, 9391],
    [9398, 9398], [93b6, 93b6], [9598, 9598], [95a3, 95a4], [9694, 9694],
    [9769, 9769], [9788, 9788], [97b7, 97b7], [97d0, 97d0], [97da, 97da],
    [981c, 981c], [9a14, 9a14], [9abc, 9abc], [9ac2, 9ac2], [9b32, 9b32],
    [9b7a, 9b7a], [9ba5, 9ba5], [9baf, 9baf], [9c2a, 9c2a], [9d10, 9d10],
    [9d1a, 9d1a], [9d3f, 9d3f], [9d45, 9d45], [206ca, 206ca],
    [20beb, 20beb], [20cb1, 20cb1], [20e32, 20e32], [20e53, 20e53],
    [20e9d, 20e9d], [217cd, 217cd], [2210d, 2210d], [2219c, 2219c],
    [22384, 22384], [224dc, 224dc], [2284d, 2284d], [229e7, 229e7],
    [22a53, 22a53], [22bf9, 22bf9], [22f1b, 22f1b], [23b5d, 23b5d],
    [241de, 241de], [24552, 24552], [2470a, 2470a], [24807, 24807],
    [24a72, 24a72], [24b7b, 24b7b], [24c19, 24c19], [25245, 25245],
    [258b8, 258b8], [25c2e, 25c2e], [25d29, 25d29], [25e8a, 25e8a],
    [2645c, 2645c], [264f1, 264f1], [26a1c, 26a1c], [2720c, 2720c],
    [27211, 27211], [27216, 27216], [272a7, 272a7], [273ba, 273ba],
    [275f6, 275f6], [27a9e, 27a9e], [27fe9, 27fe9], [2836e, 2836e],
    [283da, 283da], [283f4, 283f4], [28425, 28425], [28746, 28746],
    [2879b, 2879b], [287f6, 287f6], [28b5b, 28b5b], [28f25, 28f25],
    [28f93, 28f93], [2938e, 2938e], [29885, 29885], [2989b, 2989b],
    [29a18, 29a18], [29e7a, 29e7a], [29e7f, 29e7f], [29f19, 29f19],
    [29fb7, 29fb7], [2a001, 2a001], [2a009, 2a009], [2a10e, 2a10e],
    [2a323, 2a323]**/


    namespace {
    const static UnicodeSet::run_t __ge_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 18},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 4}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 13}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 33}, {Mixed, 2},
    {Empty, 23}, {Mixed, 2}, {Empty, 8}, {Mixed, 2}, {Empty, 14},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 4}, {Empty, 1},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 3}, {Empty, 2891}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 73}, {Mixed, 1},
    {Empty, 73}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 97}, {Mixed, 1},
    {Empty, 51}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 50}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 63},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 29414}};
    const static UnicodeSet::bitquad_t  __ge_Set_quads[] = {
    0x00000008, 0x00200000, 0x00000040, 0x00800000, 0x00004000, 0x00100000,
    0x40000000, 0x01000000, 0x00000080, 0x00000020, 0x00080000, 0x00000020,
    0x01000000, 0x80000000, 0x00001000, 0x00000010, 0x00000008, 0x00010000,
    0x00000002, 0x00000040, 0x00000008, 0x08000000, 0x00000400, 0x00000800,
    0x00000002, 0x00004800, 0x00000800, 0x00000080, 0x00040000, 0x00001000,
    0x00008000, 0x00000110, 0x00000010, 0x00000010, 0x00008000, 0x80000020,
    0x20000000, 0x00000020, 0x00400000, 0x00000400, 0x00000020, 0x02000000,
    0x00000020, 0x00080100, 0x00000100, 0x00000004, 0x00001000, 0x80000000,
    0x00400000, 0x00020000, 0x04000000, 0x10000000, 0x00000020, 0x00001000,
    0x00000200, 0x00040040, 0x00000800, 0x00200000, 0x00040000, 0x00000040,
    0x02000000, 0x20000000, 0x00001000, 0x00100000, 0x00000080, 0x00000080,
    0x00010000, 0x00080000, 0x00000100, 0x00000100, 0x00200000, 0x01000000,
    0x00400000, 0x00008000, 0x08000000, 0x00000800, 0x10000000, 0x00040000,
    0x00000010, 0x10000000, 0x00080000, 0x00000002, 0x00000020, 0x20000000,
    0x00200000, 0x00200000, 0x00000001, 0x88000000, 0x01020000, 0x00400000,
    0x01000000, 0x00000018, 0x00100000, 0x00000200, 0x00000100, 0x00800000,
    0x04010000, 0x10000000, 0x00100000, 0x10000000, 0x00000004, 0x00040000,
    0x04000000, 0x00008020, 0x00000400, 0x04010000, 0x80000000, 0x00000020,
    0x00000400, 0x00000800, 0x00020000, 0x00040000, 0x00080000, 0x20000000,
    0x00002000, 0x00002000, 0x10000000, 0x00000010, 0x10000000, 0x00002000,
    0x00000080, 0x00080000, 0x02000000, 0x08000000, 0x20000000, 0x40000000,
    0x00040000, 0x00000400, 0x00000080, 0x00040000, 0x08000000, 0x02000000,
    0x00000020, 0x01000000, 0x00004000, 0x00000200, 0x00000400, 0x10000000,
    0x00020000, 0x10000000, 0x00421000, 0x00000080, 0x04000000, 0x00400000,
    0x40000000, 0x00000200, 0x00004000, 0x04000000, 0x00100000, 0x00000020,
    0x00000040, 0x08000000, 0x00400000, 0x08000000, 0x00000020, 0x00080000,
    0x00004000, 0x08000020, 0x01000000, 0x84000000, 0x02000000, 0x00800000,
    0x00000202, 0x00004000, 0x00000008};
    }

    const static UnicodeSet ge_Set{const_cast<UnicodeSet::run_t *>(__ge_Set_runs), 283, 0, const_cast<UnicodeSet::bitquad_t *>(__ge_Set_quads), 165, 0};

    /** Code Point Ranges for bai
    [34e6, 34e6], [3525, 3525], [35d1, 35d1], [3814, 3814], [39f3, 39f3],
    [3fdf, 3fdf], [4494, 4494], [480b, 480b], [4899, 4899], [4ab9, 4ab9],
    [4cc6, 4cc6], [4f70, 4f70], [5504, 5504], [5561, 5561], [5e8d, 5e8d],
    [6252, 6252], [62dc, 62dc], [6300, 6300], [636d, 636d], [6392, 6392],
    [63b0, 63b0], [64fa, 64fa], [6557, 6557], [67cf, 67cf], [6d3e, 6d3e],
    [7308, 7308], [767d, 767e], [7a17, 7a17], [7cba, 7cba], [7d54, 7d54],
    [7f77, 7f77], [859c, 859c], [896c, 896c], [9781, 9781], [97b4, 97b4],
    [97db, 97db], [207fb, 207fb], [20adb, 20adb], [20ba0, 20ba0],
    [213ef, 213ef], [21b62, 21b62], [22215, 22215], [226de, 226de],
    [239d9, 239d9], [24063, 24063], [24645, 24645], [24f79, 24f79],
    [25b1d, 25b1d], [268fa, 268fb], [26a4b, 26a4b], [26cde, 26cde],
    [280c5, 280c5], [292c2, 292c2], [293bb, 293bb], [293de, 293de],
    [29462, 29462]**/


    namespace {
    const static UnicodeSet::run_t __bai_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 72}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 3}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 46},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 112}, {Mixed, 3}, {Empty, 2944}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 65}, {Mixed, 1},
    {Empty, 59}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 151}, {Mixed, 1}, {Empty, 52}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 92},
    {Mixed, 1}, {Empty, 110}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 159}, {Mixed, 1}, {Empty, 143},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 29532}};
    const static UnicodeSet::bitquad_t  __bai_Set_quads[] = {
    0x00000040, 0x00000020, 0x00020000, 0x00100000, 0x00080000, 0x80000000,
    0x00100000, 0x00000800, 0x02000000, 0x02000000, 0x00000040, 0x00010000,
    0x00000010, 0x00000002, 0x00002000, 0x00040000, 0x10000000, 0x00000001,
    0x00002000, 0x00040000, 0x00010000, 0x04000000, 0x00800000, 0x00008000,
    0x40000000, 0x00000100, 0x60000000, 0x00800000, 0x04000000, 0x00100000,
    0x00800000, 0x10000000, 0x00001000, 0x00000002, 0x00100000, 0x08000000,
    0x08000000, 0x08000000, 0x00000001, 0x00008000, 0x00000004, 0x00200000,
    0x40000000, 0x02000000, 0x00000008, 0x00000020, 0x02000000, 0x20000000,
    0x0c000000, 0x00000800, 0x40000000, 0x00000020, 0x00000004, 0x08000000,
    0x40000000, 0x00000004};
    }

    const static UnicodeSet bai_Set{const_cast<UnicodeSet::run_t *>(__bai_Set_runs), 103, 0, const_cast<UnicodeSet::bitquad_t *>(__bai_Set_quads), 56, 0};

    /** Code Point Ranges for gan
    [34e7, 34e7], [3536, 3536], [390c, 390c], [3da5, 3da5], [3e82, 3e82],
    [3ffb, 3ffb], [40ed, 40ed], [41de, 41de], [42bb, 42bb], [4917, 4917],
    [4cba, 4cba], [4d5f, 4d5f], [4e2a, 4e2a], [4e7e, 4e7e], [4e81, 4e81],
    [4ee0, 4ee0], [4f44, 4f44], [501d, 501d], [51ce, 51ce], [5481, 5481],
    [5769, 5769], [5978, 5978], [5c32, 5c32], [5c37, 5c37], [5e72, 5e72],
    [5e79, 5e79], [5fd3, 5fd3], [611f, 611f], [625e, 625e], [634d, 634d],
    [64c0, 64c0], [653c, 653c], [6562, 6562], [65f0, 65f0], [6746, 6746],
    [67d1, 67d1], [687f, 687f], [69a6, 69a6], [6a44, 6a44], [6a8a, 6a8a],
    [6c57, 6c57], [6c75, 6c75], [6cd4, 6cd4], [6d5b, 6d5b], [6de6, 6de6],
    [6f27, 6f27], [6f89, 6f89], [7068, 7068], [7395, 7395], [73b5, 73b5],
    [7518, 7518], [75b3, 75b3], [76af, 76af], [76f0, 76f0], [77f8, 77f8],
    [79c6, 79c6], [7a08, 7a08], [7aff, 7aff], [7b34, 7b34], [7b78, 7b78],
    [7be2, 7be2], [7c33, 7c33], [7c93, 7c93], [7d3a, 7d3a], [809d, 809d],
    [8289, 8289], [82f7, 82f7], [8677, 8677], [8866, 8866], [8a4c, 8a4c],
    [8af4, 8af4], [8c43, 8c43], [8d1b, 8d1b], [8d76, 8d76], [8d95, 8d95],
    [8fc0, 8fc0], [9150, 9150], [91ec, 91ec], [930e, 930e], [98e6, 98e6],
    [9aad, 9aad], [9b50, 9b50], [9c14, 9c14], [9c64, 9c64], [9cf1, 9cf1],
    [201f5, 201f5], [205ab, 205ab], [20974, 20974], [20fd1, 20fd1],
    [21bcb, 21bcb], [21d91, 21d91], [22057, 22057], [229c0, 229c0],
    [23056, 23056], [23199, 23199], [235f2, 235f2], [23620, 23620],
    [23996, 23996], [23c26, 23c26], [23d77, 23d77], [23d7c, 23d7c],
    [23e5f, 23e5f], [24339, 24339], [24b59, 24b59], [24bbd, 24bbd],
    [24bcc, 24bcc], [25575, 25575], [2560f, 2560f], [25e21, 25e21],
    [25f8d, 25f8d], [26aa7, 26aa7], [26f2e, 26f2e], [26fae, 26fae],
    [27190, 27190], [27e73, 27e73], [27fb2, 27fb2], [2874c, 2874c],
    [288dd, 288dd], [28cfc, 28cfc], [29250, 29250], [295a6, 295a6],
    [296b5, 296b5], [298a8, 298a8], [29b1a, 29b1a], [29d01, 29d01],
    [29d35, 29d35], [29e78, 29e78], [2a266, 2a266], [2a27f, 2a27f],
    [2a284, 2a284], [2a287, 2a287], [2a506, 2a506], [2a6ac, 2a6ac]**/


    namespace {
    const static UnicodeSet::run_t __gan_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 24}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 17}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 46},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2855}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 95}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 75},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 64}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 76}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 64}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 88},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 102}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 31}, {Mixed, 2}, {Empty, 19}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 29386}};
    const static UnicodeSet::bitquad_t  __gan_Set_quads[] = {
    0x00000080, 0x00400000, 0x00001000, 0x00000020, 0x00000004, 0x08000000,
    0x00002000, 0x40000000, 0x08000000, 0x00800000, 0x04000000, 0x80000000,
    0x00000400, 0x40000000, 0x00000002, 0x00000001, 0x00000010, 0x20000000,
    0x00004000, 0x00000002, 0x00000200, 0x01000000, 0x00840000, 0x02040000,
    0x00080000, 0x80000000, 0x40000000, 0x00002000, 0x00000001, 0x10000000,
    0x00000004, 0x00010000, 0x00000040, 0x00020000, 0x80000000, 0x00000040,
    0x00000010, 0x00000400, 0x00800000, 0x00200000, 0x00100000, 0x08000000,
    0x00000040, 0x00000080, 0x00000200, 0x00000100, 0x00200000, 0x00200000,
    0x01000000, 0x00080000, 0x00008000, 0x00010000, 0x01000000, 0x00000040,
    0x00000100, 0x80000000, 0x00100000, 0x01000000, 0x00000004, 0x00080000,
    0x00080000, 0x04000000, 0x20000000, 0x00000200, 0x00800000, 0x00800000,
    0x00000040, 0x00001000, 0x00100000, 0x00000008, 0x08000000, 0x00400000,
    0x00200000, 0x00000001, 0x00010000, 0x00001000, 0x00004000, 0x00000040,
    0x00002000, 0x00010000, 0x00100000, 0x00000010, 0x00020000, 0x00200000,
    0x00000800, 0x00100000, 0x00020000, 0x00000800, 0x00020000, 0x00800000,
    0x00000001, 0x00400000, 0x02000000, 0x00040000, 0x00000001, 0x00400000,
    0x00000040, 0x10800000, 0x80000000, 0x02000000, 0x02000000, 0x20000000,
    0x00001000, 0x00200000, 0x00008000, 0x00000002, 0x00002000, 0x00000080,
    0x00004000, 0x00004000, 0x00010000, 0x00080000, 0x00040000, 0x00001000,
    0x20000000, 0x10000000, 0x00010000, 0x00000040, 0x00200000, 0x00000100,
    0x04000000, 0x00000002, 0x00200000, 0x01000000, 0x80000040, 0x00000090,
    0x00000040, 0x00001000};
    }

    const static UnicodeSet gan_Set{const_cast<UnicodeSet::run_t *>(__gan_Set_runs), 243, 0, const_cast<UnicodeSet::bitquad_t *>(__gan_Set_quads), 128, 0};

    /** Code Point Ranges for xuan
    [34e9, 34e9], [352f, 352f], [3535, 3535], [3623, 3623], [3741, 3741],
    [398f, 398f], [39a5, 39a5], [39cb, 39cb], [39e6, 39e6], [3a4a, 3a4a],
    [3bc0, 3bc0], [3cec, 3cec], [3e61, 3e61], [3ef9, 3ef9], [3efd, 3efd],
    [400f, 400f], [4054, 4054], [4062, 4062], [40e0, 40e0], [41ad, 41ad],
    [4357, 4357], [437b, 437b], [4629, 4629], [4699, 4699], [46ad, 46ad],
    [46af, 46af], [46f9, 46f9], [4853, 4853], [4863, 4863], [4a59, 4a59],
    [4b84, 4b84], [4c82, 4c82], [4cbb, 4cbb], [4ce6, 4ce6], [4d09, 4d09],
    [4d0b, 4d0b], [4e98, 4e98], [5107, 5107], [5238, 5238], [5405, 5405],
    [54ba, 54ba], [559b, 559b], [55a7, 55a7], [5847, 5847], [5910, 5910],
    [59b6, 59b6], [59f0, 59f0], [5a97, 5a97], [5ad9, 5ad9], [5b1b, 5b1b],
    [5ba3, 5ba3], [5f32, 5f32], [6030, 6030], [6103, 6103], [610b, 610b],
    [61c1, 61c1], [61f8, 61f8], [63c8, 63c8], [63ce, 63ce], [64b0, 64b0],
    [64d0, 64d0], [65cb, 65cb], [660d, 660d], [6615, 6615], [6621, 6621],
    [6645, 6645], [6684, 6685], [6696, 6696], [66b6, 66b6], [688b, 688b],
    [6965, 6966], [6a88, 6a88], [6ceb, 6ceb], [6d35, 6d35], [6d93, 6d93],
    [6e32, 6e32], [6ecb, 6ecb], [6f29, 6f29], [6fb4, 6fb4], [70ab, 70ab],
    [70dc, 70dc], [7147, 7147], [714a, 714a], [7156, 7156], [72df, 72df],
    [7384, 7384], [7386, 7386], [73b9, 73b9], [7401, 7401], [7404, 7404],
    [7444, 7444], [7487, 7487], [74bf, 74bf], [74ca, 74ca], [75c3, 75c3],
    [766c, 766c], [76e4, 76e4], [7729, 7729], [7734, 7734], [777b, 777b],
    [77ce, 77ce], [79a4, 79a4], [7bae, 7bae], [7d43, 7d43], [7d62, 7d62],
    [7d79, 7d79], [7e23, 7e23], [7e3c, 7e3c], [7e4f, 7e4f], [7fe7, 7fe7],
    [7ffe, 7ffe], [8431, 8432], [84d2, 84d2], [8519, 8519], [8701, 8701],
    [870e, 870e], [8756, 8756], [8809, 8809], [8852, 8852], [88a8, 88a8],
    [8ae0, 8ae0], [8afc, 8afc], [8b5e, 8b5e], [8d19, 8d19], [8ed2, 8ed2],
    [9078, 9078], [9084, 9084], [9249, 9249], [92d7, 92d7], [9379, 9379],
    [93c7, 93c7], [9436, 9436], [9799, 9799], [9848, 9848], [98b4, 98b4],
    [994c, 994c], [99e8, 99e8], [99fd, 99fd], [205fb, 205fb],
    [208d6, 208d6], [20930, 20930], [2095e, 2095e], [20d77, 20d77],
    [21223, 21223], [21234, 21234], [21b33, 21b33], [21fa5, 21fa5],
    [22084, 22084], [221af, 221af], [2220b, 2220b], [223e7, 223e7],
    [22642, 22642], [22c0a, 22c0a], [22cc4, 22cc4], [22fcc, 22fcc],
    [23256, 23256], [23393, 23393], [237f3, 237f3], [240bf, 240bf],
    [247ff, 247ff], [2532d, 2532d], [2597e, 2597e], [25db7, 25db7],
    [26314, 26314], [2643d, 2643d], [26459, 26459], [266d4, 266d4],
    [2724e, 2724e], [27417, 27417], [27469, 27469], [27524, 27524],
    [2773d, 2773d], [277e8, 277e8], [2785a, 2785a], [27862, 27862],
    [2790e, 2790e], [27b66, 27b66], [27e3e, 27e3e], [27f86, 27f86],
    [27f8e, 27f8e], [27fa9, 27fa9], [2802e, 2802e], [28041, 28041],
    [282bc, 282bc], [283c2, 283c2], [28e46, 28e46], [290da, 290da],
    [29265, 29265], [292e2, 292e2], [292eb, 292eb], [292f1, 292f1],
    [29479, 29479], [29556, 29556], [2956a, 2956a], [29612, 29612],
    [29662, 29662], [2967d, 2967d], [297c1, 297c1], [29921, 29921],
    [2a367, 2a367]**/


    namespace {
    const static UnicodeSet::run_t __xuan_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 17}, {Mixed, 4}, {Empty, 2},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 21}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 2},
    {Empty, 14}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 2},
    {Empty, 1}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 20}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 1},
    {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 5}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 2911}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 32}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 71}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 69}, {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 89},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 19},
    {Mixed, 1}, {Empty, 91}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 10},
    {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 83}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 81}, {Mixed, 1}, {Empty, 29412}};
    const static UnicodeSet::bitquad_t  __xuan_Set_quads[] = {
    0x00000200, 0x00208000, 0x00000008, 0x00000002, 0x00008000, 0x00000020,
    0x00000800, 0x00000040, 0x00000400, 0x00000001, 0x00001000, 0x00000002,
    0x22000000, 0x00008000, 0x00100000, 0x00000004, 0x00000001, 0x00002000,
    0x00800000, 0x08000000, 0x00000200, 0x02000000, 0x0000a000, 0x02000000,
    0x00080000, 0x00000008, 0x02000000, 0x00000010, 0x00000004, 0x08000000,
    0x00000040, 0x00000a00, 0x01000000, 0x00000080, 0x01000000, 0x00000020,
    0x04000000, 0x08000000, 0x00000080, 0x00000080, 0x00010000, 0x00400000,
    0x00010000, 0x00800000, 0x02000000, 0x08000000, 0x00000008, 0x00040000,
    0x00010000, 0x00000808, 0x00000002, 0x01000000, 0x00004100, 0x00010000,
    0x00010000, 0x00000800, 0x00202000, 0x00000002, 0x00000020, 0x00400030,
    0x00400000, 0x00000800, 0x00000060, 0x00000100, 0x00000800, 0x00200000,
    0x00080000, 0x00040000, 0x00000800, 0x00000200, 0x00100000, 0x00000800,
    0x10000000, 0x00400480, 0x80000000, 0x00000050, 0x02000000, 0x00000012,
    0x00000010, 0x00000080, 0x80000000, 0x00000400, 0x00000008, 0x00001000,
    0x00000010, 0x00100200, 0x08000000, 0x00004000, 0x00000010, 0x00004000,
    0x00000008, 0x02000004, 0x10000008, 0x00008000, 0x40000080, 0x00060000,
    0x00040000, 0x02000000, 0x00004002, 0x00400000, 0x00000200, 0x00040000,
    0x00000100, 0x10000001, 0x40000000, 0x02000000, 0x00040000, 0x01000000,
    0x00000010, 0x00000200, 0x00800000, 0x02000000, 0x00000080, 0x00400000,
    0x02000000, 0x00000100, 0x00100000, 0x00001000, 0x20000100, 0x08000000,
    0x00400000, 0x00010000, 0x40000000, 0x00800000, 0x00100008, 0x00080000,
    0x00000020, 0x00000010, 0x00008000, 0x00000800, 0x00000080, 0x00000004,
    0x00000400, 0x00000010, 0x00001000, 0x00400000, 0x00080000, 0x00080000,
    0x80000000, 0x80000000, 0x00002000, 0x40000000, 0x00800000, 0x00100000,
    0x20000000, 0x02000000, 0x00100000, 0x00004000, 0x00800000, 0x00000200,
    0x00000010, 0x20000000, 0x00000100, 0x04000000, 0x00000004, 0x00004000,
    0x00000040, 0x40000000, 0x00004040, 0x00000200, 0x00004000, 0x00000002,
    0x10000000, 0x00000004, 0x00000040, 0x04000000, 0x00000020, 0x00020804,
    0x02000000, 0x00400000, 0x00000400, 0x00040000, 0x20000004, 0x00000002,
    0x00000002, 0x00000080};
    }

    const static UnicodeSet xuan_Set{const_cast<UnicodeSet::run_t *>(__xuan_Set_runs), 297, 0, const_cast<UnicodeSet::bitquad_t *>(__xuan_Set_quads), 176, 0};

    /** Code Point Ranges for jie
    [34e9, 34e9], [353e, 353e], [36c3, 36c3], [374f, 374f], [378f, 378f],
    [380e, 380e], [3839, 3839], [3847, 3847], [39a2, 39a2], [3af8, 3af8],
    [3bae, 3bae], [3e05, 3e05], [3f2a, 3f2a], [3f8f, 3f8f], [4037, 4037],
    [4039, 4039], [4053, 4053], [40b6, 40b6], [40c8, 40c8], [4165, 4165],
    [4316, 4316], [4578, 4578], [48e0, 48e0], [495b, 495b], [4988, 4988],
    [4ad8, 4ad8], [4bf0, 4bf0], [4c99, 4c99], [4cb8, 4cb8], [4e2f, 4e2f],
    [4ea5, 4ea5], [4ecb, 4ecb], [4ef7, 4ef7], [501f, 501f], [5022, 5022],
    [5047, 5048], [5055, 5055], [5091, 5091], [50f9, 50f9], [52ab, 52ab],
    [52bc, 52bc], [536a, 536a], [5424, 5424], [5527, 5527], [5536, 5536],
    [5551, 5551], [5588, 5588], [55df, 55df], [568c, 568c], [573e, 573e],
    [583a, 583a], [5951, 5951], [5979, 5979], [598e, 598e], [59d0, 59d0],
    [5a55, 5a55], [5a8e, 5a8e], [5a98, 5a98], [5ac5, 5ac5], [5b51, 5b51],
    [5bb6, 5bb6], [5c10, 5c10], [5c4a, 5c4a], [5c8a, 5c8a], [5d28, 5d28],
    [5d51, 5d51], [5d65, 5d65], [5db0, 5db0], [5dc0, 5dc0], [5dee, 5dee],
    [5e6f, 5e6f], [5e8e, 5e8e], [6088, 6088], [6212, 6212], [622a, 622a],
    [6262, 6262], [62c5, 62c5], [62ee, 62ee], [62fe, 62fe], [6377, 6377],
    [63a5, 63a5], [63ed, 63ed], [6429, 6429], [64f3, 64f3], [65ba, 65ba],
    [6605, 6605], [66a8, 66a8], [6770, 6770], [6840, 6840], [6854, 6854],
    [6904, 6904], [6950, 6950], [696c, 696c], [6976, 6977], [6982, 6982],
    [69a4, 69a4], [6a9e, 6a9e], [6aed, 6aed], [6bd1, 6bd1], [6d01, 6d01],
    [6d2f, 6d2f], [6e34, 6e34], [6e5d, 6e5d], [6ed0, 6ed0], [6f54, 6f54],
    [716f, 716f], [7297, 7297], [72e4, 72e4], [736c, 736c], [73a0, 73a0],
    [754c, 754c], [758c, 758c], [75a5, 75a5], [75ce, 75ce], [7664, 7664],
    [7686, 7686], [776b, 776b], [780e, 780e], [781d, 781d], [78a3, 78a3],
    [7956, 7956], [79f8, 79f8], [7a2d, 7a2d], [7aed, 7aed], [7bc0, 7bc0],
    [7c4d, 7c4d], [7d07, 7d07], [7d12, 7d12], [7d50, 7d50], [7d5c, 7d5c],
    [7f5d, 7f5d], [7faf, 7faf], [8024, 8024], [8125, 8125], [813b, 813b],
    [8250, 8250], [82a5, 82a5], [82f4, 82f4], [83ad, 83ad], [83e8, 83e8],
    [84f5, 84f5], [85c9, 85c9], [86a7, 86a7], [86e3, 86e3], [86f6, 86f6],
    [8710, 8710], [874d, 874d], [8754, 8754], [8818, 8818], [881e, 881e],
    [883d, 883d], [8857, 8857], [8871, 8871], [8878, 8878], [8893, 8893],
    [88b7, 88b7], [88ba, 88ba], [88d3, 88d3], [892f, 892f], [89e3, 89e3],
    [8a10, 8a10], [8a70, 8a70], [8aa1, 8aa1], [8ab1, 8ab1], [8ace, 8ace],
    [8b2f, 8b2f], [8d8c, 8d8c], [8df2, 8df2], [8e15, 8e15], [8ffc, 8ffc],
    [9263, 9263], [9347, 9347], [937b, 937b], [968e, 968e], [96c3, 96c3],
    [978a, 978a], [9821, 9821], [98f7, 98f7], [9ab1, 9ab1], [9afb, 9afb],
    [9b5d, 9b5d], [9b6a, 9b6a], [9b9a, 9b9a], [9d9b, 9d9b], [20088, 20088],
    [2010d, 2010d], [20142, 20142], [203bf, 203bf], [20409, 20409],
    [204e2, 204e2], [20664, 20664], [20b2e, 20b2e], [20bd9, 20bd9],
    [20cb5, 20cb5], [20ddf, 20ddf], [21277, 21277], [21523, 21523],
    [215e6, 215e6], [215f2, 215f2], [21663, 21663], [218ef, 218ef],
    [21a32, 21a32], [21a63, 21a63], [21d31, 21d31], [21d52, 21d52],
    [21d5a, 21d5a], [21e0e, 21e0e], [21f71, 21f71], [2223b, 2223b],
    [22394, 22394], [223a1, 223a1], [22882, 22882], [22a1c, 22a1c],
    [22a8d, 22a8d], [22ad0, 22ad0], [22b31, 22b31], [22b8c, 22b8c],
    [22c44, 22c44], [22d32, 22d32], [22dff, 22dff], [22eee, 22eee],
    [2319f, 2319f], [234c9, 234c9], [23674, 23674], [23683, 23683],
    [23b2b, 23b2b], [23b8c, 23b8d], [23c1e, 23c1e], [23ca1, 23ca1],
    [23cdf, 23cdf], [23d8f, 23d8f], [24062, 24062], [24626, 24626],
    [24669, 24669], [24b67, 24b67], [24b8c, 24b8c], [25042, 25042],
    [251d2, 251d2], [254d0, 254d0], [25754, 25754], [25765, 25765],
    [25839, 25839], [258bb, 258bb], [25d5e, 25d5e], [25deb, 25deb],
    [25f8c, 25f8c], [26013, 26013], [26016, 26016], [26049, 26049],
    [26230, 26230], [26392, 26392], [26768, 26768], [26d74, 26d74],
    [26ea2, 26ea2], [26fd0, 26fd0], [27267, 27267], [27360, 27360],
    [27369, 27369], [273e5, 273e5], [27705, 27705], [2779d, 2779d],
    [277a9, 277a9], [277ac, 277ac], [278cb, 278cb], [27a98, 27a98],
    [27ad1, 27ad1], [27f28, 27f28], [27f44, 27f44], [27f5f, 27f5f],
    [27fa2, 27fa2], [27faf, 27faf], [280f2, 280f2], [28411, 28411],
    [284f0, 284f0], [2857d, 2857d], [28942, 28942], [28d60, 28d60],
    [29504, 29504], [29605, 29605], [297e6, 297e6], [297f6, 297f6],
    [2987a, 2987a], [298b4, 298b4], [29a70, 29a70], [29bf0, 29bf0],
    [29fb6, 29fb6], [2a03e, 2a03e], [2a04d, 2a04d], [2a0c8, 2a0c8],
    [2a178, 2a178], [2a1f2, 2a1f2], [2a25a, 2a25a], [2a327, 2a327],
    [2a479, 2a479], [2a58b, 2a58b], [2a64f, 2a64f]**/


    namespace {
    const static UnicodeSet::run_t __jie_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 3}, {Empty, 10}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 8}, {Mixed, 3},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 3},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 4}, {Mixed, 3}, {Empty, 1}, {Mixed, 3}, {Empty, 3}, {Mixed, 2},
    {Empty, 15}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 4}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 7},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 4}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 7}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 14}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 24},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 15}, {Mixed, 1},
    {Empty, 2839}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 10}, {Mixed, 2}, {Empty, 38}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 36}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 4}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 39},
    {Mixed, 2}, {Empty, 37}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 34}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 60}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 29389}};
    const static UnicodeSet::bitquad_t  __jie_Set_quads[] = {
    0x00000200, 0x40000000, 0x00000008, 0x00008000, 0x00008000, 0x00004000,
    0x02000000, 0x00000080, 0x00000004, 0x01000000, 0x00004000, 0x00000020,
    0x00000400, 0x00008000, 0x02800000, 0x00080000, 0x00400000, 0x00000100,
    0x00000020, 0x00400000, 0x01000000, 0x00000001, 0x08000000, 0x00000100,
    0x01000000, 0x00010000, 0x02000000, 0x01000000, 0x00008000, 0x00000020,
    0x00000800, 0x00800000, 0x80000000, 0x00000004, 0x00200180, 0x00020000,
    0x02000000, 0x10000800, 0x00000400, 0x00000010, 0x00400080, 0x00020000,
    0x00000100, 0x80000000, 0x00001000, 0x40000000, 0x04000000, 0x00020000,
    0x02000000, 0x00004000, 0x00010000, 0x00200000, 0x01004000, 0x00000020,
    0x00020000, 0x00400000, 0x00010000, 0x00000400, 0x00000400, 0x00000100,
    0x00020000, 0x00000020, 0x00010000, 0x00000001, 0x00004000, 0x00008000,
    0x00004000, 0x00000100, 0x00040000, 0x00000400, 0x00000004, 0x00000020,
    0x40004000, 0x00800000, 0x00000020, 0x00002000, 0x00000200, 0x00080000,
    0x04000000, 0x00000020, 0x00000100, 0x00010000, 0x00100001, 0x00000010,
    0x00010000, 0x00c01000, 0x00000004, 0x00000010, 0x40000000, 0x00002000,
    0x00020000, 0x00000002, 0x00008000, 0x00100000, 0x20000000, 0x00010000,
    0x00100000, 0x00008000, 0x00800000, 0x00000010, 0x00001000, 0x00000001,
    0x00001000, 0x00001000, 0x00000020, 0x00004000, 0x00000010, 0x00000040,
    0x00000800, 0x20004000, 0x00000008, 0x00400000, 0x01000000, 0x00002000,
    0x00002000, 0x00000001, 0x00002000, 0x00040080, 0x10010000, 0x20000000,
    0x00008000, 0x00000010, 0x08000020, 0x00010000, 0x00000020, 0x00100000,
    0x00002000, 0x00000100, 0x00200000, 0x00000200, 0x00000080, 0x00400008,
    0x00010000, 0x00102000, 0x41000000, 0x20000000, 0x00800000, 0x01020000,
    0x00080000, 0x04800000, 0x00080000, 0x00008000, 0x00000008, 0x00010000,
    0x00010000, 0x00020002, 0x00004000, 0x00008000, 0x00001000, 0x00040000,
    0x00200000, 0x10000000, 0x00000008, 0x00000080, 0x08000000, 0x00004000,
    0x00000008, 0x00000400, 0x00000002, 0x00800000, 0x00020000, 0x08000000,
    0x20000000, 0x00000400, 0x04000000, 0x08000000, 0x00000100, 0x00002000,
    0x00000004, 0x80000000, 0x00000200, 0x00000004, 0x00000010, 0x00004000,
    0x02000000, 0x00200000, 0x80000000, 0x00800000, 0x00000008, 0x00040040,
    0x00000008, 0x00008000, 0x00040000, 0x00000008, 0x00020000, 0x04040000,
    0x00004000, 0x00020000, 0x08000000, 0x00100000, 0x00000002, 0x00000004,
    0x10000000, 0x00002000, 0x00010000, 0x00020000, 0x00001000, 0x00000010,
    0x00040000, 0x80000000, 0x00004000, 0x80000000, 0x00000200, 0x00100000,
    0x00000008, 0x00000800, 0x00003000, 0x40000000, 0x00000002, 0x80000000,
    0x00008000, 0x00000004, 0x00000040, 0x00000200, 0x00000080, 0x00001000,
    0x00000004, 0x00040000, 0x00010000, 0x00100000, 0x00000020, 0x02000000,
    0x08000000, 0x40000000, 0x00000800, 0x00001000, 0x00480000, 0x00000200,
    0x00010000, 0x00040000, 0x00000100, 0x00100000, 0x00000004, 0x00010000,
    0x00000080, 0x00000201, 0x00000020, 0x00000020, 0x20000000, 0x00001200,
    0x00000800, 0x01000000, 0x00020000, 0x00000100, 0x80000010, 0x00008004,
    0x00040000, 0x00020000, 0x00010000, 0x20000000, 0x00000004, 0x00000001,
    0x00000010, 0x00000020, 0x00400040, 0x04000000, 0x00100000, 0x00010000,
    0x00010000, 0x00400000, 0x40000000, 0x00002000, 0x00000100, 0x01000000,
    0x00040000, 0x04000000, 0x00000080, 0x02000000, 0x00000800, 0x00008000};
    }

    const static UnicodeSet jie_Set{const_cast<UnicodeSet::run_t *>(__jie_Set_runs), 443, 0, const_cast<UnicodeSet::bitquad_t *>(__jie_Set_quads), 270, 0};

    /** Code Point Ranges for she
    [34ed, 34ed], [38b5, 38b5], [3934, 3934], [3d07, 3d07], [3d43, 3d43],
    [4005, 4005], [4039, 4039], [4713, 4713], [492e, 492e], [4b26, 4b26],
    [4b37, 4b37], [4f58, 4f58], [5399, 5399], [5953, 5953], [5962, 5962],
    [5c04, 5c04], [6174, 6174], [61fe, 61fe], [6298, 6298], [62b4, 62b4],
    [62fe, 62fe], [6315, 6315], [6368, 6368], [63f2, 63f2], [6475, 6475],
    [651d, 651d], [6aa8, 6aa8], [6b07, 6b07], [6b59, 6b59], [6d89, 6d89],
    [6dbb, 6dbb], [7044, 7044], [731e, 731e], [756c, 756c], [7572, 7572],
    [776b, 776b], [789f, 789f], [78fc, 78fc], [793e, 793e], [8076, 8076],
    [820c, 820d], [8449, 8449], [850e, 850e], [8675, 8675], [86c7, 86c7],
    [86de, 86de], [86e5, 86e5], [8802, 8802], [8a2d, 8a2d], [8cd2, 8cd2],
    [8d66, 8d66], [8f0b, 8f0b], [90aa, 90aa], [9248, 9248], [9366, 9366],
    [95cd, 95cd], [97a8, 97a8], [97d8, 97d8], [9a07, 9a07], [9e9d, 9e9d],
    [202de, 202de], [20aa3, 20aa3], [20d2f, 20d2f], [20f8f, 20f8f],
    [21122, 21122], [22243, 22243], [225ed, 225ed], [22d85, 22d85],
    [23752, 23752], [2381e, 2381e], [238ed, 238ed], [23e1a, 23e1a],
    [24671, 24671], [24723, 24723], [2482d, 2482d], [24e94, 24e94],
    [25079, 25079], [25349, 25349], [25521, 25521], [25626, 25626],
    [25740, 25740], [25c30, 25c30], [25fde, 25fde], [26057, 26057],
    [26bec, 26bec], [26d0d, 26d0d], [26f22, 26f22], [2726e, 2726e],
    [27316, 27316], [27bbf, 27bbf], [286ed, 286ed], [2876b, 2876b],
    [288cd, 288cd], [290a8, 290a8], [290b4, 290b4], [2965d, 2965d],
    [29a57, 29a57], [29b90, 29b90]**/


    namespace {
    const static UnicodeSet::run_t __she_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 21}, {Mixed, 2}, {Empty, 54}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 45}, {Mixed, 2}, {Empty, 20},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 17},
    {Mixed, 2}, {Empty, 20}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 14}, {Mixed, 2},
    {Empty, 17}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 2849},
    {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 136},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 60}, {Mixed, 1},
    {Empty, 77}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 92}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 68}, {Mixed, 1}, {Empty, 89}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 62}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 29475}};
    const static UnicodeSet::bitquad_t  __she_Set_quads[] = {
    0x00002000, 0x00200000, 0x00100000, 0x00000080, 0x00000008, 0x00000020,
    0x02000000, 0x00080000, 0x00004000, 0x00800040, 0x01000000, 0x02000000,
    0x00080000, 0x00000004, 0x00000010, 0x00100000, 0x40000000, 0x01000000,
    0x00100000, 0x40000000, 0x00200000, 0x00000100, 0x00040000, 0x00200000,
    0x20000000, 0x00000100, 0x00000080, 0x02000000, 0x00000200, 0x08000000,
    0x00000010, 0x40000000, 0x00041000, 0x00000800, 0x80000000, 0x10000000,
    0x40000000, 0x00400000, 0x00003000, 0x00000200, 0x00004000, 0x00200000,
    0x40000080, 0x00000020, 0x00000004, 0x00002000, 0x00040000, 0x00000040,
    0x00000800, 0x00000400, 0x00000100, 0x00000040, 0x00002000, 0x00000100,
    0x01000000, 0x00000080, 0x20000000, 0x40000000, 0x00000008, 0x00008000,
    0x00008000, 0x00000004, 0x00000008, 0x00002000, 0x00000020, 0x00040000,
    0x40000000, 0x00002000, 0x04000000, 0x00020000, 0x00000008, 0x00002000,
    0x00100000, 0x02000000, 0x00000200, 0x00000002, 0x00000040, 0x00000001,
    0x00010000, 0x40000000, 0x00800000, 0x00001000, 0x00002000, 0x00000004,
    0x00004000, 0x00400000, 0x80000000, 0x00002000, 0x00000800, 0x00002000,
    0x00100100, 0x20000000, 0x00800000, 0x00010000};
    }

    const static UnicodeSet she_Set{const_cast<UnicodeSet::run_t *>(__she_Set_runs), 175, 0, const_cast<UnicodeSet::bitquad_t *>(__she_Set_quads), 94, 0};

    /** Code Point Ranges for tou
    [34f1, 34f1], [384f, 384f], [388f, 388f], [3a97, 3a97], [3c2f, 3c2f],
    [3cc6, 3cc6], [3f25, 3f25], [4571, 4571], [46b5, 46b5], [47dd, 47dd],
    [4c4f, 4c4f], [4ea0, 4ea0], [5077, 5077], [57f1, 57f1], [59b5, 59b5],
    [5aae, 5aae], [6109, 6109], [6295, 6295], [65a2, 65a2], [7d0f, 7d0f],
    [7d89, 7d89], [7df0, 7df0], [8623, 8623], [8915, 8915], [8aed, 8aed],
    [8af3, 8af3], [900f, 900f], [9017, 9017], [92c0, 92c0], [936e, 936e],
    [982d, 982d], [98f3, 98f3], [9ab0, 9ab0], [9ec8, 9ec8], [211e7, 211e7],
    [21de0, 21de0], [230ae, 230ae], [236fe, 236fe], [23a8c, 23a8c],
    [27ea2, 27ea2], [28519, 28519], [28a90, 28a90], [28bf2, 28bf2],
    [28de9, 28de9], [29736, 29736], [29fe2, 29fe2], [2a05e, 2a05e],
    [2a258, 2a258], [2a318, 2a318], [2a3a8, 2a3a8]**/


    namespace {
    const static UnicodeSet::run_t __tou_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 49},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 59}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 186}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 65}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 2968}, {Mixed, 1},
    {Empty, 95}, {Mixed, 1}, {Empty, 149}, {Mixed, 1}, {Empty, 49},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 544}, {Mixed, 1},
    {Empty, 50}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 73}, {Mixed, 1},
    {Empty, 69}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 29410}};
    const static UnicodeSet::bitquad_t  __tou_Set_quads[] = {
    0x00020000, 0x00008000, 0x00008000, 0x00800000, 0x00008000, 0x00000040,
    0x00000020, 0x00020000, 0x00200000, 0x20000000, 0x00008000, 0x00000001,
    0x00800000, 0x00020000, 0x00200000, 0x00004000, 0x00000200, 0x00200000,
    0x00000004, 0x00008000, 0x00000200, 0x00010000, 0x00000008, 0x00200000,
    0x00082000, 0x00808000, 0x00000001, 0x00004000, 0x00002000, 0x00080000,
    0x00010000, 0x00000100, 0x00000080, 0x00000001, 0x00004000, 0x40000000,
    0x00001000, 0x00000004, 0x02000000, 0x00010000, 0x00040000, 0x00000200,
    0x00400000, 0x00000004, 0x40000000, 0x01000000, 0x01000000, 0x00000100};
    }

    const static UnicodeSet tou_Set{const_cast<UnicodeSet::run_t *>(__tou_Set_runs), 97, 0, const_cast<UnicodeSet::bitquad_t *>(__tou_Set_quads), 48, 0};

    /** Code Point Ranges for pian
    [34f2, 34f2], [36f9, 36f9], [3e24, 3e24], [3f10, 3f10], [3fab, 3fab],
    [43d2, 43d2], [4fbf, 4fbf], [504f, 504f], [56e8, 56e8], [5aa5, 5aa5],
    [5e73, 5e73], [5fa7, 5fa7], [6241, 6241], [6944, 6944], [6969, 6969],
    [7247, 7247], [728f, 728f], [7335, 7335], [74b8, 74b8], [7bc7, 7bc7],
    [7df6, 7df6], [7fe9, 7fe9], [80fc, 80fc], [8439, 8439], [8759, 8759],
    [890a, 890a], [8991, 8991], [8ada, 8ada], [8ade, 8ade], [8cb5, 8cb5],
    [8cc6, 8cc6], [8df0, 8df0], [8e41, 8e41], [8fa8, 8fa8], [8faf, 8faf],
    [99e2, 99e2], [9a19, 9a19], [9abf, 9abf], [9da3, 9da3], [20408, 20408],
    [2045f, 2045f], [20bef, 20bef], [20dca, 20dca], [2139a, 2139a],
    [2225e, 2225e], [22403, 22403], [22568, 22568], [26cc4, 26cc4],
    [27372, 27372], [27864, 27864], [27c69, 27c69], [280af, 280af],
    [28c9c, 28c9c], [28d78, 28d78], [2a600, 2a600]**/


    namespace {
    const static UnicodeSet::run_t __pian_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 94}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 55}, {Mixed, 2}, {Empty, 70}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 81}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 2866}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 60}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 117}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 570}, {Mixed, 1}, {Empty, 52},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 94}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 196}, {Mixed, 1}, {Empty, 29391}};
    const static UnicodeSet::bitquad_t  __pian_Set_quads[] = {
    0x00040000, 0x02000000, 0x00000010, 0x00010000, 0x00000800, 0x00040000,
    0x80000000, 0x00008000, 0x00000100, 0x00000020, 0x00080000, 0x00000080,
    0x00000002, 0x00000010, 0x00000200, 0x00000080, 0x00008000, 0x00200000,
    0x01000000, 0x00000080, 0x00400000, 0x00000200, 0x10000000, 0x02000000,
    0x02000000, 0x00000400, 0x00020000, 0x44000000, 0x00200000, 0x00000040,
    0x00010000, 0x00000002, 0x00008100, 0x00000004, 0x02000000, 0x80000000,
    0x00000008, 0x00000100, 0x80000000, 0x00008000, 0x00000400, 0x04000000,
    0x40000000, 0x00000008, 0x00000100, 0x00000010, 0x00040000, 0x00000010,
    0x00000200, 0x00008000, 0x10000000, 0x01000000, 0x00000001};
    }

    const static UnicodeSet pian_Set{const_cast<UnicodeSet::run_t *>(__pian_Set_runs), 101, 0, const_cast<UnicodeSet::bitquad_t *>(__pian_Set_quads), 53, 0};

    /** Code Point Ranges for di
    [34f3, 34f3], [38a9, 38a9], [38d9, 38d9], [3985, 3985], [3a86, 3a86],
    [3add, 3add], [3b7d, 3b7d], [3c05, 3c05], [3e4d, 3e4d], [3f35, 3f35],
    [42ae, 42ae], [4355, 4355], [43c4, 43c4], [440e, 440e], [442d, 442d],
    [446f, 446f], [47be, 47be], [47e1, 47e1], [4891, 4891], [49d1, 49d1],
    [4a24, 4a24], [4a5a, 4a5a], [4a98, 4a98], [4bfc, 4bfc], [4c71, 4c71],
    [4d1e, 4d1e], [4d60, 4d60], [4f4e, 4f4e], [4fe4, 4fe4], [5059, 5059],
    [50c0, 50c0], [5125, 5125], [52fa, 52fa], [538e, 538e], [5467, 5467],
    [54cb, 54cb], [5547, 5547], [557b, 557b], [5600, 5600], [5681, 5681],
    [5730, 5730], [5754, 5754], [577b, 577b], [57c5, 57c5], [5824, 5824],
    [5886, 5886], [5891, 5891], [5943, 5943], [5a23, 5a23], [5a82, 5a82],
    [5ae1, 5ae1], [5d7d, 5d7d], [5e1d, 5e1d], [5e95, 5e95], [5f14, 5f14],
    [5f1f, 5f1f], [5f24, 5f24], [5f7d, 5f7d], [601f, 601f], [6178, 6178],
    [625a, 625a], [62b5, 62b5], [638b, 638b], [63d0, 63d0], [63e5, 63e5],
    [6455, 6455], [654c, 654c], [6575, 6575], [65f3, 65f3], [6753, 6753],
    [6755, 6755], [67e2, 67e2], [688a, 688a], [6891, 6891], [68e3, 68e3],
    [6974, 6974], [6a00, 6a00], [6ac2, 6ac2], [6c10, 6c10], [6d5f, 6d5f],
    [6e27, 6e27], [6ecc, 6ecc], [6ef4, 6ef4], [710d, 710d], [7274, 7274],
    [72c4, 72c4], [7393, 7393], [73f6, 73f6], [750b, 750b], [7590, 7590],
    [7684, 7684], [7731, 7731], [7747, 7747], [7825, 7825], [78ae, 78ae],
    [78b2, 78b2], [78fe, 78fe], [7998, 7998], [7b1b, 7b1b], [7b2c, 7b2c],
    [7bf4, 7bf4], [7c74, 7c74], [7cf4, 7cf4], [7d04, 7d04], [7de0, 7de0],
    [7f9d, 7f9d], [7fdf, 7fdf], [8091, 8091], [80dd, 80dd], [8163, 8163],
    [828d, 828d], [82d0, 82d0], [82d6, 82d6], [837b, 837b], [839c, 839c],
    [83c2, 83c2], [83e7, 83e7], [8482, 8482], [84e7, 84e7], [8515, 8515],
    [85cb, 85cb], [86b3, 86b3], [8743, 8743], [87ae, 87ae], [889b, 889b],
    [89bf, 89bf], [89dd, 89dd], [8a46, 8a46], [8adf, 8adf], [8ae6, 8ae6],
    [8c74, 8c74], [8d7f, 8d7f], [8d86, 8d86], [8e27, 8e27], [8e36, 8e36],
    [8e44, 8e44], [8e62, 8e62], [8ee7, 8ee7], [8fea, 8fea], [9010, 9010],
    [902e, 902e], [905e, 905e], [9069, 9069], [9070, 9070], [90b8, 90b8],
    [91f1, 91f1], [9349, 9349], [93d1, 93d1], [963a, 963a], [9684, 9684],
    [96b6, 96b6], [976e, 976e], [97ae, 97ae], [9814, 9814], [984c, 984c],
    [99b0, 99b0], [9ab6, 9ab6], [9b04, 9b04], [9b61, 9b61], [9e10, 9e10],
    [2036a, 2036a], [20411, 20411], [204bf, 204bf], [20573, 20573],
    [206ad, 206ad], [20956, 20956], [20a3f, 20a3f], [20adc, 20adc],
    [20f70, 20f70], [21137, 21137], [211a3, 211a3], [214b1, 214b1],
    [21699, 21699], [216b7, 216b7], [216dc, 216dc], [21c16, 21c16],
    [21f62, 21f62], [2214a, 2214a], [22246, 22246], [224e7, 224e7],
    [2255a, 2255a], [23089, 23089], [23165, 23165], [2368c, 2368c],
    [23b34, 23b34], [23bf5, 23bf5], [23ca2, 23ca2], [24070, 24070],
    [24225, 24225], [2476c, 2476c], [24788, 24788], [249db, 249db],
    [24b35, 24b35], [24fa0, 24fa0], [2513f, 2513f], [25550, 25550],
    [255be, 255be], [25866, 25866], [25ce0, 25ce0], [25d26, 25d26],
    [25e1a, 25e1a], [25fac, 25fac], [25fc4, 25fc4], [26279, 26279],
    [26a22, 26a22], [26d66, 26d66], [27036, 27036], [270a8, 270a8],
    [2725b, 2725b], [272cd, 272cd], [2735d, 2735d], [2782b, 2782b],
    [27932, 27932], [2796e, 2796e], [2799a, 2799a], [27ebd, 27ebd],
    [27fe0, 27fe0], [28087, 28087], [2832e, 2832e], [28469, 28469],
    [2847c, 2847c], [285fc, 285fc], [2862c, 2862c], [28abe, 28abe],
    [28bb9, 28bb9], [29271, 29271], [2947e, 2947e], [29b72, 29b72],
    [29d3a, 29d3a], [29dce, 29dce], [2a131, 2a131]**/


    namespace {
    const static UnicodeSet::run_t __di_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 29}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 4}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 6}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 11}, {Mixed, 1},
    {Empty, 7}, {Mixed, 2}, {Empty, 4}, {Mixed, 3}, {Empty, 3}, {Mixed, 1},
    {Empty, 7}, {Mixed, 5}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 2858}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 14}, {Mixed, 3}, {Empty, 41}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 89},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 41},
    {Mixed, 2}, {Empty, 17}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 20}, {Mixed, 1}, {Empty, 61},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 40}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 29430}};
    const static UnicodeSet::bitquad_t  __di_Set_quads[] = {
    0x00080000, 0x00000200, 0x02000000, 0x00000020, 0x00000040, 0x20000000,
    0x20000000, 0x00000020, 0x00002000, 0x00200000, 0x00004000, 0x00200000,
    0x00000010, 0x00004000, 0x00002000, 0x00008000, 0x40000000, 0x00000002,
    0x00020000, 0x00020000, 0x00000010, 0x04000000, 0x01000000, 0x10000000,
    0x00020000, 0x40000000, 0x00000001, 0x00004000, 0x00000010, 0x02000000,
    0x00000001, 0x00000020, 0x04000000, 0x00004000, 0x00000080, 0x00000800,
    0x00000080, 0x08000000, 0x00000001, 0x00000002, 0x00010000, 0x00100000,
    0x08000000, 0x00000020, 0x00000010, 0x00020040, 0x00000008, 0x00000008,
    0x00000004, 0x00000002, 0x20000000, 0x20000000, 0x00200000, 0x80100000,
    0x00000010, 0x20000000, 0x80000000, 0x01000000, 0x04000000, 0x00200000,
    0x00000800, 0x00010000, 0x00000020, 0x00200000, 0x00001000, 0x00200000,
    0x00080000, 0x00280000, 0x00000004, 0x00020400, 0x00000008, 0x00100000,
    0x00000001, 0x00000004, 0x00010000, 0x80000000, 0x00000080, 0x00001000,
    0x00100000, 0x00002000, 0x00100000, 0x00000010, 0x00080000, 0x00400000,
    0x00000800, 0x00010000, 0x00000010, 0x00020000, 0x00000080, 0x00000020,
    0x00044000, 0x40000000, 0x01000000, 0x08000000, 0x00001000, 0x00100000,
    0x00100000, 0x00100000, 0x00000010, 0x00000001, 0x20000000, 0x80000000,
    0x00020000, 0x20000000, 0x00000008, 0x00002000, 0x00410000, 0x08000000,
    0x10000000, 0x00000004, 0x00000080, 0x00000004, 0x00000080, 0x00200000,
    0x00000800, 0x00080000, 0x00000008, 0x00004000, 0x08000000, 0x80000000,
    0x20000000, 0x00000040, 0x80000000, 0x00000040, 0x00100000, 0x80000000,
    0x00000040, 0x00400080, 0x00000010, 0x00000004, 0x00000080, 0x00000400,
    0x00010000, 0x00004000, 0x40000000, 0x00010200, 0x01000000, 0x00020000,
    0x00000200, 0x00020000, 0x04000000, 0x00000010, 0x00400000, 0x00004000,
    0x00004000, 0x00100000, 0x00001000, 0x00010000, 0x00400000, 0x00000010,
    0x00000002, 0x00010000, 0x00000400, 0x00020000, 0x80000000, 0x00080000,
    0x00002000, 0x00400000, 0x80000000, 0x10000000, 0x00010000, 0x00800000,
    0x00000008, 0x00020000, 0x02000000, 0x00800000, 0x10000000, 0x00400000,
    0x00000004, 0x00000400, 0x00000040, 0x00000080, 0x04000000, 0x00000200,
    0x00000020, 0x00001000, 0x00100000, 0x00200000, 0x00000004, 0x00010000,
    0x00000020, 0x00001000, 0x00000100, 0x08000000, 0x00200000, 0x00000001,
    0x80000000, 0x00010000, 0x40000000, 0x00000040, 0x00000001, 0x00000040,
    0x04000000, 0x00001000, 0x00000010, 0x02000000, 0x00000004, 0x00000040,
    0x00400000, 0x00000100, 0x08000000, 0x00002000, 0x20000000, 0x00000800,
    0x00040000, 0x00004000, 0x04000000, 0x20000000, 0x00000001, 0x00000080,
    0x00004000, 0x10000200, 0x10000000, 0x00001000, 0x40000000, 0x02000000,
    0x00020000, 0x40000000, 0x00040000, 0x04000000, 0x00004000, 0x00020000};
    }

    const static UnicodeSet di_Set{const_cast<UnicodeSet::run_t *>(__di_Set_runs), 383, 0, const_cast<UnicodeSet::bitquad_t *>(__di_Set_quads), 222, 0};

    /** Code Point Ranges for ruan
    [34f4, 34f4], [39eb, 39eb], [3b95, 3b95], [3f31, 3f31], [4193, 4193],
    [43a1, 43a1], [44f4, 44f4], [4647, 4647], [4782, 4782], [4aad, 4aad],
    [5044, 5044], [5827, 5827], [5a86, 5a86], [648b, 648b], [64e9, 64e9],
    [670a, 670a], [6abd, 6abd], [6fe1, 6fe1], [71f8, 71f8], [74c0, 74c0],
    [789d, 789d], [7ddb, 7ddb], [800e, 800e], [815d, 815d], [8761, 8761],
    [8edf, 8edf], [8f2d, 8f2d], [962e, 962e], [9700, 9700], [207fa, 207fa],
    [20926, 20926], [22627, 22627], [22875, 22875], [22c7e, 22c7e],
    [230c5, 230c5], [23857, 23857], [23f48, 23f48], [23f73, 23f73],
    [249e0, 249e0], [24cac, 24cac], [25207, 25207], [252b6, 252b6],
    [25380, 25380], [25398, 25398], [25a57, 25a57], [25bec, 25bec],
    [26d87, 26d87], [26ebe, 26ebe], [282da, 282da], [284a9, 284a9],
    [28a30, 28a30], [28ab3, 28ab3], [28b14, 28b14], [293c8, 293c8]**/


    namespace {
    const static UnicodeSet::run_t __ruan_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 79}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 48}, {Mixed, 1},
    {Empty, 58}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 55},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2950}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 231}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 59}, {Mixed, 1}, {Empty, 55}, {Mixed, 2}, {Empty, 83},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 140}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 160}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 69}, {Mixed, 1}, {Empty, 29537}};
    const static UnicodeSet::bitquad_t  __ruan_Set_quads[] = {
    0x00100000, 0x00000800, 0x00200000, 0x00020000, 0x00080000, 0x00000002,
    0x00100000, 0x00000080, 0x00000004, 0x00002000, 0x00000010, 0x00000080,
    0x00000040, 0x00000800, 0x00000200, 0x00000400, 0x20000000, 0x00000002,
    0x01000000, 0x00000001, 0x20000000, 0x08000000, 0x00004000, 0x20000000,
    0x00000002, 0x80000000, 0x00002000, 0x00004000, 0x00000001, 0x04000000,
    0x00000040, 0x00000080, 0x00200000, 0x40000000, 0x00000020, 0x00800000,
    0x00000100, 0x00080000, 0x00000001, 0x00001000, 0x00000080, 0x00400000,
    0x01000001, 0x00800000, 0x00001000, 0x00000080, 0x40000000, 0x04000000,
    0x00000200, 0x00010000, 0x00080000, 0x00100000, 0x00000100};
    }

    const static UnicodeSet ruan_Set{const_cast<UnicodeSet::run_t *>(__ruan_Set_runs), 105, 0, const_cast<UnicodeSet::bitquad_t *>(__ruan_Set_quads), 53, 0};

    /** Code Point Ranges for qie
    [34f6, 34f6], [35eb, 35eb], [3697, 3697], [36cd, 36cd], [36d7, 36d7],
    [36d9, 36d9], [3932, 3932], [3c24, 3c24], [3c30, 3c30], [3c3c, 3c3c],
    [3f24, 3f24], [3f80, 3f80], [3f9c, 3f9c], [4209, 4209], [47a3, 47a3],
    [47d9, 47d9], [480d, 480d], [4ad4, 4ad4], [4e14, 4e14], [4f3d, 4f3d],
    [5022, 5022], [5207, 5207], [5327, 5327], [553c, 553c], [558b, 558b],
    [55db, 55db], [5951, 5951], [59be, 59be], [5a55, 5a55], [5e39, 5e39],
    [602f, 602f], [611c, 611c], [614a, 614a], [6308, 6308], [6377, 6377],
    [6705, 6705], [6904, 6904], [6c8f, 6c8f], [6d2f, 6d2f], [6dc1, 6dc1],
    [6e2b, 6e2b], [6f06, 6f06], [7330, 7330], [758c, 758c], [767f, 767f],
    [780c, 780c], [7a27, 7a27], [7a55, 7a55], [7aca, 7aca], [7b21, 7b21],
    [7bcb, 7bcb], [7dc1, 7dc1], [807a, 807a], [811e, 811e], [8304, 8304],
    [857a, 857a], [85d2, 85d2], [86e3, 86e3], [86ea, 86ea], [8a67, 8a67],
    [8d84, 8d84], [8dd9, 8dd9], [8e25, 8e25], [8f35, 8f35], [9365, 9365],
    [9411, 9411], [9b65, 9b65], [9bdc, 9bdc], [9c08, 9c08], [20003, 20003],
    [20060, 20060], [202e7, 202e7], [20a42, 20a42], [20cb5, 20cb5],
    [210a0, 210a0], [21424, 21424], [21523, 21523], [2160d, 2160d],
    [216e0, 216e0], [2174d, 2174d], [21d90, 21d90], [22346, 22346],
    [22cb6, 22cb6], [22e85, 22e85], [2383a, 2383a], [24d3c, 24d3c],
    [24dfe, 24dfe], [25551, 25551], [25ab5, 25ab5], [25fda, 25fda],
    [2618d, 2618d], [26f30, 26f30], [26fcb, 26fcb], [27468, 27468],
    [276a8, 276a8], [276aa, 276aa], [27ad5, 27ad5], [27ed8, 27ed8],
    [27ee7, 27ee7], [2810a, 2810a], [2826a, 2826a], [285b0, 285b0],
    [286a7, 286a7], [298f4, 298f4], [2a457, 2a457], [2a64c, 2a64c]**/


    namespace {
    const static UnicodeSet::run_t __qie_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 44}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 16}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2847}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 58},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 167}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 108}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 31}, {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 145}, {Mixed, 1}, {Empty, 90}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 29389}};
    const static UnicodeSet::bitquad_t  __qie_Set_quads[] = {
    0x00400000, 0x00000800, 0x00800000, 0x02802000, 0x00040000, 0x10010010,
    0x00000010, 0x10000001, 0x00000200, 0x00000008, 0x02000000, 0x00002000,
    0x00100000, 0x00100000, 0x20000000, 0x00000004, 0x00000080, 0x00000080,
    0x10000000, 0x00000800, 0x08000000, 0x00020000, 0x40000000, 0x00200000,
    0x02000000, 0x00008000, 0x10000000, 0x00000400, 0x00000100, 0x00800000,
    0x00000020, 0x00000010, 0x00008000, 0x00008000, 0x00000002, 0x00000800,
    0x00000040, 0x00010000, 0x00001000, 0x80000000, 0x00001000, 0x00000080,
    0x00200000, 0x00000400, 0x00000002, 0x00000800, 0x00000002, 0x04000000,
    0x40000000, 0x00000010, 0x04000000, 0x00040000, 0x00000408, 0x00000080,
    0x00000010, 0x02000000, 0x00000020, 0x00200000, 0x00000020, 0x00020000,
    0x00000020, 0x10000000, 0x00000100, 0x00000008, 0x00000001, 0x00000080,
    0x00000004, 0x00200000, 0x00000001, 0x00000010, 0x00000008, 0x00002000,
    0x00000001, 0x00002000, 0x00010000, 0x00000040, 0x00400000, 0x00000020,
    0x04000000, 0x10000000, 0x40000000, 0x00020000, 0x00200000, 0x04000000,
    0x00002000, 0x00010000, 0x00000800, 0x00000100, 0x00000500, 0x00200000,
    0x01000000, 0x00000080, 0x00000400, 0x00000400, 0x00010000, 0x00000080,
    0x00100000, 0x00800000, 0x00001000};
    }

    const static UnicodeSet qie_Set{const_cast<UnicodeSet::run_t *>(__qie_Set_runs), 193, 0, const_cast<UnicodeSet::bitquad_t *>(__qie_Set_quads), 99, 0};

    /** Code Point Ranges for dou
    [34f8, 34f8], [36d2, 36d2], [37b3, 37b3], [3884, 3884], [3931, 3931],
    [3a2e, 3a2e], [3ab7, 3ab7], [4108, 4108], [41fa, 41fa], [4546, 4546],
    [46e0, 46e0], [4b26, 4b26], [4fb8, 4fb8], [515c, 515c], [5245, 5245],
    [540b, 540b], [543a, 543a], [5517, 5517], [6295, 6296], [6597, 6597],
    [65a3, 65a3], [6793, 6793], [68aa, 68aa], [6bed, 6bed], [6c00, 6c00],
    [6d62, 6d62], [7006, 7006], [75d8, 75d8], [7797, 7797], [7aac, 7aac],
    [7ac7, 7ac7], [7bfc, 7bfc], [8130, 8130], [8373, 8373], [8538, 8538],
    [86aa, 86aa], [8b80, 8b80], [8c46, 8c46], [9017, 9017], [903e, 903e],
    [90d6, 90d6], [90fd, 90fd], [9158, 9158], [9204, 9204], [92c0, 92c0],
    [9627, 9627], [9661, 9661], [9916, 9916], [9b25, 9b25], [9b2d, 9b2d],
    [20344, 20344], [20c51, 20c51], [20f87, 20f87], [2109b, 2109b],
    [2109d, 2109d], [2118f, 2118f], [2166c, 2166c], [217f3, 217f3],
    [2298d, 2298d], [22b43, 22b43], [23075, 23075], [230ae, 230ae],
    [2361b, 2361b], [23b57, 23b57], [24028, 24028], [2414b, 2414b],
    [24748, 24748], [2479f, 2479f], [24f92, 24f92], [25196, 25196],
    [2525d, 2525d], [25e89, 25e89], [26113, 26113], [26198, 26198],
    [273c6, 273c6], [2761e, 2761e], [27878, 27878], [27ba1, 27ba1],
    [27bde, 27bde], [27be0, 27be0], [27be4, 27be4], [27c53, 27c53],
    [2804b, 2804b], [2896a, 2896a], [28a90, 28a90], [28d1c, 28d1c],
    [28d9c, 28d9c], [28e5c, 28e5c], [292aa, 292aa], [2946f, 2946f],
    [29521, 29521], [29bb7, 29bb7], [29cc8, 29cc8], [2a309, 2a309],
    [2a43a, 2a43a]**/


    namespace {
    const static UnicodeSet::run_t __dou_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 107}, {Mixed, 1}, {Empty, 23}, {Mixed, 2},
    {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 25},
    {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 24},
    {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 29}, {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 2880}, {Mixed, 1}, {Empty, 71}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 140},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 63},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 97}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 145}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 25}, {Mixed, 3}, {Empty, 2},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 72}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 29406}};
    const static UnicodeSet::bitquad_t  __dou_Set_quads[] = {
    0x01000000, 0x00040000, 0x00080000, 0x00000010, 0x00020000, 0x00004000,
    0x00800000, 0x00000100, 0x04000000, 0x00000040, 0x00000001, 0x00000040,
    0x01000000, 0x10000000, 0x00000020, 0x00000800, 0x04000000, 0x00800000,
    0x00600000, 0x00800000, 0x00000008, 0x00080000, 0x00000400, 0x00002000,
    0x00000001, 0x00000004, 0x00000040, 0x01000000, 0x00800000, 0x00001000,
    0x00000080, 0x10000000, 0x00010000, 0x00080000, 0x01000000, 0x00000400,
    0x00000001, 0x00000040, 0x00800000, 0x40000000, 0x00400000, 0x20000000,
    0x01000000, 0x00000010, 0x00000001, 0x00000080, 0x00000002, 0x00400000,
    0x00002020, 0x00000010, 0x00020000, 0x00000080, 0x28000000, 0x00008000,
    0x00001000, 0x00080000, 0x00002000, 0x00000008, 0x00200000, 0x00004000,
    0x08000000, 0x00800000, 0x00000100, 0x00000800, 0x00000100, 0x80000000,
    0x00040000, 0x00400000, 0x20000000, 0x00000200, 0x00080000, 0x01000000,
    0x00000040, 0x40000000, 0x01000000, 0x00000002, 0x40000000, 0x00000011,
    0x00080000, 0x00000800, 0x00000400, 0x00010000, 0x10000000, 0x10000000,
    0x10000000, 0x00000400, 0x00008000, 0x00000002, 0x00800000, 0x00000100,
    0x00000200, 0x04000000};
    }

    const static UnicodeSet dou_Set{const_cast<UnicodeSet::run_t *>(__dou_Set_runs), 169, 0, const_cast<UnicodeSet::bitquad_t *>(__dou_Set_quads), 92, 0};

    /** Code Point Ranges for rui
    [34f9, 34f9], [38bb, 38bb], [39eb, 39eb], [3a05, 3a05], [3b83, 3b83],
    [40b1, 40b1], [4132, 4132], [4151, 4151], [41e4, 41e4], [44f2, 44f2],
    [472d, 472d], [4b10, 4b10], [5151, 5151], [5185, 5185], [5a51, 5a51],
    [60e2, 60e2], [6290, 6290], [648b, 648b], [6798, 6798], [6875, 6875],
    [68c1, 68c1], [6a64, 6a64], [6c6d, 6c6d], [745e, 745e], [7524, 7524],
    [777f, 777f], [7b0d, 7b0d], [7d8f, 7d8f], [7dcc, 7dcc], [7e60, 7e60],
    [82ae, 82ae], [82fc, 82fc], [854a, 854a], [8564, 8564], [8602, 8602],
    [868b, 868b], [8739, 8739], [8e12, 8e12], [9209, 9209], [92ed, 92ed],
    [93f8, 93f8], [21bd2, 21bd2], [228f3, 228f3], [236da, 236da],
    [23b18, 23b18], [25cdd, 25cdd], [26f06, 26f06], [2711c, 2711c],
    [289e8, 289e8], [28cd9, 28cd9], [2a3e9, 2a3e9]**/


    namespace {
    const static UnicodeSet::run_t __rui_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 49},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 69}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 62}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 3134}, {Mixed, 1}, {Empty, 104}, {Mixed, 1}, {Empty, 110},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 269}, {Mixed, 1},
    {Empty, 145}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 198},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 184}, {Mixed, 1},
    {Empty, 29408}};
    const static UnicodeSet::bitquad_t  __rui_Set_quads[] = {
    0x02000000, 0x08000000, 0x00000800, 0x00000020, 0x00000008, 0x00020000,
    0x00040000, 0x00020000, 0x00000010, 0x00040000, 0x00002000, 0x00010000,
    0x00020000, 0x00000020, 0x00020000, 0x00000004, 0x00010000, 0x00000800,
    0x01000000, 0x00200000, 0x00000002, 0x00000010, 0x00002000, 0x40000000,
    0x00000010, 0x80000000, 0x00002000, 0x00008000, 0x00001000, 0x00000001,
    0x00004000, 0x10000000, 0x00000400, 0x00000010, 0x00000004, 0x00000800,
    0x02000000, 0x00040000, 0x00000200, 0x00002000, 0x01000000, 0x00040000,
    0x00080000, 0x04000000, 0x01000000, 0x20000000, 0x00000040, 0x10000000,
    0x00000100, 0x02000000, 0x00000200};
    }

    const static UnicodeSet rui_Set{const_cast<UnicodeSet::run_t *>(__rui_Set_runs), 97, 0, const_cast<UnicodeSet::bitquad_t *>(__rui_Set_quads), 51, 0};

    /** Code Point Ranges for cui
    [34f9, 34f9], [3720, 3720], [376e, 376e], [3bd4, 3bd4], [3bdc, 3bdc],
    [3c56, 3c56], [3d4f, 3d4f], [40c0, 40c0], [411f, 411f], [418a, 418a],
    [42ab, 42ab], [4534, 4534], [4639, 4639], [4651, 4651], [4f53, 4f53],
    [5005, 5005], [50ac, 50ac], [51d7, 51d7], [5352, 5352], [5550, 5550],
    [555b, 555b], [5894, 5894], [5bdf, 5bdf], [5d12, 5d12], [5d14, 5d14],
    [5d89, 5d89], [60b4, 60b4], [615b, 615b], [6467, 6467], [690a, 690a],
    [69b1, 69b1], [69ef, 69ef], [6bf3, 6bf3], [6d12, 6d12], [6dec, 6dec],
    [6f3c, 6f3c], [6fe2, 6fe2], [7120, 7120], [71a3, 71a3], [7355, 7355],
    [7417, 7417], [7480, 7480], [7601, 7601], [76a0, 76a0], [78ea, 78ea],
    [7ac1, 7ac1], [7cb9, 7cb9], [7db7, 7db7], [7e17, 7e17], [7e40, 7e40],
    [7fe0, 7fe0], [8106, 8106], [813a, 813a], [81b5, 81b5], [81ce, 81ce],
    [8403, 8403], [8870, 8870], [894a, 894a], [8da1, 8da1], [8e24, 8e24],
    [93d9, 93d9], [96b9, 96b9], [9847, 9847], [205da, 205da],
    [207bf, 207bf], [207d3, 207d3], [20a6a, 20a6a], [20f76, 20f76],
    [22095, 22095], [22138, 22138], [22558, 22558], [22848, 22848],
    [22d93, 22d93], [230cd, 230cd], [23be7, 23be7], [23c1a, 23c1a],
    [23fd2, 23fd3], [2438b, 2438b], [245ef, 245ef], [246cd, 246cd],
    [25a12, 25a12], [25cc8, 25cc8], [25eee, 25eee], [25f02, 25f02],
    [25f1b, 25f1b], [25f3a, 25f3a], [26648, 26648], [269a3, 269a3],
    [27383, 27383], [2744e, 2744e], [276a5, 276a5], [27731, 27731],
    [27cda, 27cda], [27e7a, 27e7a], [27f2c, 27f2c], [27f60, 27f60],
    [2810d, 2810d], [2814e, 2814e], [28289, 28289], [28ef5, 28ef5],
    [28fd0, 28fd0], [2990f, 2990f], [29bb4, 29bb4]**/


    namespace {
    const static UnicodeSet::run_t __cui_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 71}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 3},
    {Mixed, 2}, {Empty, 17}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 2923}, {Mixed, 1}, {Empty, 14}, {Mixed, 2},
    {Empty, 20}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 136},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 88}, {Mixed, 2}, {Empty, 29}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 153}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 16}, {Mixed, 3}, {Empty, 56}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 98}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 73}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 29474}};
    const static UnicodeSet::bitquad_t  __cui_Set_quads[] = {
    0x02000000, 0x00000001, 0x00004000, 0x10100000, 0x00400000, 0x00008000,
    0x00000001, 0x80000000, 0x00000400, 0x00000800, 0x00100000, 0x02000000,
    0x00020000, 0x00080000, 0x00000020, 0x00001000, 0x00800000, 0x00040000,
    0x08010000, 0x00100000, 0x80000000, 0x00140000, 0x00000200, 0x00100000,
    0x08000000, 0x00000080, 0x00000400, 0x00020000, 0x00008000, 0x00080000,
    0x00040000, 0x00001000, 0x10000000, 0x00000004, 0x00000001, 0x00000008,
    0x00200000, 0x00800000, 0x00000001, 0x00000002, 0x00000001, 0x00000400,
    0x00000002, 0x02000000, 0x00800000, 0x00800000, 0x00000001, 0x00000001,
    0x00000040, 0x04000000, 0x00200000, 0x00004000, 0x00000008, 0x00010000,
    0x00000400, 0x00000002, 0x00000010, 0x02000000, 0x02000000, 0x00000080,
    0x04000000, 0x80000000, 0x00080000, 0x00000400, 0x00400000, 0x00200000,
    0x01000000, 0x01000000, 0x00000100, 0x00080000, 0x00002000, 0x00000080,
    0x04000000, 0x000c0000, 0x00000800, 0x00008000, 0x00002000, 0x00040000,
    0x00000100, 0x00004000, 0x08000004, 0x04000000, 0x00000100, 0x00000008,
    0x00000008, 0x00004000, 0x00000020, 0x00020000, 0x04000000, 0x04000000,
    0x00001000, 0x00000001, 0x00002000, 0x00004000, 0x00000200, 0x00200000,
    0x00010000, 0x00008000, 0x00100000};
    }

    const static UnicodeSet cui_Set{const_cast<UnicodeSet::run_t *>(__cui_Set_runs), 185, 0, const_cast<UnicodeSet::bitquad_t *>(__cui_Set_quads), 99, 0};

    /** Code Point Ranges for ji
    [34f9, 34f9], [3515, 3515], [35ca, 35ca], [35f1, 35f1], [360d, 360d],
    [366b, 366b], [36a1, 36a1], [36bb, 36bb], [36f7, 36f7], [3783, 3783],
    [3786, 3786], [378b, 378b], [3793, 3793], [379b, 379b], [37a6, 37a6],
    [380d, 380e], [3831, 3831], [386e, 386e], [3905, 3905], [395b, 395b],
    [3998, 3998], [39c0, 39c0], [39d7, 39d7], [3a33, 3a33], [3af7, 3af7],
    [3ba8, 3ba8], [3bb7, 3bb7], [3c1f, 3c1f], [3c85, 3c85], [3cba, 3cba],
    [3cf5, 3cf5], [3e05, 3e05], [3e44, 3e44], [3ed1, 3ed1], [3ef7, 3ef7],
    [3f7a, 3f7a], [3f8a, 3f8a], [3fb5, 3fb5], [4008, 4008], [4018, 4018],
    [4052, 4052], [4076, 4076], [4091, 4091], [41e7, 41e7], [41eb, 41eb],
    [4215, 4215], [42df, 42df], [4364, 4364], [4400, 4400], [4415, 4415],
    [441a, 441a], [44fd, 44fd], [4564, 4564], [45c1, 45c1], [45d7, 45d7],
    [4690, 4690], [46cb, 46cb], [46f4, 46f4], [4778, 4778], [4798, 4798],
    [47c7, 47c7], [480f, 480f], [488b, 488b], [48b3, 48b3], [48e2, 48e2],
    [4912, 4912], [4a50, 4a50], [4a6f, 4a6f], [4bba, 4bba], [4bc2, 4bc2],
    [4c65, 4c65], [4caf, 4caf], [4cf6, 4cf6], [4d93, 4d93], [4da9, 4da9],
    [4e0c, 4e0c], [4e2e, 4e2e], [4e41, 4e41], [4e69, 4e69], [4e9f, 4e9f],
    [4f0b, 4f0b], [4f0e, 4f0e], [4f76, 4f76], [501a, 501a], [5048, 5048],
    [506e, 506e], [50df, 50df], [5176, 5176], [5180, 5180], [51e0, 51e0],
    [520f, 520f], [525e, 525e], [5291, 5291], [52e3, 52e3], [5359, 5359],
    [535f, 535f], [537d, 537d], [539d, 539d], [53ca, 53ca], [5407, 5407],
    [5409, 5409], [5470, 5470], [54ad, 54ad], [5527, 5527], [55d8, 55d8],
    [5630, 5630], [568c, 568c], [573e, 573e], [578d, 578d], [57fa, 57fa],
    [5832, 5832], [5849, 5849], [58bc, 58bc], [5947, 5947], [5980, 5980],
    [5993, 5993], [59de, 59de], [59ec, 59ec], [59fc, 59fc], [5ac9, 5ac9],
    [5b63, 5b63], [5bc2, 5bc2], [5bc4, 5bc4], [5c10, 5c10], [5c45, 5c45],
    [5c50, 5c50], [5c70, 5c70], [5c8b, 5c8c], [5cdc, 5cdc], [5d47, 5d47],
    [5d74, 5d74], [5daf, 5daf], [5df1, 5df1], [5e3a, 5e3a], [5e7e, 5e7e],
    [5eb4, 5eb4], [5f50, 5f50], [5f76, 5f76], [5f9b, 5f9b], [5fcc, 5fcc],
    [6025, 6025], [60b8, 60b8], [60ce, 60ce], [61bf, 61bf], [61e0, 61e0],
    [61fb, 61fb], [621f, 621f], [6222, 6222], [6280, 6280], [638e, 638e],
    [63d6, 63d6], [63e4, 63e4], [64a0, 64a0], [64bd, 64bd], [64ca, 64ca],
    [64e0, 64e0], [6532, 6532], [6567, 6567], [65e1, 65e2], [66a8, 66a9],
    [673a, 673a], [6781, 6781], [6785, 6785], [689e, 689e], [68cb, 68cb],
    [68d8, 68d8], [6956, 6956], [696b, 696b], [6975, 6975], [69c9, 69c9],
    [69e3, 69e3], [6a5f, 6a5f], [6a95, 6a95], [6a9d, 6a9d], [6ab5, 6ab5],
    [6ac5, 6ac5], [6aed, 6aed], [6b9b, 6b9b], [6c65, 6c65], [6c72, 6c72],
    [6cf2, 6cf2], [6d01, 6d01], [6d0e, 6d0e], [6dc1, 6dc1], [6e52, 6e52],
    [6f03, 6f03], [6f08, 6f08], [6f57, 6f57], [6fc0, 6fc0], [6fc8, 6fc8],
    [6fdf, 6fdf], [7031, 7031], [710f, 710f], [7284, 7284], [72e4, 72e4],
    [7317, 7317], [74a3, 74a3], [74be, 74be], [755f, 755f], [7578, 7578],
    [757f, 757f], [75b5, 75b5], [75be, 75be], [75f5, 75f5], [7620, 7620],
    [7635, 7635], [7660, 7660], [7680, 7680], [777d, 777d], [7789, 7789],
    [77bf, 77bf], [78ef, 78ef], [796d, 796d], [79a8, 79a8], [79ef, 79ef],
    [79f8, 79f8], [7a18, 7a18], [7a29, 7a29], [7a37, 7a37], [7a3d, 7a3d],
    [7a44, 7a44], [7a4a, 7a4a], [7a4d, 7a4d], [7a56, 7a56], [7a67, 7a67],
    [7b08, 7b08], [7b53, 7b53], [7b95, 7b95], [7bbf, 7bbf], [7c0a, 7c0a],
    [7c0e, 7c0e], [7c4d, 7c4d], [7ca2, 7ca2], [7cfb, 7cfb], [7d00, 7d00],
    [7d12, 7d12], [7d1a, 7d1a], [7d50, 7d50], [7d66, 7d66], [7ddd, 7ddd],
    [7e3e, 7e3e], [7e6b, 7e6b], [7e7c, 7e7c], [7f7d, 7f7d], [7f88, 7f88],
    [8024, 8024], [802d, 802d], [808c, 808c], [80d4, 80d4], [810a, 810a],
    [8114, 8114], [8128, 8128], [818c, 818c], [81ee, 81ee], [8265, 8265],
    [827b, 827b], [82a8, 82a8], [82b0, 82b0], [82d9, 82d9], [8324, 8324],
    [838b, 838b], [8401, 8401], [846a, 846a], [84a9, 84a9], [84ba, 84ba],
    [8507, 8507], [8540, 8540], [857a, 857a], [858a, 858a], [85ba, 85ba],
    [8604, 8604], [862e, 862e], [863b, 863b], [866e, 866e], [8721, 8721],
    [874d, 874d], [878f, 878f], [87e3, 87e3], [87fb, 87fb], [87ff, 8800],
    [88da, 88da], [8940, 8940], [894b, 894b], [8998, 8998], [89ac, 89ac],
    [89bf, 89bf], [89ed, 89ed], [8a08, 8a08], [8a10, 8a10], [8a18, 8a18],
    [8a8b, 8a8b], [8ac5, 8ac5], [8ad4, 8ad4], [8b4f, 8b4f], [8b64, 8b64],
    [8c3b, 8c3b], [8c3f, 8c3f], [8d8c, 8d8c], [8d9e, 8d9e], [8dc2, 8dc2],
    [8dfd, 8dfd], [8e11, 8e11], [8e16, 8e16], [8e26, 8e26], [8e50, 8e50],
    [8e8b, 8e8b], [8eb8, 8eb8], [8f2f, 8f2f], [8f5a, 8f5a], [8ff9, 8ff9],
    [90c5, 90c6], [913f, 913f], [9288, 9288], [92a1, 92a1], [9324, 9324],
    [93f6, 93f6], [9416, 9416], [9447, 9447], [9694, 9694], [969b, 969b],
    [96ae, 96ae], [96c6, 96c6], [9735, 9735], [973d, 973d], [9769, 9769],
    [978a, 978a], [97bf, 97bf], [98b3, 98b3], [98e2, 98e2], [9951, 9951],
    [9a0e, 9a0e], [9a65, 9a65], [9afb, 9afb], [9b3e, 9b3e], [9b5d, 9b5d],
    [9b62, 9b62], [9b65, 9b65], [9b86, 9b86], [9bda, 9bda], [9bfd, 9bfd],
    [9c36, 9c36], [9c3f, 9c40], [9c6d, 9c6d], [9d4b, 9d4b], [9dba, 9dba],
    [9dc4, 9dc4], [9dd1, 9dd1], [9e04, 9e04], [9e82, 9e82], [9f4a, 9f4a],
    [9f4c, 9f4f], [20003, 20003], [20037, 20037], [202fb, 202fb],
    [20343, 20343], [20443, 20443], [204de, 204de], [2050b, 2050b],
    [205cf, 205cf], [206bd, 206bd], [207e3, 207e3], [208a0, 208a0],
    [209ab, 209ab], [20a15, 20a15], [20a20, 20a20], [20af7, 20af7],
    [20baf, 20baf], [20bc9, 20bc9], [20c59, 20c59], [20c68, 20c68],
    [20cb9, 20cb9], [20d29, 20d29], [20d2b, 20d2b], [20dbb, 20dbb],
    [20dcc, 20dcc], [20e4b, 20e4b], [20fc9, 20fc9], [20fe0, 20fe0],
    [2106a, 2106a], [21070, 21070], [210c3, 210c3], [2117a, 2117a],
    [211df, 211df], [212da, 212da], [21731, 21731], [2195e, 2195e],
    [2198a, 2198a], [219aa, 219aa], [21ab1, 21ab1], [21ac0, 21ac0],
    [21b04, 21b04], [21cee, 21cee], [21e6a, 21e6a], [21f49, 21f49],
    [21fd9, 21fd9], [22042, 22042], [220fa, 220fa], [221bb, 221bb],
    [22257, 22257], [22347, 22347], [223de, 223de], [224c4, 224c4],
    [22514, 22514], [225c2, 225c2], [225f9, 225f9], [22681, 22681],
    [2272d, 2272d], [22874, 22874], [2289e, 2289e], [22a10, 22a10],
    [22a66, 22a66], [22b44, 22b44], [22c12, 22c12], [22c63, 22c63],
    [22ebc, 22ebc], [22f0b, 22f0b], [22f37, 22f37], [2312f, 2312f],
    [23131, 23131], [231f3, 231f3], [233e1, 233e1], [2353d, 2353d],
    [235b7, 235b7], [236d4, 236d4], [23707, 23707], [238dd, 238dd],
    [23aa0, 23aa0], [23b20, 23b20], [23bc5, 23bc5], [23c08, 23c08],
    [23c57, 23c57], [23ca1, 23ca1], [23cc3, 23cc3], [23e5c, 23e5c],
    [23f4d, 23f4d], [242b5, 242b5], [242ed, 242ed], [2433f, 2433f],
    [24397, 24397], [244d1, 244d1], [246c4, 246c4], [2471d, 2471d],
    [2473e, 2473e], [2480e, 2480e], [2490b, 2490b], [24add, 24add],
    [24cce, 24cce], [24d40, 24d40], [24dc9, 24dc9], [24e97, 24e97],
    [24eb7, 24eb7], [24fe0, 24fe0], [25202, 25202], [252ac, 252ac],
    [252e5, 252e5], [254a1, 254a1], [25542, 25542], [25599, 25599],
    [2560c, 2560c], [2574c, 2574c], [25808, 25808], [2580b, 2580b],
    [25852, 25852], [258e9, 258e9], [25a3f, 25a3f], [25aab, 25aab],
    [25abc, 25abc], [25af6, 25af6], [25b4b, 25b4c], [25b5c, 25b5c],
    [25baa, 25baa], [25c26, 25c26], [25ccf, 25ccf], [25dd9, 25dd9],
    [25eb5, 25eb5], [25f8a, 25f8a], [25fa1, 25fa1], [26073, 26073],
    [26091, 26091], [261a1, 261a1], [261e7, 261e7], [262cb, 262cb],
    [26317, 26317], [26330, 26330], [263a2, 263a2], [26738, 26738],
    [26756, 26756], [267bd, 267bd], [26804, 26804], [2683e, 2683e],
    [26a67, 26a67], [26ab1, 26ab1], [26baf, 26baf], [26bbc, 26bbc],
    [26ccc, 26ccc], [26d7e, 26d7e], [26d8d, 26d8d], [26ea9, 26ea9],
    [26eac, 26eac], [26eb4, 26eb4], [26eb6, 26eb6], [26f37, 26f37],
    [26fb2, 26fb2], [26fd3, 26fd3], [270de, 270de], [271ef, 271ef],
    [2723c, 2723c], [27246, 27246], [2724d, 2724d], [273bf, 273bf],
    [27410, 27410], [274d3, 274d3], [275d2, 275d2], [27641, 27641],
    [277dc, 277dc], [27849, 27849], [2786f, 2786f], [278be, 278be],
    [2790f, 2790f], [27944, 27944], [279c3, 279c3], [279df, 279df],
    [279e9, 279e9], [27a66, 27a66], [27a87, 27a87], [27aa0, 27aa0],
    [27adc, 27adc], [27ae0, 27ae0], [27bad, 27bad], [27f51, 27f51],
    [27fa2, 27fa2], [27fbd, 27fbe], [28036, 28036], [280a2, 280a2],
    [28110, 28110], [28164, 28164], [282bb, 282bb], [282c9, 282c9],
    [2837a, 2837a], [284b4, 284b4], [2858a, 2858a], [286c9, 286c9],
    [286d1, 286d1], [286f3, 286f3], [28712, 28712], [288b5, 288b5],
    [288e7, 288e7], [28939, 28939], [289ae, 289ae], [28a8f, 28a8f],
    [28bba, 28bba], [28caa, 28caa], [28ccb, 28ccb], [28cfb, 28cfb],
    [28e76, 28e76], [28ed5, 28ed5], [29016, 29016], [29262, 29262],
    [29406, 29406], [294ee, 294ee], [296ae, 296ae], [29706, 29706],
    [2978a, 2978a], [29828, 29828], [298b4, 298b4], [29949, 29949],
    [299a4, 299a4], [29a12, 29a12], [29a5b, 29a5b], [29bcb, 29bcb],
    [29bf0, 29bf0], [29d03, 29d03], [29f04, 29f04], [29f1a, 29f1a],
    [2a08d, 2a08d], [2a0ba, 2a0ba], [2a135, 2a135], [2a138, 2a138],
    [2a179, 2a179], [2a286, 2a286], [2a30d, 2a30d], [2a50b, 2a50b],
    [2a625, 2a625]**/


    namespace {
    const static UnicodeSet::run_t __ji_Set_runs[] = {
    {Empty, 423}, {Mixed, 2}, {Empty, 5}, {Mixed, 3}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 3}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 10}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 9},
    {Mixed, 2}, {Empty, 9}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2},
    {Mixed, 5}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 5}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 4}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 6}, {Mixed, 3}, {Empty, 9},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 5}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 4}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1},
    {Mixed, 5}, {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 17}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 4}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 3}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2821}, {Mixed, 2}, {Empty, 21}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 3},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 7}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 11},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 11}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 5},
    {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 27},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 17},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 3}, {Mixed, 5}, {Empty, 5}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 9}, {Mixed, 3}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7}, {Mixed, 3}, {Empty, 11},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 11}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 29390}};
    const static UnicodeSet::bitquad_t  __ji_Set_quads[] = {
    0x02000000, 0x00200000, 0x00000400, 0x00020000, 0x00002000, 0x00000800,
    0x08000002, 0x00800000, 0x08080848, 0x00000040, 0x00006000, 0x00020000,
    0x00004000, 0x00000020, 0x08000000, 0x01000000, 0x00800001, 0x00080000,
    0x00800000, 0x00800100, 0x80000000, 0x00000020, 0x04000000, 0x00200000,
    0x00000020, 0x00000010, 0x00020000, 0x00800000, 0x04000000, 0x00000400,
    0x00200000, 0x01000100, 0x00040000, 0x00400000, 0x00020000, 0x00000880,
    0x00200000, 0x80000000, 0x00000010, 0x04200001, 0x20000000, 0x00000010,
    0x00800002, 0x00010000, 0x00000800, 0x00100000, 0x01000000, 0x01000000,
    0x00000080, 0x00008000, 0x00000800, 0x00080000, 0x00000004, 0x00040000,
    0x00010000, 0x00008000, 0x04000000, 0x00000004, 0x00000020, 0x00008000,
    0x00400000, 0x00080000, 0x00000200, 0x00001000, 0x00004000, 0x00000002,
    0x00000200, 0x80000000, 0x00004800, 0x00400000, 0x04000000, 0x00000100,
    0x00004000, 0x80000000, 0x00400000, 0x00000001, 0x00000001, 0x00008000,
    0x40000000, 0x00020000, 0x00000008, 0x82000000, 0x20000000, 0x20000000,
    0x00000400, 0x00000280, 0x00010000, 0x00002000, 0x00000080, 0x01000000,
    0x00010000, 0x00001000, 0x40000000, 0x00002000, 0x04000000, 0x00040000,
    0x00000200, 0x10000000, 0x00000080, 0x00080001, 0x40000000, 0x10001000,
    0x00000200, 0x00000008, 0x00000014, 0x00010000, 0x00010020, 0x00010000,
    0x00001800, 0x10000000, 0x00000080, 0x00100000, 0x00008000, 0x00020000,
    0x04000000, 0x40000000, 0x00100000, 0x00010000, 0x00400000, 0x08000000,
    0x00001000, 0x00000020, 0x01000000, 0x00004000, 0x80000000, 0x08000001,
    0x80000000, 0x00000004, 0x00000001, 0x00004000, 0x00400000, 0x00000010,
    0x20000001, 0x00000400, 0x00000001, 0x00040000, 0x00000080, 0x00000006,
    0x00000300, 0x04000000, 0x00000022, 0x40000000, 0x01000800, 0x00400000,
    0x00200800, 0x00000200, 0x00000008, 0x80000000, 0x20200000, 0x00200000,
    0x00000020, 0x00002000, 0x08000000, 0x00040020, 0x00040000, 0x00004002,
    0x00000002, 0x00040000, 0x00000108, 0x00800000, 0x80000101, 0x00020000,
    0x00008000, 0x00000010, 0x00000010, 0x00800000, 0x40000008, 0x80000000,
    0x81000000, 0x40200000, 0x00200000, 0x00200001, 0x00000001, 0x00000001,
    0x20000000, 0x00000200, 0x80000000, 0x00008000, 0x00002000, 0x00000100,
    0x01008000, 0x01000000, 0x20800200, 0x00402410, 0x00000080, 0x00000100,
    0x00080000, 0x00200000, 0x80000000, 0x00004400, 0x00002000, 0x00000004,
    0x08000000, 0x04040001, 0x00010000, 0x00000040, 0x20000000, 0x40000000,
    0x10000800, 0x20000000, 0x00000100, 0x00002010, 0x00001000, 0x00100000,
    0x00100400, 0x00000100, 0x00001000, 0x00004000, 0x08000020, 0x00010100,
    0x02000000, 0x00000010, 0x00000800, 0x00000002, 0x00000400, 0x04000200,
    0x00000080, 0x00000001, 0x04000000, 0x00000400, 0x04000000, 0x00000010,
    0x08004000, 0x00004000, 0x00000002, 0x00002000, 0x00008000, 0x88000008,
    0x00000001, 0x04000000, 0x00000801, 0x01000000, 0x80001000, 0x00002000,
    0x01010100, 0x00000800, 0x00100020, 0x00008000, 0x00000010, 0x88000000,
    0x40001000, 0x00000004, 0x20000000, 0x00420000, 0x00000040, 0x00010000,
    0x00000800, 0x01000000, 0x00008000, 0x04000000, 0x02000000, 0x00000060,
    0x80000000, 0x00000100, 0x00000002, 0x00000010, 0x00400000, 0x00400000,
    0x00000080, 0x08100000, 0x00004000, 0x00000040, 0x20200000, 0x00000200,
    0x00000400, 0x80000000, 0x00080000, 0x00000004, 0x00020000, 0x00004000,
    0x00000020, 0x08000000, 0x40000000, 0x20000000, 0x00000024, 0x00000040,
    0x04000000, 0x20000000, 0x80400000, 0x00000001, 0x00002000, 0x00000800,
    0x04000000, 0x00020010, 0x00000010, 0x00000004, 0x0000f400, 0x00000008,
    0x00800000, 0x08000000, 0x00000008, 0x00000008, 0x40000000, 0x00000800,
    0x00008000, 0x20000000, 0x00000008, 0x00000001, 0x00000800, 0x00200000,
    0x00000001, 0x00800000, 0x00008000, 0x00000200, 0x02000000, 0x00000100,
    0x02000000, 0x00000a00, 0x08000000, 0x00001000, 0x00000800, 0x00000200,
    0x00000001, 0x00010400, 0x00000008, 0x04000000, 0x80000000, 0x04000000,
    0x00020000, 0x40000000, 0x00000400, 0x00000400, 0x00020000, 0x00000001,
    0x00000010, 0x00004000, 0x00000400, 0x00000200, 0x02000000, 0x00000004,
    0x04000000, 0x08000000, 0x00800000, 0x00000080, 0x40000000, 0x00000010,
    0x00100000, 0x00000004, 0x02000000, 0x00000002, 0x00002000, 0x00100000,
    0x40000000, 0x00010000, 0x00000040, 0x00000010, 0x00040000, 0x00000008,
    0x10000000, 0x00000800, 0x00800000, 0x00028000, 0x00080000, 0x00000002,
    0x20000000, 0x00800000, 0x00100000, 0x00000080, 0x20000000, 0x00000001,
    0x00000001, 0x00000020, 0x00000100, 0x00800000, 0x00000002, 0x00000008,
    0x10000000, 0x00002000, 0x00200000, 0x00002000, 0x80000000, 0x00800000,
    0x00020000, 0x00000010, 0x20000000, 0x40000000, 0x00004000, 0x00000800,
    0x20000000, 0x00004000, 0x00000001, 0x00000200, 0x00800000, 0x00800000,
    0x00000001, 0x00000004, 0x00001000, 0x00000020, 0x00000002, 0x00000004,
    0x02000000, 0x00001000, 0x00001000, 0x00000900, 0x00040000, 0x00000200,
    0x80000000, 0x10000800, 0x00400000, 0x10001800, 0x00000400, 0x00000040,
    0x00008000, 0x02000000, 0x00200000, 0x00000400, 0x00000002, 0x00080000,
    0x00020000, 0x00000002, 0x00000080, 0x00000800, 0x00800000, 0x00010000,
    0x00000004, 0x01000000, 0x00400000, 0x20000000, 0x00000010, 0x40000000,
    0x00000080, 0x00020000, 0x10008000, 0x00001000, 0x40000000, 0x00002000,
    0x00501200, 0x00800000, 0x00040000, 0x00080000, 0x40000000, 0x00008000,
    0x10000000, 0x00002040, 0x80000000, 0x00010000, 0x00080000, 0x00040000,
    0x00000002, 0x10000000, 0x00000200, 0x00008000, 0x40000000, 0x00008000,
    0x00000010, 0x80000008, 0x00000200, 0x00000040, 0x00000080, 0x00000001,
    0x10000000, 0x00000001, 0x00002000, 0x00020000, 0x60000004, 0x00400000,
    0x00000004, 0x00010000, 0x00000010, 0x08000000, 0x00000200, 0x04000000,
    0x00100000, 0x00000400, 0x00020200, 0x00080000, 0x00040000, 0x00200000,
    0x00000080, 0x02000000, 0x00004000, 0x00008000, 0x04000000, 0x00000400,
    0x00000800, 0x08000000, 0x00400000, 0x00200000, 0x00400000, 0x00000004,
    0x00000040, 0x00004000, 0x00004000, 0x00000040, 0x00000400, 0x00000100,
    0x00100000, 0x00000200, 0x00000010, 0x00040000, 0x08000000, 0x00000800,
    0x00010000, 0x00000008, 0x04000010, 0x00002000, 0x04000000, 0x01200000,
    0x02000000, 0x00000040, 0x00002000, 0x00000800, 0x00000020};
    }

    const static UnicodeSet ji_Set{const_cast<UnicodeSet::run_t *>(__ji_Set_runs), 757, 0, const_cast<UnicodeSet::bitquad_t *>(__ji_Set_quads), 503, 0};

    /** Code Point Ranges for jian
    [34fa, 34fa], [350b, 350b], [3513, 3513], [3868, 3868], [39b0, 39b0],
    [3a34, 3a34], [3aa0, 3aa0], [3bfa, 3bfa], [3d4e, 3d4e], [3e47, 3e47],
    [412f, 412f], [424d, 424d], [4311, 4311], [4320, 4320], [44f8, 44f8],
    [4510, 4510], [460b, 460b], [468a, 468a], [47c5, 47c5], [47f0, 47f0],
    [4914, 4914], [49d6, 49d6], [4ae1, 4ae1], [4b55, 4b55], [4b59, 4b59],
    [4b60, 4b60], [4bbf, 4bbf], [4be1, 4be1], [4d64, 4d64], [4da2, 4da2],
    [4dac, 4dac], [4ef6, 4ef6], [4f9f, 4f9f], [4ff4, 4ff4], [5065, 5065],
    [5094, 5094], [50e3, 50e3], [50ed, 50ed], [5109, 5109], [517c, 517c],
    [51bf, 51bf], [524d, 524d], [528d, 528d], [54b8, 54b8], [558a, 558a],
    [56dd, 56dd], [5805, 5805], [583f, 583f], [5879, 5879], [5978, 5978],
    [59e6, 59e6], [5b71, 5b71], [5bcb, 5bcb], [5c16, 5c16], [5e34, 5e34],
    [5e75, 5e75], [5efa, 5efa], [5f3f, 5f3f], [60e4, 60e4], [6214, 6214],
    [6229, 6229], [6338, 6338], [63c0, 63c0], [63c3, 63c3], [63f5, 63f5],
    [641b, 641b], [64bf, 64bf], [64f6, 64f6], [6515, 6515], [65d4, 65d4],
    [6695, 6695], [6701, 6701], [67ec, 67ec], [682b, 682b], [6898, 6898],
    [6937, 6937], [693e, 693e], [6957, 6957], [6997, 6997], [6a2b, 6a2b],
    [6a4f, 6a4f], [6aa2, 6aa2], [6abb, 6abb], [6afc, 6afc], [6bb2, 6bb2],
    [6bfd, 6bfd], [6cae, 6cae], [6d0a, 6d0a], [6d80, 6d80], [6dfa, 6dfa],
    [6e1b, 6e1b], [6e54, 6e55], [6f38, 6f38], [6feb, 6feb], [6ffa, 6ffa],
    [7033, 7033], [7038, 7038], [703d, 703d], [714e, 714e], [719e, 719e],
    [71b8, 71b8], [726e, 726e], [728d, 728d], [72b4, 72b4], [73aa, 73aa],
    [73d4, 73d4], [744a, 744a], [7450, 7450], [76e3, 76e3], [7777, 7777],
    [77af, 77af], [77b7, 77b7], [77bc, 77bc], [788a, 788a], [78b1, 78b1],
    [7906, 7906], [791b, 791b], [7a34, 7a34], [7b67, 7b67], [7b8b, 7b8b],
    [7bad, 7bad], [7bb4, 7bb4], [7c21, 7c21], [7c48, 7c48], [7c5b, 7c5b],
    [7ccb, 7ccb], [7dd8, 7dd8], [7e11, 7e11], [7e5d, 7e5d], [7e6d, 7e6d],
    [7e96, 7e96], [7fe6, 7fe6], [807b, 807b], [80a9, 80a9], [8171, 8171],
    [81f6, 81f6], [8266, 8266], [8271, 8271], [831b, 831b], [8327, 8327],
    [8350, 8350], [83c5, 83c5], [83fa, 83fa], [844c, 844c], [8465, 8465],
    [84b9, 84b9], [852a, 852a], [8551, 8551], [85a6, 85a6], [85c6, 85c6],
    [8643, 8643], [87b9, 87b9], [88b8, 88b8], [8949, 8949], [897a, 897a],
    [898b, 898b], [89b5, 89b5], [89b8, 89b8], [8a43, 8a43], [8ad3, 8ad3],
    [8aeb, 8aeb], [8b07, 8b07], [8b56, 8b56], [8b7e, 8b7e], [8c63, 8c63],
    [8ce4, 8ce4], [8d9d, 8d9d], [8dbc, 8dbc], [8dc8, 8dc8], [8e10, 8e10],
    [8e3a, 8e3a], [8e47, 8e47], [8ed2, 8ed2], [8f5e, 8f5e], [918e, 918e],
    [91b6, 91b6], [91f0, 91f0], [9292, 9292], [92d1, 92d1], [92fb, 92fb],
    [9322, 9322], [933d, 933d], [934a, 934a], [9375, 9375], [93e9, 93e9],
    [9427, 9427], [9431, 9431], [9451, 9451], [946f, 946f], [9592, 9593],
    [96aa, 96aa], [976c, 976c], [97ac, 97ac], [97c9, 97c9], [991e, 991e],
    [9930, 9930], [99a2, 99a2], [9a2b, 9a2b], [9b0b, 9b0b], [9c0e, 9c0e],
    [9c14, 9c14], [9c1c, 9c1c], [9c39, 9c39], [9cfd, 9cfd], [9d73, 9d73],
    [9dbc, 9dbc], [9e79, 9e79], [9e7c, 9e7c], [9e89, 9e89], [9eda, 9eda],
    [9eec, 9eec], [9f4a, 9f4a], [20292, 20292], [2035a, 2035a],
    [203c7, 203c7], [2043b, 2043b], [20ad8, 20ad8], [20dc1, 20dc1],
    [20e5f, 20e5f], [20f24, 20f24], [20f71, 20f71], [20fcf, 20fcf],
    [21111, 21111], [21113, 21113], [21176, 21176], [2146f, 2146f],
    [21b35, 21b35], [21b6d, 21b6d], [21e03, 21e03], [21fb0, 21fb0],
    [220ec, 220ec], [2219e, 2219e], [221a6, 221a6], [2236b, 2236b],
    [22406, 22406], [229ba, 229ba], [22a3f, 22a40], [22cda, 22cda],
    [22d48, 22d48], [23616, 23616], [23699, 23699], [2372d, 2372d],
    [23755, 23755], [23837, 23837], [2395e, 2395e], [23b8f, 23b8f],
    [23cf2, 23cf2], [23d13, 23d13], [23f56, 23f56], [23f66, 23f66],
    [24029, 24029], [24112, 24112], [24356, 24356], [249e3, 249e3],
    [24a8b, 24a8b], [24dc3, 24dc3], [25039, 25039], [25287, 25287],
    [25308, 25308], [25340, 25340], [25379, 25379], [25732, 25732],
    [2585d, 2585d], [25887, 25887], [25be6, 25be6], [25cd2, 25cd2],
    [25cdf, 25cdf], [25cf7, 25cf7], [25d31, 25d31], [25ee7, 25ee7],
    [25f50, 25f50], [26072, 26072], [26087, 26087], [262f0, 262f0],
    [263d4, 263d4], [267ac, 267ac], [268a3, 268a3], [268e8, 268e8],
    [26a75, 26a75], [26e8d, 26e8d], [26e98, 26e98], [26f47, 26f47],
    [26fb6, 26fb6], [27007, 27007], [27035, 27035], [27082, 27082],
    [27086, 27086], [270a2, 270a2], [27146, 27146], [275f8, 275f8],
    [27667, 27667], [27896, 27896], [27928, 27928], [2793d, 2793d],
    [27948, 27948], [279c5, 279c5], [27b2b, 27b2b], [27b88, 27b88],
    [27ca8, 27ca8], [27e18, 27e18], [28352, 28352], [283ab, 283ab],
    [283ca, 283ca], [28525, 28525], [28891, 28891], [288c7, 288c7],
    [288dd, 288dd], [28904, 28904], [28a85, 28a85], [28c13, 28c13],
    [28ce1, 28ce1], [28cff, 28cff], [28d3e, 28d3e], [28d6d, 28d6d],
    [28dd3, 28dd3], [2917c, 2917c], [291af, 291af], [291b7, 291b7],
    [291cf, 291cf], [2924d, 2924d], [29254, 29254], [292cb, 292cb],
    [2932f, 2932f], [2934e, 2934e], [29392, 29392], [296e7, 296e7],
    [297d7, 297d7], [2990a, 2990a], [29c43, 29c43], [29ed8, 29ed8],
    [29f5c, 29f5c], [2a0cb, 2a0cb], [2a0db, 2a0db], [2a1bf, 2a1bf],
    [2a266, 2a266], [2a2c1, 2a2c1], [2a3ca, 2a3ca], [2a43b, 2a43b],
    [2a4ab, 2a4ab], [2a4b9, 2a4b9], [2a668, 2a668]**/


    namespace {
    const static UnicodeSet::run_t __jian_Set_runs[] = {
    {Empty, 423}, {Mixed, 2}, {Empty, 26}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
    {Empty, 13}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 9}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 9}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 8}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 3},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 5}, {Mixed, 3}, {Empty, 7}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 9}, {Mixed, 3}, {Empty, 3}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 3}, {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 3}, {Mixed, 2},
    {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 4}, {Empty, 4}, {Mixed, 1},
    {Empty, 3}, {Mixed, 3}, {Empty, 1}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 1}, {Mixed, 3},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 17}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 1}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 3},
    {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 9}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 2841}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 52}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 53},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 19}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 17}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 29}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 18}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 10},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 29388}};
    const static UnicodeSet::bitquad_t  __jian_Set_quads[] = {
    0x04000000, 0x00080800, 0x00000100, 0x00010000, 0x00100000, 0x00000001,
    0x04000000, 0x00004000, 0x00000080, 0x00008000, 0x00002000, 0x00020000,
    0x00000001, 0x01000000, 0x00010000, 0x00000800, 0x00000400, 0x00000020,
    0x00010000, 0x00100000, 0x00400000, 0x00000002, 0x02200000, 0x00000001,
    0x80000000, 0x00000002, 0x00000010, 0x00001004, 0x00400000, 0x80000000,
    0x00100000, 0x00000020, 0x00100000, 0x00002008, 0x00000200, 0x10000000,
    0x80000000, 0x00002000, 0x00002000, 0x01000000, 0x00000400, 0x20000000,
    0x00000020, 0x80000000, 0x02000000, 0x01000000, 0x00000040, 0x00020000,
    0x00000800, 0x00400000, 0x00100000, 0x00200000, 0x04000000, 0x80000000,
    0x00000010, 0x00100000, 0x00000200, 0x01000000, 0x00000009, 0x00200000,
    0x08000000, 0x80000000, 0x00400000, 0x00200000, 0x00100000, 0x00200000,
    0x00000002, 0x00001000, 0x00000800, 0x01000000, 0x40800000, 0x00800000,
    0x00800000, 0x00000800, 0x00008000, 0x08000004, 0x10000000, 0x00040000,
    0x20000000, 0x00004000, 0x00000400, 0x00000001, 0x04000000, 0x08000000,
    0x00300000, 0x01000000, 0x04000800, 0x21080000, 0x00004000, 0x40000000,
    0x01000000, 0x00004000, 0x00002000, 0x00100000, 0x00000400, 0x00100000,
    0x00010400, 0x00000008, 0x00800000, 0x10808000, 0x00000400, 0x00020000,
    0x08000040, 0x00100000, 0x00000080, 0x00000800, 0x00102000, 0x00000002,
    0x08000100, 0x00000800, 0x01000000, 0x00020000, 0x20000000, 0x00002000,
    0x00400000, 0x00000040, 0x08000000, 0x00000200, 0x00020000, 0x00400000,
    0x00020040, 0x08000000, 0x00000080, 0x00010000, 0x00000020, 0x04000000,
    0x00001000, 0x00000020, 0x02000000, 0x00000400, 0x00020000, 0x00000040,
    0x00000040, 0x00000008, 0x02000000, 0x01000000, 0x00000200, 0x04000000,
    0x00000800, 0x01200000, 0x00000008, 0x00080000, 0x00000800, 0x00000080,
    0x00400000, 0x40000000, 0x00000008, 0x00000010, 0x20000000, 0x10000000,
    0x00000100, 0x00010000, 0x04000000, 0x00000080, 0x00040000, 0x40000000,
    0x00004000, 0x00400000, 0x00010000, 0x00040000, 0x00020000, 0x08000000,
    0x20000004, 0x00000400, 0x00200000, 0x00000200, 0x00020080, 0x00020000,
    0x00008000, 0x000c0000, 0x00000400, 0x00001000, 0x00001000, 0x00000200,
    0x40000000, 0x00010000, 0x00000004, 0x00000800, 0x00000800, 0x10104000,
    0x02000000, 0x20000000, 0x00080000, 0x10000000, 0x12000000, 0x00000200,
    0x04000000, 0x00001000, 0x00000400, 0x00040000, 0x04000000, 0x00000080,
    0x08000000, 0x01000000, 0x00000002, 0x80000000, 0x00000010, 0x00020000,
    0x00008000, 0x000a0000, 0x00400000, 0x00008000, 0x00200000, 0x00002000,
    0x00000008, 0x00010000, 0x00001000, 0x40000000, 0x00000040, 0x00000800,
    0x00000040, 0x04000000, 0x80000000, 0x00000001, 0x04000000, 0x00000100,
    0x00400000, 0x02000000, 0x00002000, 0x00200000, 0x00800000, 0x40000000,
    0x00008000, 0x00040000, 0x00080000, 0x00400000, 0x00000040, 0x00000200,
    0x00040000, 0x00400000, 0x00000008, 0x00000800, 0x00000008, 0x02000000,
    0x00000080, 0x00000100, 0x00000001, 0x02000000, 0x00040000, 0x20000000,
    0x00000080, 0x00000040, 0x80040000, 0x00800000, 0x00020000, 0x00000080,
    0x00010000, 0x00040000, 0x00000080, 0x00010000, 0x00100000, 0x00001000,
    0x00000008, 0x00000100, 0x00200000, 0x01002000, 0x00000080, 0x00400000,
    0x00000080, 0x00200000, 0x00000044, 0x00000004, 0x00000040, 0x01000000,
    0x00000080, 0x00400000, 0x20000100, 0x00000100, 0x00000020, 0x00000800,
    0x00000100, 0x00000100, 0x01000000, 0x00040000, 0x00000800, 0x00000400,
    0x00000020, 0x00020000, 0x20000080, 0x00000010, 0x00000020, 0x00080000,
    0x80000002, 0x40000000, 0x00002000, 0x00080000, 0x10000000, 0x00808000,
    0x00008000, 0x00102000, 0x00000800, 0x00008000, 0x00004000, 0x00040000,
    0x00000080, 0x00800000, 0x00000400, 0x00000008, 0x01000000, 0x10000000,
    0x08000800, 0x80000000, 0x00000040, 0x00000002, 0x00000400, 0x08000000,
    0x02000800, 0x00000100};
    }

    const static UnicodeSet jian_Set{const_cast<UnicodeSet::run_t *>(__jian_Set_runs), 485, 0, const_cast<UnicodeSet::bitquad_t *>(__jian_Set_quads), 308, 0};

    /** Code Point Ranges for chong
    [34fd, 34fd], [391d, 391d], [39e4, 39e4], [3b94, 3b94], [3cd8, 3cd8],
    [3e50, 3e50], [408c, 408c], [4194, 4194], [41b9, 41b9], [432c, 432c],
    [462a, 462a], [4751, 4751], [4874, 4874], [4cef, 4cef], [5045, 5045],
    [50ad, 50ad], [50ee, 50ee], [5145, 5145], [55a0, 55a0], [5603, 5603],
    [57eb, 57eb], [5bf5, 5bf5], [5d07, 5d07], [5fb8, 5fb8], [5fe1, 5fe1],
    [6183, 6183], [61a7, 61a7], [63f0, 63f0], [644f, 644f], [6a01, 6a01],
    [6a66, 6a66], [6c96, 6c96], [6d7a, 6d7a], [6d8c, 6d8c], [6f34, 6f34],
    [6f7c, 6f7c], [70db, 70db], [721e, 721e], [73eb, 73eb], [75cb, 75cb],
    [76c5, 76c5], [794c, 794c], [79cd, 79cd], [7a2e, 7a2e], [7ddf, 7ddf],
    [7f7f, 7f7f], [7fc0, 7fc0], [8202, 8202], [825f, 825f], [8327, 8327],
    [833a, 833a], [866b, 866b], [8769, 8769], [87f2, 87f2], [885d, 885d],
    [8908, 8908], [8e56, 8e56], [8e71, 8e71], [916e, 916e], [91cd, 91cd],
    [9283, 9283], [9680, 9680], [20459, 20459], [20764, 20764],
    [207cd, 207cd], [21fc2, 21fc2], [22584, 22584], [226d2, 226d2],
    [22748, 22748], [22879, 22879], [2342f, 2342f], [23441, 23441],
    [25075, 25075], [2517b, 2517b], [25aef, 25aef], [25b31, 25b31],
    [25b65, 25b65], [2645d, 2645d], [267db, 267db], [2740d, 2740d],
    [2774e, 2774e], [27a43, 27a43], [27f19, 27f19], [27f29, 27f29],
    [2822e, 2822e], [285bc, 285bc], [286f1, 286f1], [28929, 28929],
    [28cc1, 28cc1], [28fff, 28fff], [29143, 29143], [2915e, 2915e],
    [29328, 29328], [29498, 29498], [29716, 29716], [29789, 29789],
    [2978b, 2978b], [2996b, 2996b], [29a73, 29a73], [29c00, 29c00],
    [2a13b, 2a13b], [2a148, 2a148], [2a156, 2a156], [2a3bd, 2a3bd],
    [2a492, 2a492]**/


    namespace {
    const static UnicodeSet::run_t __chong_Set_runs[] = {
    {Empty, 423}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 17}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 12},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 41}, {Mixed, 2}, {Empty, 23}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 2925}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 191}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 93}, {Mixed, 2}, {Empty, 224}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 75}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 70}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 97}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 37}, {Mixed, 2}, {Empty, 23}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 40}, {Mixed, 2}, {Empty, 18}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 29403}};
    const static UnicodeSet::bitquad_t  __chong_Set_quads[] = {
    0x20000000, 0x20000000, 0x00000010, 0x00100000, 0x01000000, 0x00010000,
    0x00001000, 0x00100000, 0x02000000, 0x00001000, 0x00000400, 0x00020000,
    0x00100000, 0x00008000, 0x00000020, 0x00002000, 0x00004000, 0x00000020,
    0x00000001, 0x00000008, 0x00000800, 0x00200000, 0x00000080, 0x01000000,
    0x00000002, 0x00000008, 0x00000080, 0x00010000, 0x00008000, 0x00000002,
    0x00000040, 0x00400000, 0x04000000, 0x00001000, 0x00100000, 0x10000000,
    0x08000000, 0x40000000, 0x00000800, 0x00000800, 0x00000020, 0x00001000,
    0x00002000, 0x00004000, 0x80000000, 0x80000000, 0x00000001, 0x00000004,
    0x80000000, 0x04000080, 0x00000800, 0x00000200, 0x00040000, 0x20000000,
    0x00000100, 0x00400000, 0x00020000, 0x00004000, 0x00002000, 0x00000008,
    0x00000001, 0x02000000, 0x00000010, 0x00002000, 0x00000004, 0x00000010,
    0x00040000, 0x00000100, 0x02000000, 0x00008000, 0x00000002, 0x00200000,
    0x08000000, 0x00008000, 0x00020000, 0x00000020, 0x20000000, 0x08000000,
    0x00002000, 0x00004000, 0x00000008, 0x02000000, 0x00000200, 0x00004000,
    0x10000000, 0x00020000, 0x00000200, 0x00000002, 0x80000000, 0x40000008,
    0x00000100, 0x01000000, 0x00400000, 0x00000a00, 0x00000800, 0x00080000,
    0x00000001, 0x08000000, 0x00400100, 0x20000000, 0x00040000};
    }

    const static UnicodeSet chong_Set{const_cast<UnicodeSet::run_t *>(__chong_Set_runs), 189, 0, const_cast<UnicodeSet::bitquad_t *>(__chong_Set_quads), 101, 0};

    /** Code Point Ranges for deng
    [3501, 3501], [3caa, 3caa], [4532, 4532], [465e, 465e], [482c, 482c],
    [4bb4, 4bb4], [4cfe, 4cfe], [50dc, 50dc], [51f3, 51f3], [5654, 5654],
    [58b1, 58b1], [5b01, 5b01], [5d9d, 5d9d], [6195, 6195], [6225, 6225],
    [6a59, 6a59], [6f84, 6f84], [706f, 706f], [71c8, 71c8], [7492, 7492],
    [767b, 767b], [77aa, 77aa], [78f4, 78f4], [7af3, 7af3], [7b49, 7b49],
    [7c26, 7c26], [89b4, 89b4], [8c4b, 8c4b], [8e6c, 8e6c], [9093, 9093],
    [9127, 9127], [9419, 9419], [96a5, 96a5], [21994, 21994],
    [22bed, 22bed], [22fe4, 22fe4], [23a5f, 23a5f], [24b98, 24b98],
    [24e8c, 24e8c], [24f36, 24f36], [24fa2, 24fa2], [26a6b, 26a6b],
    [2713c, 2713c], [27f8a, 27f8a], [28107, 28107], [283a4, 283a4],
    [28bb4, 28bb4], [28dbf, 28dbf], [29350, 29350], [297ac, 297ac],
    [29bc7, 29bc7], [2a337, 2a337], [2a46c, 2a46c], [2a498, 2a498],
    [2a50f, 2a50f]**/


    namespace {
    const static UnicodeSet::run_t __deng_Set_runs[] = {
    {Empty, 424}, {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 67},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 64}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 107}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 3094},
    {Mixed, 1}, {Empty, 146}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 82}, {Mixed, 1}, {Empty, 137}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 213}, {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 114},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 63}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 58}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 29399}};
    const static UnicodeSet::bitquad_t  __deng_Set_quads[] = {
    0x00000002, 0x00000400, 0x00040000, 0x40000000, 0x00001000, 0x00100000,
    0x40000000, 0x10000000, 0x00080000, 0x00100000, 0x00020000, 0x00000002,
    0x20000000, 0x00200000, 0x00000020, 0x02000000, 0x00000010, 0x00008000,
    0x00000100, 0x00040000, 0x08000000, 0x00000400, 0x00100000, 0x00080000,
    0x00000200, 0x00000040, 0x00100000, 0x00000800, 0x00001000, 0x00080000,
    0x00000080, 0x02000000, 0x00000020, 0x00100000, 0x00002000, 0x00000010,
    0x80000000, 0x01000000, 0x00001000, 0x00400000, 0x00000004, 0x00000800,
    0x10000000, 0x00000400, 0x00000080, 0x00000010, 0x00100000, 0x80000000,
    0x00010000, 0x00001000, 0x00000080, 0x00800000, 0x00001000, 0x01000000,
    0x00008000};
    }

    const static UnicodeSet deng_Set{const_cast<UnicodeSet::run_t *>(__deng_Set_runs), 109, 0, const_cast<UnicodeSet::bitquad_t *>(__deng_Set_quads), 55, 0};

    /** Code Point Ranges for lin
    [3502, 3502], [375d, 375d], [3858, 3858], [3a06, 3a06], [3de0, 3de0],
    [426e, 426e], [4572, 4572], [45f2, 45f2], [468f, 468f], [46ac, 46ac],
    [4ad0, 4ad0], [4af0, 4af0], [4e83, 4e83], [4efb, 4efb], [4f08, 4f08],
    [50ef, 50ef], [51a7, 51a7], [51dc, 51dc], [53b8, 53b8], [541d, 541d],
    [5549, 5549], [58e3, 58e3], [5d0a, 5d0a], [5d99, 5d99], [5ee9, 5ee9],
    [60cf, 60cf], [61d4, 61d4], [649b, 649b], [65b4, 65b4], [667d, 667d],
    [66bd, 66bd], [6797, 6797], [6a49, 6a49], [6aa9, 6aa9], [6dcb, 6dcb],
    [6e93, 6e93], [6ef2, 6ef2], [6f7e, 6f7e], [7036, 7036], [711b, 711b],
    [71d0, 71d0], [735c, 735c], [73aa, 73aa], [7433, 7433], [7498, 7498],
    [7510, 7510], [7584, 7584], [75f3, 75f3], [765b, 765b], [77b5, 77b5],
    [7884, 7884], [78f7, 78f7], [7a1f, 7a1f], [7b96, 7b96], [7ca6, 7ca6],
    [7cbc, 7cbc], [7e57, 7e57], [7ff7, 7ff7], [81a6, 81a6], [81e8, 81e8],
    [83fb, 83fb], [85fa, 85fa], [8cc3, 8cc3], [8e78, 8e78], [8e99, 8e99],
    [8eaa, 8eaa], [8f54, 8f54], [8f65, 8f65], [9074, 9074], [9130, 9130],
    [93fb, 93fb], [95b5, 95b5], [96a3, 96a3], [9716, 9716], [9872, 9872],
    [9a4e, 9a4e], [9b7f, 9b7f], [9c57, 9c57], [9e9f, 9e9f], [2043c, 2043c],
    [204ee, 204ee], [210e6, 210e6], [21b1c, 21b1c], [21c1a, 21c1a],
    [21cde, 21cde], [21db1, 21db1], [21e47, 21e47], [21eeb, 21eeb],
    [21fe0, 21fe0], [231f0, 231f0], [240b6, 240b6], [2430e, 2430e],
    [243ad, 243ad], [245f7, 245f7], [254c6, 254c6], [25cde, 25cde],
    [25d92, 25d92], [25dd6, 25dd6], [25ecb, 25ecb], [25f2d, 25f2d],
    [26eb8, 26eb8], [270ee, 270ee], [27594, 27594], [27c82, 27c82],
    [27d67, 27d67], [27d86, 27d86], [27e69, 27e69], [283e8, 283e8],
    [28e3b, 28e3b], [297bb, 297bb], [298d6, 298d6], [29c6c, 29c6c],
    [29d20, 29d20], [29edc, 29edc]**/


    namespace {
    const static UnicodeSet::run_t __lin_Set_runs[] = {
    {Empty, 424}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 32}, {Mixed, 2},
    {Empty, 28}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 14},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 12}, {Mixed, 3}, {Empty, 4}, {Mixed, 2}, {Empty, 7},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 2860}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 95},
    {Mixed, 1}, {Empty, 80}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 143}, {Mixed, 1},
    {Empty, 117}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 118}, {Mixed, 1},
    {Empty, 63}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 123},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 81}, {Mixed, 1}, {Empty, 75},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 29449}};
    const static UnicodeSet::bitquad_t  __lin_Set_quads[] = {
    0x00000004, 0x20000000, 0x01000000, 0x00000040, 0x00000001, 0x00004000,
    0x00040000, 0x00040000, 0x00008000, 0x00001000, 0x00010000, 0x00010000,
    0x00000008, 0x08000000, 0x00000100, 0x00008000, 0x00000080, 0x10000000,
    0x01000000, 0x20000000, 0x00000200, 0x00000008, 0x00000400, 0x02000000,
    0x00000200, 0x00008000, 0x00100000, 0x08000000, 0x00100000, 0x20000000,
    0x20000000, 0x00800000, 0x00000200, 0x00000200, 0x00000800, 0x00080000,
    0x00040000, 0x40000000, 0x00400000, 0x08000000, 0x00010000, 0x10000000,
    0x00000400, 0x00080000, 0x01000000, 0x00010000, 0x00000010, 0x00080000,
    0x08000000, 0x00200000, 0x00000010, 0x00800000, 0x80000000, 0x00400000,
    0x10000040, 0x00800000, 0x00800000, 0x00000040, 0x00000100, 0x08000000,
    0x04000000, 0x00000008, 0x01000000, 0x02000000, 0x00000400, 0x00100000,
    0x00000020, 0x00100000, 0x00010000, 0x08000000, 0x00200000, 0x00000008,
    0x00400000, 0x00040000, 0x00004000, 0x80000000, 0x00800000, 0x80000000,
    0x10000000, 0x00004000, 0x00000040, 0x10000000, 0x04000000, 0x40000000,
    0x00020000, 0x00000080, 0x00000800, 0x00000001, 0x00010000, 0x00400000,
    0x00004000, 0x00002000, 0x00800000, 0x00000040, 0x40000000, 0x00040000,
    0x00400000, 0x00000800, 0x00002000, 0x01000000, 0x00004000, 0x00100000,
    0x00000004, 0x00000080, 0x00000040, 0x00000200, 0x00000100, 0x08000000,
    0x08000000, 0x00400000, 0x00001000, 0x00000001, 0x10000000};
    }

    const static UnicodeSet lin_Set{const_cast<UnicodeSet::run_t *>(__lin_Set_runs), 211, 0, const_cast<UnicodeSet::bitquad_t *>(__lin_Set_quads), 113, 0};

    /** Code Point Ranges for jue
    [3503, 3503], [3522, 3522], [3a71, 3a71], [3b48, 3b48], [3b7e, 3b7e],
    [3d50, 3d50], [3dfe, 3dfe], [3e5f, 3e5f], [3ed5, 3ed5], [4017, 4017],
    [4077, 4077], [41f6, 41f6], [42bd, 42bd], [4373, 4373], [43d0, 43d0],
    [4418, 4418], [463f, 463f], [4660, 4660], [47b5, 47b5], [47b7, 47b7],
    [47fe, 47fe], [4807, 4807], [4848, 4848], [48e4, 48e4], [490e, 490e],
    [49bc, 49bc], [4ccf, 4ccf], [4d82, 4d82], [4e59, 4e59], [4e85, 4e85],
    [5014, 5014], [5095, 5095], [5214, 5214], [5282, 5282], [5337, 5337],
    [53a5, 53a5], [53d5, 53d5], [5437, 5437], [5573, 5573], [5658, 5658],
    [5671, 5671], [56bc, 56bc], [57c6, 57c6], [58c6, 58c6], [592c, 592c],
    [599c, 599c], [5b53, 5b53], [5c48, 5c48], [5c69, 5c69], [5d1b, 5d1b],
    [5d2b, 5d2b], [5da1, 5da1], [5f21, 5f21], [5f4f, 5f4f], [61b0, 61b0],
    [6204, 6204], [6289, 6289], [6354, 6354], [6398, 6398], [6485, 6485],
    [64a7, 64a7], [652b, 652b], [67fd, 67fd], [6877, 6877], [688f, 688f],
    [69cb, 69cb], [6a5b, 6a5b], [6b14, 6b14], [6b2e, 6b2e], [6b8c, 6b8c],
    [6c12, 6c12], [6c7a, 6c7a], [6cec, 6cec], [6f4f, 6f4f], [71cb, 71cb],
    [721d, 721d], [7235, 7235], [72c2, 72c2], [7357, 7357], [7383, 7383],
    [73a6, 73a6], [73a8, 73a8], [7474, 7474], [749a, 749a], [75a6, 75a6],
    [761a, 761a], [77cd, 77cd], [77de, 77de], [77e1, 77e1], [7804, 7804],
    [7a71, 7a71], [7a74, 7a74], [7d55, 7d55], [7e51, 7e51], [7e58, 7e58],
    [811a, 811a], [81c4, 81c4], [82b5, 82b5], [855d, 855e], [8568, 8568],
    [8673, 8673], [8697, 8697], [86d9, 86d9], [87e8, 87e8], [883c, 883c],
    [88a6, 88a6], [89ba, 89ba], [89d2, 89d2], [89d6, 89d6], [89f3, 89f3],
    [8a23, 8a23], [8ab3, 8ab3], [8b4e, 8b4e], [8c9c, 8c9c], [8d7d, 8d7d],
    [8d89, 8d89], [8db9, 8db9], [8e76, 8e76], [8e7b, 8e7b], [8ea9, 8ea9],
    [8f03, 8f03], [902b, 902b], [920c, 920c], [940d, 940d], [941d, 941d],
    [9481, 9481], [95cb, 95cb], [95d5, 95d5], [97bd, 97bd], [99c3, 99c3],
    [9a24, 9a24], [9ac9, 9ac9], [9c56, 9c56], [9d02, 9d02], [9d8c, 9d8c],
    [9de2, 9de2], [9fa3, 9fa3], [20014, 20014], [2010c, 2010c],
    [20111, 20111], [202ac, 202ac], [203ae, 203ae], [2073e, 2073e],
    [208a4, 208a4], [20a0a, 20a0a], [20ac3, 20ac3], [20db8, 20db8],
    [21205, 21205], [216a0, 216a0], [21c97, 21c97], [21cfe, 21cfe],
    [21f9c, 21f9c], [2206a, 2206a], [223b9, 223b9], [223f7, 223f7],
    [22531, 22531], [225a6, 225a6], [22a0f, 22a0f], [22a6f, 22a6f],
    [22bc5, 22bc5], [22c7a, 22c7a], [22d2d, 22d2d], [23161, 23161],
    [235ac, 235ac], [23a22, 23a22], [23b0e, 23b0e], [246e6, 246e6],
    [247b4, 247b4], [247ce, 247ce], [24e4b, 24e4b], [24f17, 24f17],
    [25134, 25134], [2518c, 2518c], [2523e, 2523e], [253d8, 253d8],
    [25572, 25572], [256ef, 256ef], [25918, 25918], [25a8a, 25a8a],
    [25fae, 25fae], [26050, 26050], [263c5, 263c5], [264d0, 264d0],
    [266f2, 266f2], [26812, 26812], [26a98, 26a98], [27355, 27355],
    [275eb, 275eb], [27743, 27743], [278f8, 278f8], [2793c, 2793c],
    [2794e, 2794e], [27bab, 27bac], [27c5d, 27c5d], [27e90, 27e90],
    [27f28, 27f28], [27f78, 27f78], [27fb5, 27fb5], [27ffa, 27ffa],
    [282bf, 282bf], [283f9, 283f9], [287e0, 287e0], [28b10, 28b10],
    [28c1c, 28c1c], [28f0e, 28f0e], [28f31, 28f31], [292ba, 292ba],
    [29321, 29321], [29377, 29377], [293fa, 293fa], [294fb, 294fb],
    [299cf, 299cf], [299e1, 299e1], [29a97, 29a97], [29c28, 29c28],
    [2a060, 2a060], [2a234, 2a234], [2a59c, 2a59c], [2a685, 2a685]**/


    namespace {
    const static UnicodeSet::run_t __jue_Set_runs[] = {
    {Empty, 424}, {Mixed, 2}, {Empty, 41}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 4},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 2},
    {Empty, 18}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 5}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 3},
    {Empty, 18}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 20}, {Mixed, 2}, {Empty, 7}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 7}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6},
    {Mixed, 3}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 2818}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 94}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 51}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 69}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 23},
    {Mixed, 2}, {Empty, 27}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 38},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 29387}};
    const static UnicodeSet::bitquad_t  __jue_Set_quads[] = {
    0x00000008, 0x00000004, 0x00020000, 0x00000100, 0x40000000, 0x00010000,
    0x40000000, 0x80000000, 0x00200000, 0x00800000, 0x00800000, 0x00400000,
    0x20000000, 0x00080000, 0x00010000, 0x01000000, 0x80000000, 0x00000001,
    0x00a00000, 0x40000000, 0x00000080, 0x00000100, 0x00000010, 0x00004000,
    0x10000000, 0x00008000, 0x00000004, 0x02000000, 0x00000020, 0x00100000,
    0x00200000, 0x00100000, 0x00000004, 0x00800000, 0x00000020, 0x00200000,
    0x00800000, 0x00080000, 0x01000000, 0x00020000, 0x10000000, 0x00000040,
    0x00000040, 0x00001000, 0x10000000, 0x00080000, 0x00000100, 0x00000200,
    0x08000000, 0x00000800, 0x00000002, 0x00000002, 0x00008000, 0x00010000,
    0x00000010, 0x00000200, 0x00100000, 0x01000000, 0x00000020, 0x00000080,
    0x00000800, 0x20000000, 0x00800000, 0x00008000, 0x00000800, 0x08000000,
    0x00100000, 0x00004000, 0x00001000, 0x00040000, 0x04000000, 0x00001000,
    0x00008000, 0x00000800, 0x20000000, 0x00200000, 0x00000004, 0x00800000,
    0x00000008, 0x00000140, 0x00100000, 0x04000000, 0x00000040, 0x04000000,
    0x40002000, 0x00000002, 0x00000010, 0x00120000, 0x00200000, 0x01020000,
    0x04000000, 0x00000010, 0x00200000, 0x60000000, 0x00000100, 0x00080000,
    0x00800000, 0x02000000, 0x00000100, 0x10000000, 0x00000040, 0x04000000,
    0x00440000, 0x00080000, 0x00000008, 0x00080000, 0x00004000, 0x10000000,
    0x20000000, 0x00000200, 0x02000000, 0x08400000, 0x00000200, 0x00000008,
    0x00000800, 0x00001000, 0x20002000, 0x00000002, 0x00200800, 0x20000000,
    0x00000008, 0x00000010, 0x00000200, 0x00400000, 0x00000004, 0x00001000,
    0x00000004, 0x00000008, 0x00100000, 0x00021000, 0x00001000, 0x00004000,
    0x40000000, 0x00000010, 0x00000400, 0x00000008, 0x01000000, 0x00000020,
    0x00000001, 0x00800000, 0x40000000, 0x10000000, 0x00000400, 0x02000000,
    0x00800000, 0x00020000, 0x00000040, 0x00008000, 0x00008000, 0x00000020,
    0x04000000, 0x00002000, 0x00000002, 0x00001000, 0x00000004, 0x00004000,
    0x00000040, 0x00100000, 0x00004000, 0x00000800, 0x00800000, 0x00100000,
    0x00001000, 0x40000000, 0x01000000, 0x00040000, 0x00008000, 0x01000000,
    0x00000400, 0x00004000, 0x00010000, 0x00000020, 0x00010000, 0x00040000,
    0x00040000, 0x01000000, 0x00200000, 0x00000800, 0x00000008, 0x01000000,
    0x10000000, 0x00004000, 0x00001800, 0x20000000, 0x00010000, 0x00000100,
    0x01000000, 0x00200000, 0x04000000, 0x80000000, 0x02000000, 0x00000001,
    0x00010000, 0x10000000, 0x00004000, 0x00020000, 0x04000000, 0x00000002,
    0x00800000, 0x04000000, 0x08000000, 0x00008000, 0x00000002, 0x00800000,
    0x00000100, 0x00000001, 0x00100000, 0x10000000, 0x00000020};
    }

    const static UnicodeSet jue_Set{const_cast<UnicodeSet::run_t *>(__jue_Set_runs), 365, 0, const_cast<UnicodeSet::bitquad_t *>(__jue_Set_quads), 209, 0};

    /** Code Point Ranges for xue
    [3503, 3503], [3522, 3522], [3570, 3570], [35b8, 35b8], [35fe, 35fe],
    [37bd, 37bd], [385c, 385c], [399c, 399c], [3a39, 3a39], [3c12, 3c12],
    [3de4, 3de4], [3ee1, 3ee1], [3ff1, 3ff1], [4017, 4017], [419d, 419d],
    [41b7, 41b7], [42c9, 42c9], [4380, 4380], [44b8, 44b8], [46ce, 46ce],
    [4915, 4915], [4991, 4991], [4afc, 4afc], [4b02, 4b02], [4c51, 4c51],
    [4e74, 4e74], [5437, 5437], [54ee, 54ee], [5671, 5671], [56af, 56af],
    [5779, 5779], [58c6, 58c6], [5b78, 5b78], [5ca4, 5ca4], [5da8, 5da8],
    [6034, 6034], [6585, 6585], [6856, 6856], [6c7a, 6c7a], [6ce7, 6ce7],
    [6cec, 6cec], [6ec8, 6ec8], [6fa9, 6fa9], [7025, 7025], [7094, 7094],
    [71e2, 71e2], [72d8, 72d8], [75a6, 75a6], [75b6, 75b6], [77b2, 77b2],
    [77c6, 77c6], [7a74, 7a74], [8313, 8313], [859b, 859b], [8840, 8840],
    [8895, 8895], [89f7, 89f7], [8b14, 8b14], [8d90, 8d90], [8e05, 8e05],
    [8e7b, 8e7b], [8fa5, 8fa5], [96ea, 96ea], [9774, 9774], [97e1, 97e1],
    [9c48, 9c48], [9dfd, 9dfd], [22a8e, 22a8e], [22bf3, 22bf3],
    [22f3a, 22f3a], [2339b, 2339b], [239cc, 239cc], [239e1, 239e1],
    [239f5, 239f5], [23aa8, 23aa8], [23ead, 23ead], [24030, 24030],
    [241f3, 241f3], [25023, 25023], [2510e, 2510e], [25112, 25112],
    [25134, 25134], [25167, 25167], [2640d, 2640d], [26c3e, 26c3e],
    [27262, 27262], [272cd, 272cd], [27517, 27517], [27b9e, 27b9e],
    [27e17, 27e17], [28082, 28082], [28463, 28463], [284b2, 284b2],
    [28a3a, 28a3a], [28b41, 28b41], [292fe, 292fe], [2930a, 2930a],
    [295b1, 295b1], [295b6, 295b6], [29dab, 29dab], [2a0c5, 2a0c5]**/


    namespace {
    const static UnicodeSet::run_t __xue_Set_runs[] = {
    {Empty, 424}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 11}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 15}, {Mixed, 2},
    {Empty, 20}, {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 3172}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 49}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 113}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 148},
    {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 51},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 60}, {Mixed, 2},
    {Empty, 20}, {Mixed, 1}, {Empty, 63}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 29433}};
    const static UnicodeSet::bitquad_t  __xue_Set_quads[] = {
    0x00000008, 0x00000004, 0x00010000, 0x01000000, 0x40000000, 0x20000000,
    0x10000000, 0x10000000, 0x02000000, 0x00040000, 0x00000010, 0x00000002,
    0x00020000, 0x00800000, 0x20000000, 0x00800000, 0x00000200, 0x00000001,
    0x01000000, 0x00004000, 0x00200000, 0x00020000, 0x10000000, 0x00000004,
    0x00020000, 0x00100000, 0x00800000, 0x00004000, 0x00020000, 0x00008000,
    0x02000000, 0x00000040, 0x01000000, 0x00000010, 0x00000100, 0x00100000,
    0x00000020, 0x00400000, 0x04000000, 0x00001080, 0x00000100, 0x00000200,
    0x00000020, 0x00100000, 0x00000004, 0x01000000, 0x00400040, 0x00040000,
    0x00000040, 0x00100000, 0x00080000, 0x08000000, 0x00000001, 0x00200000,
    0x00800000, 0x00100000, 0x00010000, 0x00000020, 0x08000000, 0x00000020,
    0x00000400, 0x00100000, 0x00000002, 0x00000100, 0x20000000, 0x00004000,
    0x00080000, 0x04000000, 0x08000000, 0x00001000, 0x00200002, 0x00000100,
    0x00002000, 0x00010000, 0x00080000, 0x00000008, 0x00044000, 0x00100000,
    0x00000080, 0x00002000, 0x40000000, 0x00000004, 0x00002000, 0x00800000,
    0x40000000, 0x00800000, 0x00000004, 0x00000008, 0x00040000, 0x04000000,
    0x00000002, 0x40000000, 0x00000400, 0x00420000, 0x00000800, 0x00000020};
    }

    const static UnicodeSet xue_Set{const_cast<UnicodeSet::run_t *>(__xue_Set_runs), 177, 0, const_cast<UnicodeSet::bitquad_t *>(__xue_Set_quads), 96, 0};

    /** Code Point Ranges for xiao
    [3505, 3505], [357a, 357a], [36a0, 36a0], [390a, 390a], [3a4b, 3a4b],
    [3aa3, 3aa3], [3b81, 3b81], [3c96, 3c96], [3d7f, 3d7f], [3e72, 3e72],
    [3e92, 3e92], [4270, 4270], [42a5, 42a5], [4303, 4303], [4384, 4384],
    [4439, 4439], [4495, 4495], [4567, 4567], [47c1, 47c1], [4975, 4975],
    [4a2d, 4a2d], [4b12, 4b12], [4b18, 4b18], [4cc2, 4cc2], [4ccb, 4ccb],
    [4d1b, 4d1b], [4f7c, 4f7c], [4fbe, 4fbe], [4fcf, 4fcf], [509a, 509a],
    [524a, 524a], [53df, 53df], [53f7, 53f7], [547a, 547a], [547c, 547c],
    [54bb, 54bb], [54e8, 54e8], [54ee, 54ee], [552c, 552c], [554b, 554b],
    [55c3, 55c3], [5610, 5610], [562e, 562f], [5635, 5635], [56c2, 56c2],
    [5961, 5961], [59e3, 59e3], [5a4b, 5a4b], [5b5d, 5b5d], [5baf, 5baf],
    [5bb5, 5bb5], [5c0f, 5c0f], [5d24, 5d24], [5ea8, 5ea8], [5f47, 5f47],
    [6054, 6054], [61a2, 61a2], [634e, 634e], [63f1, 63f1], [641c, 641c],
    [6493, 6493], [64a8, 64a8], [6548, 6548], [6585, 6585], [66c9, 66c9],
    [67b5, 67b5], [6821, 6821], [689f, 689f], [68a2, 68a2], [6a5a, 6a5a],
    [6af9, 6af9], [6b4a, 6b4a], [6b52, 6b52], [6bbd, 6bbd], [6bca, 6bca],
    [6d28, 6d28], [6d88, 6d88], [6d8d, 6d8d], [6dc6, 6dc6], [6f3b, 6f3b],
    [6f5a, 6f5a], [6fa9, 6fa9], [701f, 701f], [7071, 7071], [70cb, 70cb],
    [7107, 7107], [7187, 7187], [71bd, 71bd], [71c6, 71c6], [723b, 723b],
    [72e1, 72e1], [7307, 7307], [735f, 735f], [7362, 7362], [75da, 75da],
    [75df, 75df], [769b, 769b], [7744, 7744], [785d, 785d], [7863, 7863],
    [7a58, 7a58], [7a99, 7a99], [7b11, 7b11], [7b71, 7b71], [7bbe, 7bbe],
    [7be0, 7be0], [7c2b, 7c2b], [7d5e, 7d5e], [7d83, 7d83], [7e3f, 7e3f],
    [7fdb, 7fdb], [8096, 8096], [80f6, 80f6], [8129, 8129], [81ae, 81ae],
    [828d, 828d], [832d, 832d], [83a6, 83a6], [8437, 8437], [856d, 856d],
    [8582, 8582], [85c3, 85c3], [8648, 8648], [8653, 8653], [86f8, 86f8],
    [87c2, 87c2], [8828, 8828], [8a24, 8a24], [8a68, 8a68], [8ab5, 8ab5],
    [8b0f, 8b0f], [8b1e, 8b1e], [8b3c, 8b3c], [8b4a, 8b4a], [8e03, 8e03],
    [8f03, 8f03], [8f47, 8f47], [900d, 900d], [90e9, 90e9], [92b7, 92b7],
    [9704, 9704], [98b5, 98b5], [9a37, 9a37], [9a4d, 9a4d], [9a55, 9a55],
    [9ab9, 9ab9], [9ac7, 9ac7], [9ad0, 9ad0], [9b48, 9b48], [9d1e, 9d1e],
    [9d35, 9d35], [9d41, 9d41], [9dd5, 9dd5], [2022c, 2022c],
    [203d5, 203d5], [2046a, 2046a], [20d21, 20d21], [20d33, 20d33],
    [20e4e, 20e4e], [217e3, 217e3], [218fe, 218fe], [2194d, 2194d],
    [2199d, 2199d], [219b3, 219b3], [219d5, 219d5], [21be9, 21be9],
    [21c49, 21c49], [21df8, 21df8], [21f1a, 21f1a], [224ee, 224ee],
    [226d8, 226d8], [22ab6, 22ab6], [22b66, 22b66], [22e73, 22e73],
    [230ac, 230ac], [233e0, 233e0], [23537, 23537], [23547, 23547],
    [237c7, 237c7], [2380e, 2380e], [23921, 23921], [23c53, 23c53],
    [23e5d, 23e5d], [23fe3, 23fe3], [24473, 24473], [24562, 24562],
    [2479a, 2479a], [247de, 247de], [24816, 24816], [24854, 24854],
    [248cc, 248cc], [248e0, 248e0], [24de4, 24de4], [24e83, 24e83],
    [24f73, 24f73], [24fe8, 24fe8], [25194, 25194], [25511, 25511],
    [2557e, 2557e], [25f41, 25f41], [25fa4, 25fa4], [263f7, 263f7],
    [2643a, 2643a], [267de, 267de], [268a9, 268a9], [2699b, 2699b],
    [26bea, 26bea], [26c5c, 26c5c], [26e94, 26e94], [27124, 27124],
    [27342, 27342], [2787c, 2787c], [278ac, 278ac], [27a6e, 27a6e],
    [27bbb, 27bbb], [27c50, 27c50], [27ccd, 27ccd], [27d71, 27d71],
    [2814b, 2814b], [28285, 28285], [28826, 28826], [28d39, 28d39],
    [28d85, 28d85], [292cd, 292cd], [2965a, 2965a], [299d3, 299d3],
    [29ac2, 29ac2], [29af3, 29af3], [29c74, 29c74], [29d56, 29d56],
    [29d6e, 29d6e], [29f92, 29f93], [29fbe, 29fbe], [2a04e, 2a04e],
    [2a2b7, 2a2b7], [2a6c0, 2a6c0]**/


    namespace {
    const static UnicodeSet::run_t __xiao_Set_runs[] = {
    {Empty, 424}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 30}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 18}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 2},
    {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 21}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 11}, {Mixed, 2},
    {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 13}, {Mixed, 3},
    {Empty, 3}, {Mixed, 1}, {Empty, 2850}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 16}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 19}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 39},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 11},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 16}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 29385}};
    const static UnicodeSet::bitquad_t  __xiao_Set_quads[] = {
    0x00000020, 0x04000000, 0x00000001, 0x00000400, 0x00000800, 0x00000008,
    0x00000002, 0x00400000, 0x80000000, 0x00040000, 0x00040000, 0x00010000,
    0x00000020, 0x00000008, 0x00000010, 0x02000000, 0x00200000, 0x00000080,
    0x00000002, 0x00200000, 0x00002000, 0x01040000, 0x00000804, 0x08000000,
    0x10000000, 0x40000000, 0x00008000, 0x04000000, 0x00000400, 0x80000000,
    0x00800000, 0x14000000, 0x08000000, 0x00004100, 0x00001000, 0x00000800,
    0x00000008, 0x00010000, 0x0020c000, 0x00000004, 0x00000002, 0x00000008,
    0x00000800, 0x20000000, 0x00208000, 0x00008000, 0x00000010, 0x00000100,
    0x00000080, 0x00100000, 0x00000004, 0x00004000, 0x00020000, 0x10000000,
    0x00080000, 0x00000100, 0x00000100, 0x00000020, 0x00000200, 0x00200000,
    0x00000002, 0x80000000, 0x00000004, 0x04000000, 0x02000000, 0x00040400,
    0x20000000, 0x00000400, 0x00000100, 0x00002100, 0x00000040, 0x08000000,
    0x04000000, 0x00000200, 0x80000000, 0x00020000, 0x00000800, 0x00000080,
    0x00000080, 0x20000000, 0x00000040, 0x08000000, 0x00000002, 0x00000080,
    0x80000000, 0x00000004, 0x84000000, 0x08000000, 0x00000010, 0x20000000,
    0x00000008, 0x01000000, 0x02000000, 0x00020000, 0x00020000, 0x40000000,
    0x00000001, 0x00000800, 0x40000000, 0x00000008, 0x80000000, 0x08000000,
    0x00400000, 0x00400000, 0x00000200, 0x00004000, 0x00002000, 0x00002000,
    0x00000040, 0x00800000, 0x00002000, 0x00000004, 0x00000008, 0x00080100,
    0x01000000, 0x00000004, 0x00000100, 0x00000010, 0x00000100, 0x00200000,
    0x40008000, 0x10000000, 0x00000400, 0x00000008, 0x00000008, 0x00000080,
    0x00002000, 0x00000200, 0x00800000, 0x00000010, 0x00200000, 0x00800000,
    0x00202000, 0x02000000, 0x00010080, 0x00000100, 0x40000000, 0x00200000,
    0x00000002, 0x00200000, 0x00001000, 0x00200000, 0x00000400, 0x00080002,
    0x00004000, 0x00000008, 0x40000000, 0x00002000, 0x20000000, 0x00080000,
    0x00200000, 0x00000200, 0x00000200, 0x01000000, 0x04000000, 0x00004000,
    0x01000000, 0x00400000, 0x00000040, 0x00080000, 0x00001000, 0x00000001,
    0x00800000, 0x00000080, 0x00000080, 0x00004000, 0x00000002, 0x00080000,
    0x20000000, 0x00000008, 0x00080000, 0x00000004, 0x04000000, 0x40000000,
    0x00400000, 0x00100000, 0x00001000, 0x00000001, 0x00000010, 0x00000008,
    0x00080000, 0x00000100, 0x00100000, 0x00020000, 0x40000000, 0x00000002,
    0x00000010, 0x00800000, 0x04000000, 0x40000000, 0x00000200, 0x08000000,
    0x00000400, 0x10000000, 0x00100000, 0x00000010, 0x00000004, 0x10000000,
    0x00001000, 0x00004000, 0x08000000, 0x00010000, 0x00002000, 0x00020000,
    0x00000800, 0x00000020, 0x00000040, 0x02000000, 0x00000020, 0x00002000,
    0x04000000, 0x00080000, 0x00000004, 0x00080000, 0x00100000, 0x00400000,
    0x00004000, 0x000c0000, 0x40000000, 0x00004000, 0x00800000, 0x00000001};
    }

    const static UnicodeSet xiao_Set{const_cast<UnicodeSet::run_t *>(__xiao_Set_runs), 387, 0, const_cast<UnicodeSet::bitquad_t *>(__xiao_Set_quads), 222, 0};

    /** Code Point Ranges for zan
    [3506, 3506], [373a, 373a], [37db, 37db], [38c5, 38c5], [3a3b, 3a3b],
    [3b6e, 3b6e], [3ceb, 3ceb], [437c, 437c], [4436, 4436], [47c5, 47c5],
    [4b24, 4b24], [4b55, 4b55], [5139, 5139], [5153, 5153], [54b1, 54b1],
    [5592, 5592], [56cb, 56cb], [5bc1, 5bc1], [62f6, 62f6], [63dd, 63dd],
    [648d, 648d], [6522, 6522], [661d, 661d], [66ab, 66ab], [6d94, 6d94],
    [6dfa, 6dfa], [6e54, 6e54], [6ffa, 6ffa], [7052, 7052], [74da, 74da],
    [79b6, 79b6], [7a73, 7a73], [7bf8, 7bf8], [7c2a, 7c2a], [7ccc, 7ccc],
    [81e2, 81e2], [8978, 8978], [8b9a, 8b9a], [8d0a, 8d0a], [8db2, 8db2],
    [8e54, 8e54], [9147, 9147], [93e8, 93e9], [9415, 9415], [941f, 941f],
    [9961, 9961], [20f17, 20f17], [21856, 21856], [22124, 22124],
    [23936, 23936], [23e04, 23e04], [25391, 25391], [25719, 25719],
    [25ccb, 25ccb], [25e22, 25e22], [2713d, 2713d], [2858b, 2858b],
    [28604, 28604], [2864f, 2864f], [296fb, 296fb], [29bf3, 29bf3]**/


    namespace {
    const static UnicodeSet::run_t __zan_Set_runs[] = {
    {Empty, 424}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 26},
    {Mixed, 2}, {Empty, 46}, {Mixed, 2}, {Empty, 26}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 20}, {Mixed, 2},
    {Empty, 42}, {Mixed, 1}, {Empty, 2988}, {Mixed, 1}, {Empty, 73},
    {Mixed, 1}, {Empty, 70}, {Mixed, 1}, {Empty, 191}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 171}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 151}, {Mixed, 1}, {Empty, 162}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 132}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 29472}};
    const static UnicodeSet::bitquad_t  __zan_Set_quads[] = {
    0x00000040, 0x04000000, 0x08000000, 0x00000020, 0x08000000, 0x00004000,
    0x00000800, 0x10000000, 0x00400000, 0x00000020, 0x00000010, 0x00200000,
    0x02000000, 0x00080000, 0x00020000, 0x00040000, 0x00000800, 0x00000002,
    0x00400000, 0x20000000, 0x00002000, 0x00000004, 0x20000000, 0x00000800,
    0x00100000, 0x04000000, 0x00100000, 0x04000000, 0x00040000, 0x04000000,
    0x00400000, 0x00080000, 0x01000000, 0x00000400, 0x00001000, 0x00000004,
    0x01000000, 0x04000000, 0x00000400, 0x00040000, 0x00100000, 0x00000080,
    0x00000300, 0x80200000, 0x00000002, 0x00800000, 0x00400000, 0x00000010,
    0x00400000, 0x00000010, 0x00020000, 0x02000000, 0x00000800, 0x00000004,
    0x20000000, 0x00000800, 0x00000010, 0x00008000, 0x08000000, 0x00080000};
    }

    const static UnicodeSet zan_Set{const_cast<UnicodeSet::run_t *>(__zan_Set_runs), 115, 0, const_cast<UnicodeSet::bitquad_t *>(__zan_Set_quads), 60, 0};

    /** Code Point Ranges for zhan
    [350a, 350a], [370a, 370a], [37fb, 37fb], [38f6, 38f6], [3bb5, 3bb5],
    [3e98, 3e98], [3ef5, 3ef5], [406a, 406a], [4074, 4074], [4184, 4184],
    [42ce, 42ce], [4392, 4392], [43fc, 43fc], [45c3, 45c3], [463a, 463a],
    [47cb, 47cb], [4840, 4840], [4993, 4993], [49ef, 49ef], [4a45, 4a47],
    [4a8c, 4a8c], [4b24, 4b24], [4c60, 4c60], [4c73, 4c73], [4c7c, 4c7c],
    [4cfb, 4cfb], [4da8, 4da8], [4eb6, 4eb6], [4f54, 4f54], [5061, 5061],
    [5103, 5103], [5360, 5360], [55ae, 55ae], [5661, 5661], [5af8, 5af8],
    [5b71, 5b71], [5c55, 5c55], [5d41, 5d41], [5d84, 5d84], [5d98, 5d98],
    [5da6, 5da6], [6017, 6017], [60c9, 60c9], [6230, 6230], [62c3, 62c3],
    [640c, 640c], [64a3, 64a3], [65ac, 65ac], [65c3, 65c3], [6834, 6834],
    [68e7, 68e7], [693e, 693e], [6990, 6990], [6a4f, 6a4f], [6b03, 6b03],
    [6c08, 6c08], [6cbe, 6cbe], [6e54, 6e54], [6e5b, 6e5b], [6fb6, 6fb6],
    [7416, 7416], [76bd, 76bd], [76de, 76de], [77bb, 77bb], [788a, 788a],
    [7ad9, 7ad9], [7c98, 7c98], [7dbb, 7dbb], [83da, 83da], [859d, 859d],
    [8638, 8638], [8665, 8666], [86c5, 86c5], [8892, 8892], [8962, 8962],
    [89b1, 89b1], [8a40, 8a40], [8a79, 8a79], [8b19, 8b19], [8b67, 8b67],
    [8b6b, 8b6b], [8b9d, 8b9d], [8d88, 8d88], [8dd5, 8dd5], [8e4d, 8e4d],
    [8e94, 8e94], [8f1a, 8f1a], [8f3e, 8f3e], [8f4f, 8f4f], [9085, 9085],
    [9186, 9186], [91ae, 91ae], [959a, 959a], [9711, 9711], [986b, 986b],
    [98ad, 98ad], [98e6, 98e6], [9930, 9930], [9958, 9958], [9a4f, 9a4f],
    [9a59, 9a59], [9b59, 9b59], [9c63, 9c63], [9cfd, 9cfd], [9e07, 9e07],
    [9ede, 9ede], [9ef5, 9ef5], [20332, 20332], [207c9, 207c9],
    [207e7, 207e7], [21073, 21073], [21179, 21179], [214e6, 214e6],
    [21541, 21541], [21b5e, 21b5e], [21f7b, 21f7b], [2217a, 2217a],
    [2223d, 2223d], [2291a, 2291a], [229d7, 229d7], [22d48, 22d48],
    [23001, 23001], [236f7, 236f7], [238a4, 238a4], [23bbf, 23bbf],
    [23ce4, 23ce4], [24586, 24586], [24607, 24607], [24707, 24707],
    [25661, 25661], [25b92, 25b92], [25d10, 25d10], [25d95, 25d95],
    [25fdc, 25fdc], [2623b, 2623b], [265e2, 265e2], [269da, 269da],
    [26aa3, 26aa3], [27021, 27021], [27081, 27081], [272f1, 272f1],
    [273b0, 273b0], [2749d, 2749d], [27521, 27521], [27589, 27589],
    [2766d, 2766d], [27751, 27751], [27b06, 27b06], [27bba, 27bba],
    [27cae, 27cae], [27e2a, 27e2a], [27f46, 27f46], [27f8d, 27f8d],
    [281e9, 281e9], [28288, 28288], [288c1, 288c1], [288da, 288da],
    [28ac0, 28ac0], [28b56, 28b56], [28ebf, 28ebf], [28f08, 28f08],
    [28f2e, 28f2e], [291af, 291af], [29257, 29257], [29523, 29523],
    [2954a, 2954a], [296fb, 296fb], [29947, 29947], [29c03, 29c03],
    [29f3c, 29f3c], [2a0cb, 2a0cb], [2a1b2, 2a1b2], [2a25c, 2a25c],
    [2a3c9, 2a3c9], [2a5e6, 2a5e6], [2a62a, 2a62a]**/


    namespace {
    const static UnicodeSet::run_t __zhan_Set_runs[] = {
    {Empty, 424}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 18}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 2},
    {Empty, 18}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 20},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 15},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 9}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 30}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 2849}, {Mixed, 1}, {Empty, 36},
    {Mixed, 2}, {Empty, 67}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 47},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 122}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 19}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 22},
    {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 29390}};
    const static UnicodeSet::bitquad_t  __zhan_Set_quads[] = {
    0x00000400, 0x00000400, 0x08000000, 0x00400000, 0x00200000, 0x01000000,
    0x00200000, 0x00100400, 0x00000010, 0x00004000, 0x00040000, 0x10000000,
    0x00000008, 0x04000000, 0x00000800, 0x00000001, 0x00080000, 0x00008000,
    0x000000e0, 0x00001000, 0x00000010, 0x10080001, 0x08000000, 0x00000100,
    0x00400000, 0x00100000, 0x00000002, 0x00000008, 0x00000001, 0x00004000,
    0x00000002, 0x01000000, 0x00020000, 0x00200000, 0x00000002, 0x01000010,
    0x00000040, 0x00800000, 0x00000200, 0x00010000, 0x00000008, 0x00001000,
    0x00000008, 0x00001000, 0x00000008, 0x00100000, 0x00000080, 0x40000000,
    0x00010000, 0x00008000, 0x00000008, 0x00000100, 0x40000000, 0x08100000,
    0x00400000, 0x00400000, 0x20000000, 0x40000000, 0x08000000, 0x00000400,
    0x02000000, 0x01000000, 0x08000000, 0x04000000, 0x20000000, 0x01000000,
    0x00000060, 0x00000020, 0x00040000, 0x00000004, 0x00020000, 0x00000001,
    0x02000000, 0x02000000, 0x00000880, 0x20000000, 0x00000100, 0x00200000,
    0x00002000, 0x00100000, 0x04000000, 0x40000000, 0x00008000, 0x00000020,
    0x00000040, 0x00004000, 0x04000000, 0x00020000, 0x00000800, 0x00002000,
    0x00000040, 0x00010000, 0x01000000, 0x02008000, 0x02000000, 0x00000008,
    0x20000000, 0x00000080, 0x40000000, 0x00200000, 0x00040000, 0x00000200,
    0x00000080, 0x00080000, 0x02000000, 0x00000040, 0x00000002, 0x40000000,
    0x08000000, 0x04000000, 0x20000000, 0x04000000, 0x00800000, 0x00000100,
    0x00000002, 0x00800000, 0x00000010, 0x80000000, 0x00000010, 0x00000040,
    0x00000080, 0x00000080, 0x00000002, 0x00040000, 0x00010000, 0x00200000,
    0x10000000, 0x08000000, 0x00000004, 0x04000000, 0x00000008, 0x00000002,
    0x00000002, 0x00020000, 0x00010000, 0x20000000, 0x00000002, 0x00000200,
    0x00002000, 0x00020000, 0x00000040, 0x04000000, 0x00004000, 0x00000400,
    0x00000040, 0x00002000, 0x00000200, 0x00000100, 0x04000002, 0x00000001,
    0x00400000, 0x80000000, 0x00000100, 0x00004000, 0x00008000, 0x00800000,
    0x00000008, 0x00000400, 0x08000000, 0x00000080, 0x00000008, 0x10000000,
    0x00000800, 0x00040000, 0x10000000, 0x00000200, 0x00000040, 0x00000400};
    }

    const static UnicodeSet zhan_Set{const_cast<UnicodeSet::run_t *>(__zhan_Set_runs), 311, 0, const_cast<UnicodeSet::bitquad_t *>(__zhan_Set_quads), 168, 0};

    /** Code Point Ranges for zou
    [350c, 350c], [353f, 353f], [3d75, 3d75], [3ed3, 3ed3], [4173, 4173],
    [482b, 482b], [5062, 5062], [594f, 594f], [5ab0, 5ab0], [63ab, 63ab],
    [63cd, 63cd], [640a, 640a], [65cf, 65cf], [68f7, 68f8], [6971, 6971],
    [7b83, 7b83], [7dc5, 7dc5], [82bb, 82bb], [83c6, 83c6], [8acf, 8acf],
    [8d70, 8d70], [8da3, 8da3], [90f0, 90f0], [9112, 9112], [9139, 9139],
    [966c, 966c], [9a36, 9a36], [9beb, 9beb], [9ec0, 9ec0], [9f71, 9f71],
    [9f7a, 9f7a], [20091, 20091], [2367b, 2367b], [2380f, 2380f],
    [252dc, 252dc], [25d88, 25d88], [27317, 27317], [280a1, 280a1],
    [280d8, 280d8], [2847f, 2847f], [28717, 28717], [2876e, 2876e],
    [28f41, 28f41], [29f26, 29f26], [2a0c6, 2a0c6]**/


    namespace {
    const static UnicodeSet::run_t __zou_Set_runs[] = {
    {Empty, 424}, {Mixed, 2}, {Empty, 65}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 65}, {Mixed, 1}, {Empty, 70}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 71}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 144}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 55},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 25}, {Mixed, 3}, {Empty, 41}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 2824}, {Mixed, 1}, {Empty, 430},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 213}, {Mixed, 1},
    {Empty, 85}, {Mixed, 1}, {Empty, 171}, {Mixed, 1}, {Empty, 108},
    {Mixed, 2}, {Empty, 28}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 126},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 29433}};
    const static UnicodeSet::bitquad_t  __zou_Set_quads[] = {
    0x00001000, 0x80000000, 0x00200000, 0x00080000, 0x00080000, 0x00000800,
    0x00000004, 0x00008000, 0x00010000, 0x00000800, 0x00002000, 0x00000400,
    0x00008000, 0x01800000, 0x00020000, 0x00000008, 0x00000020, 0x08000000,
    0x00000040, 0x00008000, 0x00010000, 0x00000008, 0x00010000, 0x00040000,
    0x02000000, 0x00001000, 0x00400000, 0x00000800, 0x00000001, 0x04020000,
    0x00020000, 0x08000000, 0x00008000, 0x10000000, 0x00000100, 0x00800000,
    0x00000002, 0x01000000, 0x80000000, 0x00800000, 0x00004000, 0x00000002,
    0x00000040, 0x00000040};
    }

    const static UnicodeSet zou_Set{const_cast<UnicodeSet::run_t *>(__zou_Set_runs), 79, 0, const_cast<UnicodeSet::bitquad_t *>(__zou_Set_quads), 44, 0};

    /** Code Point Ranges for cou
    [350c, 350c], [594f, 594f], [63cd, 63cd], [65cf, 65cf], [6971, 6971],
    [6e4a, 6e4a], [7c07, 7c07], [8160, 8160], [851f, 851f], [85ea, 85ea],
    [8da3, 8da3], [8da8, 8da8], [8f33, 8f33], [2223e, 2223e],
    [23245, 23245], [23658, 23658], [2379c, 2379c], [24191, 24191],
    [26985, 26985], [26cff, 26cff], [26e80, 26e80], [27863, 27863],
    [27c6a, 27c6a], [284ed, 284ed], [28a2f, 28a2f], [29e40, 29e40],
    [2a26e, 2a26e]**/


    namespace {
    const static UnicodeSet::run_t __cou_Set_runs[] = {
    {Empty, 424}, {Mixed, 1}, {Empty, 289}, {Mixed, 1}, {Empty, 83},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 109}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3223},
    {Mixed, 1}, {Empty, 128}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 79}, {Mixed, 1}, {Empty, 319},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 78}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 67},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 160}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 29420}};
    const static UnicodeSet::bitquad_t  __cou_Set_quads[] = {
    0x00001000, 0x00008000, 0x00002000, 0x00008000, 0x00020000, 0x00000400,
    0x00000080, 0x00000001, 0x80000000, 0x00000400, 0x00000108, 0x00080000,
    0x40000000, 0x00000020, 0x01000000, 0x10000000, 0x00020000, 0x00000020,
    0x80000000, 0x00000001, 0x00000008, 0x00000400, 0x00002000, 0x00008000,
    0x00000001, 0x00004000};
    }

    const static UnicodeSet cou_Set{const_cast<UnicodeSet::run_t *>(__cou_Set_runs), 53, 0, const_cast<UnicodeSet::bitquad_t *>(__cou_Set_quads), 26, 0};

    /** Code Point Ranges for chua
    [350d, 350d], [42ac, 42ac], [4534, 4534], [4ac4, 4ac4], [4d75, 4d75],
    [64ae, 64ae], [6b3b, 6b3b], [20e50, 20e50], [20ee6, 20ee6],
    [236d5, 236d5], [23e76, 23e76], [2406b, 2406b]**/


    namespace {
    const static UnicodeSet::run_t __chua_Set_runs[] = {
    {Empty, 424}, {Mixed, 1}, {Empty, 108}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 185}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 3352},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 318}, {Mixed, 1},
    {Empty, 60}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 30204}};
    const static UnicodeSet::bitquad_t  __chua_Set_quads[] = {
    0x00002000, 0x00001000, 0x00100000, 0x00000010, 0x00200000, 0x00004000,
    0x08000000, 0x00010000, 0x00000040, 0x00200000, 0x00400000, 0x00000800};
    }

    const static UnicodeSet chua_Set{const_cast<UnicodeSet::run_t *>(__chua_Set_runs), 25, 0, const_cast<UnicodeSet::bitquad_t *>(__chua_Set_quads), 12, 0};

    /** Code Point Ranges for fei
    [3517, 3517], [3a4c, 3a4c], [3af5, 3af5], [3d52, 3d52], [3e43, 3e43],
    [418f, 418f], [4208, 4208], [426c, 426c], [4368, 4368], [4454, 4454],
    [4488, 4488], [4541, 4541], [46a8, 46a8], [46cd, 46cd], [47db, 47db],
    [480a, 480a], [4935, 4935], [4a3d, 4a3e], [4a41, 4a41], [4bcb, 4bcb],
    [4c01, 4c01], [4ff7, 4ff7], [5255, 5255], [532a, 532a], [539e, 539e],
    [5420, 5420], [5561, 5561], [58a2, 58a2], [595c, 595c], [5983, 5983],
    [5a53, 5a53], [5c5d, 5c5d], [5ee2, 5ee2], [602b, 602b], [60b1, 60b1],
    [6249, 6249], [62c2, 62c2], [6590, 6590], [6632, 6632], [66ca, 66ca],
    [670f, 670f], [676e, 676e], [67f9, 67f9], [68d0, 68d0], [69a7, 69a7],
    [6a43, 6a43], [6a68, 6a68], [6ae0, 6ae0], [6cb8, 6cb8], [6ddd, 6ddd],
    [6e04, 6e04], [6ff7, 6ff7], [72bb, 72bb], [72d2, 72d2], [7306, 7306],
    [75bf, 75bf], [75f1, 75f1], [7648, 7648], [7829, 7829], [7953, 7953],
    [7b30, 7b30], [7bda, 7bda], [7d3c, 7d3c], [7dcb, 7dcb], [7fe1, 7fe1],
    [80a5, 80a5], [80ba, 80ba], [80c7, 80c7], [80cf, 80cf], [8153, 8153],
    [82be, 82be], [8300, 8300], [8307, 8307], [83f2, 83f2], [8409, 8409],
    [855c, 855c], [855f, 855f], [8561, 8561], [871a, 871a], [8730, 8730],
    [87e6, 87e6], [88f4, 88f4], [88f6, 88f6], [894f, 894f], [8ab9, 8ab9],
    [8cbb, 8cbb], [8cc1, 8cc1], [9428, 9428], [966b, 966b], [970f, 970f],
    [9745, 9745], [975e, 975e], [98db, 98db], [98dd, 98dd], [9925, 9925],
    [99a1, 99a1], [9a11, 9a11], [9a1b, 9a1b], [9af4, 9af4], [9be1, 9be1],
    [9f23, 9f23], [9f25, 9f25], [203ff, 203ff], [20b86, 20b86],
    [20c8e, 20c8e], [21326, 21326], [2246e, 2246e], [2248d, 2248d],
    [22cc1, 22cc1], [22fba, 22fba], [23367, 23367], [2367f, 2367f],
    [2475f, 2475f], [24dc2, 24dc2], [24e95, 24e95], [24f3a, 24f3a],
    [25131, 25131], [251d6, 251d6], [2574a, 2574b], [257cd, 257cd],
    [25836, 25836], [25b6c, 25b6c], [260c4, 260c4], [26c77, 26c77],
    [27318, 27318], [27343, 27343], [27448, 27448], [274d6, 274d6],
    [27552, 27552], [2757f, 2757f], [27686, 27686], [27747, 27747],
    [27ff3, 27ff3], [28693, 28693], [28d48, 28d48], [28ec3, 28ec3],
    [2913c, 2913c], [291a6, 291a6], [291eb, 291eb], [291ee, 291ef],
    [291fd, 291fd], [29672, 29672], [29877, 29877], [2998e, 2998e],
    [29bc3, 29bc3], [29c32, 29c32], [29c3e, 29c3e], [29c4e, 29c4e],
    [29d65, 29d65], [29e49, 29e49], [2a079, 2a079], [2a08f, 2a08f]**/


    namespace {
    const static UnicodeSet::run_t __fei_Set_runs[] = {
    {Empty, 424}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7}, {Mixed, 2},
    {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 21}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 9}, {Mixed, 2}, {Empty, 12}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 15}, {Mixed, 2}, {Empty, 58}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 2853}, {Mixed, 1}, {Empty, 60}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 137},
    {Mixed, 2}, {Empty, 65}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 134},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 92},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 68}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16}, {Mixed, 2},
    {Empty, 29435}};
    const static UnicodeSet::bitquad_t  __fei_Set_quads[] = {
    0x00800000, 0x00001000, 0x00200000, 0x00040000, 0x00000008, 0x00008000,
    0x00000100, 0x00001000, 0x00000100, 0x00100000, 0x00000100, 0x00000002,
    0x00000100, 0x00002000, 0x08000000, 0x00000400, 0x00200000, 0x60000000,
    0x00000002, 0x00000800, 0x00000002, 0x00800000, 0x00200000, 0x00000400,
    0x40000000, 0x00000001, 0x00000002, 0x00000004, 0x10000000, 0x00000008,
    0x00080000, 0x20000000, 0x00000004, 0x00000800, 0x00020000, 0x00000200,
    0x00000004, 0x00010000, 0x00040000, 0x00000400, 0x00008000, 0x00004000,
    0x02000000, 0x00010000, 0x00000080, 0x00000008, 0x00000100, 0x00000001,
    0x01000000, 0x20000000, 0x00000010, 0x00800000, 0x08000000, 0x00040000,
    0x00000040, 0x80000000, 0x00020000, 0x00000100, 0x00000200, 0x00080000,
    0x00010000, 0x04000000, 0x10000000, 0x00000800, 0x00000002, 0x04000020,
    0x00008080, 0x00080000, 0x40000000, 0x00000081, 0x00040000, 0x00000200,
    0x90000000, 0x00000002, 0x04000000, 0x00010000, 0x00000040, 0x00500000,
    0x00008000, 0x02000000, 0x08000000, 0x00000002, 0x00000100, 0x00000800,
    0x00008000, 0x40000020, 0x28000000, 0x00000020, 0x00000002, 0x08020000,
    0x00100000, 0x00000002, 0x00000028, 0x80000000, 0x00000040, 0x00004000,
    0x00000040, 0x00004000, 0x00002000, 0x00000002, 0x04000000, 0x00000080,
    0x80000000, 0x80000000, 0x00000004, 0x00200000, 0x04000000, 0x00020000,
    0x00400000, 0x00000c00, 0x00002000, 0x00400000, 0x00001000, 0x00000010,
    0x00800000, 0x01000000, 0x00000008, 0x00000100, 0x00400000, 0x00040000,
    0x80000000, 0x00000040, 0x00000080, 0x00080000, 0x00080000, 0x00000100,
    0x00000008, 0x10000000, 0x00000040, 0x2000c800, 0x00040000, 0x00800000,
    0x00004000, 0x00000008, 0x40040000, 0x00004000, 0x00000020, 0x00000200,
    0x02000000, 0x00008000};
    }

    const static UnicodeSet fei_Set{const_cast<UnicodeSet::run_t *>(__fei_Set_runs), 255, 0, const_cast<UnicodeSet::bitquad_t *>(__fei_Set_quads), 140, 0};

    /** Code Point Ranges for bei
    [3517, 3517], [3528, 3528], [35d7, 35d7], [36dd, 36dd], [38c1, 38c1],
    [3933, 3933], [3a8d, 3a8d], [3af2, 3af2], [3b6d, 3b6d], [3c06, 3c06],
    [3d94, 3d94], [3e22, 3e22], [3e2c, 3e2c], [3f61, 3f61], [42f3, 42f3],
    [43b1, 43b1], [4512, 4512], [469c, 469c], [47db, 47db], [47fa, 47fa],
    [48d9, 48d9], [496f, 496f], [4a40, 4a40], [4c3d, 4c3d], [4c5d, 4c5d],
    [4ffe, 4ffe], [500d, 500d], [505d, 505d], [5099, 5099], [5317, 5317],
    [5351, 5351], [54f1, 54f1], [5504, 5504], [57bb, 57bb], [57e4, 57e4],
    [5b5b, 5b5b], [602b, 602b], [6096, 6096], [60b2, 60b2], [618a, 618a],
    [62d4, 62d4], [63f9, 63f9], [6601, 6601], [676e, 676f], [67f8, 67f8],
    [686e, 686e], [6896, 6896], [68d1, 68d1], [68d3, 68d3], [6911, 6911],
    [6ce2, 6ce2], [7119, 7119], [7295, 7295], [72fd, 72fd], [73fc, 73fc],
    [7432, 7432], [7891, 7891], [789a, 789a], [7b84, 7b84], [7cd2, 7cd2],
    [80cc, 80cc], [82dd, 82dd], [8300, 8300], [83e9, 83e9], [8406, 8406],
    [842f, 842f], [8461, 8461], [84d3, 84d3], [85e3, 85e3], [871a, 871a],
    [88ab, 88ab], [8919, 8919], [896c, 896c], [8a96, 8a96], [8ac0, 8ac0],
    [8c9d, 8c9d], [8dcb, 8dcb], [8f29, 8f29], [90b6, 90b6], [9273, 9273],
    [92c7, 92c7], [930d, 930d], [9434, 9434], [9642, 9642], [979e, 979e],
    [97b4, 97b4], [9ab3, 9ab3], [9d6f, 9d6f], [202ed, 202ed],
    [20421, 20421], [208a5, 208a5], [212ed, 212ed], [2195e, 2195e],
    [21c2f, 21c2f], [2208f, 2208f], [220cd, 220cd], [22d3e, 22d3e],
    [22ef5, 22ef5], [233b5, 233b5], [235be, 235be], [23741, 23741],
    [23b0d, 23b0d], [23b2a, 23b2a], [24732, 24732], [24c08, 24c08],
    [24ce6, 24ce6], [24d5b, 24d5b], [24dc1, 24dc1], [24dd2, 24dd2],
    [24e72, 24e72], [24fd2, 24fd2], [24ffe, 24ffe], [253d3, 253d3],
    [25d93, 25d93], [26227, 26227], [26236, 26236], [26a56, 26a56],
    [26bb7, 26bb7], [26f99, 26f99], [27265, 27265], [272f2, 272f2],
    [27d99, 27d99], [27f20, 27f20], [2868d, 2868d], [291e9, 291e9],
    [29539, 29539], [295a0, 295a0], [296be, 296be]**/


    namespace {
    const static UnicodeSet::run_t __bei_Set_runs[] = {
    {Empty, 424}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 28}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 20},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 9}, {Mixed, 2},
    {Empty, 23}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 2859},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 81}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 98}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 29}, {Mixed, 2}, {Empty, 95}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 2},
    {Empty, 30}, {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 84}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 58}, {Mixed, 1}, {Empty, 90}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 29514}};
    const static UnicodeSet::bitquad_t  __bei_Set_quads[] = {
    0x00800000, 0x00000100, 0x00800000, 0x20000000, 0x00000002, 0x00080000,
    0x00002000, 0x00040000, 0x00002000, 0x00000040, 0x00100000, 0x00001004,
    0x00000002, 0x00080000, 0x00020000, 0x00040000, 0x10000000, 0x08000000,
    0x04000000, 0x02000000, 0x00008000, 0x00000001, 0x20000000, 0x20000000,
    0x40000000, 0x00002000, 0x20000000, 0x02000000, 0x00800000, 0x00020000,
    0x00020000, 0x00000010, 0x08000000, 0x00000010, 0x08000000, 0x00000800,
    0x00400000, 0x00040000, 0x00000400, 0x00100000, 0x02000000, 0x00000002,
    0x0000c000, 0x01000000, 0x00004000, 0x00400000, 0x000a0000, 0x00020000,
    0x00000004, 0x02000000, 0x00200000, 0x20000000, 0x10000000, 0x00040000,
    0x04020000, 0x00000010, 0x00040000, 0x00001000, 0x20000000, 0x00000001,
    0x00000200, 0x00000040, 0x00008000, 0x00000002, 0x00080000, 0x00000008,
    0x04000000, 0x00000800, 0x02000000, 0x00001000, 0x00400000, 0x00000001,
    0x20000000, 0x00000800, 0x00000200, 0x00400000, 0x00080000, 0x00000080,
    0x00002000, 0x00100000, 0x00000004, 0x40000000, 0x00100000, 0x00080000,
    0x00008000, 0x00002000, 0x00000002, 0x00000020, 0x00002000, 0x40000000,
    0x00008000, 0x00008000, 0x00002000, 0x40000000, 0x00200000, 0x00200000,
    0x40000000, 0x00000002, 0x00002000, 0x00000400, 0x00040000, 0x00000100,
    0x00000040, 0x08000000, 0x00040002, 0x00040000, 0x00040000, 0x40000000,
    0x00080000, 0x00080000, 0x00400080, 0x00400000, 0x00800000, 0x02000000,
    0x00000020, 0x00040000, 0x02000000, 0x00000001, 0x00002000, 0x00000200,
    0x02000000, 0x00000001, 0x40000000};
    }

    const static UnicodeSet bei_Set{const_cast<UnicodeSet::run_t *>(__bei_Set_runs), 223, 0, const_cast<UnicodeSet::bitquad_t *>(__bei_Set_quads), 123, 0};

    /** Code Point Ranges for liang
    [351d, 351d], [3e41, 3e41], [3f97, 3f97], [4036, 4036], [4041, 4041],
    [44e3, 44e3], [4776, 4776], [4803, 4803], [48fc, 48fc], [4a6b, 4a6b],
    [4eae, 4eae], [4fcd, 4fcd], [5006, 5006], [501e, 501e], [5169, 5169],
    [54f4, 54f4], [5562, 5562], [55a8, 55a8], [589a, 589a], [60a2, 60a2],
    [60ca, 60ca], [639a, 639a], [667e, 667e], [6881, 6881], [690b, 690b],
    [6a11, 6a11], [6dbc, 6dbc], [6e78, 6e78], [7cb1, 7cb1], [7ce7, 7ce7],
    [7da1, 7da1], [7dc9, 7dc9], [813c, 813c], [826f, 826f], [83a8, 83a8],
    [870b, 870b], [873d, 873d], [88f2, 88f2], [8ad2, 8ad2], [8e09, 8e09],
    [8e63, 8e63], [8f1b, 8f1b], [8f2c, 8f2c], [91cf, 91cf], [9344, 9344],
    [95ac, 95ac], [975a, 975a], [99fa, 99fa], [9b4e, 9b4e], [204dc, 204dc],
    [20bf1, 20bf1], [21446, 21446], [21b8e, 21b8e], [23134, 23134],
    [234c8, 234c8], [2465d, 2465d], [25218, 25218], [256eb, 256eb],
    [28108, 28108], [2838d, 2838d], [2839b, 2839b], [28d76, 28d76],
    [295fe, 295fe], [29601, 29601]**/


    namespace {
    const static UnicodeSet::run_t __liang_Set_runs[] = {
    {Empty, 424}, {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 36}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 64}, {Mixed, 2}, {Empty, 21},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 113}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 26}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 26}, {Mixed, 2},
    {Empty, 13}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 20},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 2891}, {Mixed, 1}, {Empty, 56}, {Mixed, 1},
    {Empty, 66}, {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 172},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 139}, {Mixed, 1},
    {Empty, 93}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 336},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 78}, {Mixed, 1},
    {Empty, 67}, {Mixed, 2}, {Empty, 29519}};
    const static UnicodeSet::bitquad_t  __liang_Set_quads[] = {
    0x20000000, 0x00000002, 0x00800000, 0x00400000, 0x00000002, 0x00000008,
    0x00400000, 0x00000008, 0x10000000, 0x00000800, 0x00004000, 0x00002000,
    0x40000040, 0x00000200, 0x00100000, 0x00000004, 0x00000100, 0x04000000,
    0x00000004, 0x00000400, 0x04000000, 0x40000000, 0x00000002, 0x00000800,
    0x00020000, 0x10000000, 0x01000000, 0x00020000, 0x00000080, 0x00000002,
    0x00000200, 0x10000000, 0x00008000, 0x00000100, 0x00000800, 0x20000000,
    0x00040000, 0x00040000, 0x00000200, 0x00000008, 0x08000000, 0x00001000,
    0x00008000, 0x00000010, 0x00001000, 0x04000000, 0x04000000, 0x00004000,
    0x10000000, 0x00020000, 0x00000040, 0x00004000, 0x00100000, 0x00000100,
    0x20000000, 0x01000000, 0x00000800, 0x00000100, 0x08002000, 0x00400000,
    0x40000000, 0x00000002};
    }

    const static UnicodeSet liang_Set{const_cast<UnicodeSet::run_t *>(__liang_Set_runs), 113, 0, const_cast<UnicodeSet::bitquad_t *>(__liang_Set_quads), 62, 0};

    /** Code Point Ranges for kuai
    [351e, 351e], [355f, 355f], [3e5f, 3e5f], [421b, 421b], [4b5d, 4b5d],
    [4be4, 4be4], [5080, 5080], [5108, 5108], [5672, 5672], [5757, 5757],
    [584a, 584a], [58a4, 58a4], [5ddc, 5ddc], [5ee5, 5ee5], [5feb, 5feb],
    [64d3, 64d3], [65dd, 65dd], [6703, 6703], [6a9c, 6a9c], [6fae, 6fae],
    [72e4, 72e4], [736a, 736a], [74af, 74af], [7b77, 7b77], [81be, 81be],
    [84af, 84af], [8562, 8562], [9136, 9136], [99c3, 99c3], [9b20, 9b20],
    [9b41, 9b41], [9c60, 9c60], [20710, 20710], [208f2, 208f2],
    [21685, 21685], [21f3e, 21f3e], [2289e, 2289e], [22f92, 22f92],
    [23ac9, 23ac9], [258b6, 258b6], [26526, 26526], [26ccb, 26ccb],
    [286d6, 286d6], [299b1, 299b1]**/


    namespace {
    const static UnicodeSet::run_t __kuai_Set_runs[] = {
    {Empty, 424}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 71},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 73}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 93},
    {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 10}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 2900}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 108}, {Mixed, 1}, {Empty, 68}, {Mixed, 1},
    {Empty, 74}, {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 89},
    {Mixed, 1}, {Empty, 238}, {Mixed, 1}, {Empty, 99}, {Mixed, 1},
    {Empty, 60}, {Mixed, 1}, {Empty, 207}, {Mixed, 1}, {Empty, 150},
    {Mixed, 1}, {Empty, 29490}};
    const static UnicodeSet::bitquad_t  __kuai_Set_quads[] = {
    0x40000000, 0x80000000, 0x80000000, 0x08000000, 0x20000000, 0x00000010,
    0x00000001, 0x00000100, 0x00040000, 0x00800000, 0x00000400, 0x00000010,
    0x10000000, 0x00000020, 0x00000800, 0x00080000, 0x20000000, 0x00000008,
    0x10000000, 0x00004000, 0x00000010, 0x00000400, 0x00008000, 0x00800000,
    0x40000000, 0x00008000, 0x00000004, 0x00400000, 0x00000008, 0x00000001,
    0x00000002, 0x00000001, 0x00010000, 0x00040000, 0x00000020, 0x40000000,
    0x40000000, 0x00040000, 0x00000200, 0x00400000, 0x00000040, 0x00000800,
    0x00400000, 0x00020000};
    }

    const static UnicodeSet kuai_Set{const_cast<UnicodeSet::run_t *>(__kuai_Set_runs), 87, 0, const_cast<UnicodeSet::bitquad_t *>(__kuai_Set_quads), 44, 0};

    /** Code Point Ranges for xia
    [3520, 3520], [35c7, 35c7], [35ff, 35ff], [3648, 3648], [3664, 3664],
    [36cd, 36cd], [3986, 3986], [3bab, 3bab], [3c28, 3c28], [3c30, 3c30],
    [3c3a, 3c3a], [3f60, 3f60], [3f8e, 3f8e], [44a0, 44a0], [458e, 458e],
    [4596, 4596], [4625, 4625], [46c5, 46c5], [47a9, 47a9], [480d, 480d],
    [4996, 4996], [4a97, 4a97], [4ad7, 4ad7], [4bdf, 4bdf], [4e0b, 4e0b],
    [4fe0, 4fe0], [5047, 5047], [5084, 5084], [5323, 5323], [53da, 53da],
    [5413, 5413], [5440, 5440], [5477, 5477], [547c, 547c], [54e7, 54e7],
    [552c, 552c], [55c4, 55c4], [55d1, 55d1], [5687, 5687], [57c9, 57c9],
    [590f, 590f], [593e, 593e], [5c88, 5c88], [5cfd, 5cfd], [5ec8, 5ec8],
    [5fa6, 5fa6], [61d7, 61d7], [62bc, 62bc], [637e, 637e], [6433, 6433],
    [659c, 659c], [6630, 6630], [6687, 6687], [67d9, 67d9], [6b31, 6b31],
    [6b43, 6b43], [6bf3, 6bf3], [6d79, 6d79], [70a0, 70a0], [70da, 70da],
    [7146, 7146], [72ce, 72ce], [72f9, 72f9], [73e8, 73e8], [7455, 7455],
    [759c, 759c], [75a8, 75a8], [7615, 7615], [7771, 7771], [778e, 778e],
    [7864, 7864], [78ac, 78ac], [78cd, 78cd], [796b, 796b], [7b1a, 7b1a],
    [7b6a, 7b6a], [7d66, 7d66], [7e16, 7e16], [7f45, 7f45], [7fc8, 7fc8],
    [821d, 821d], [823a, 823a], [8290, 8290], [846d, 846d], [8578, 8578],
    [8766, 8766], [879b, 879b], [8ad5, 8ad5], [8b11, 8b11], [8c3a, 8c3a],
    [8d6e, 8d6e], [8f44, 8f44], [9050, 9050], [90c3, 90c3], [935c, 935c],
    [938b, 938b], [9595, 9595], [959c, 959c], [965c, 965c], [967f, 967f],
    [971e, 971e], [98ac, 98ac], [9a22, 9a22], [9b7b, 9b7b], [9c15, 9c15],
    [9db7, 9db7], [9ee0, 9ee0], [2003c, 2003c], [205b9, 205b9],
    [20886, 20886], [20a58, 20a58], [20f6b, 20f6b], [2122e, 2122e],
    [213d8, 213d8], [21a04, 21a04], [21eb7, 21eb7], [22219, 22219],
    [22224, 22224], [22453, 22453], [225c4, 225c4], [22609, 22609],
    [2268c, 2268c], [22745, 22745], [22a79, 22a79], [22ed7, 22ed7],
    [23897, 23897], [23e71, 23e71], [245ed, 245ed], [24647, 24647],
    [247dd, 247dd], [24a86, 24a86], [24a8d, 24a8d], [25046, 25046],
    [25bfe, 25bfe], [25c36, 25c36], [25ef4, 25ef4], [26995, 26995],
    [26d6f, 26d6f], [26f8f, 26f8f], [271a5, 271a5], [271cd, 271cd],
    [27204, 27204], [27502, 27502], [27571, 27571], [2798e, 2798e],
    [27a95, 27a95], [27ab9, 27ab9], [27ad2, 27ad2], [27bcb, 27bcb],
    [28a7d, 28a7d], [28c91, 28c91], [28cc9, 28cc9], [28ef2, 28ef2],
    [28f6f, 28f6f], [29117, 29117], [2927e, 2927e], [293b2, 293b2],
    [293d3, 293d3], [2975b, 2975b], [29b82, 29b82], [2a102, 2a102],
    [2a5fe, 2a5fe], [2a601, 2a601], [2a618, 2a618]**/


    namespace {
    const static UnicodeSet::run_t __xia_Set_runs[] = {
    {Empty, 425}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 25},
    {Mixed, 2}, {Empty, 40}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 9}, {Mixed, 2}, {Empty, 26}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 26}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 25}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 17}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 15},
    {Mixed, 2}, {Empty, 25}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 2825}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 26}, {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 77}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 92},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 84}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 16}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 7}, {Mixed, 3}, {Empty, 7}, {Mixed, 1},
    {Empty, 116}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 27}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 38}, {Mixed, 2}, {Empty, 29391}};
    const static UnicodeSet::bitquad_t  __xia_Set_quads[] = {
    0x00000001, 0x00000080, 0x80000000, 0x00000100, 0x00000010, 0x00002000,
    0x00000040, 0x00000800, 0x04010100, 0x00000001, 0x00004000, 0x00000001,
    0x00404000, 0x00000020, 0x00000020, 0x00000200, 0x00002000, 0x00400000,
    0x00800000, 0x00800000, 0x80000000, 0x00000800, 0x00000001, 0x00000080,
    0x00000010, 0x00000008, 0x04000000, 0x00080000, 0x00000001, 0x10800000,
    0x00000080, 0x00001000, 0x00020010, 0x00000080, 0x00000200, 0x00008000,
    0x40000000, 0x00000100, 0x20000000, 0x00000100, 0x00000040, 0x00800000,
    0x10000000, 0x40000000, 0x00080000, 0x10000000, 0x00010000, 0x00000080,
    0x02000000, 0x00020000, 0x00000008, 0x00080000, 0x02000000, 0x00000001,
    0x04000000, 0x00000040, 0x00004000, 0x02000000, 0x00000100, 0x00200000,
    0x10000000, 0x00000100, 0x00200000, 0x00020000, 0x00004000, 0x00000010,
    0x00001000, 0x00002000, 0x00000800, 0x04000000, 0x00000400, 0x00000040,
    0x00400000, 0x00000020, 0x00000100, 0x20000000, 0x04000000, 0x00010000,
    0x00002000, 0x01000000, 0x00000040, 0x08000000, 0x00200000, 0x00020000,
    0x04000000, 0x00004000, 0x00000010, 0x00010000, 0x00000008, 0x10000000,
    0x00000800, 0x10200000, 0x10000000, 0x80000000, 0x40000000, 0x00001000,
    0x00000004, 0x08000000, 0x00200000, 0x00800000, 0x00000001, 0x10000000,
    0x02000000, 0x00000040, 0x01000000, 0x00000800, 0x00004000, 0x01000000,
    0x00000010, 0x00800000, 0x02000000, 0x00000010, 0x00080000, 0x00000010,
    0x00000200, 0x00001000, 0x00000020, 0x02000000, 0x00800000, 0x00800000,
    0x00020000, 0x00002000, 0x00000080, 0x20000000, 0x00002040, 0x00000040,
    0x40000000, 0x00400000, 0x00100000, 0x00200000, 0x00008000, 0x00008000,
    0x00000020, 0x00002000, 0x00000010, 0x00000004, 0x00020000, 0x00004000,
    0x00200000, 0x02000000, 0x00040000, 0x00000800, 0x20000000, 0x00020000,
    0x00000200, 0x00040000, 0x00008000, 0x00800000, 0x40000000, 0x00040000,
    0x00080000, 0x08000000, 0x00000004, 0x00000004, 0x40000000, 0x01000002};
    }

    const static UnicodeSet xia_Set{const_cast<UnicodeSet::run_t *>(__xia_Set_runs), 273, 0, const_cast<UnicodeSet::bitquad_t *>(__xia_Set_quads), 156, 0};

    /** Code Point Ranges for he
    [3520, 3520], [35ff, 35ff], [3698, 3698], [39c1, 39c1], [3a83, 3a83],
    [3a8b, 3a8b], [3b58, 3b58], [3b9d, 3b9d], [3bab, 3bab], [3c24, 3c24],
    [3c30, 3c30], [3d51, 3d51], [3e47, 3e47], [3f91, 3f91], [3fe3, 3fe3],
    [3fe5, 3fe5], [40d2, 40d2], [4142, 4142], [43dc, 43dc], [4427, 4427],
    [44a9, 44a9], [44c7, 44c7], [44fc, 44fc], [4563, 4563], [4682, 4682],
    [47a6, 47a6], [4894, 4894], [4ad8, 4ad8], [4ba4, 4ba4], [4be8, 4be8],
    [4cda, 4cda], [4d85, 4d85], [4d8e, 4d8e], [4f55, 4f55], [4f6b, 4f6b],
    [52be, 52be], [5408, 5408], [5475, 5475], [547c, 547c], [548c, 548c],
    [54bc, 54bc], [54c8, 54c8], [54e7, 54e7], [54ec, 54ec], [555d, 555d],
    [559b, 559b], [559d, 559d], [55c3, 55c3], [55d1, 55d1], [55ec, 55ec],
    [5648, 5648], [5687, 5687], [578e, 578e], [58d1, 58d1], [59c0, 59c0],
    [5bb3, 5bb3], [5cc6, 5cc6], [6112, 6112], [62b2, 62b2], [630c, 630c],
    [63ed, 63ed], [66f7, 66f7], [6838, 6838], [683c, 683c], [6941, 6941],
    [6b31, 6b31], [6bfc, 6bfc], [6cb3, 6cb3], [6d3d, 6d3d], [6db8, 6db8],
    [6e2e, 6e2e], [6e34, 6e34], [6f95, 6f95], [7103, 7103], [7142, 7142],
    [7186, 7187], [7200, 7200], [72b5, 72b5], [72e2, 72e2], [7332, 7332],
    [764b, 764b], [76ac, 76ac], [76c9, 76c9], [76cd, 76cd], [76d2, 76d2],
    [7845, 7845], [788b, 788b], [7909, 7909], [79be, 79be], [79f4, 79f4],
    [7bd5, 7bd5], [7c7a, 7c7a], [7d07, 7d07], [7e73, 7e73], [7fee, 7fef],
    [82db, 82db], [8377, 8377], [83cf, 83cf], [85c3, 85c3], [85ff, 85ff],
    [86b5, 86b5], [874e, 874e], [879b, 879b], [881a, 881a], [8894, 8894],
    [8910, 8910], [8988, 8988], [8a36, 8a36], [8a65, 8a65], [8b1e, 8b1e],
    [8c88, 8c89], [8cc0, 8cc0], [8d6b, 8d6b], [8f05, 8f05], [8f44, 8f44],
    [90c3, 90c3], [924c, 924c], [9449, 9449], [95a1, 95a1], [95d4, 95d4],
    [96ba, 96ba], [970d, 970d], [97a8, 97a8], [981c, 981c], [9904, 9904],
    [9932, 9932], [9b29, 9b29], [9b7a, 9b7a], [9d60, 9d60], [9da1, 9da1],
    [9dae, 9dae], [9db4, 9db4], [9ea7, 9ea7], [9f43, 9f43], [9f55, 9f55],
    [20000, 20000], [20057, 20057], [205c2, 205c2], [20622, 20622],
    [20694, 20694], [206f3, 206f3], [20840, 20840], [209d5, 209d5],
    [20c13, 20c13], [20cc7, 20cc7], [20cca, 20cca], [20d69, 20d69],
    [20db9, 20db9], [20dbe, 20dbe], [20ed9, 20ed9], [2103d, 2103d],
    [211de, 211de], [211f6, 211f6], [21ae5, 21ae5], [2210d, 2210d],
    [22170, 22170], [22973, 22973], [22b32, 22b32], [23188, 23188],
    [233f7, 233f7], [238f9, 238f9], [23c0c, 23c0c], [23c91, 23c91],
    [23cb2, 23cb2], [23fcc, 23fcc], [24227, 24227], [2433e, 2433e],
    [245b1, 245b1], [25251, 25251], [252ff, 252ff], [2562b, 2562b],
    [25756, 25756], [25778, 25778], [25784, 25784], [2578d, 2578d],
    [257a9, 257a9], [257c3, 257c3], [25ec9, 25ec9], [25f76, 25f76],
    [260d4, 260d4], [261f8, 261f8], [2648f, 2648f], [2663f, 2663f],
    [266d8, 266d8], [266dc, 266dc], [267a6, 267a6], [26926, 26926],
    [26cec, 26cec], [26e9e, 26e9e], [26f30, 26f30], [26f35, 26f35],
    [26f45, 26f45], [27014, 27014], [271ce, 271ce], [271ee, 271ee],
    [272ac, 272ac], [27742, 27742], [27773, 27773], [27a02, 27a02],
    [27a9e, 27a9e], [27b02, 27b02], [27b31, 27b31], [27b73, 27b73],
    [27bb5, 27bb5], [27bc9, 27bc9], [27ca6, 27ca6], [282df, 282df],
    [28347, 28347], [28731, 28731], [28734, 28734], [28a1b, 28a1b],
    [28d22, 28d22], [29138, 29138], [29162, 29162], [29321, 29321],
    [29425, 29425], [29478, 29478], [29a52, 29a52], [29a72, 29a72],
    [29d62, 29d62], [2a20a, 2a20a], [2a5b2, 2a5b2], [2a639, 2a639]**/


    namespace {
    const static UnicodeSet::run_t __he_Set_runs[] = {
    {Empty, 425}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 3},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 13},
    {Mixed, 2}, {Empty, 25}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 2}, {Mixed, 5}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 2821}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 71}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 63}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 50}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 24}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 100}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 8}, {Mixed, 5},
    {Empty, 55}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 13},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 36}, {Mixed, 2},
    {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 46},
    {Mixed, 2}, {Empty, 23}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 29390}};
    const static UnicodeSet::bitquad_t  __he_Set_quads[] = {
    0x00000001, 0x80000000, 0x01000000, 0x00000002, 0x00000808, 0x01000000,
    0x20000000, 0x00000800, 0x00010010, 0x00020000, 0x00000080, 0x00020000,
    0x00000028, 0x00040000, 0x00000004, 0x10000000, 0x00000080, 0x00000200,
    0x00000080, 0x10000000, 0x00000008, 0x00000004, 0x00000040, 0x00100000,
    0x01000000, 0x00000010, 0x00000100, 0x04000000, 0x00004020, 0x00200000,
    0x00000800, 0x40000000, 0x00000100, 0x10200000, 0x00001000, 0x10000000,
    0x00000100, 0x00001080, 0x20000000, 0x28000000, 0x00020008, 0x00001000,
    0x00000100, 0x00000080, 0x00004000, 0x00020000, 0x00000001, 0x00080000,
    0x00000040, 0x00040000, 0x00040000, 0x00001000, 0x00002000, 0x00800000,
    0x11000000, 0x00000002, 0x00020000, 0x10000000, 0x00080000, 0x20000000,
    0x01000000, 0x00104000, 0x00200000, 0x00000008, 0x00000004, 0x000000c0,
    0x00000001, 0x00200000, 0x00000004, 0x00040000, 0x00000800, 0x00001000,
    0x00042200, 0x00000020, 0x00000800, 0x00000200, 0x40000000, 0x00100000,
    0x00200000, 0x04000000, 0x00000080, 0x00080000, 0x0000c000, 0x08000000,
    0x00800000, 0x00008000, 0x00000008, 0x80000000, 0x00200000, 0x00004000,
    0x08000000, 0x04000000, 0x00100000, 0x00010000, 0x00000100, 0x00400000,
    0x00000020, 0x40000000, 0x00000300, 0x00000001, 0x00000800, 0x00000020,
    0x00000010, 0x00000008, 0x00001000, 0x00000200, 0x00000002, 0x00100000,
    0x04000000, 0x00002000, 0x00000100, 0x10000000, 0x00000010, 0x00040000,
    0x00000200, 0x04000000, 0x00000001, 0x00104002, 0x00000080, 0x00200008,
    0x00000001, 0x00800000, 0x00000004, 0x00000004, 0x00100000, 0x00080000,
    0x00000001, 0x00200000, 0x00080000, 0x00000480, 0x00000200, 0x42000000,
    0x02000000, 0x20000000, 0x40000000, 0x00400000, 0x00000020, 0x00002000,
    0x00010000, 0x00080000, 0x00040000, 0x00000100, 0x00800000, 0x02000000,
    0x00001000, 0x00020000, 0x00040000, 0x00001000, 0x00000080, 0x40000000,
    0x00020000, 0x00020000, 0x80000000, 0x00000800, 0x00400000, 0x01000000,
    0x00002010, 0x00000200, 0x00000008, 0x00000200, 0x00400000, 0x00100000,
    0x01000000, 0x00008000, 0x80000000, 0x11000000, 0x00000040, 0x00000040,
    0x00001000, 0x40000000, 0x00210000, 0x00000020, 0x00100000, 0x00004000,
    0x00004000, 0x00001000, 0x00000004, 0x00080000, 0x00000004, 0x40000000,
    0x00000004, 0x00020000, 0x00080000, 0x00200000, 0x00000200, 0x00000040,
    0x80000000, 0x00000080, 0x00120000, 0x08000000, 0x00000004, 0x01000000,
    0x00000004, 0x00000002, 0x00000020, 0x01000000, 0x00040000, 0x00040000,
    0x00000004, 0x00000400, 0x00040000, 0x02000000};
    }

    const static UnicodeSet he_Set{const_cast<UnicodeSet::run_t *>(__he_Set_runs), 355, 0, const_cast<UnicodeSet::bitquad_t *>(__he_Set_quads), 202, 0};

    /** Code Point Ranges for bie
    [3521, 3521], [39d9, 39d9], [3b6d, 3b6d], [41f7, 41f7], [42e2, 42e2],
    [4318, 4318], [43df, 43df], [4637, 4637], [47e4, 47e4], [4b71, 4b71],
    [4ce4, 4ce4], [522b, 522b], [5487, 5487], [5f46, 5f46], [5fb6, 5fb6],
    [618b, 618b], [6252, 6252], [62d4, 62d4], [634c, 634c], [6487, 6487],
    [67ed, 67ed], [67f2, 67f2], [765f, 765f], [79d8, 79d8], [7a6a, 7a6a],
    [82fe, 82fe], [8382, 8382], [853d, 853d], [86c2, 86c2], [87de, 87de],
    [8952, 8952], [8e69, 8e69], [9c49, 9c49], [2036f, 2036f],
    [2141e, 2141e], [21634, 21634], [21640, 21640], [2166a, 2166a],
    [21dd8, 21dd8], [221a3, 221a3], [22433, 22433], [226ce, 226ce],
    [231e2, 231e2], [232b6, 232b6], [24264, 24264], [24dd7, 24dd7],
    [24e93, 24e93], [24fb5, 24fb5], [257b2, 257b2], [25841, 25841],
    [2718a, 2718a], [2733d, 2733d], [2776c, 2776c], [279f8, 279f8],
    [27fe5, 27fe5], [28085, 28085], [2849c, 2849c], [294dd, 294dd],
    [2983b, 2983b], [2985f, 2985f], [29989, 29989], [29d5b, 29d5b],
    [29e01, 29e01], [2a09f, 2a09f], [2a406, 2a406]**/


    namespace {
    const static UnicodeSet::run_t __bie_Set_runs[] = {
    {Empty, 425}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 85}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 114}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 110}, {Mixed, 1}, {Empty, 2872}, {Mixed, 1},
    {Empty, 132}, {Mixed, 1}, {Empty, 16}, {Mixed, 3}, {Empty, 58},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 88}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 125}, {Mixed, 1}, {Empty, 90}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 63}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 201}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 129}, {Mixed, 1}, {Empty, 26}, {Mixed, 2},
    {Empty, 9}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 29407}};
    const static UnicodeSet::bitquad_t  __bie_Set_quads[] = {
    0x00000002, 0x02000000, 0x00002000, 0x00800000, 0x00000004, 0x01000000,
    0x80000000, 0x00800000, 0x00000010, 0x00020000, 0x00000010, 0x00000800,
    0x00000080, 0x00000040, 0x00400000, 0x00000800, 0x00040000, 0x00100000,
    0x00001000, 0x00000080, 0x00042000, 0x80000000, 0x01000000, 0x00000400,
    0x40000000, 0x00000004, 0x20000000, 0x00000004, 0x40000000, 0x00040000,
    0x00000200, 0x00000200, 0x00008000, 0x40000000, 0x00100000, 0x00000001,
    0x00000400, 0x01000000, 0x00000008, 0x00080000, 0x00004000, 0x00000004,
    0x00400000, 0x00000010, 0x00800000, 0x00080000, 0x00200000, 0x00040000,
    0x00000002, 0x00000400, 0x20000000, 0x00001000, 0x01000000, 0x00000020,
    0x00000020, 0x10000000, 0x20000000, 0x08000000, 0x80000000, 0x00000200,
    0x08000000, 0x00000002, 0x80000000, 0x00000040};
    }

    const static UnicodeSet bie_Set{const_cast<UnicodeSet::run_t *>(__bie_Set_runs), 121, 0, const_cast<UnicodeSet::bitquad_t *>(__bie_Set_quads), 64, 0};

    /** Code Point Ranges for xin
    [3524, 3524], [3595, 3595], [36d9, 36d9], [3726, 3726], [3b44, 3b44],
    [3b61, 3b62], [3f4e, 3f4e], [3f99, 3f99], [417d, 417d], [4496, 4496],
    [46e5, 46e5], [46e8, 46e8], [4717, 4717], [4f08, 4f08], [4fe1, 4fe1],
    [4ffd, 4ffd], [5677, 5677], [56df, 56df], [59a1, 59a1], [59f0, 59f0],
    [5b1c, 5b1c], [5c0b, 5c0b], [5e8d, 5e8d], [5ede, 5ede], [5fc3, 5fc3],
    [5ffb, 5ffb], [60de, 60de], [6116, 6116], [6196, 6196], [64a2, 64a2],
    [65b0, 65b0], [6615, 6615], [677a, 677a], [6794, 6794], [6a5d, 6a5d],
    [6b23, 6b23], [6b3e, 6b3e], [6b46, 6b46], [712e, 712e], [76fa, 76fa],
    [7925, 7925], [812a, 812a], [8208, 8208], [820b, 820b], [82af, 82af],
    [8398, 8398], [85aa, 85aa], [8951, 8951], [8a22, 8a22], [8ed0, 8ed0],
    [8f9b, 8f9b], [90a4, 90a4], [91c1, 91c1], [920a, 920a], [92c5, 92c5],
    [9414, 9414], [946b, 946b], [9620, 9620], [99a8, 99a8], [99ab, 99ab],
    [99b8, 99b8], [9b35, 9b35], [20470, 20470], [2050b, 2050b],
    [20dd3, 20dd3], [2120f, 2120f], [2131c, 2131c], [222c6, 222c6],
    [225c0, 225c0], [2281d, 2281d], [22a72, 22a72], [22b67, 22b67],
    [23097, 23097], [2309c, 2309c], [230c4, 230c4], [23947, 23947],
    [24656, 24656], [24663, 24663], [24722, 24722], [248f2, 248f2],
    [24ae8, 24ae8], [24d3e, 24d3e], [24dd3, 24dd3], [24e69, 24e69],
    [2604d, 2604d], [2625d, 2625d], [26713, 26713], [267a4, 267a4],
    [268af, 268af], [2691f, 2691f], [26c38, 26c38], [275f9, 275f9],
    [27cc4, 27cc4], [27d22, 27d22], [282b3, 282b3], [284c7, 284c7],
    [294a6, 294a6], [29519, 29519], [295a3, 295a3], [295b0, 295b0],
    [297cd, 297cd], [29fbd, 29fbd], [29fc3, 29fc3], [2a03d, 2a03d]**/


    namespace {
    const static UnicodeSet::run_t __xin_Set_runs[] = {
    {Empty, 425}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 32}, {Mixed, 2},
    {Empty, 30}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 18}, {Mixed, 2},
    {Empty, 63}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 51},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10},
    {Mixed, 2}, {Empty, 21}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 46}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 63}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2889},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 69}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 125},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 67}, {Mixed, 1},
    {Empty, 103}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 142},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 126}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 62}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 29438}};
    const static UnicodeSet::bitquad_t  __xin_Set_quads[] = {
    0x00000010, 0x00200000, 0x02000000, 0x00000040, 0x00000010, 0x00000006,
    0x00004000, 0x02000000, 0x20000000, 0x00400000, 0x00000120, 0x00800000,
    0x00000100, 0x20000002, 0x00800000, 0x80000000, 0x00000002, 0x00010000,
    0x10000000, 0x00000800, 0x00002000, 0x40000000, 0x00000008, 0x08000000,
    0x40000000, 0x00400000, 0x00400000, 0x00000004, 0x00010000, 0x00200000,
    0x04000000, 0x00100000, 0x20000000, 0x40000008, 0x00000040, 0x00004000,
    0x04000000, 0x00000020, 0x00000400, 0x00000900, 0x00008000, 0x01000000,
    0x00000400, 0x00020000, 0x00000004, 0x00010000, 0x08000000, 0x00000010,
    0x00000002, 0x00000400, 0x00000020, 0x00100000, 0x00000800, 0x00000001,
    0x01000900, 0x00200000, 0x00010000, 0x00000800, 0x00080000, 0x00008000,
    0x10000000, 0x00000040, 0x00000001, 0x20000000, 0x00040000, 0x00000080,
    0x10800000, 0x00000010, 0x00000080, 0x00400000, 0x00000008, 0x00000004,
    0x00040000, 0x00000100, 0x40000000, 0x00080000, 0x00000200, 0x00002000,
    0x20000000, 0x00080000, 0x00000010, 0x00008000, 0x80000000, 0x01000000,
    0x02000000, 0x00000010, 0x00000004, 0x00080000, 0x00000080, 0x00000040,
    0x02000000, 0x00010008, 0x00002000, 0x20000000, 0x00000008, 0x20000000};
    }

    const static UnicodeSet xin_Set{const_cast<UnicodeSet::run_t *>(__xin_Set_runs), 179, 0, const_cast<UnicodeSet::bitquad_t *>(__xin_Set_quads), 96, 0};

    /** Code Point Ranges for e
    [3529, 3529], [35c9, 35c9], [36d5, 36d5], [38c2, 38c2], [39f4, 39f4],
    [3a75, 3a75], [3a7d, 3a7d], [3aca, 3aca], [3b99, 3b99], [3dc8, 3dc8],
    [4109, 4109], [4193, 4193], [42ea, 42ea], [4465, 4465], [446a, 446a],
    [453e, 453e], [4673, 4673], [46b0, 46b0], [46e9, 46e9], [4719, 4719],
    [4748, 4748], [47a9, 47a9], [4a79, 4a79], [4c6e, 4c6e], [4e9e, 4e9e],
    [4f6e, 4f6e], [4f89, 4f89], [4fc4, 4fc4], [5054, 5054], [507d, 507d],
    [530e, 530e], [533c, 533c], [537e, 537e], [5384, 5384], [53f1, 53f1],
    [542a, 542a], [5443, 5443], [54a2, 54a2], [54b9, 54b9], [54e6, 54e6],
    [5548, 5548], [554a, 554a], [5550, 5550], [555e, 555e], [5641, 5641],
    [5669, 5669], [56d0, 56d0], [56ee, 56ee], [57a9, 57a9], [57e1, 57e1],
    [580a, 580a], [5828, 5828], [582e, 582e], [59b8, 59b8], [59bf, 59bf],
    [59f6, 59f6], [5a25, 5a25], [5a3e, 5a40], [5a95, 5a95], [5c59, 5c59],
    [5c75, 5c75], [5c8b, 5c8b], [5cc9, 5cc9], [5ce8, 5ce8], [5d3f, 5d3f],
    [5eb5, 5eb5], [5ec5, 5ec5], [60e1, 60e1], [6115, 6115], [6239, 6239],
    [627c, 627c], [6415, 6415], [6424, 6424], [66f7, 66f7], [6799, 6799],
    [690f, 690f], [6aee, 6aee], [6b5e, 6b5e], [6b79, 6b7a], [6d1d, 6d1d],
    [6d90, 6d90], [6e42, 6e42], [7317, 7317], [7380, 7380], [73f4, 73f4],
    [7427, 7427], [75b4, 75b4], [75f7, 75f7], [75fe, 75fe], [7692, 7692],
    [774b, 774b], [7808, 7808], [7810, 7810], [7828, 7828], [7835, 7835],
    [7846, 7846], [786a, 786a], [78c0, 78c0], [7918, 7918], [80fa, 80fa],
    [816d, 816d], [82ca, 82ca], [83aa, 83aa], [843c, 843c], [848d, 848d],
    [8601, 8601], [8685, 8685], [86e4, 86e4], [86fe, 86fe], [8741, 8741],
    [89a8, 89a8], [8a1b, 8a1b], [8a7b, 8a7b], [8a90, 8a90], [8ae4, 8ae4],
    [8b4c, 8b4c], [8edb, 8edb], [8f35, 8f35], [8fd7, 8fd7], [904c, 904c],
    [904f, 904f], [9091, 9091], [9102, 9102], [920b, 920b], [92e8, 92e8],
    [9354, 9354], [9469, 9469], [959c, 959c], [95bc, 95bc], [9628, 9628],
    [9638, 9638], [963f, 963f], [9698, 9698], [980b, 980b], [981e, 981f],
    [984d, 984e], [9913, 9913], [9929, 9929], [9a00, 9a00], [9b32, 9b32],
    [9b64, 9b65], [9c10, 9c10], [9c2a, 9c2a], [9d33, 9d33], [9d5d, 9d5d],
    [9d9a, 9d9a], [9f43, 9f43], [9f76, 9f76], [9f7e, 9f7e], [2094d, 2094d],
    [20955, 20955], [2095c, 2095c], [20bea, 20bea], [20c1c, 20c1c],
    [20c65, 20c65], [20c6b, 20c6b], [20df8, 20df8], [2103e, 2103e],
    [21145, 21145], [21161, 21161], [21a91, 21a91], [21a97, 21a97],
    [21d2f, 21d2f], [21e63, 21e63], [21f99, 21f99], [220f2, 220f2],
    [22a21, 22a21], [22f1a, 22f1b], [23130, 23130], [233b4, 233b4],
    [23628, 23628], [2389b, 2389b], [23932, 23932], [239b5, 239b5],
    [240b7, 240b7], [243a3, 243a3], [2487e, 2487e], [24a84, 24a84],
    [24b7c, 24b7c], [24e31, 24e31], [24edc, 24edc], [252d9, 252d9],
    [2547a, 2547a], [2547e, 2547e], [254c8, 254c8], [25532, 25532],
    [25bf3, 25bf3], [262aa, 262aa], [266c5, 266c5], [2729c, 2729c],
    [272a7, 272a7], [27304, 27304], [2736c, 2736c], [2748e, 2748e],
    [2753c, 2753c], [27643, 27643], [27684, 27684], [2781e, 2781e],
    [278bd, 278bd], [27a1f, 27a1f], [27b6a, 27b6a], [27f0e, 27f0e],
    [27f76, 27f76], [27fd5, 27fd5], [28081, 28081], [280c3, 280c3],
    [28327, 28327], [28915, 28915], [28d4c, 28d4c], [28daf, 28daf],
    [28e37, 28e37], [28ea8, 28ea8], [291e0, 291e0], [29274, 29274],
    [292a2, 292a2], [292ca, 292ca], [292fd, 292fd], [29430, 29430],
    [29441, 29441], [29495, 29495], [294b0, 294b0], [2955f, 2955f],
    [2956c, 2956c], [29580, 29580], [296ac, 296ac], [298e3, 298e3],
    [29929, 29929], [29a2e, 29a2e], [29aa4, 29aa4], [29e07, 29e07],
    [29e0b, 29e0b], [29e16, 29e16], [2a01d, 2a01d], [2a174, 2a174],
    [2a60a, 2a60a], [2a610, 2a610], [2a66f, 2a66f]**/


    namespace {
    const static UnicodeSet::run_t __e_Set_runs[] = {
    {Empty, 425}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 20}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 2}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 11}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 13}, {Mixed, 3}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 11}, {Mixed, 2}, {Empty, 16}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 21}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 12}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 4},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 62}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 8}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
    {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 4}, {Mixed, 2}, {Empty, 7}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 13}, {Mixed, 2}, {Empty, 2894}, {Mixed, 1}, {Empty, 20},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 72},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 73}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 55}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 93},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 9},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 3}, {Empty, 8},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 29388}};
    const static UnicodeSet::bitquad_t  __e_Set_quads[] = {
    0x00000200, 0x00000200, 0x00200000, 0x00000004, 0x00100000, 0x20200000,
    0x00000400, 0x02000000, 0x00000100, 0x00000200, 0x00080000, 0x00000400,
    0x00000420, 0x40000000, 0x00080000, 0x00010000, 0x00000200, 0x02000000,
    0x00000100, 0x00000200, 0x02000000, 0x00004000, 0x40000000, 0x00004000,
    0x00000200, 0x00000010, 0x00100000, 0x20000000, 0x00004000, 0x10000000,
    0x40000000, 0x00000010, 0x00020000, 0x00000400, 0x00000008, 0x02000004,
    0x00000040, 0x40010500, 0x00000002, 0x00000200, 0x00010000, 0x00004000,
    0x00000200, 0x00000002, 0x00000400, 0x00004100, 0x81000000, 0x00400000,
    0xc0000020, 0x00000001, 0x00200000, 0x02000000, 0x00200000, 0x00000800,
    0x00000200, 0x00000100, 0x80000000, 0x00200000, 0x00000020, 0x00000002,
    0x00200000, 0x02000000, 0x10000000, 0x00200000, 0x00000010, 0x00800000,
    0x02000000, 0x00008000, 0x00004000, 0x40000000, 0x06000000, 0x20000000,
    0x00010000, 0x00000004, 0x00800000, 0x00000001, 0x00100000, 0x00000080,
    0x00100000, 0x40800000, 0x00040000, 0x00000800, 0x00010100, 0x00200100,
    0x00000040, 0x00000400, 0x00000001, 0x01000000, 0x04000000, 0x00002000,
    0x00000400, 0x00000400, 0x10000000, 0x00002000, 0x00000002, 0x00000020,
    0x40000010, 0x00000002, 0x00000100, 0x08000000, 0x08000000, 0x00010000,
    0x00000010, 0x00001000, 0x08000000, 0x00200000, 0x00800000, 0x00009000,
    0x00020000, 0x00000004, 0x00000800, 0x00000100, 0x00100000, 0x00000200,
    0x10000000, 0x10000000, 0x81000100, 0x01000000, 0xc0000800, 0x00006000,
    0x00080000, 0x00000200, 0x00000001, 0x00040000, 0x00000030, 0x00010000,
    0x00000400, 0x00080000, 0x20000000, 0x04000000, 0x00000008, 0x40400000,
    0x10202000, 0x00000400, 0x10000000, 0x00000820, 0x01000000, 0x40000000,
    0x00000020, 0x00000002, 0x00820000, 0x00008000, 0x00000008, 0x02000000,
    0x00040000, 0x00000002, 0x0c000000, 0x00010000, 0x00100000, 0x00000100,
    0x08000000, 0x00040000, 0x00200000, 0x00800000, 0x00000008, 0x40000000,
    0x00000010, 0x10000000, 0x00020000, 0x10000000, 0x02000000, 0x44000000,
    0x00000100, 0x00040000, 0x00080000, 0x00000400, 0x00000020, 0x10000000,
    0x00000080, 0x00000010, 0x00001000, 0x00004000, 0x10000000, 0x00000008,
    0x00000010, 0x40000000, 0x20000000, 0x80000000, 0x00000400, 0x00004000,
    0x00400000, 0x00200000, 0x00000002, 0x00000008, 0x00000080, 0x00200000,
    0x00001000, 0x00008000, 0x00800000, 0x00000100, 0x00000001, 0x00100000,
    0x00000004, 0x00000400, 0x20000000, 0x00010000, 0x00000002, 0x00200000,
    0x00010000, 0x80000000, 0x00001000, 0x00000001, 0x00001000, 0x00000008,
    0x00000200, 0x00004000, 0x00000010, 0x00400880, 0x20000000, 0x00100000,
    0x00010400, 0x00008000};
    }

    const static UnicodeSet e_Set{const_cast<UnicodeSet::run_t *>(__e_Set_runs), 353, 0, const_cast<UnicodeSet::bitquad_t *>(__e_Set_quads), 212, 0};

    /** Code Point Ranges for suan
    [352f, 352f], [4509, 4509], [475c, 475c], [5334, 5334], [64b0, 64b0],
    [72fb, 72fb], [75e0, 75e0], [7b07, 7b07], [7b6d, 7b6d], [7b97, 7b97],
    [7bf9, 7bf9], [849c, 849c], [9078, 9078], [9178, 9178], [20958, 20958],
    [24da4, 24da4], [25cea, 25cea], [25d35, 25d35], [26fb9, 26fb9],
    [28821, 28821], [29191, 29191], [29232, 29232], [2a611, 2a611],
    [2a61d, 2a61d]**/


    namespace {
    const static UnicodeSet::run_t __suan_Set_runs[] = {
    {Empty, 425}, {Mixed, 1}, {Empty, 126}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 94}, {Mixed, 1}, {Empty, 139}, {Mixed, 1},
    {Empty, 113}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 68},
    {Mixed, 1}, {Empty, 94}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 3006}, {Mixed, 1}, {Empty, 546}, {Mixed, 1}, {Empty, 121},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 147}, {Mixed, 1},
    {Empty, 195}, {Mixed, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 158}, {Mixed, 1}, {Empty, 29391}};
    const static UnicodeSet::bitquad_t  __suan_Set_quads[] = {
    0x00008000, 0x00000200, 0x10000000, 0x00100000, 0x00010000, 0x08000000,
    0x00000001, 0x00000080, 0x00002000, 0x00800000, 0x02000000, 0x10000000,
    0x01000000, 0x01000000, 0x01000000, 0x00000010, 0x00000400, 0x00200000,
    0x02000000, 0x00000002, 0x00020000, 0x00040000, 0x20020000};
    }

    const static UnicodeSet suan_Set{const_cast<UnicodeSet::run_t *>(__suan_Set_runs), 45, 0, const_cast<UnicodeSet::bitquad_t *>(__suan_Set_quads), 23, 0};

    /** Code Point Ranges for lou
    [3537, 3537], [385e, 385e], [3ab9, 3ab9], [4179, 4179], [474f, 474f],
    [48da, 48da], [4aeb, 4aeb], [4bab, 4bab], [4c7e, 4c7e], [50c2, 50c2],
    [560d, 560d], [587f, 587f], [5a41, 5a41], [5be0, 5be0], [5d81, 5d81],
    [5ed4, 5ed4], [617a, 617a], [645f, 645f], [6a13, 6a13], [6f0a, 6f0a],
    [6f0f, 6f0f], [71a1, 71a1], [7262, 7262], [750a, 750a], [763b, 763b],
    [779c, 779c], [7ab6, 7ab6], [7c0d, 7c0d], [802c, 802c], [825b, 825b],
    [851e, 851e], [87bb, 87bb], [8b31, 8b31], [8ec1, 8ec1], [9071, 9071],
    [93e4, 93e4], [964b, 964b], [9732, 9732], [97bb, 97bb], [9acf, 9acf],
    [2059b, 2059b], [205e9, 205e9], [207ad, 207ad], [20cf4, 20cf4],
    [21014, 21014], [211ed, 211ed], [215c6, 215c6], [2184e, 2184e],
    [21a85, 21a85], [21c0c, 21c0c], [22222, 22222], [2390b, 2390b],
    [23afb, 23afb], [24b0f, 24b0f], [2554d, 2554d], [26301, 26301],
    [263b9, 263b9], [26b6f, 26b6f], [26e22, 26e22], [2707e, 2707e],
    [27883, 27883], [27ade, 27ade], [27be8, 27be8], [27c03, 27c03],
    [27de1, 27de1], [2810b, 2810b], [28762, 28762], [28996, 28996],
    [28ad2, 28ad2], [28efb, 28efb], [293dd, 293dd], [2a363, 2a363]**/


    namespace {
    const static UnicodeSet::run_t __lou_Set_runs[] = {
    {Empty, 425}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 2901}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 182},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 128}, {Mixed, 1},
    {Empty, 81}, {Mixed, 1}, {Empty, 109}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 14}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 124}, {Mixed, 1}, {Empty, 29412}};
    const static UnicodeSet::bitquad_t  __lou_Set_quads[] = {
    0x00800000, 0x40000000, 0x02000000, 0x02000000, 0x00008000, 0x04000000,
    0x00000800, 0x00000800, 0x40000000, 0x00000004, 0x00002000, 0x80000000,
    0x00000002, 0x00000001, 0x00000002, 0x00100000, 0x04000000, 0x80000000,
    0x00080000, 0x00008400, 0x00000002, 0x00000004, 0x00000400, 0x08000000,
    0x10000000, 0x00400000, 0x00002000, 0x00001000, 0x08000000, 0x40000000,
    0x08000000, 0x00020000, 0x00000002, 0x00020000, 0x00000010, 0x00000800,
    0x00040000, 0x08000000, 0x00008000, 0x08000000, 0x00000200, 0x00002000,
    0x00100000, 0x00100000, 0x00002000, 0x00000040, 0x00004000, 0x00000020,
    0x00001000, 0x00000004, 0x00000800, 0x08000000, 0x00008000, 0x00002000,
    0x00000002, 0x02000000, 0x00008000, 0x00000004, 0x40000000, 0x00000008,
    0x40000000, 0x00000100, 0x00000008, 0x00000002, 0x00000800, 0x00000004,
    0x00400000, 0x00040000, 0x08000000, 0x20000000, 0x00000008};
    }

    const static UnicodeSet lou_Set{const_cast<UnicodeSet::run_t *>(__lou_Set_runs), 141, 0, const_cast<UnicodeSet::bitquad_t *>(__lou_Set_quads), 71, 0};

    /** Code Point Ranges for ti
    [3538, 3538], [3592, 3592], [35b7, 35b7], [3857, 3857], [38e2, 38e2],
    [3974, 3974], [3be9, 3be9], [413a, 413a], [4215, 4215], [4321, 4321],
    [43ae, 43ae], [43f2, 43f2], [4536, 4536], [4599, 4599], [46a3, 46a3],
    [46f1, 46f1], [48b0, 48b0], [48df, 48e0], [48fd, 48fd], [4a11, 4a11],
    [4a5f, 4a5f], [4a86, 4a86], [4b2b, 4b2b], [4b3e, 4b3e], [4bdc, 4bdc],
    [4c71, 4c71], [4d8f, 4d8f], [4f53, 4f53], [4ff6, 4ff6], [501c, 501c],
    [504d, 504d], [5243, 5243], [5254, 5254], [5397, 5397], [5551, 5551],
    [557c, 557c], [568f, 568f], [5694, 5694], [5943, 5943], [59fc, 59fc],
    [5a82, 5a82], [5a9e, 5a9e], [5c49, 5c49], [5c5f, 5c5f], [5d39, 5d39],
    [5f1f, 5f1f], [5fa5, 5fa5], [5fb2, 5fb2], [608c, 608c], [6090, 6090],
    [60d5, 60d5], [60ff, 60ff], [623b, 623b], [6298, 6298], [632e, 632e],
    [63a6, 63a6], [63d0, 63d0], [63e5, 63e5], [64ff, 64ff], [662f, 662f],
    [66ff, 66ff], [684b, 684b], [68af, 68af], [68e3, 68e3], [6974, 6974],
    [6b52, 6b52], [6ba2, 6ba2], [6d1f, 6d1f], [6d95, 6d95], [6e27, 6e27],
    [72c4, 72c4], [73f6, 73f6], [7445, 7445], [74cb, 74cb], [7747, 7747],
    [78ae, 78ae], [78c3, 78c3], [7a0a, 7a0a], [7a49, 7a49], [7c4a, 7c4a],
    [7d88, 7d88], [7df9, 7df9], [7f64, 7f64], [8086, 8086], [82d0, 82d0],
    [8351, 8351], [855b, 855b], [8599, 8599], [8652, 8652], [876d, 876d],
    [87ec, 87ec], [8879, 8879], [88fc, 88fc], [8906, 8906], [8a46, 8a46],
    [8ae6, 8ae6], [8b15, 8b15], [8da7, 8da7], [8daf, 8daf], [8e22, 8e22],
    [8e36, 8e36], [8e44, 8e44], [8e8d, 8e8d], [8fbe, 8fbe], [9016, 9016],
    [9046, 9046], [9069, 9069], [918d, 918d], [92bb, 92bb], [932b, 932b],
    [9357, 9357], [941f, 941f], [984c, 984c], [9a20, 9a20], [9ad4, 9ad4],
    [9af0, 9af0], [9b00, 9b00], [9b04, 9b04], [9ba7, 9ba7], [9bb7, 9bb7],
    [9bf7, 9bf7], [9d3a, 9d3a], [9d5c, 9d5c], [9d97, 9d97], [9dc8, 9dc9],
    [9de4, 9de4], [20784, 20784], [21969, 21969], [21c0e, 21c0e],
    [21c95, 21c95], [21cbf, 21cbf], [21e11, 21e11], [224e1, 224e1],
    [22779, 22779], [22796, 22796], [229d1, 229d1], [22c66, 22c66],
    [22cd3, 22cd3], [2310d, 2310d], [23221, 23221], [23246, 23246],
    [23585, 23585], [235b8, 235b8], [23739, 23739], [23916, 23916],
    [239c2, 239c2], [23e12, 23e12], [23e72, 23e72], [245d8, 245d8],
    [245e2, 245e2], [246a2, 246a2], [247e5, 247e5], [247fe, 247fe],
    [24b4c, 24b4c], [25248, 25248], [25258, 25258], [25866, 25866],
    [25af5, 25af5], [25cf3, 25cf3], [25d9b, 25d9b], [26322, 26322],
    [26ec0, 26ec0], [27020, 27020], [27030, 27030], [272d8, 272d8],
    [27529, 27529], [27663, 27663], [276d2, 276d2], [27746, 27746],
    [27750, 27750], [27868, 27868], [2790d, 2790d], [27a31, 27a31],
    [27f2e, 27f2e], [28043, 28043], [28265, 28265], [2851b, 2851b],
    [2880f, 2880f], [28a89, 28a89], [28c8e, 28c8e], [28c9e, 28c9e],
    [28d3c, 28d3c], [292e3, 292e3], [294c2, 294c2], [296d1, 296d1],
    [296f6, 296f6], [2974a, 2974a], [2993d, 2993d], [29b32, 29b32],
    [29b9c, 29b9c], [29cd5, 29cd5], [29ff7, 29ff7], [2a069, 2a069],
    [2a372, 2a372], [2a569, 2a569], [2a5a6, 2a5a6]**/


    namespace {
    const static UnicodeSet::run_t __ti_Set_runs[] = {
    {Empty, 425}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 20},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 13}, {Mixed, 3}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 7}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 10}, {Mixed, 2},
    {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 2892}, {Mixed, 1}, {Empty, 142}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 10},
    {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 19}, {Mixed, 2},
    {Empty, 17}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 8}, {Mixed, 2},
    {Empty, 25}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 58}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 55}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 92}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 29394}};
    const static UnicodeSet::bitquad_t  __ti_Set_quads[] = {
    0x01000000, 0x00040000, 0x00800000, 0x00800000, 0x00000004, 0x00100000,
    0x00000200, 0x04000000, 0x00200000, 0x00000002, 0x00004000, 0x00040000,
    0x00400000, 0x02000000, 0x00000008, 0x00020000, 0x00010000, 0x80000000,
    0x20000001, 0x00020000, 0x80000000, 0x00000040, 0x40000800, 0x10000000,
    0x00020000, 0x00008000, 0x00080000, 0x00400000, 0x10000000, 0x00002000,
    0x00100008, 0x00800000, 0x00020000, 0x10000000, 0x00108000, 0x00000008,
    0x10000000, 0x40000004, 0x80000200, 0x02000000, 0x80000000, 0x00040020,
    0x00011000, 0x00200000, 0x80000000, 0x08000000, 0x01000000, 0x00004000,
    0x00000040, 0x00010000, 0x00000020, 0x80000000, 0x00008000, 0x80000000,
    0x00000800, 0x00008000, 0x00000008, 0x00100000, 0x00040000, 0x00000004,
    0x80000000, 0x00200000, 0x00000080, 0x00000010, 0x00400000, 0x00000020,
    0x00000800, 0x00000080, 0x00004000, 0x00000008, 0x00000400, 0x00000200,
    0x00000400, 0x00000100, 0x02000000, 0x00000010, 0x00000040, 0x00010000,
    0x00020000, 0x08000000, 0x02000000, 0x00040000, 0x00002000, 0x00001000,
    0x02000000, 0x10000000, 0x00000040, 0x00000040, 0x00000040, 0x00200000,
    0x00008080, 0x00400004, 0x00000010, 0x00002000, 0x40000000, 0x00400000,
    0x00000040, 0x00000200, 0x00002000, 0x08000000, 0x00000800, 0x00800000,
    0x80000000, 0x00001000, 0x00000001, 0x00100000, 0x00010000, 0x00000011,
    0x00800080, 0x00800000, 0x04000000, 0x10000000, 0x00800000, 0x00000300,
    0x00000010, 0x00000010, 0x00000200, 0x00004000, 0x00200000, 0x80000000,
    0x00020000, 0x00000002, 0x02000000, 0x00400000, 0x00020000, 0x00000040,
    0x00080000, 0x00002000, 0x00000002, 0x00000040, 0x00000020, 0x01000000,
    0x02000000, 0x00400000, 0x00000004, 0x00040000, 0x00040000, 0x01000000,
    0x00000004, 0x00000004, 0x40000020, 0x00001000, 0x01000100, 0x00000040,
    0x00200000, 0x00080000, 0x08000000, 0x00000004, 0x00000001, 0x00010001,
    0x01000000, 0x00000200, 0x00000008, 0x00040000, 0x00010040, 0x00000100,
    0x00002000, 0x00020000, 0x00004000, 0x00000008, 0x00000020, 0x08000000,
    0x00008000, 0x00000200, 0x40004000, 0x10000000, 0x00000008, 0x00000004,
    0x00020000, 0x00400000, 0x00000400, 0x20000000, 0x00040000, 0x10000000,
    0x00200000, 0x00800000, 0x00000200, 0x00040000, 0x00000200, 0x00000040};
    }

    const static UnicodeSet ti_Set{const_cast<UnicodeSet::run_t *>(__ti_Set_runs), 313, 0, const_cast<UnicodeSet::bitquad_t *>(__ti_Set_quads), 180, 0};

    /** Code Point Ranges for le
    [3539, 3539], [3580, 3580], [3fed, 3fed], [4e86, 4e86], [4ec2, 4ec2],
    [52d2, 52d2], [53fb, 53fb], [561e, 561e], [5fc7, 5fc7], [6250, 6250],
    [6a02, 6a02], [6c3b, 6c3b], [6cd0, 6cd0], [725e, 725e], [7833, 7833],
    [7afb, 7afb], [7c15, 7c15], [808b, 808b], [827b, 827b], [961e, 961e],
    [97f7, 97f7], [990e, 990e], [9c33, 9c33], [23092, 23092],
    [23c92, 23c92], [247d3, 247d3], [24a19, 24a19], [255aa, 255aa],
    [2943e, 2943e]**/


    namespace {
    const static UnicodeSet::run_t __le_Set_runs[] = {
    {Empty, 425}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 82},
    {Mixed, 1}, {Empty, 116}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 156}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 3234}, {Mixed, 1}, {Empty, 95}, {Mixed, 1},
    {Empty, 89}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 92},
    {Mixed, 1}, {Empty, 499}, {Mixed, 1}, {Empty, 29534}};
    const static UnicodeSet::bitquad_t  __le_Set_quads[] = {
    0x02000000, 0x00000001, 0x00002000, 0x00000040, 0x00000004, 0x00040000,
    0x08000000, 0x40000000, 0x00000080, 0x00010000, 0x00000004, 0x08000000,
    0x00010000, 0x40000000, 0x00080000, 0x08000000, 0x00200000, 0x00000800,
    0x08000000, 0x40000000, 0x00800000, 0x00004000, 0x00080000, 0x00040000,
    0x00040000, 0x00080000, 0x02000000, 0x00000400, 0x40000000};
    }

    const static UnicodeSet le_Set{const_cast<UnicodeSet::run_t *>(__le_Set_runs), 59, 0, const_cast<UnicodeSet::bitquad_t *>(__le_Set_quads), 29, 0};

    /** Code Point Ranges for xian
    [353e, 353e], [360b, 360b], [36cd, 36cd], [36fe, 36fe], [3737, 3737],
    [3849, 3849], [387e, 387e], [3991, 3991], [3993, 3993], [39a5, 39a5],
    [39e5, 39e5], [3a87, 3a87], [3b0e, 3b0e], [3b17, 3b17], [3b60, 3b60],
    [3bad, 3bad], [3bd7, 3bd7], [3c0a, 3c0a], [3c39, 3c39], [3c94, 3c94],
    [3d6a, 3d6a], [3d8d, 3d8d], [3dff, 3dff], [3e1d, 3e1d], [3e8c, 3e8c],
    [3ea4, 3ea4], [3f49, 3f49], [3fbe, 3fbe], [3fcc, 3fcc], [4042, 4042],
    [4085, 4085], [40f8, 40f8], [4133, 4133], [418e, 418e], [426f, 426f],
    [4273, 4273], [42b1, 42b1], [434e, 434e], [43f9, 43f9], [4404, 4404],
    [4554, 4554], [456d, 456d], [4606, 4606], [4679, 4679], [469a, 469a],
    [4722, 4722], [48ad, 48ad], [48be, 48be], [4998, 4998], [49a5, 49a5],
    [49cb, 49cb], [49ee, 49ee], [4a42, 4a42], [4a59, 4a59], [4b51, 4b51],
    [4bed, 4bed], [4bf9, 4bf9], [4c64, 4c64], [4c97, 4c97], [4d47, 4d47],
    [4d4c, 4d4c], [4d64, 4d64], [4d9f, 4d9f], [4da2, 4da2], [4ed9, 4eda],
    [4f2d, 4f2d], [4f61, 4f61], [4fd4, 4fd4], [50ca, 50ca], [50e9, 50e9],
    [5148, 5148], [51bc, 51bc], [5481, 5481], [549e, 549e], [54b8, 54b8],
    [54ef, 54ef], [550c, 550c], [5563, 5563], [55db, 55db], [5615, 5615],
    [57b7, 57b7], [57f3, 57f3], [583f, 583f], [58cf, 58cf], [597e, 597e],
    [5997, 5997], [59b6, 59b6], [59cd, 59cd], [59ed, 59ed], [59fa, 59fa],
    [5a0a, 5a0a], [5a28, 5a28], [5a39, 5a39], [5acc, 5acc], [5afa, 5afa],
    [5b10, 5b10], [5b45, 5b45], [5baa, 5baa], [5bf0, 5bf0], [5c1f, 5c20],
    [5cf4, 5cf4], [5dae, 5dae], [5e70, 5e70], [5eef, 5eef], [5f26, 5f26],
    [5f61, 5f61], [5ffa, 5ffa], [614a, 614a], [6173, 6173], [61aa, 61aa],
    [61b2, 61b2], [61b8, 61b8], [61e2, 61e2], [634d, 634d], [6380, 6380],
    [63a2, 63a2], [63f1, 63f1], [641a, 641a], [641f, 641f], [648a, 648a],
    [648f, 648f], [6507, 6507], [6515, 6515], [665b, 665b], [66b9, 66b9],
    [6774, 6774], [67ae, 67ae], [6898, 6898], [69cf, 69cf], [6a4c, 6a4c],
    [6af6, 6af6], [6b26, 6b26], [6be8, 6be8], [6c19, 6c19], [6d12, 6d12],
    [6d17, 6d17], [6d80, 6d80], [6d8e, 6d8e], [6e93, 6e93], [6f96, 6f96],
    [6fc2, 6fc2], [7017, 7017], [7051, 7051], [7066, 7066], [70cd, 70cd],
    [71f9, 71f9], [736b, 736b], [736e, 736e], [737b, 737b], [7381, 7381],
    [73b9, 73b9], [73fe, 73fe], [7509, 7509], [7647, 7647], [76f7, 76f7],
    [7701, 7701], [774d, 774d], [77af, 77af], [77b7, 77b7], [77e3, 77e3],
    [784d, 784d], [78b1, 78b1], [7906, 7906], [7925, 7925], [7946, 7946],
    [7992, 7992], [79b0, 79b0], [79c8, 79c8], [7a34, 7a34], [7b45, 7b45],
    [7b67, 7b67], [7bb2, 7bb2], [7c7c, 7c7c], [7caf, 7caf], [7d43, 7d43],
    [7d85, 7d85], [7d96, 7d96], [7dab, 7dab], [7dda, 7dda], [7e23, 7e23],
    [7e3f, 7e3f], [7e96, 7e96], [7fa1, 7fa1], [7fac, 7fac], [80a9, 80a9],
    [80d8, 80d8], [8105, 8105], [817a, 817a], [8181, 8181], [81d4, 81d4],
    [81e4, 81e4], [81fd, 81fd], [8237, 8237], [82ee, 82ee], [83a7, 83a7],
    [859f, 859f], [85d6, 85d6], [861a, 861a], [861e, 861e], [86bf, 86bf],
    [86dd, 86dd], [8706, 8706], [8858, 8858], [893c, 893c], [8973, 8973],
    [898b, 898b], [8aa2, 8aa2], [8ab8, 8ab8], [8af4, 8af4], [8b40, 8b40],
    [8b63, 8b63], [8c4f, 8c4f], [8ce2, 8ce2], [8d7b, 8d7b], [8de3, 8de3],
    [8e6e, 8e6e], [8e9a, 8e9a], [8ed0, 8ed0], [8ed2, 8ed2], [8f31, 8f31],
    [9170, 9170], [918e, 918e], [91b6, 91b6], [91e4, 91e4], [9291, 9291],
    [929b, 929c], [92e7, 92e7], [930e, 930e], [931f, 931f], [9341, 9341],
    [934c, 934c], [93fe, 93fe], [9591, 9592], [95de, 95de], [9650, 9650],
    [9677, 9677], [96aa, 96aa], [9730, 9730], [97c5, 97c5], [97f1, 97f1],
    [9848, 9848], [986f, 986f], [9921, 9921], [9940, 9940], [99a6, 99a6],
    [9bae, 9bae], [9c14, 9c14], [9c7b, 9c7b], [9db1, 9db1], [9df3, 9df4],
    [9e79, 9e79], [9e99, 9e99], [9eb2, 9eb2], [9ef9, 9ef9], [9f38, 9f38],
    [2028f, 2028f], [203d3, 203d3], [203e1, 203e1], [204cc, 204cc],
    [20686, 20686], [206d1, 206d1], [20801, 20801], [20915, 20915],
    [20ac4, 20ac4], [20de2, 20de2], [20fe2, 20fe2], [21416, 21416],
    [21493, 21493], [215cf, 215cf], [217a3, 217a3], [21af9, 21af9],
    [21c32, 21c32], [21fae, 21fae], [21fe4, 21fe4], [22057, 22057],
    [2216e, 2216e], [222ee, 222ee], [22399, 22399], [22410, 22410],
    [22486, 22486], [22556, 22556], [2256d, 2256d], [2258b, 2258b],
    [2258e, 2258e], [2259d, 2259d], [22680, 22680], [226c6, 226c6],
    [2294c, 2294c], [22aff, 22aff], [22b82, 22b82], [22dd1, 22dd1],
    [22e5a, 22e5a], [23195, 23195], [232ba, 232ba], [23479, 23479],
    [23519, 23519], [2354e, 2354e], [23798, 23798], [237f2, 237f2],
    [2389f, 2389f], [23bbe, 23bbe], [23c37, 23c37], [24066, 24066],
    [2424c, 2424c], [24443, 24443], [244e4, 244e4], [247c5, 247c5],
    [24865, 24865], [24f02, 24f02], [2547b, 2547b], [254d2, 254d2],
    [25646, 25646], [25726, 25726], [2572c, 2572c], [25732, 25732],
    [257d5, 257d5], [259b6, 259b6], [25b0d, 25b0d], [25c33, 25c33],
    [25c8b, 25c8b], [25ec7, 25ec7], [25ee7, 25ee7], [25f4f, 25f4f],
    [262c8, 262c8], [263b5, 263b5], [26458, 26458], [2649c, 2649c],
    [26839, 26839], [26899, 26899], [26956, 26956], [269d0, 269d0],
    [26a62, 26a62], [26b76, 26b76], [26c41, 26c41], [26e0a, 26e0a],
    [26f6d, 26f6d], [2709e, 2709e], [27201, 27201], [27547, 27547],
    [27599, 27599], [275f9, 275f9], [27812, 27812], [27af9, 27af9],
    [27c40, 27c40], [27e02, 27e02], [27ed2, 27ed2], [27f0f, 27f0f],
    [27fa8, 27fa8], [28045, 28045], [281e4, 281e4], [28352, 28352],
    [283e5, 283e5], [285b1, 285b1], [28619, 28619], [2861e, 2861e],
    [28661, 28661], [286be, 286be], [28d6c, 28d6c], [28e98, 28e98],
    [291b5, 291b5], [29216, 29216], [293e9, 293e9], [29748, 29748],
    [2990a, 2990a], [29925, 29926], [29982, 29982], [299b9, 299b9],
    [29a21, 29a21], [29c46, 29c46], [29c4a, 29c4a], [29da4, 29da4],
    [2a0b6, 2a0b6], [2a10f, 2a10f], [2a137, 2a137], [2a529, 2a529]**/


    namespace {
    const static UnicodeSet::run_t __xian_Set_runs[] = {
    {Empty, 425}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 8},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 9}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6},
    {Mixed, 4}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 5}, {Mixed, 4}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 7}, {Empty, 4}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 11}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 1},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17},
    {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 5}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2842}, {Mixed, 1},
    {Empty, 9}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 3}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 13}, {Mixed, 2},
    {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 31}, {Mixed, 1}, {Empty, 29398}};
    const static UnicodeSet::bitquad_t  __xian_Set_quads[] = {
    0x40000000, 0x00000800, 0x00002000, 0x40000000, 0x00800000, 0x00000200,
    0x40000000, 0x000a0000, 0x00000020, 0x00000020, 0x00000080, 0x00804000,
    0x00000001, 0x00002000, 0x00800000, 0x00000400, 0x02000000, 0x00100000,
    0x00000400, 0x00002000, 0x80000000, 0x20000000, 0x00001000, 0x00000010,
    0x00000200, 0x40000000, 0x00001000, 0x00000004, 0x00000020, 0x01000000,
    0x00080000, 0x00004000, 0x00088000, 0x00020000, 0x00004000, 0x02000000,
    0x00000010, 0x00100000, 0x00002000, 0x00000040, 0x02000000, 0x04000000,
    0x00000004, 0x40002000, 0x01000000, 0x00000020, 0x00000800, 0x00004000,
    0x02000004, 0x00020000, 0x02002000, 0x00000010, 0x00800000, 0x00001080,
    0x00000010, 0x80000000, 0x00000004, 0x06000000, 0x00002000, 0x00000002,
    0x00100000, 0x00000400, 0x00000200, 0x00000100, 0x10000000, 0x40000002,
    0x01000000, 0x00008000, 0x00001000, 0x00000008, 0x08000000, 0x00200000,
    0x00800000, 0x00080000, 0x80000000, 0x00008000, 0x40000000, 0x00800000,
    0x00400000, 0x00002000, 0x04002000, 0x00000400, 0x02000100, 0x00001000,
    0x04000000, 0x00010000, 0x00000020, 0x00000400, 0x00010000, 0x80000000,
    0x00000001, 0x00100000, 0x00004000, 0x00010000, 0x00008000, 0x00000040,
    0x00000002, 0x04000000, 0x00000400, 0x00080000, 0x01040400, 0x00000004,
    0x00002000, 0x00000001, 0x00000004, 0x00020000, 0x84000000, 0x00008400,
    0x00200080, 0x08000000, 0x02000000, 0x00100000, 0x00004000, 0x01000000,
    0x00008000, 0x00001000, 0x00400000, 0x00000040, 0x00000100, 0x02000000,
    0x00840000, 0x00004001, 0x00080000, 0x00400000, 0x00000004, 0x00800000,
    0x00020000, 0x00000040, 0x00002000, 0x02000000, 0x08004800, 0x00000002,
    0x02000000, 0x40000000, 0x00000200, 0x00000080, 0x00800000, 0x00000002,
    0x00002000, 0x00808000, 0x00000008, 0x00002000, 0x00020000, 0x00000040,
    0x00000020, 0x00000040, 0x00040000, 0x00010000, 0x00000100, 0x00100000,
    0x00000020, 0x00000080, 0x00040000, 0x10000000, 0x00008000, 0x00000008,
    0x00400020, 0x00000800, 0x04000000, 0x80000008, 0x00400000, 0x00001002,
    0x00000200, 0x01000000, 0x00000020, 0x04000000, 0x00000002, 0x00100000,
    0x20000010, 0x00800000, 0x00004000, 0x00000080, 0x80000000, 0x00400000,
    0x44000000, 0x80000000, 0x20000000, 0x00000040, 0x01000000, 0x10000000,
    0x00080000, 0x00000800, 0x01000004, 0x00100000, 0x00000001, 0x00000008,
    0x00008000, 0x00000004, 0x08000000, 0x00000008, 0x00004000, 0x04000000,
    0x00050000, 0x00020000, 0x00010000, 0x00004000, 0x00400000, 0x00000010,
    0x18020000, 0x00000080, 0x80004000, 0x00001002, 0x40000000, 0x00060000,
    0x40000000, 0x00010000, 0x00800000, 0x00000400, 0x00010000, 0x00000020,
    0x00020000, 0x00000100, 0x00008000, 0x00000002, 0x00000001, 0x00000040,
    0x00004000, 0x00100000, 0x08000000, 0x00020000, 0x00180000, 0x02000000,
    0x02000000, 0x00040000, 0x02000000, 0x01000000, 0x00008000, 0x00080000,
    0x00000002, 0x00001000, 0x00000040, 0x00020000, 0x00000002, 0x00200000,
    0x00000010, 0x00000004, 0x00000004, 0x00400000, 0x00080000, 0x00008000,
    0x00000008, 0x02000000, 0x00040000, 0x00004000, 0x00000010, 0x00800000,
    0x00004000, 0x00004000, 0x02000000, 0x00010000, 0x00000040, 0x00400000,
    0x00002000, 0x20004800, 0x00000001, 0x00000040, 0x00001000, 0x80000000,
    0x00000004, 0x00020000, 0x04000000, 0x00200000, 0x04000000, 0x02000000,
    0x02000000, 0x00004000, 0x01000000, 0x00040000, 0x80000000, 0x40000000,
    0x00800000, 0x00000040, 0x00001000, 0x00000008, 0x00000010, 0x00000020,
    0x00000020, 0x00000004, 0x08000000, 0x00040000, 0x00000040, 0x00041040,
    0x00200000, 0x00400000, 0x00002000, 0x00080000, 0x00000800, 0x00000080,
    0x00000080, 0x00008000, 0x00000100, 0x00200000, 0x01000000, 0x10000000,
    0x02000000, 0x02000000, 0x00400000, 0x00010000, 0x00000004, 0x00400000,
    0x00000002, 0x00000400, 0x00002000, 0x40000000, 0x00000002, 0x00000080,
    0x02000000, 0x02000000, 0x00040000, 0x02000000, 0x00000001, 0x00000004,
    0x00040000, 0x00008000, 0x00000100, 0x00000020, 0x00000010, 0x00040000,
    0x00000020, 0x00020000, 0x42000000, 0x00000002, 0x40000000, 0x00001000,
    0x01000000, 0x00200000, 0x00400000, 0x00000200, 0x00000100, 0x00000400,
    0x00000060, 0x00000004, 0x02000000, 0x00000002, 0x00000440, 0x00000010,
    0x00400000, 0x00008000, 0x00800000, 0x00000200};
    }

    const static UnicodeSet xian_Set{const_cast<UnicodeSet::run_t *>(__xian_Set_runs), 541, 0, const_cast<UnicodeSet::bitquad_t *>(__xian_Set_quads), 340, 0};

    /** Code Point Ranges for zhi
    [3544, 3544], [35e7, 35e7], [3609, 3609], [3677, 3677], [3731, 3731],
    [3742, 3742], [3873, 3873], [3876, 3876], [3940, 3940], [39d7, 39d7],
    [3a01, 3a01], [3a16, 3a16], [3a7c, 3a7c], [3ad1, 3ad1], [3bb9, 3bb9],
    [3bc4, 3bc4], [3c8d, 3c8d], [3c9b, 3c9b], [3cb3, 3cb3], [3d1b, 3d1b],
    [3d2f, 3d2f], [3e1f, 3e1f], [3f7b, 3f7b], [3fc3, 3fc3], [40fd, 40fd],
    [413a, 413a], [4169, 4169], [41db, 41db], [41e7, 41e7], [41fd, 41fd],
    [4245, 4245], [425c, 425c], [4324, 4324], [43ba, 43ba], [43c4, 43c4],
    [4408, 4408], [442d, 442d], [4447, 4447], [44cb, 44cc], [44dc, 44dc],
    [44e1, 44e1], [454c, 454c], [45a8, 45a8], [4623, 4623], [462d, 462d],
    [46a6, 46a6], [46b3, 46b3], [46ca, 46ca], [46d7, 46d7], [4770, 4770],
    [4777, 4777], [4783, 4783], [47a0, 47a0], [47c8, 47c8], [47e1, 47e1],
    [48fd, 48fd], [4920, 4920], [49af, 49af], [49dd, 49dd], [49f4, 49f4],
    [4a62, 4a62], [4b39, 4b39], [4b41, 4b41], [4c43, 4c43], [4c65, 4c65],
    [4c80, 4c80], [4cc5, 4cc5], [4d42, 4d42], [4d79, 4d79], [4e4b, 4e4b],
    [4e7f, 4e7f], [4f0e, 4f0e], [4f84, 4f84], [5001, 5001], [503c, 503c],
    [506b, 506b], [5082, 5082], [5236, 5236], [526c, 526c], [5295, 5295],
    [52a7, 52a7], [538e, 538e], [5394, 5394], [53ea, 53ea], [5431, 5431],
    [546e, 546e], [54a5, 54a5], [54ab, 54ab], [5694, 5694], [5740, 5741],
    [5781, 5781], [57c3, 57c3], [57f4, 57f4], [57f7, 57f7], [5886, 5886],
    [588c, 588c], [5902, 5902], [59b7, 59b7], [59ea, 59ea], [5a21, 5a21],
    [5a9e, 5a9e], [5b02, 5b02], [5bd8, 5bd8], [5be6, 5be6], [5cd9, 5cd9],
    [5df5, 5df5], [5e19, 5e19], [5e5f, 5e5f], [5ea2, 5ea2], [5ea4, 5ea4],
    [5f58, 5f58], [5f9d, 5f9d], [5fb5, 5fb5], [5fd7, 5fd7], [5fee, 5fee],
    [6043, 6043], [6049, 6049], [6179, 6179], [6184, 6184], [61e5, 61e5],
    [61eb, 61eb], [6220, 6220], [627a, 627b], [62a7, 62a7], [62b5, 62b5],
    [62d3, 62d3], [6303, 6303], [6307, 6307], [6357, 6357], [6418, 6418],
    [6431, 6431], [6455, 6455], [6468, 6468], [646d, 646d], [646f, 646f],
    [64f2, 64f3], [64ff, 64ff], [652f, 652f], [65a6, 65a6], [65e8, 65e8],
    [6635, 6635], [664a, 664a], [6662, 6662], [667a, 667a], [675d, 675d],
    [676b, 676b], [679d, 679d], [67b3, 67b3], [67e3, 67e3], [683a, 683a],
    [684e, 684e], [6894, 6894], [68bd, 68bd], [690d, 690d], [6925, 6925],
    [6956, 6956], [69b0, 69b0], [6a00, 6a00], [6a32, 6a32], [6a34, 6a34],
    [6acd, 6acd], [6adb, 6adb], [6b62, 6b62], [6b6d, 6b6d], [6b96, 6b96],
    [6c0f, 6c10], [6c41, 6c41], [6c65, 6c66], [6c9a, 6c9a], [6cbb, 6cbb],
    [6cdc, 6cdc], [6d14, 6d14], [6d37, 6d37], [6dd4, 6dd4], [6dfd, 6dfd],
    [6ecd, 6ecd], [6eef, 6eef], [6f10, 6f10], [6f6a, 6f6a], [7004, 7004],
    [7099, 7099], [7286, 7286], [72fe, 72fe], [7318, 7318], [748f, 748f],
    [74c6, 74c6], [74e1, 74e1], [7564, 7564], [7590, 7590], [75b7, 75b7],
    [75bb, 75bb], [75d4, 75d4], [75e3, 75e3], [7608, 7608], [76f4, 76f4],
    [7730, 7730], [77e5, 77e5], [780b, 780b], [7825, 7825], [7929, 7929],
    [793a, 793a], [7941, 7941], [7947, 7947], [7949, 7949], [7951, 7951],
    [7957, 7957], [7983, 7983], [7994, 7994], [79c7, 79c7], [79d3, 79d3],
    [79d6, 79d6], [79e9, 79ea], [79ef, 79ef], [79f2, 79f2], [79f7, 79f7],
    [7a19, 7a1a], [7a49, 7a49], [7a92, 7a92], [7b6b, 7b6b], [7d19, 7d19],
    [7d29, 7d29], [7d7a, 7d7a], [7dfb, 7dfb], [7e36, 7e36], [7e54, 7e54],
    [7f6e, 7f6e], [7fd0, 7fd0], [8006, 8006], [8077, 8077], [80a2, 80a2],
    [80dd, 80dd], [80f5, 80f5], [8102, 8102], [81a3, 81a3], [81b1, 81b1],
    [81f3, 81f4], [81f7, 81f8], [8296, 8296], [829d, 829d], [82b7, 82b7],
    [831d, 831d], [83ed, 83ed], [8599, 8599], [85e2, 85e2], [8635, 8635],
    [8652, 8652], [8694, 8694], [86ed, 86ed], [8718, 8718], [87b2, 87b2],
    [87d9, 87d9], [8879, 8879], [887c, 887c], [889f, 88a0], [88fd, 88fd],
    [8967, 8967], [899f, 899f], [89d7, 89d7], [89dd, 89dd], [89f6, 89f6],
    [8a28, 8a28], [8a8c, 8a8c], [8b58, 8b58], [8c51, 8c51], [8c78, 8c78],
    [8cea, 8cea], [8d04, 8d04], [8dbe, 8dbe], [8dc2, 8dc2], [8dd6, 8dd6],
    [8df1, 8df1], [8e36, 8e36], [8e5b, 8e5b], [8e60, 8e60], [8e62, 8e62],
    [8e91, 8e91], [8e93, 8e93], [8ef9, 8ef9], [8efd, 8efd], [8f0a, 8f0a],
    [8fe3, 8fe3], [905f, 905f], [9072, 9072], [90c5, 90c5], [9148, 9148],
    [916f, 916f], [91de, 91de], [9244, 9244], [928d, 928d], [92b4, 92b4],
    [92d5, 92d5], [9455, 9455], [9624, 9624], [962f, 962f], [9641, 9641],
    [965f, 965f], [96bb, 96bb], [96c9, 96c9], [99b6, 99b6], [99bd, 99bd],
    [99e4, 99e4], [9a2d, 9a2d], [9a3a, 9a3a], [9ce9, 9ce9], [9cf7, 9cf7],
    [9d19, 9d19], [9d32, 9d32], [9da8, 9da8], [9dd9, 9dd9], [9ef9, 9ef9],
    [9f05, 9f05], [202a4, 202a4], [202b7, 202b7], [202e4, 202e4],
    [2035c, 2035c], [204f6, 204f6], [20616, 20616], [20685, 20685],
    [207c5, 207c5], [209a7, 209a7], [20ba1, 20ba1], [20c05, 20c05],
    [20f20, 20f20], [21039, 21039], [21049, 21049], [21092, 21092],
    [210a3, 210a3], [2120a, 2120a], [2123c, 2123c], [21376, 21376],
    [213c0, 213c0], [213da, 213da], [21458, 21458], [215a7, 215a7],
    [215bb, 215bb], [21651, 21651], [21817, 21817], [21839, 21839],
    [21b9e, 21b9e], [21c39, 21c39], [21c54, 21c54], [21e1c, 21e1c],
    [21f46, 21f46], [220dc, 220dc], [22122, 22122], [22131, 22131],
    [22141, 22141], [221e8, 221e8], [22281, 22281], [22367, 22367],
    [22388, 22388], [22402, 22402], [2255e, 2255e], [22587, 22587],
    [225bf, 225bf], [2267a, 2267a], [226a8, 226a8], [226cd, 226cd],
    [22852, 22852], [22995, 22995], [229e4, 229e4], [22bf6, 22bf6],
    [22c19, 22c19], [22d20, 22d20], [22d27, 22d28], [22df8, 22df8],
    [22ed9, 22ed9], [22f43, 22f43], [22f57, 22f57], [22fab, 22fab],
    [23510, 23510], [2358c, 2358c], [235ad, 235ad], [235bf, 235bf],
    [235fb, 235fb], [236a0, 236a0], [23970, 23970], [23a0b, 23a0b],
    [23c50, 23c50], [23cb5, 23cb5], [23cc0, 23cc0], [23f5a, 23f5a],
    [240f2, 240f2], [24192, 24192], [244d5, 244d5], [2459e, 2459e],
    [246f1, 246f1], [24782, 24782], [2478c, 2478c], [24984, 24984],
    [249ae, 249ae], [249dc, 249dc], [24d1f, 24d1f], [24d22, 24d22],
    [24d4b, 24d4b], [24d93, 24d93], [24e13, 24e13], [24f41, 24f41],
    [24fd9, 24fd9], [250eb, 250eb], [251d5, 251d5], [251ed, 251ed],
    [2536d, 2536d], [253b9, 253b9], [253c4, 253c5], [253ca, 253ca],
    [253f0, 253f0], [253f7, 253f7], [25493, 25493], [25497, 25497],
    [2550a, 2550a], [25621, 25621], [25646, 25646], [25751, 25751],
    [2576e, 2576e], [25808, 25808], [2583d, 2583d], [258ee, 258ee],
    [25b61, 25b61], [25b96, 25b96], [25d12, 25d12], [25e69, 25e69],
    [25eec, 25eec], [25fa3, 25fa3], [25fee, 25fee], [260d8, 260d8],
    [263e4, 263e4], [26416, 26416], [266e7, 266e7], [2670b, 2670b],
    [26754, 26754], [267d4, 267d4], [2693b, 2693b], [2694e, 26950],
    [26b5c, 26b5c], [26b6e, 26b6e], [26beb, 26beb], [26bef, 26bef],
    [26c18, 26c18], [26cee, 26cee], [26d00, 26d00], [2703f, 2703f],
    [270d0, 270d0], [27299, 27299], [27314, 27314], [273f8, 273f8],
    [27409, 27409], [274f8, 274f8], [27641, 27641], [276e2, 276e2],
    [2771a, 2771a], [27749, 27749], [2782b, 2782b], [27834, 27834],
    [278ed, 278ed], [278fe, 278fe], [27921, 27921], [27a30, 27a30],
    [27a7c, 27a7c], [27ae1, 27ae1], [27c52, 27c52], [27e05, 27e05],
    [27e15, 27e15], [27e32, 27e32], [27e5b, 27e5b], [27f34, 27f34],
    [27f66, 27f66], [27f82, 27f82], [28077, 28077], [28082, 28082],
    [280ef, 280ef], [281a7, 281a7], [28219, 28219], [2830c, 2830c],
    [28389, 28389], [2838c, 2838c], [28468, 28468], [28489, 28489],
    [28555, 28555], [2858b, 2858b], [285b9, 285b9], [28678, 28678],
    [2870e, 2870e], [287ca, 287ca], [287fe, 287fe], [28850, 28850],
    [288ae, 288ae], [28931, 28931], [289f5, 289f5], [28ad4, 28ad4],
    [28b1a, 28b1a], [28c1b, 28c1b], [28d42, 28d42], [28ec6, 28ec6],
    [28f13, 28f13], [28fdb, 28fdb], [29140, 29140], [2929d, 2929d],
    [292b4, 292b4], [292e9, 292e9], [29372, 29372], [29375, 29375],
    [2967e, 2967e], [299c4, 299c4], [29b3a, 29b3a], [29bc8, 29bc8],
    [29dd3, 29dd3], [29e48, 29e48], [29efc, 29efc], [2a04a, 2a04a],
    [2a053, 2a053], [2a069, 2a069], [2a085, 2a085], [2a3c0, 2a3c0],
    [2a40f, 2a40f], [2a45c, 2a45c], [2a48a, 2a48a], [2a5e8, 2a5e8],
    [2a5fb, 2a5fb], [2a679, 2a679]**/


    namespace {
    const static UnicodeSet::run_t __zhi_Set_runs[] = {
    {Empty, 426}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 5},
    {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
    {Mixed, 3}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 4},
    {Mixed, 5}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 7},
    {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 6},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 4}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 4}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 6}, {Mixed, 4}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 5}, {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 6},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 6},
    {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 3},
    {Empty, 7}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 3},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 4},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 4}, {Mixed, 3},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 7}, {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 4}, {Mixed, 3},
    {Empty, 1}, {Mixed, 4}, {Empty, 2}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 3},
    {Empty, 11}, {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 22}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 21}, {Mixed, 3}, {Empty, 3}, {Mixed, 2}, {Empty, 8},
    {Mixed, 2}, {Empty, 2844}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 10},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 13}, {Mixed, 2}, {Empty, 26}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 8}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 19}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15},
    {Mixed, 3}, {Empty, 25}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 7}, {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 11}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 24}, {Mixed, 2},
    {Empty, 22}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 10}, {Mixed, 2}, {Empty, 15}, {Mixed, 2}, {Empty, 3},
    {Mixed, 2}, {Empty, 6}, {Mixed, 2}, {Empty, 24}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 13}, {Mixed, 3}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 6}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 9}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 3},
    {Empty, 25}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 29388}};
    const static UnicodeSet::bitquad_t  __zhi_Set_quads[] = {
    0x00000010, 0x00000080, 0x00000200, 0x00800000, 0x00020000, 0x00000004,
    0x00480000, 0x00000001, 0x00800000, 0x00400002, 0x10000000, 0x00020000,
    0x02000000, 0x00000010, 0x08002000, 0x00080000, 0x08000000, 0x00008000,
    0x80000000, 0x08000000, 0x00000008, 0x20000000, 0x04000000, 0x00000200,
    0x08000000, 0x20000080, 0x10000020, 0x00000010, 0x04000000, 0x00000010,
    0x00000100, 0x00002000, 0x00000080, 0x10001800, 0x00000002, 0x00001000,
    0x00000100, 0x00002008, 0x00080040, 0x00800400, 0x00810000, 0x00000008,
    0x00000001, 0x00000100, 0x00000002, 0x20000000, 0x00000001, 0x00008000,
    0x20000000, 0x00100000, 0x00000004, 0x02000000, 0x00000002, 0x00000008,
    0x00000020, 0x00000001, 0x00000020, 0x00000004, 0x02000000, 0x00000800,
    0x80000000, 0x00004000, 0x00000010, 0x00000002, 0x10000000, 0x00000800,
    0x00000004, 0x00400000, 0x00001000, 0x00200000, 0x00000080, 0x00104000,
    0x00000400, 0x00020000, 0x00004000, 0x00000820, 0x00100000, 0x00000003,
    0x00000002, 0x00000008, 0x00900000, 0x00001040, 0x00000004, 0x00800000,
    0x00000400, 0x00000002, 0x40000000, 0x00000004, 0x01000000, 0x00000040,
    0x02000000, 0x00200000, 0x02000000, 0x80000000, 0x00000014, 0x01000000,
    0x20000000, 0x00200000, 0x00800000, 0x00004000, 0x00000208, 0x02000000,
    0x00000010, 0x00000820, 0x00000001, 0x0c000000, 0x00200080, 0x00080000,
    0x00000088, 0x00800000, 0x01000000, 0x00020000, 0x00200000, 0x0000a100,
    0x800c0000, 0x00008000, 0x00000040, 0x00000100, 0x00200000, 0x00000400,
    0x04000004, 0x20000000, 0x00000800, 0x20000000, 0x00080000, 0x00000008,
    0x04000000, 0x00004000, 0x00100000, 0x20000000, 0x00002000, 0x00000020,
    0x00400000, 0x00010000, 0x00000001, 0x00140000, 0x08002000, 0x00002004,
    0x00400000, 0x00018000, 0x00000002, 0x00000060, 0x04000000, 0x08000000,
    0x10000000, 0x00100000, 0x00800000, 0x00100000, 0x20000000, 0x00002000,
    0x00008000, 0x00010000, 0x00000400, 0x00000010, 0x02000000, 0x00000040,
    0x40000000, 0x01000000, 0x00008000, 0x00000040, 0x00000002, 0x00000010,
    0x00010000, 0x08800000, 0x00100000, 0x00000008, 0x00000100, 0x00100000,
    0x00010000, 0x00000020, 0x00000800, 0x00000020, 0x04000200, 0x00820282,
    0x00100008, 0x00480080, 0x00848600, 0x06000000, 0x00000200, 0x00040000,
    0x00000800, 0x02000000, 0x00000200, 0x04000000, 0x08000000, 0x00400000,
    0x00100000, 0x00004000, 0x00010000, 0x00000040, 0x00800000, 0x00000004,
    0x20000000, 0x00200000, 0x00000004, 0x00020008, 0x01980000, 0x20400000,
    0x00800000, 0x20000000, 0x00002000, 0x02000000, 0x00000004, 0x00200000,
    0x00040000, 0x00100000, 0x00002000, 0x01000000, 0x00040000, 0x02000000,
    0x12000000, 0x80000000, 0x00000001, 0x20000000, 0x00000080, 0x80000000,
    0x20800000, 0x00400000, 0x00000100, 0x00001000, 0x01000000, 0x00020000,
    0x01000000, 0x00000400, 0x00000010, 0x40000000, 0x00400004, 0x00020000,
    0x00400000, 0x08000000, 0x00000005, 0x000a0000, 0x22000000, 0x00000400,
    0x00000008, 0x80000000, 0x00040000, 0x00000020, 0x00000100, 0x00008000,
    0x40000000, 0x00000010, 0x00002000, 0x00100000, 0x00200000, 0x00200000,
    0x00008010, 0x80000002, 0x08000000, 0x00000200, 0x20400000, 0x00000010,
    0x04002000, 0x00800200, 0x02000000, 0x00040000, 0x00000100, 0x02000000,
    0x02000000, 0x00000020, 0x00800010, 0x00000010, 0x10000000, 0x00400000,
    0x00400000, 0x00000020, 0x00000020, 0x00000080, 0x00000002, 0x00000020,
    0x00000001, 0x02000000, 0x00000200, 0x00040000, 0x00000008, 0x00000400,
    0x10000000, 0x00400000, 0x04000001, 0x01000000, 0x08000080, 0x00020000,
    0x00800000, 0x02000000, 0x40000000, 0x02000000, 0x00100000, 0x10000000,
    0x00000040, 0x10000000, 0x00020004, 0x00000002, 0x00000100, 0x00000002,
    0x00000080, 0x00000100, 0x00000004, 0x40000000, 0x00000080, 0x80000000,
    0x04000000, 0x00000100, 0x00002000, 0x00040000, 0x00200000, 0x00000010,
    0x00400000, 0x02000000, 0x00000181, 0x01000000, 0x02000000, 0x00800008,
    0x00000800, 0x00010000, 0x00001000, 0x80002000, 0x08000000, 0x00000001,
    0x00010000, 0x00000800, 0x00010000, 0x00200000, 0x00000001, 0x04000000,
    0x00040000, 0x00040000, 0x00200000, 0x40000000, 0x00020000, 0x00001004,
    0x00000010, 0x00004000, 0x10000000, 0x80000000, 0x00000004, 0x00000800,
    0x00080000, 0x00080000, 0x00000002, 0x02000000, 0x00000800, 0x00200000,
    0x00002000, 0x00002000, 0x02000000, 0x00000430, 0x00810000, 0x00880000,
    0x00000400, 0x00000002, 0x00000040, 0x00020000, 0x00004000, 0x00000100,
    0x20000000, 0x00004000, 0x00000002, 0x00400000, 0x00040000, 0x00000200,
    0x00001000, 0x00000008, 0x00004000, 0x01000000, 0x00000010, 0x00400000,
    0x00000080, 0x00000800, 0x00100000, 0x00100000, 0x08000000, 0x0001c000,
    0x10000000, 0x00004000, 0x00008800, 0x01000000, 0x00004000, 0x00000001,
    0x80000000, 0x00010000, 0x02000000, 0x00100000, 0x01000000, 0x00000200,
    0x01000000, 0x00000002, 0x00000004, 0x04000000, 0x00000200, 0x00100800,
    0x40002000, 0x00000002, 0x00010000, 0x10000000, 0x00000002, 0x00040000,
    0x00200020, 0x00040000, 0x08000000, 0x00100000, 0x00000040, 0x00000004,
    0x00800000, 0x00000004, 0x00008000, 0x00000080, 0x02000000, 0x00001000,
    0x00001200, 0x00000100, 0x00000200, 0x00200000, 0x00000800, 0x02000000,
    0x01000000, 0x00004000, 0x00000400, 0x40000000, 0x00010000, 0x00004000,
    0x00020000, 0x00200000, 0x00100000, 0x04000000, 0x08000000, 0x00000004,
    0x00000040, 0x00080000, 0x08000000, 0x00000001, 0x20000000, 0x00100000,
    0x00000200, 0x00240000, 0x40000000, 0x00000010, 0x04000000, 0x00000100,
    0x00080000, 0x00000100, 0x10000000, 0x00080400, 0x00000200, 0x00000020,
    0x00000001, 0x00008000, 0x10000000, 0x00000400, 0x08000100, 0x02000000};
    }

    const static UnicodeSet zhi_Set{const_cast<UnicodeSet::run_t *>(__zhi_Set_runs), 621, 0, const_cast<UnicodeSet::bitquad_t *>(__zhi_Set_quads), 450, 0};

    /** Code Point Ranges for jia
    [3545, 3545], [3699, 3699], [3ab4, 3ab4], [3b96, 3b96], [3e26, 3e26],
    [3e62, 3e62], [3fd3, 3fd3], [402b, 402b], [4039, 4039], [409f, 409f],
    [4552, 4552], [455b, 455b], [4625, 4625], [46df, 46df], [4a61, 4a61],
    [4ef7, 4ef7], [4f3d, 4f3d], [4f73, 4f73], [5047, 5047], [50a2, 50a2],
    [50f9, 50f9], [52a0, 52a0], [53da, 53da], [5477, 5477], [5496, 5496],
    [550a, 550a], [5609, 5609], [560f, 560f], [573f, 573f], [57c9, 57c9],
    [590f, 590f], [593e, 593e], [5a7d, 5a7d], [5ac1, 5ac1], [5b8a, 5b8a],
    [5bb6, 5bb6], [5cac, 5cac], [5e4f, 5e4f], [5fa6, 5fa6], [5fe6, 5fe6],
    [605d, 605d], [621b, 621b], [6274, 6274], [62b8, 62b8], [62bc, 62bc],
    [62c1, 62c1], [62ee, 62ee], [6308, 6308], [633e, 633e], [63e9, 63e9],
    [63f3, 63f3], [64d6, 64d6], [659d, 659d], [6687, 6687], [67b6, 67b7],
    [67d9, 67d9], [689c, 689c], [6935, 6935], [698e, 698e], [6a9f, 6a9f],
    [6be0, 6be0], [6cc7, 6cc7], [6d79, 6d79], [728c, 728c], [7330, 7330],
    [7333, 7333], [73be, 73be], [73c8, 73c8], [7532, 7532], [75c2, 75c2],
    [7615, 7615], [7a3c, 7a3c], [7b33, 7b33], [7b74, 7b74], [7d5c, 7d5c],
    [801e, 801e], [80db, 80db], [8175, 8175], [8304, 8304], [83a2, 83a2],
    [846d, 846d], [86fa, 86fa], [8766, 8766], [8888, 8888], [88b7, 88b7],
    [88cc, 88cc], [8c6d, 8c6d], [8c91, 8c91], [8cc8, 8cc8], [8dcf, 8dcf],
    [8df2, 8df2], [8fe6, 8fe6], [90df, 90df], [9240, 9240], [926b, 926b],
    [927f, 927f], [92cf, 92cf], [93b5, 93b5], [9821, 9821], [9830, 9830],
    [9904, 9904], [99d5, 99d5], [99f1, 99f1], [9ab1, 9ab1], [9d36, 9d36],
    [9d4a, 9d4a], [9e9a, 9e9a], [20dc9, 20dc9], [20ea2, 20ea2],
    [212a0, 212a0], [21a5a, 21a5a], [21b58, 21b58], [21da5, 21da5],
    [22264, 22264], [225ca, 225ca], [2273f, 2273f], [22a8d, 22a8d],
    [22ae2, 22ae2], [22c48, 22c48], [22c4c, 22c4c], [23989, 23989],
    [23a87, 23a87], [23bab, 23bab], [245b0, 245b0], [245dc, 245dc],
    [247da, 247da], [24819, 24819], [251d7, 251d7], [252e3, 252e3],
    [25450, 25450], [25454, 25454], [2577f, 2577f], [257b5, 257b5],
    [2586e, 2586e], [25e4c, 25e4c], [263ae, 263ae], [263b1, 263b1],
    [2667a, 2667a], [268ef, 268ef], [269ee, 269ee], [26a26, 26a26],
    [26e18, 26e18], [26ea7, 26ea7], [26f64, 26f64], [2726a, 2726a],
    [279a4, 279a4], [27ff5, 27ff5], [28487, 28487], [28517, 28517],
    [28523, 28523], [29261, 29261], [2928f, 2928f], [2930d, 2930d],
    [296b2, 296b2], [296e9, 296e9], [29a39, 29a39], [29ca3, 29ca3],
    [29d9b, 29d9b], [2a1b2, 2a1b2], [2a1f7, 2a1f7], [2a21f, 2a21f],
    [2a413, 2a413], [2a51f, 2a51f], [2a64f, 2a64f]**/


    namespace {
    const static UnicodeSet::run_t __jia_Set_runs[] = {
    {Empty, 426}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 9}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 5},
    {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 8}, {Mixed, 3}, {Empty, 28}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 15}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 2937}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 105}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 79}, {Mixed, 2}, {Empty, 15}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 105},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 15}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 29389}};
    const static UnicodeSet::bitquad_t  __jia_Set_quads[] = {
    0x00000020, 0x02000000, 0x00100000, 0x00400000, 0x00000040, 0x00000004,
    0x00080000, 0x02000800, 0x80000000, 0x08040000, 0x00000020, 0x80000000,
    0x00000002, 0x00800000, 0x20000000, 0x00080000, 0x00000080, 0x00000004,
    0x02000000, 0x00000001, 0x04000000, 0x00800000, 0x00400000, 0x00000400,
    0x00008200, 0x80000000, 0x00000200, 0x00008000, 0x40000000, 0x20000000,
    0x00000002, 0x00000400, 0x00400000, 0x00001000, 0x00008000, 0x00000040,
    0x00000040, 0x20000000, 0x08000000, 0x00100000, 0x11000000, 0x00000002,
    0x00004000, 0x00000100, 0x40000000, 0x00080200, 0x00400000, 0x20000000,
    0x00000080, 0x00c00000, 0x02000000, 0x10000000, 0x00200000, 0x00004000,
    0x80000000, 0x00000001, 0x00000080, 0x02000000, 0x00001000, 0x00090000,
    0x40000000, 0x00000100, 0x00040000, 0x00000004, 0x00200000, 0x10000000,
    0x00080000, 0x00100000, 0x10000000, 0x40000000, 0x08000000, 0x00200000,
    0x00000010, 0x00000004, 0x00002000, 0x04000000, 0x00000040, 0x00000100,
    0x00800000, 0x00001000, 0x00002000, 0x00020000, 0x00000100, 0x00008000,
    0x00040000, 0x00000040, 0x80000000, 0x00000001, 0x80000800, 0x00008000,
    0x00200000, 0x00010002, 0x00000010, 0x00200000, 0x00020000, 0x00020000,
    0x00400000, 0x00000400, 0x04000000, 0x00000200, 0x00000004, 0x00000001,
    0x04000000, 0x01000000, 0x00000020, 0x00000010, 0x00000400, 0x80000000,
    0x00002000, 0x00000004, 0x00001100, 0x00000200, 0x00000080, 0x00000800,
    0x00010000, 0x10000000, 0x04000000, 0x02000000, 0x00800000, 0x00000008,
    0x00110000, 0x80000000, 0x00200000, 0x00004000, 0x00001000, 0x00024000,
    0x04000000, 0x00008000, 0x00004000, 0x00000040, 0x01000000, 0x00000080,
    0x00000010, 0x00000400, 0x00000010, 0x00200000, 0x00000080, 0x00800000,
    0x00000008, 0x00000002, 0x00008000, 0x00002000, 0x00040000, 0x00000200,
    0x02000000, 0x00000008, 0x08000000, 0x00040000, 0x00800000, 0x80000000,
    0x00080000, 0x80000000, 0x00008000};
    }

    const static UnicodeSet jia_Set{const_cast<UnicodeSet::run_t *>(__jia_Set_runs), 267, 0, const_cast<UnicodeSet::bitquad_t *>(__jia_Set_quads), 153, 0};

    /** Code Point Ranges for hu
    [3546, 3546], [35c5, 35c5], [3986, 3986], [398c, 398c], [39bf, 39bf],
    [39ee, 39ee], [39fe, 39fe], [3a2d, 3a2d], [3ab6, 3ab6], [3ada, 3ada],
    [3bdb, 3bdb], [3c7f, 3c7f], [3cf7, 3cf7], [3d36, 3d36], [3de4, 3de4],
    [3e26, 3e26], [3e80, 3e80], [3e89, 3e89], [3f47, 3f47], [3fb0, 3fb0],
    [406b, 406b], [41d8, 41d8], [4238, 4238], [4249, 4249], [42ba, 42ba],
    [4381, 4381], [44e4, 44e4], [45c2, 45c2], [469b, 469b], [47b1, 47b1],
    [4812, 4812], [4915, 4915], [4a1a, 4a1a], [4a3c, 4a3c], [4a50, 4a50],
    [4a74, 4a74], [4a9d, 4a9d], [4b0d, 4b0d], [4b45, 4b45], [4c27, 4c27],
    [4d23, 4d23], [4d2f, 4d2f], [4e4e, 4e4e], [4e92, 4e92], [4fff, 4fff],
    [532b, 532b], [547c, 547c], [548c, 548c], [552c, 552c], [553f, 553f],
    [5596, 5596], [55c0, 55c0], [55c3, 55c3], [5611, 5611], [561d, 561d],
    [569b, 569b], [56eb, 56eb], [5780, 5780], [58fa, 58fa], [59f1, 59f1],
    [5a5f, 5a5f], [5aa9, 5aa9], [5aed, 5aed], [5be3, 5be3], [5cb5, 5cb5],
    [5e0d, 5e0d], [5e60, 5e60], [5f16, 5f16], [5f27, 5f27], [5ffd, 5ffd],
    [6018, 6019], [6057, 6057], [60da, 60da], [60e1, 60e1], [6232, 6232],
    [6237, 6237], [623d, 623d], [6248, 6248], [6430, 6430], [6462, 6462],
    [64ed, 64ed], [659b, 659b], [6608, 6608], [6612, 6612], [6791, 6791],
    [695b, 695c], [69f2, 69f2], [69f4, 69f4], [6b51, 6b51], [6c69, 6c69],
    [6c7b, 6c7b], [6c8d, 6c8d], [6d3f, 6d3f], [6dc8, 6dc8], [6df2, 6df2],
    [6df4, 6df4], [6e56, 6e56], [6eec, 6eec], [6ef8, 6ef9], [6fe9, 6fe9],
    [702b, 702b], [70c0, 70c0], [7100, 7100], [7173, 7173], [71a9, 71a9],
    [72d0, 72d0], [7322, 7322], [7425, 7425], [745a, 745a], [74e0, 74e1],
    [74f3, 74f3], [7910, 7910], [795c, 795c], [7a6b, 7a6b], [7b0f, 7b0f],
    [7b8e, 7b8e], [7bb6, 7bb6], [7c04, 7c04], [7cca, 7cca], [7d57, 7d57],
    [7d94, 7d94], [7e0e, 7e0e], [7e20, 7e20], [7fbd, 7fbd], [80cd, 80cd],
    [80e1, 80e1], [81b4, 81b4], [8290, 8290], [8294, 8294], [82a6, 82a6],
    [82b4, 82b4], [82e6, 82e6], [82f8, 82f8], [8400, 8400], [846b, 846b],
    [851b, 851b], [8530, 8530], [864d, 864e], [8656, 8656], [8774, 8774],
    [879c, 879c], [885a, 885a], [89f3, 89f3], [89f7, 89f7], [8a31, 8a31],
    [8b3c, 8b3c], [8b77, 8b77], [8c70, 8c70], [8ee4, 8ee4], [9120, 9120],
    [9190, 9190], [9237, 9237], [92d8, 92d8], [9359, 9359], [9378, 9378],
    [96ba, 96ba], [96c7, 96c7], [96d0, 96d0], [96fd, 96fd], [97c4, 97c4],
    [9800, 9800], [9836, 9836], [992c, 992c], [9b0d, 9b0d], [9b71, 9b71],
    [9c17, 9c17], [9c6f, 9c6f], [9cf8, 9cf8], [9d29, 9d29], [9d60, 9d60],
    [9d98, 9d98], [9da6, 9da6], [9dae, 9dae], [9dbb, 9dbb], [9e0c, 9e0c],
    [20970, 20970], [209aa, 209aa], [20bf3, 20bf3], [20c1b, 20c1b],
    [20d31, 20d31], [21274, 21274], [21350, 21350], [21702, 21702],
    [217a0, 217a0], [219e5, 219e5], [21c05, 21c05], [21c7d, 21c7d],
    [21d31, 21d31], [21d58, 21d58], [21e79, 21e79], [21eee, 21eee],
    [21f18, 21f18], [221b0, 221b0], [22262, 22262], [223b5, 223b5],
    [223ef, 223ef], [22462, 22462], [22479, 22479], [224f2, 224f2],
    [226aa, 226aa], [22a25, 22a26], [22a8f, 22a8f], [22f68, 22f68],
    [2311f, 2311f], [2339a, 2339a], [23442, 23442], [234d7, 234d7],
    [23676, 23676], [236eb, 236eb], [23757, 23757], [2387e, 2387e],
    [23ac8, 23ac8], [23c91, 23c91], [23e6c, 23e6c], [241e0, 241e0],
    [2430d, 2430d], [243b2, 243b2], [24400, 24400], [24614, 24614],
    [24635, 24635], [24737, 24737], [24758, 24758], [247b2, 247b2],
    [24a16, 24a16], [24b71, 24b71], [24d98, 24d98], [24e63, 24e63],
    [24f85, 24f85], [250a4, 250a4], [251f0, 251f0], [2543f, 2543f],
    [2588d, 2588d], [25c2a, 25c2a], [25c89, 25c89], [25d9c, 25d9c],
    [25dc6, 25dc6], [25fa8, 25fa8], [26055, 26055], [26282, 26282],
    [26298, 26298], [262a7, 262a7], [263d7, 263d7], [265bc, 265bc],
    [265e3, 265e3], [269d8, 269d8], [26a55, 26a55], [26b1a, 26b1a],
    [26b48, 26b48], [26d09, 26d09], [26df3, 26df3], [26e9f, 26e9f],
    [27094, 27094], [27170, 27170], [271a2, 271a2], [271ae, 271af],
    [271db, 271db], [271f0, 271f0], [27327, 27327], [27375, 27375],
    [275cc, 275cc], [27622, 27622], [276de, 276de], [27792, 27792],
    [27829, 27829], [278b0, 278b0], [278fc, 278fc], [2796e, 2796f],
    [2799a, 2799a], [2799d, 2799d], [27a53, 27a53], [27c34, 27c34],
    [27c87, 27c87], [27ca5, 27ca5], [27e72, 27e72], [27e7e, 27e7e],
    [27ef0, 27ef0], [27fd3, 27fd3], [27fe0, 27fe0], [28372, 28372],
    [2855a, 2855a], [28583, 28583], [286f5, 286f5], [28758, 28758],
    [2875e, 2875e], [2888b, 2888b], [288a4, 288a4], [288d7, 288d7],
    [2895b, 2895b], [28d2c, 28d2c], [29082, 29082], [29476, 29476],
    [295a8, 295a8], [298aa, 298aa], [29a14, 29a14], [29c2f, 29c2f],
    [29c4d, 29c4d], [29ce8, 29ce8], [29d6c, 29d6c], [29d88, 29d88],
    [29fbb, 29fbb], [2a092, 2a092], [2a12e, 2a12e], [2a342, 2a342],
    [2a3f3, 2a3f3], [2a3fb, 2a3fb], [2a549, 2a549], [2a56e, 2a56e],
    [2a571, 2a571], [2a648, 2a648]**/


    namespace {
    const static UnicodeSet::run_t __hu_Set_runs[] = {
    {Empty, 426}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 29},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 7},
    {Mixed, 5}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 9}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 5}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 9}, {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 11},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 25}, {Mixed, 3}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 3},
    {Empty, 2}, {Mixed, 1}, {Empty, 2906}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 17}, {Mixed, 2}, {Empty, 8}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 20}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 7},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 17}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 9},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 27}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 9}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 16}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 16}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 29389}};
    const static UnicodeSet::bitquad_t  __hu_Set_quads[] = {
    0x00000040, 0x00000020, 0x00001040, 0x80000000, 0x40004000, 0x00002000,
    0x00400000, 0x04000000, 0x08000000, 0x80000000, 0x00800000, 0x00400000,
    0x00000010, 0x00000040, 0x00000201, 0x00000080, 0x00010000, 0x00000800,
    0x01000000, 0x01000000, 0x00000200, 0x04000000, 0x00000002, 0x00000010,
    0x00000004, 0x08000000, 0x00020000, 0x00040000, 0x00200000, 0x04000000,
    0x10000000, 0x00010000, 0x00100000, 0x20000000, 0x00002000, 0x00000020,
    0x00000080, 0x00008008, 0x00004000, 0x00040000, 0x80000000, 0x00000800,
    0x10000000, 0x00001000, 0x80001000, 0x00400000, 0x00000009, 0x20020000,
    0x08000000, 0x00000800, 0x00000001, 0x04000000, 0x00020000, 0x80000000,
    0x00000200, 0x00002000, 0x00000008, 0x00200000, 0x00002000, 0x00000001,
    0x00400000, 0x00000080, 0x20000000, 0x03000000, 0x00800000, 0x04000000,
    0x00000002, 0x20840000, 0x00000100, 0x00010000, 0x00000004, 0x00002000,
    0x08000000, 0x00040100, 0x00020000, 0x18000000, 0x00140000, 0x00020000,
    0x08000200, 0x00002000, 0x80000000, 0x00000100, 0x00140000, 0x00400000,
    0x03001000, 0x00000200, 0x00000800, 0x00000001, 0x00000001, 0x00080000,
    0x00000200, 0x00010000, 0x00000004, 0x00000020, 0x04000000, 0x00080003,
    0x00010000, 0x10000000, 0x00000800, 0x00008000, 0x00004000, 0x00400000,
    0x00000010, 0x00000400, 0x00800000, 0x00100000, 0x00004000, 0x00000001,
    0x20000000, 0x00002000, 0x00000002, 0x00100000, 0x00110000, 0x00100040,
    0x01000040, 0x00000001, 0x00000800, 0x08000000, 0x00010000, 0x00406000,
    0x00100000, 0x10000000, 0x04000000, 0x00880000, 0x00020000, 0x10000000,
    0x00800000, 0x00010000, 0x00000010, 0x00000001, 0x00010000, 0x00800000,
    0x01000000, 0x02000000, 0x01000000, 0x04000000, 0x00010080, 0x20000000,
    0x00000010, 0x00000001, 0x00400000, 0x00001000, 0x00002000, 0x00020000,
    0x00800000, 0x00008000, 0x01000000, 0x00000200, 0x00000001, 0x01000000,
    0x08004040, 0x00001000, 0x00010000, 0x00000400, 0x00080000, 0x08000000,
    0x00020000, 0x00100000, 0x00010000, 0x00000004, 0x00000001, 0x00000020,
    0x00000020, 0x20000000, 0x00020000, 0x01000000, 0x02000000, 0x00004000,
    0x01000000, 0x00010000, 0x00000004, 0x00200000, 0x00008000, 0x02000004,
    0x00040000, 0x00000400, 0x00000060, 0x00008000, 0x00000100, 0x80000000,
    0x04000000, 0x00000004, 0x00800000, 0x00400000, 0x00000800, 0x00800000,
    0x40000000, 0x00000100, 0x00020000, 0x00001000, 0x00000001, 0x00002000,
    0x00040000, 0x00000001, 0x00100000, 0x00200000, 0x00800000, 0x01000000,
    0x00040000, 0x00400000, 0x00020000, 0x01000000, 0x00000008, 0x00000020,
    0x00000010, 0x00010000, 0x80000000, 0x00002000, 0x00000400, 0x00000200,
    0x10000000, 0x00000040, 0x00000100, 0x00200000, 0x01000004, 0x00000080,
    0x00800000, 0x10000000, 0x00000008, 0x01000000, 0x00200000, 0x04000000,
    0x00000100, 0x00000200, 0x00080000, 0x80000000, 0x00100000, 0x00010000,
    0x0000c004, 0x08000000, 0x00010000, 0x00000080, 0x00200000, 0x00001000,
    0x00000004, 0x40000000, 0x00040000, 0x00000200, 0x00010000, 0x10000000,
    0x0000c000, 0x24000000, 0x00080000, 0x00100000, 0x00000080, 0x00000020,
    0x40040000, 0x00010000, 0x00080000, 0x00000001, 0x00040000, 0x04000000,
    0x00000008, 0x00200000, 0x41000000, 0x00000800, 0x00000010, 0x00800000,
    0x08000000, 0x00001000, 0x00000004, 0x00400000, 0x00000100, 0x00000400,
    0x00100000, 0x00008000, 0x00002000, 0x00000100, 0x00001000, 0x00000100,
    0x08000000, 0x00040000, 0x00004000, 0x00000004, 0x08080000, 0x00000200,
    0x00024000, 0x00000100};
    }

    const static UnicodeSet hu_Set{const_cast<UnicodeSet::run_t *>(__hu_Set_runs), 471, 0, const_cast<UnicodeSet::bitquad_t *>(__hu_Set_quads), 278, 0};

    /** Code Point Ranges for la
    [3547, 3547], [3874, 3874], [3a49, 3a49], [3bff, 3bff], [3c5e, 3c5e],
    [3e0a, 3e0a], [3edd, 3edd], [40b0, 40b0], [40f3, 40f3], [43c0, 43c0],
    [43e0, 43e0], [44e5, 44e5], [4583, 4583], [4d9b, 4d9b], [5120, 5120],
    [524c, 524c], [5566, 5566], [5587, 5587], [56b9, 56b9], [5783, 5783],
    [62c9, 62c9], [63e6, 63e7], [641a, 641a], [647a, 647a], [64f8, 64f8],
    [650b, 650b], [65ef, 65ef], [67c6, 67c6], [694b, 694b], [7209, 7209],
    [760c, 760c], [7669, 7669], [782c, 782c], [78d6, 78d6], [7fcb, 7fcb],
    [814a, 814a], [81c8, 81c8], [81d8, 81d8], [83c8, 83c8], [843d, 843d],
    [85de, 85de], [8721, 8721], [8772, 8772], [881f, 881f], [8fa3, 8fa3],
    [908b, 908b], [945e, 945e], [97a1, 97a1], [9b0e, 9b0e], [9bfb, 9bfb],
    [9c72, 9c72], [20fa9, 20fa9], [21158, 21158], [21246, 21246],
    [220f4, 220f4], [22220, 22220], [22268, 22268], [22906, 22906],
    [2390a, 2390a], [24026, 24026], [242b6, 242b6], [246ca, 246ca],
    [24c1a, 24c1a], [24ddf, 24ddf], [25025, 25025], [25030, 25030],
    [25219, 25219], [2558d, 2558d], [255ff, 255ff], [25601, 25601],
    [26176, 26176], [261bb, 261bb], [261db, 261db], [2638f, 2638f],
    [26486, 26486], [264a6, 264a6], [275e9, 275e9], [27640, 27640],
    [277aa, 277aa], [27a72, 27a72], [28b5b, 28b5b], [290dc, 290dc],
    [292f7, 292f7], [2946e, 2946e], [2960a, 2960a], [29932, 29932],
    [299c6, 299c6], [29bfd, 29bfd], [2a1f9, 2a1f9]**/


    namespace {
    const static UnicodeSet::run_t __la_Set_runs[] = {
    {Empty, 426}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 63}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 24},
    {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 89},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2969}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 116}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 127},
    {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 90},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 137}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 134},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 29424}};
    const static UnicodeSet::bitquad_t  __la_Set_quads[] = {
    0x00000080, 0x00100000, 0x00000200, 0x80000000, 0x40000000, 0x00000400,
    0x20000000, 0x00010000, 0x00080000, 0x00000001, 0x00000001, 0x00000020,
    0x00000008, 0x08000000, 0x00000001, 0x00001000, 0x00000040, 0x00000080,
    0x02000000, 0x00000008, 0x00000200, 0x000000c0, 0x04000000, 0x04000000,
    0x01000000, 0x00000800, 0x00008000, 0x00000040, 0x00000800, 0x00000200,
    0x00001000, 0x00000200, 0x00001000, 0x00400000, 0x00000800, 0x00000400,
    0x01000100, 0x00000100, 0x20000000, 0x40000000, 0x00000002, 0x00040000,
    0x80000000, 0x00000008, 0x00000800, 0x40000000, 0x00000002, 0x00004000,
    0x08000000, 0x00040000, 0x00000200, 0x01000000, 0x00000040, 0x00100000,
    0x00000001, 0x00000100, 0x00000040, 0x00000400, 0x00000040, 0x00400000,
    0x00000400, 0x04000000, 0x80000000, 0x00010020, 0x02000000, 0x00002000,
    0x80000000, 0x00000002, 0x00400000, 0x08000000, 0x08000000, 0x00008000,
    0x00000040, 0x00000040, 0x00000200, 0x00000001, 0x00000400, 0x00040000,
    0x08000000, 0x10000000, 0x00800000, 0x00004000, 0x00000400, 0x00040000,
    0x00000040, 0x20000000, 0x02000000};
    }

    const static UnicodeSet la_Set{const_cast<UnicodeSet::run_t *>(__la_Set_runs), 161, 0, const_cast<UnicodeSet::bitquad_t *>(__la_Set_quads), 87, 0};

    /** Code Point Ranges for ke
    [3549, 3549], [354e, 354e], [3753, 3753], [395b, 395b], [3aa1, 3aa1],
    [3abc, 3abc], [3d63, 3d63], [3e2f, 3e2f], [40ba, 40ba], [419f, 419f],
    [4216, 4216], [4300, 4300], [4426, 4426], [44c7, 44c7], [4650, 4650],
    [4877, 4877], [4ad8, 4ad8], [4bca, 4bca], [4d97, 4d97], [514b, 514b],
    [523b, 523b], [524b, 524b], [533c, 533c], [53ef, 53ef], [5475, 5475],
    [54b3, 54b3], [5580, 5580], [55d1, 55d1], [5777, 5777], [5801, 5801],
    [5ba2, 5ba2], [5ca2, 5ca2], [5cc7, 5cc7], [5d51, 5d51], [5db1, 5db1],
    [606a, 606a], [6088, 6088], [6118, 6118], [63e2, 63e2], [6415, 6415],
    [6564, 6564], [67ef, 67ef], [68f5, 68f5], [69bc, 69bc], [6a16, 6a16],
    [6b41, 6b41], [6bbc, 6bbc], [6bfc, 6bfc], [6c2a, 6c2a], [6e34, 6e34],
    [6e98, 6e98], [6fed, 6fed], [70a3, 70a3], [7241, 7241], [7290, 7290],
    [73c2, 73c2], [75b4, 75b4], [75fe, 75fe], [76cd, 76cd], [778c, 778c],
    [7822, 7822], [785e, 785e], [78a3, 78a3], [78a6, 78a6], [78c6, 78c6],
    [78d5, 78d5], [790a, 790a], [791a, 791a], [79d1, 79d1], [7a1e, 7a1e],
    [7aa0, 7aa0], [7abc, 7abc], [7c3b, 7c3b], [7dd9, 7dd9], [7fd7, 7fd7],
    [8250, 8250], [82db, 82db], [842a, 842a], [8596, 8596], [86b5, 86b5],
    [874c, 874c], [8894, 8894], [8ab2, 8ab2], [8db7, 8db7], [8efb, 8efb],
    [9198, 9198], [9233, 9233], [927f, 927f], [9301, 9301], [9312, 9312],
    [9826, 9826], [9846, 9846], [9a0d, 9a0d], [9ac1, 9ac1], [9f95, 9f95],
    [203c0, 203c0], [206f3, 206f3], [2085c, 2085c], [20864, 20864],
    [208b9, 208b9], [20a67, 20a67], [20a92, 20a92], [20a9f, 20a9f],
    [20c99, 20c99], [20ced, 20ced], [20db2, 20db2], [20dc4, 20dc4],
    [217a2, 217a2], [21c7c, 21c7c], [21e21, 21e21], [21ed8, 21ed8],
    [22208, 22208], [22a4f, 22a50], [22a58, 22a58], [22f10, 22f10],
    [22fa9, 22fa9], [239e4, 239e4], [23a44, 23a44], [23a71, 23a71],
    [23c8a, 23c8a], [23e47, 23e47], [24587, 24587], [246d7, 246d7],
    [24c19, 24c19], [24e0e, 24e0e], [24e31, 24e31], [250d5, 250d5],
    [25289, 25289], [2553d, 2553d], [25779, 25779], [25801, 25801],
    [259a8, 259a8], [259c7, 259c7], [25bda, 25bda], [26763, 26763],
    [27217, 27217], [27397, 27397], [276fe, 276fe], [27721, 27721],
    [2780b, 2780b], [27a35, 27a35], [27d5b, 27d5b], [27feb, 27feb],
    [28370, 28370], [283ff, 283ff], [288b8, 288b8], [293ed, 293ed],
    [2972d, 2972d], [29b7d, 29b7d], [29c3b, 29c3b], [29c58, 29c58],
    [2a009, 2a009], [2a0ed, 2a0ed], [2a34e, 2a34e], [2a4ee, 2a4ee]**/


    namespace {
    const static UnicodeSet::run_t __ke_Set_runs[] = {
    {Empty, 426}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 21}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 22}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 40}, {Mixed, 2},
    {Empty, 13}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 2849}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 10}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 13},
    {Mixed, 2}, {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 78}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 81}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 16}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 15}, {Mixed, 2}, {Empty, 20}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 15},
    {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 84}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 89}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 29}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 29400}};
    const static UnicodeSet::bitquad_t  __ke_Set_quads[] = {
    0x00004200, 0x00080000, 0x08000000, 0x10000002, 0x00000008, 0x00008000,
    0x04000000, 0x80000000, 0x00400000, 0x00000001, 0x00000040, 0x00000080,
    0x00010000, 0x00800000, 0x01000000, 0x00000400, 0x00800000, 0x00000800,
    0x08000000, 0x00000800, 0x10000000, 0x00008000, 0x00200000, 0x00080000,
    0x00000001, 0x00020000, 0x00800000, 0x00000002, 0x00000004, 0x00000004,
    0x00000080, 0x00020000, 0x00020000, 0x00000400, 0x00000100, 0x01000000,
    0x00000004, 0x00200000, 0x00000010, 0x00008000, 0x00200000, 0x10000000,
    0x00400000, 0x00000002, 0x10000000, 0x10000000, 0x00000400, 0x00100000,
    0x01000000, 0x00002000, 0x00000008, 0x00000002, 0x00010000, 0x00000004,
    0x00100000, 0x40000000, 0x00002000, 0x00001000, 0x00000004, 0x40000000,
    0x00000048, 0x00200040, 0x04000400, 0x00020000, 0x40000000, 0x10000001,
    0x08000000, 0x02000000, 0x00800000, 0x00010000, 0x08000000, 0x00000400,
    0x00400000, 0x00200000, 0x00001000, 0x00100000, 0x00040000, 0x00800000,
    0x08000000, 0x01000000, 0x00080000, 0x80000000, 0x00040002, 0x00000040,
    0x00000040, 0x00002000, 0x00000002, 0x00200000, 0x00000001, 0x00080000,
    0x10000000, 0x00000010, 0x02000000, 0x00000080, 0x80040000, 0x02000000,
    0x00002000, 0x00040000, 0x00000010, 0x00000004, 0x10000000, 0x00000002,
    0x01000000, 0x00000100, 0x01018000, 0x00010000, 0x00000200, 0x00000010,
    0x00000010, 0x00020000, 0x00000400, 0x00000080, 0x00000080, 0x00800000,
    0x02000000, 0x00004000, 0x00020000, 0x00200000, 0x00000200, 0x20000000,
    0x02000000, 0x00000002, 0x00000100, 0x00000080, 0x04000000, 0x00000008,
    0x00800000, 0x00800000, 0x40000000, 0x00000002, 0x00000800, 0x00200000,
    0x08000000, 0x00000800, 0x00010000, 0x80000000, 0x01000000, 0x00002000,
    0x00002000, 0x20000000, 0x08000000, 0x01000000, 0x00000200, 0x00002000,
    0x00004000, 0x00004000};
    }

    const static UnicodeSet ke_Set{const_cast<UnicodeSet::run_t *>(__ke_Set_runs), 265, 0, const_cast<UnicodeSet::bitquad_t *>(__ke_Set_quads), 146, 0};

    /** Code Point Ranges for ai
    [354c, 354c], [35d2, 35d2], [35e8, 35e8], [3775, 3775], [388a, 388a],
    [3905, 3905], [3c6f, 3c6f], [3dbc, 3dbc], [3fa2, 3fa2], [3fa8, 3fa8],
    [3fc4, 3fc4], [416c, 416c], [4442, 4442], [4507, 4507], [453d, 453d],
    [477d, 477d], [4a20, 4a20], [4b35, 4b35], [4da3, 4da3], [4e42, 4e43],
    [4f0c, 4f0c], [4f41, 4f41], [50fe, 50fe], [5117, 5117], [5274, 5274],
    [5393, 5393], [5443, 5443], [5446, 5446], [54c0, 54c0], [54ce, 54ce],
    [5509, 5509], [5540, 5540], [55cc, 55cc], [566b, 566b], [566f, 566f],
    [57c3, 57c3], [5828, 5828], [5867, 5867], [5947, 5947], [5a2d, 5a2d],
    [5a3e, 5a3e], [5b21, 5b21], [5d66, 5d66], [611b, 611b], [61dd, 61dd],
    [6328, 6328], [6371, 6371], [6571, 6571], [6639, 6639], [66d6, 66d6],
    [6b2c, 6b2c], [6b38, 6b38], [6bd0, 6bd0], [6eb0, 6eb0], [6ebe, 6ebe],
    [6fed, 6fed], [70e0, 70e0], [7125, 7125], [7343, 7343], [74a6, 74a6],
    [764c, 764c], [769a, 769a], [76a7, 76a7], [77b9, 77b9], [77ee, 77ee],
    [7839, 7839], [78d1, 78d1], [7919, 7919], [7d60, 7d60], [827e, 827e],
    [8586, 8586], [85f9, 85f9], [8af0, 8af0], [8b01, 8b01], [8b7a, 8b7a],
    [8cf9, 8cf9], [91b7, 91b7], [9384, 9384], [9440, 9440], [95a1, 95a1],
    [9628, 9628], [9638, 9638], [9691, 9691], [9698, 9698], [9744, 9744],
    [9749, 9749], [9932, 9932], [99a4, 99a4], [9a03, 9a03], [9be6, 9be6],
    [9d31, 9d31], [2028e, 2028e], [20cf3, 20cf3], [2104d, 2104d],
    [21253, 21253], [217d3, 217d3], [21c3d, 21c3d], [21d83, 21d83],
    [227ea, 227ea], [227f0, 227f0], [228cf, 228cf], [228d5, 228d5],
    [22c07, 22c07], [232de, 232de], [233b4, 233b4], [2372c, 2372c],
    [23745, 23745], [23903, 23903], [23a44, 23a44], [23a71, 23a71],
    [24e16, 24e16], [24e33, 24e33], [24ee2, 24ee2], [2587d, 2587d],
    [25926, 25926], [25d28, 25d28], [265cd, 265cd], [265d0, 265d0],
    [26926, 26926], [26942, 26942], [26948, 26948], [26a74, 26a74],
    [273f9, 273f9], [274c1, 274c1], [2784b, 2784b], [27a9a, 27a9a],
    [27c3f, 27c3f], [27d68, 27d68], [28d82, 28d82], [29092, 29092],
    [290a2, 290a2], [2920b, 2920b], [29a82, 29a82], [29ac7, 29ac7],
    [29b96, 29b96], [2a1c8, 2a1c8], [2a56d, 2a56d]**/


    namespace {
    const static UnicodeSet::run_t __ai_Set_runs[] = {
    {Empty, 426}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 11},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 15}, {Mixed, 2},
    {Empty, 12}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 17}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 39}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2858}, {Mixed, 1},
    {Empty, 82}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 82}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 27}, {Mixed, 2}, {Empty, 13},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 156}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 75}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 26},
    {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 75}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 128},
    {Mixed, 1}, {Empty, 23}, {Mixed, 2}, {Empty, 10}, {Mixed, 1},
    {Empty, 67}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 29396}};
    const static UnicodeSet::bitquad_t  __ai_Set_quads[] = {
    0x00001000, 0x00040000, 0x00000100, 0x00200000, 0x00000400, 0x00000020,
    0x00008000, 0x10000000, 0x00000104, 0x00000010, 0x00001000, 0x00000004,
    0x00000080, 0x20000000, 0x20000000, 0x00000001, 0x00200000, 0x00000008,
    0x0000000c, 0x00001000, 0x00000002, 0x40000000, 0x00800000, 0x00100000,
    0x00080000, 0x00000048, 0x00004001, 0x00000200, 0x00000001, 0x00001000,
    0x00008800, 0x00000008, 0x00000100, 0x00000080, 0x00000080, 0x40002000,
    0x00000002, 0x00000040, 0x08000000, 0x20000000, 0x00000100, 0x00020000,
    0x00020000, 0x02000000, 0x00400000, 0x01001000, 0x00010000, 0x40010000,
    0x00002000, 0x00000001, 0x00000020, 0x00000008, 0x00000040, 0x00001000,
    0x04000000, 0x00000080, 0x02000000, 0x00004000, 0x02000000, 0x00020000,
    0x02000000, 0x00000001, 0x40000000, 0x00000040, 0x02000000, 0x00010000,
    0x00000002, 0x04000000, 0x02000000, 0x00800000, 0x00000010, 0x00000001,
    0x00000002, 0x01000100, 0x01020000, 0x00000210, 0x00040000, 0x00000010,
    0x00000008, 0x00000040, 0x00020000, 0x00004000, 0x00080000, 0x00002000,
    0x00080000, 0x00080000, 0x20000000, 0x00000008, 0x00010400, 0x00208000,
    0x00000080, 0x40000000, 0x00100000, 0x00001000, 0x00000020, 0x00000008,
    0x00000010, 0x00020000, 0x00400000, 0x00080000, 0x00000004, 0x20000000,
    0x00000040, 0x00000100, 0x00012000, 0x00000040, 0x00000104, 0x00100000,
    0x02000000, 0x00000002, 0x00000800, 0x04000000, 0x80000000, 0x00000100,
    0x00000004, 0x00040000, 0x00000004, 0x00000800, 0x00000004, 0x00000080,
    0x00400000, 0x00000100, 0x00002000};
    }

    const static UnicodeSet ai_Set{const_cast<UnicodeSet::run_t *>(__ai_Set_runs), 225, 0, const_cast<UnicodeSet::bitquad_t *>(__ai_Set_quads), 123, 0};

    /** Code Point Ranges for wei
    [3552, 3552], [3590, 3590], [364e, 364e], [3654, 3654], [3657, 3657],
    [36f1, 36f1], [3787, 3787], [37ea, 37ea], [3815, 3815], [38e6, 38e6],
    [395c, 395c], [3968, 3968], [39a3, 39a3], [39e1, 39e1], [39ea, 39ea],
    [3a0a, 3a0a], [3b19, 3b19], [3b83, 3b83], [3c6c, 3c6c], [3e7b, 3e7b],
    [40ec, 40ec], [41fb, 41fb], [4227, 4227], [4260, 4260], [428a, 428a],
    [42ff, 42ff], [4374, 4374], [4377, 4377], [444a, 444a], [453a, 453a],
    [45fd, 45fd], [465f, 465f], [467f, 467f], [4705, 4705], [471c, 471c],
    [4750, 4750], [4794, 4794], [4811, 4811], [48c0, 48c0], [4925, 4925],
    [4969, 4969], [49b1, 49b1], [49e6, 49e6], [4a8b, 4a8b], [4a98, 4a98],
    [4acb, 4acb], [4b11, 4b11], [4b3f, 4b3f], [4b73, 4b73], [4bb9, 4bb9],
    [4c81, 4c81], [4c8a, 4c8a], [4d27, 4d27], [4d4b, 4d4b], [4d73, 4d73],
    [4e8e, 4e8e], [4eb9, 4eb9], [4f4d, 4f4d], [502d, 502d], [5049, 5049],
    [504e, 504e], [507d, 507d], [5130, 5130], [5371, 5371], [5383, 5383],
    [5473, 5473], [5529, 5529], [552f, 552f], [5582, 5582], [55a1, 55a1],
    [55b4, 55b4], [5672, 5672], [56d7, 56d7], [570d, 570d], [5729, 5729],
    [5824, 5824], [58dd, 58dd], [59d4, 59d4], [5a01, 5a01], [5a13, 5a13],
    [5a81, 5a81], [5a99, 5a99], [5aa6, 5aa6], [5bea, 5bea], [5c09, 5c09],
    [5c3e, 5c3e], [5cd7, 5cd7], [5cde, 5cde], [5d23, 5d23], [5d34, 5d34],
    [5d6c, 5d6c], [5dcb, 5dcb], [5dcd, 5dcd], [5e37, 5e37], [5e43, 5e43],
    [5ec6, 5ec6], [5fab, 5fab], [5fae, 5fae], [6051, 6051], [60df, 60df],
    [6104, 6104], [6107, 6107], [6170, 6170], [61c0, 61c0], [637c, 637c],
    [63cb, 63cb], [63fb, 63fb], [649d, 649d], [64b1, 64b1], [6690, 6690],
    [6709, 6709], [672a, 672a], [673a, 673a], [6845, 6845], [68b6, 68b6],
    [6932, 6933], [6972, 6972], [6b08, 6b08], [6c87, 6c87], [6d08, 6d08],
    [6d27, 6d27], [6d58, 6d58], [6e28, 6e28], [6e2d, 6e2d], [6e4b, 6e4b],
    [6ea6, 6ea6], [6f59, 6f59], [6f7f, 6f7f], [6fca, 6fca], [6ff0, 6ff0],
    [7022, 7022], [70d3, 70d3], [7152, 7152], [715f, 715f], [7168, 7168],
    [71a8, 71a8], [71ad, 71ad], [7232, 7232], [729a, 729a], [72a9, 72a9],
    [7317, 7317], [731a, 731a], [7325, 7325], [732c, 732c], [741f, 741f],
    [744b, 744b], [748f, 748f], [74d7, 74d7], [754f, 754f], [75cf, 75cf],
    [75ff, 75ff], [7650, 7650], [7653, 7653], [772d, 772d], [7762, 7762],
    [77b6, 77b6], [784a, 784a], [78a8, 78a8], [78c8, 78c8], [78d1, 78d1],
    [7acb, 7acb], [7dad, 7dad], [7ded, 7ded], [7def, 7def], [7f7b, 7f7b],
    [80c3, 80c3], [8172, 8172], [81b8, 81b8], [8249, 8249], [829b, 829b],
    [829f, 829f], [831f, 831f], [8371, 8371], [837d, 837d], [83cb, 83cb],
    [840e, 840e], [8466, 8466], [8468, 8468], [8473, 8473], [848d, 848d],
    [84f6, 84f6], [851a, 851a], [8587, 8587], [85b3, 85b3], [85ef, 85ef],
    [8636, 8636], [8732, 8732], [8739, 8739], [873c, 873c], [875b, 875b],
    [87b1, 87b1], [885e, 885e], [893d, 893d], [89a3, 89a3], [89b9, 89b9],
    [89ff, 89ff], [8a74, 8a74], [8ac9, 8ac9], [8b02, 8b02], [8b86, 8b86],
    [8b8f, 8b8f], [8da1, 8da1], [8e12, 8e13], [8e9b, 8e9b], [8ece, 8ece],
    [8f4a, 8f4a], [9036, 9036], [9055, 9055], [907a, 907a], [912c, 912c],
    [9180, 9180], [9317, 9317], [934f, 934f], [9361, 9361], [93cf, 93cf],
    [95c8, 95c8], [9622, 9622], [9687, 9688], [9697, 9697], [96b9, 96b9],
    [9728, 9728], [973a, 973a], [97cb, 97cb], [97d1, 97d1], [97d9, 97d9],
    [97e1, 97e1], [9820, 9820], [98b9, 98b9], [9927, 9927], [9935, 9935],
    [9956, 9956], [9aab, 9aab], [9b4f, 9b4f], [9b87, 9b87], [9ba0, 9ba0],
    [9baa, 9baa], [9c03, 9c04], [9c16, 9c16], [2013f, 2013f],
    [2019f, 2019f], [20655, 20655], [2094e, 2094e], [20cff, 20cff],
    [20e64, 20e64], [21097, 21097], [211e6, 211e6], [21531, 21531],
    [21688, 21688], [21d8e, 21d8e], [21dd5, 21dd5], [21f31, 21f31],
    [2225d, 2225d], [222af, 222af], [2235a, 2235a], [228d8, 228d8],
    [22bf7, 22bf7], [22cb4, 22cb4], [22e26, 22e26], [22f38, 22f38],
    [22f81, 22f81], [23127, 23127], [2313a, 2313a], [2320e, 2320e],
    [2335f, 2335f], [23a19, 23a19], [23a6a, 23a6a], [23aea, 23aea],
    [23f74, 23f74], [24037, 24037], [2407f, 2407f], [246f2, 246f2],
    [24702, 24702], [2486a, 2486a], [24e06, 24e06], [24e89, 24e89],
    [24ec5, 24ec5], [24f12, 24f12], [25175, 25175], [25256, 25256],
    [252aa, 252aa], [25330, 25330], [254ae, 254ae], [259d9, 259d9],
    [25bdc, 25bdc], [25be4, 25be4], [25dbd, 25dbd], [25feb, 25feb],
    [261c5, 261c5], [264fd, 264fd], [2675b, 2675b], [267bd, 267bd],
    [2683b, 2683b], [268bf, 268bf], [26a4f, 26a4f], [26a5d, 26a5d],
    [26a6c, 26a6c], [26a92, 26a92], [26ce2, 26ce2], [26f9b, 26f9b],
    [27138, 27138], [27365, 27365], [2736b, 2736b], [2740c, 2740c],
    [27525, 27525], [2755e, 2755e], [276b7, 276b7], [276da, 276da],
    [27755, 27755], [277b8, 277b8], [277fc, 277fc], [27892, 27892],
    [278a7, 278a7], [27916, 27916], [27c84, 27c84], [27c97, 27c97],
    [27c9d, 27c9d], [27cde, 27cde], [27cea, 27cea], [27d16, 27d16],
    [27e3d, 27e3d], [280c4, 280c4], [285bf, 285bf], [285e8, 285e8],
    [28698, 28698], [28740, 28740], [287d7, 287d7], [28825, 28825],
    [28889, 28889], [28a88, 28a88], [28d13, 28d13], [28d4b, 28d4b],
    [28e14, 28e14], [28ed2, 28ed2], [28f82, 28f82], [28fed, 28fed],
    [29023, 29023], [29036, 29036], [2904c, 2904c], [29181, 29181],
    [292fe, 292fe], [293b5, 293b5], [293c9, 293c9], [293cf, 293d0],
    [29475, 29475], [295d8, 295d8], [295dc, 295dc], [29727, 29727],
    [297df, 297df], [2982f, 2982f], [29938, 29938], [29c82, 29c82],
    [29c84, 29c84], [29c88, 29c88], [29d1e, 29d1e], [29d60, 29d60],
    [29e42, 29e42], [29e65, 29e65], [29e77, 29e77], [29f02, 29f02],
    [29f0c, 29f0c], [29f4e, 29f4e], [2a084, 2a084], [2a450, 2a450],
    [2a46d, 2a46d]**/


    namespace {
    const static UnicodeSet::run_t __wei_Set_runs[] = {
    {Empty, 426}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 8}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 3}, {Empty, 5}, {Mixed, 1},
    {Empty, 17}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 9}, {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 4}, {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 6}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 15}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 3}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2856}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 55}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 51}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 13},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12},
    {Mixed, 3}, {Empty, 18}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 10}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 8}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 29}, {Mixed, 2},
    {Empty, 29404}};
    const static UnicodeSet::bitquad_t  __wei_Set_quads[] = {
    0x00040000, 0x00010000, 0x00904000, 0x00020000, 0x00000080, 0x00000400,
    0x00200000, 0x00000040, 0x10000000, 0x00000100, 0x00000008, 0x00000402,
    0x00000400, 0x02000000, 0x00000008, 0x00001000, 0x08000000, 0x00001000,
    0x08000000, 0x00000080, 0x00000001, 0x00000400, 0x80000000, 0x00900000,
    0x00000400, 0x04000000, 0x20000000, 0x80000000, 0x80000000, 0x10000020,
    0x00010000, 0x00100000, 0x00020000, 0x00000001, 0x00000020, 0x00000200,
    0x00020000, 0x00000040, 0x01000800, 0x00000800, 0x00020000, 0x80000000,
    0x00080000, 0x02000000, 0x00000402, 0x00000080, 0x00000800, 0x00080000,
    0x00004000, 0x02000000, 0x00002000, 0x00002000, 0x00004200, 0x20000000,
    0x00010000, 0x00020000, 0x00000008, 0x00080000, 0x00008200, 0x00000004,
    0x00100002, 0x00040000, 0x00800000, 0x00002000, 0x00000200, 0x00000010,
    0x20000000, 0x00100000, 0x00080002, 0x02000002, 0x00000040, 0x00000400,
    0x00000200, 0x40000000, 0x40800000, 0x00100008, 0x00001000, 0x00002800,
    0x00800000, 0x00000008, 0x00000040, 0x00004800, 0x00020000, 0x80000000,
    0x00000090, 0x00010000, 0x00000001, 0x10000000, 0x00000800, 0x08000000,
    0x20000000, 0x00020000, 0x00010000, 0x00000200, 0x04000400, 0x00000020,
    0x00400000, 0x000c0000, 0x00040000, 0x00000100, 0x00000080, 0x00000100,
    0x00000080, 0x01000000, 0x00002100, 0x00000800, 0x00000040, 0x02000000,
    0x80000000, 0x00000400, 0x00010000, 0x00000004, 0x00080000, 0x80040000,
    0x00000100, 0x00002100, 0x00040000, 0x04000000, 0x00000200, 0x04800000,
    0x00001020, 0x80000000, 0x00000800, 0x00008000, 0x00800000, 0x00008000,
    0x00008000, 0x80000000, 0x00090000, 0x00002000, 0x00000004, 0x00400000,
    0x00000400, 0x00000100, 0x00020100, 0x00000800, 0x00002000, 0x0000a000,
    0x08000000, 0x00000008, 0x00040000, 0x01000000, 0x00000200, 0x88000000,
    0x80000000, 0x20020000, 0x00000800, 0x00004000, 0x00080140, 0x00002000,
    0x00400000, 0x04000000, 0x00000080, 0x00080000, 0x00008000, 0x00400000,
    0x12040000, 0x08000000, 0x00020000, 0x40000000, 0x20000000, 0x02000008,
    0x80000000, 0x00100000, 0x00000200, 0x00000004, 0x00008040, 0x00000002,
    0x000c0000, 0x08000000, 0x00004000, 0x00000400, 0x00400000, 0x00200000,
    0x04000000, 0x00001000, 0x00000001, 0x00800000, 0x00008000, 0x00000002,
    0x00008000, 0x00000100, 0x00000004, 0x00800180, 0x02000000, 0x04000100,
    0x02020800, 0x00000002, 0x00000001, 0x02000000, 0x00200080, 0x00400000,
    0x00000800, 0x00008000, 0x00000080, 0x00000401, 0x00400018, 0x80000000,
    0x80000000, 0x00200000, 0x00004000, 0x80000000, 0x00000010, 0x00800000,
    0x00000040, 0x00020000, 0x00000100, 0x00004000, 0x00200000, 0x00020000,
    0x20000000, 0x00008000, 0x04000000, 0x01000000, 0x00800000, 0x00100000,
    0x00000040, 0x01000000, 0x00000002, 0x04000080, 0x00004000, 0x80000000,
    0x02000000, 0x00000400, 0x00000400, 0x00100000, 0x00800000, 0x80000000,
    0x00040000, 0x00000004, 0x00000400, 0x00000040, 0x00000200, 0x00000020,
    0x00040000, 0x00200000, 0x00400000, 0x00000400, 0x00010000, 0x00004000,
    0x02000000, 0x10000000, 0x00000010, 0x20000000, 0x00000800, 0x00000020,
    0x20000000, 0x08000000, 0x20000000, 0x08000000, 0x80000000, 0x20008000,
    0x00001000, 0x00040000, 0x00000004, 0x08000000, 0x01000000, 0x00000820,
    0x00001000, 0x00000020, 0x40000000, 0x00800000, 0x04000000, 0x00200000,
    0x01000000, 0x10000000, 0x00040000, 0x00000080, 0x00400000, 0x20800010,
    0x40000000, 0x00000400, 0x00400000, 0x20000000, 0x00000010, 0x80000000,
    0x00000100, 0x01000000, 0x00000001, 0x00800000, 0x00000020, 0x00000200,
    0x00000100, 0x00080000, 0x00000800, 0x00100000, 0x00040000, 0x00000004,
    0x00002000, 0x00400008, 0x00001000, 0x00000002, 0x40000000, 0x00200000,
    0x00018200, 0x00200000, 0x11000000, 0x00000080, 0x80000000, 0x00008000,
    0x01000000, 0x00000114, 0x40000000, 0x00000001, 0x00000004, 0x00800020,
    0x00001004, 0x00004000, 0x00000010, 0x00010000, 0x00002000};
    }

    const static UnicodeSet wei_Set{const_cast<UnicodeSet::run_t *>(__wei_Set_runs), 513, 0, const_cast<UnicodeSet::bitquad_t *>(__wei_Set_quads), 311, 0};

    /** Code Point Ranges for jun
    [3559, 3559], [35a5, 35a5], [36ac, 36ac], [3d2b, 3d2b], [3ed2, 3ed2],
    [3f31, 3f31], [4403, 4403], [472d, 472d], [474d, 474d], [4fca, 4fca],
    [5300, 5300], [5377, 5377], [541b, 541b], [5441, 5441], [5747, 5747],
    [57c8, 57c8], [59f0, 59f0], [5bef, 5bef], [5cfb, 5cfb], [61cf, 61cf],
    [6343, 6343], [6508, 6508], [65ec, 65ec], [6659, 6659], [687e, 687e],
    [68de, 68de], [6c6e, 6c6e], [6d5a, 6d5a], [6fec, 6fec], [710c, 710c],
    [711e, 711e], [71c7, 71c7], [72fb, 72fb], [73fa, 73fa], [756f, 756f],
    [76b8, 76b8], [7743, 7743], [7885, 7885], [7ae3, 7ae3], [7b60, 7b60],
    [7b98, 7b98], [7b9f, 7b9f], [8399, 8399], [83cc, 83cc], [8470, 8470],
    [8528, 8528], [8690, 8690], [8720, 8720], [8880, 8880], [89a0, 89a0],
    [8a07, 8a07], [8ecd, 8ecd], [90e1, 90e1], [921e, 921e], [92c6, 92c6],
    [9355, 9355], [9656, 9656], [96bd, 96bd], [96cb, 96cb], [9915, 9915],
    [99ff, 99ff], [9bb6, 9bb6], [9d54, 9d54], [9d58, 9d58], [9e87, 9e87],
    [9f9c, 9f9c], [20039, 20039], [208d5, 208d5], [20a22, 20a22],
    [22266, 22266], [22ef8, 22ef8], [24baa, 24baa], [251d8, 251d8],
    [25682, 25682], [2572e, 2572e], [25863, 25863], [261d8, 261d8],
    [2633a, 2633a], [26d0c, 26d0c], [26d7c, 26d7c], [2797a, 2797a],
    [27bd6, 27bd6], [27c5d, 27c5d], [27f54, 27f54], [28318, 28318],
    [286d0, 286d0], [28c84, 28c84], [28d8a, 28d8a], [2a341, 2a341],
    [2a55e, 2a55e]**/


    namespace {
    const static UnicodeSet::run_t __jun_Set_runs[] = {
    {Empty, 426}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 24},
    {Mixed, 2}, {Empty, 67}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 63}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 17}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2820},
    {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 193}, {Mixed, 1}, {Empty, 99}, {Mixed, 1}, {Empty, 229},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 74}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 95}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 173}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 29397}};
    const static UnicodeSet::bitquad_t  __jun_Set_quads[] = {
    0x02000000, 0x00000020, 0x00001000, 0x00000800, 0x00040000, 0x00020000,
    0x00000008, 0x00002000, 0x00002000, 0x00000400, 0x00000001, 0x00800000,
    0x08000000, 0x00000002, 0x00000080, 0x00000100, 0x00010000, 0x00008000,
    0x08000000, 0x00008000, 0x00000008, 0x00000100, 0x00001000, 0x02000000,
    0x40000000, 0x40000000, 0x00004000, 0x04000000, 0x00001000, 0x40001000,
    0x00000080, 0x08000000, 0x04000000, 0x00008000, 0x01000000, 0x00000008,
    0x00000020, 0x00000008, 0x00000001, 0x81000000, 0x02000000, 0x00001000,
    0x00010000, 0x00000100, 0x00010000, 0x00000001, 0x00000001, 0x00000001,
    0x00000080, 0x00002000, 0x00000002, 0x40000000, 0x00000040, 0x00200000,
    0x00400000, 0x20000000, 0x00000800, 0x00200000, 0x80000000, 0x00400000,
    0x01100000, 0x00000080, 0x10000000, 0x02000000, 0x00200000, 0x00000004,
    0x00000040, 0x01000000, 0x00000400, 0x01000000, 0x00000004, 0x00004000,
    0x00000008, 0x01000000, 0x04000000, 0x00001000, 0x10000000, 0x04000000,
    0x00400000, 0x20000000, 0x00100000, 0x01000000, 0x00010000, 0x00000010,
    0x00000400, 0x00000002, 0x40000000};
    }

    const static UnicodeSet jun_Set{const_cast<UnicodeSet::run_t *>(__jun_Set_runs), 169, 0, const_cast<UnicodeSet::bitquad_t *>(__jun_Set_quads), 87, 0};

    /** Code Point Ranges for shua
    [355e, 355e], [5237, 5237], [5506, 5506], [5530, 5530], [6dae, 6dae],
    [800d, 800d], [8a9c, 8a9c], [9078, 9078], [206da, 206da],
    [24519, 24519], [29225, 29225], [29246, 29246], [29924, 29924]**/


    namespace {
    const static UnicodeSet::run_t __shua_Set_runs[] = {
    {Empty, 426}, {Mixed, 1}, {Empty, 230}, {Mixed, 1}, {Empty, 22},
    {Mixed, 2}, {Empty, 195}, {Mixed, 1}, {Empty, 146}, {Mixed, 1},
    {Empty, 83}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 2994},
    {Mixed, 1}, {Empty, 497}, {Mixed, 1}, {Empty, 616}, {Mixed, 2},
    {Empty, 54}, {Mixed, 1}, {Empty, 29494}};
    const static UnicodeSet::bitquad_t  __shua_Set_quads[] = {
    0x40000000, 0x00800000, 0x00000040, 0x00010000, 0x00004000, 0x00002000,
    0x10000000, 0x01000000, 0x04000000, 0x02000000, 0x00000020, 0x00000040,
    0x00000010};
    }

    const static UnicodeSet shua_Set{const_cast<UnicodeSet::run_t *>(__shua_Set_runs), 23, 0, const_cast<UnicodeSet::bitquad_t *>(__shua_Set_quads), 13, 0};

    /** Code Point Ranges for gai
    [3562, 3562], [39c9, 39c9], [3ba3, 3ba3], [3c7e, 3c7e], [402d, 402d],
    [4429, 4429], [4ab1, 4ab1], [4b35, 4b35], [4da3, 4da3], [4e10, 4e10],
    [4e62, 4e62], [4f85, 4f85], [5304, 5304], [54b3, 54b3], [5793, 5793],
    [59df, 59df], [5cd0, 5cd0], [5fcb, 5fcb], [6224, 6224], [6461, 6461],
    [6539, 6539], [6650, 6650], [675a, 675a], [6838, 6838], [6982, 6982],
    [6c7d, 6c7d], [6e89, 6e89], [74c2, 74c2], [78d1, 78d1], [7974, 7974],
    [7d60, 7d60], [7d6f, 7d6f], [80f2, 80f2], [82a5, 82a5], [8344, 8344],
    [84cb, 84cb], [8a72, 8a72], [8c65, 8c65], [8cc5, 8cc5], [90c2, 90c2],
    [9223, 9223], [95a1, 95a1], [9623, 9623], [9654, 9654], [9691, 9691],
    [9ab8, 9ab8], [20330, 20330], [21496, 21496], [219e3, 219e3],
    [22164, 22164], [22353, 22353], [22ec9, 22ec9], [26afb, 26afb],
    [2728f, 2728f], [27bfa, 27bfa], [287a8, 287a8], [28b82, 28b82],
    [28c63, 28c63], [28e1b, 28e1b]**/


    namespace {
    const static UnicodeSet::run_t __gai_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 2883}, {Mixed, 1}, {Empty, 138}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 91}, {Mixed, 1}, {Empty, 480}, {Mixed, 1}, {Empty, 60},
    {Mixed, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 93}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 29583}};
    const static UnicodeSet::bitquad_t  __gai_Set_quads[] = {
    0x00000004, 0x00000200, 0x00000008, 0x40000000, 0x00002000, 0x00000200,
    0x00020000, 0x00200000, 0x00000008, 0x00010000, 0x00000004, 0x00000020,
    0x00000010, 0x00080000, 0x00080000, 0x80000000, 0x00010000, 0x00000800,
    0x00000010, 0x00000002, 0x02000000, 0x00010000, 0x04000000, 0x01000000,
    0x00000004, 0x20000000, 0x00000200, 0x00000004, 0x00020000, 0x00100000,
    0x00008001, 0x00040000, 0x00000020, 0x00000010, 0x00000800, 0x00040000,
    0x00000020, 0x00000020, 0x00000004, 0x00000008, 0x00000002, 0x00000008,
    0x00100000, 0x00020000, 0x01000000, 0x00010000, 0x00400000, 0x00000008,
    0x00000010, 0x00080000, 0x00000200, 0x08000000, 0x00008000, 0x04000000,
    0x00000100, 0x00000004, 0x00000008, 0x08000000};
    }

    const static UnicodeSet gai_Set{const_cast<UnicodeSet::run_t *>(__gai_Set_runs), 115, 0, const_cast<UnicodeSet::bitquad_t *>(__gai_Set_quads), 58, 0};

    /** Code Point Ranges for hai
    [3562, 3562], [3925, 3925], [39c9, 39c9], [39e1, 39e1], [3a1f, 3a1f],
    [3c27, 3c27], [3c29, 3c29], [3c7c, 3c7c], [3e94, 3e94], [3f82, 3f82],
    [41cb, 41cb], [4715, 4715], [4773, 4773], [483d, 483d], [4ab1, 4ab1],
    [4c7a, 4c7a], [4ea5, 4ea5], [4f85, 4f85], [548d, 548d], [54b3, 54b4],
    [55d0, 55d0], [55e8, 55e8], [598e, 598e], [5b69, 5b69], [5bb3, 5bb3],
    [62f8, 62f8], [6c26, 6c26], [6d77, 6d77], [70f8, 70f8], [7332, 7332],
    [7d6f, 7d6f], [80f2, 80f2], [8fd8, 8fd8], [9084, 9084], [90c2, 90c2],
    [917c, 917c], [91a2, 91a2], [95a1, 95a1], [9826, 9826], [9900, 9900],
    [99ed, 99ed], [9ab8, 9ab8], [20511, 20511], [20e5b, 20e5b],
    [21557, 21557], [21fa8, 21fa8], [22053, 22053], [22790, 22790],
    [22a78, 22a78], [22edc, 22edc], [235bb, 235bb], [23887, 23887],
    [23ce0, 23ce0], [24d7d, 24d7d], [24e0e, 24e0e], [25050, 25050],
    [250a7, 250a7], [25a64, 25a64], [25a72, 25a72], [26424, 26424],
    [26926, 26926], [2692c, 2692c], [26df7, 26df7], [27ef2, 27ef2],
    [27f4a, 27f4a], [27f56, 27f56], [28016, 28016], [284a8, 284a8],
    [2886c, 2886c], [28e1c, 28e1c], [2979e, 2979e], [2981a, 2981a],
    [29854, 29854], [29a70, 29a70], [29a83, 29a83], [29c36, 29c36],
    [29e44, 29e44]**/


    namespace {
    const static UnicodeSet::run_t __hai_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 4},
    {Mixed, 3}, {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 39},
    {Mixed, 2}, {Empty, 8}, {Mixed, 2}, {Empty, 28}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 81},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 118}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2898}, {Mixed, 1}, {Empty, 73}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 82}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 131}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 77}, {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 135}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 75},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16},
    {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 29453}};
    const static UnicodeSet::bitquad_t  __hai_Set_quads[] = {
    0x00000004, 0x00000020, 0x00000200, 0x00000002, 0x80000000, 0x00000280,
    0x10000000, 0x00100000, 0x00000004, 0x00000800, 0x00200000, 0x00080000,
    0x20000000, 0x00020000, 0x04000000, 0x00000020, 0x00000020, 0x00002000,
    0x00180000, 0x00010000, 0x00000100, 0x00004000, 0x00000200, 0x00080000,
    0x01000000, 0x00000040, 0x00800000, 0x01000000, 0x00040000, 0x00008000,
    0x00040000, 0x01000000, 0x00000010, 0x00000004, 0x10000000, 0x00000004,
    0x00000002, 0x00000040, 0x00000001, 0x00002000, 0x01000000, 0x00020000,
    0x08000000, 0x00800000, 0x00000100, 0x00080000, 0x00010000, 0x01000000,
    0x10000000, 0x08000000, 0x00000080, 0x00000001, 0x20000000, 0x00004000,
    0x00010000, 0x00000080, 0x00040010, 0x00000010, 0x00001040, 0x00800000,
    0x00040000, 0x00400400, 0x00400000, 0x00000100, 0x00001000, 0x10000000,
    0x40000000, 0x04000000, 0x00100000, 0x00010000, 0x00000008, 0x00400000,
    0x00000010};
    }

    const static UnicodeSet hai_Set{const_cast<UnicodeSet::run_t *>(__hai_Set_runs), 137, 0, const_cast<UnicodeSet::bitquad_t *>(__hai_Set_quads), 73, 0};

    /** Code Point Ranges for yan
    [3563, 3563], [35b6, 35b6], [35f4, 35f4], [3616, 3616], [3619, 3619],
    [36a7, 36a7], [36ea, 36ea], [371d, 371d], [375a, 375a], [3882, 3882],
    [389b, 389b], [393f, 393f], [397c, 397c], [3ac3, 3ac3], [3adf, 3adf],
    [3b7a, 3b7a], [3b92, 3b92], [3c3d, 3c3d], [3d6a, 3d6a], [3d84, 3d84],
    [3df3, 3df3], [3e36, 3e36], [3e82, 3e82], [3fd5, 3fd5], [3ffc, 3ffc],
    [403d, 403d], [4059, 4059], [40a9, 40a9], [40b4, 40b4], [410b, 410b],
    [4156, 4156], [4167, 4167], [41fe, 41fe], [4277, 4277], [4299, 4299],
    [432a, 432a], [437e, 437e], [43a6, 43a6], [444d, 444d], [44c2, 44c2],
    [457e, 457e], [45ce, 45ce], [45e1, 45e1], [45fa, 45fa], [46f3, 46f3],
    [4781, 4781], [479b, 479b], [48ad, 48ad], [48cd, 48cd], [4937, 4937],
    [49b2, 49b2], [4a9c, 4a9c], [4ae1, 4ae1], [4b97, 4b97], [4c93, 4c93],
    [4ce1, 4ce1], [4dab, 4dab], [4e75, 4e75], [4f46, 4f46], [4ffa, 4ffa],
    [5043, 5043], [5063, 5063], [50bf, 50bf], [513c, 513c], [5157, 5157],
    [5261, 5261], [533d, 533d], [5382, 5383], [53ad, 53ad], [53b4, 53b4],
    [54bd, 54bd], [5501, 5501], [550c, 550c], [55ad, 55ad], [565e, 565e],
    [56a5, 56a5], [56b4, 56b4], [56d0, 56d0], [57cf, 57cf], [57ef, 57ef],
    [5830, 5830], [58db, 58db], [5935, 5935], [5944, 5944], [598d, 598d],
    [599f, 599f], [59f2, 59f2], [5a2b, 5a2b], [5a2e, 5a2e], [5a95, 5a95],
    [5ae3, 5ae3], [5b10, 5b10], [5b2e, 5b2e], [5b3f, 5b3f], [5b4d, 5b4d],
    [5bb4, 5bb4], [5c75, 5c75], [5d26, 5d26], [5d43, 5d43], [5d52, 5d53],
    [5dae, 5dae], [5dd6, 5dd6], [5dd8, 5dd8], [5de1, 5de1], [5e7f, 5e7f],
    [5eb5, 5eb5], [5ef6, 5ef6], [5f07, 5f07], [5f66, 5f66], [611d, 611d],
    [61d5, 61d5], [622d, 622d], [624a, 624a], [6281, 6281], [633b, 633b],
    [635d, 635d], [639e, 639e], [63a9, 63a9], [63c5, 63c5], [63dc, 63dc],
    [63de, 63de], [6565, 6565], [664f, 664f], [667b, 667b], [66a5, 66a5],
    [66d5, 66d5], [66e3, 66e3], [66ee, 66ee], [68ea, 68ea], [693b, 693c],
    [694c, 694c], [6a6a, 6a6a], [6a90, 6a90], [6abf, 6abf], [6ae9, 6ae9],
    [6b97, 6b97], [6bb7, 6bb7], [6c24, 6c24], [6c67, 6c67], [6c87, 6c87],
    [6cbf, 6cbf], [6d07, 6d07], [6d1d, 6d1d], [6d8e, 6d8e], [6dca, 6dca],
    [6de1, 6de1], [6deb, 6deb], [6df9, 6df9], [6e30, 6e30], [6e37, 6e37],
    [6e8e, 6e8e], [6f14, 6f14], [6f39, 6f39], [7069, 7069], [708e, 708f],
    [70df, 70df], [70fb, 70fb], [7109, 7109], [7130, 7131], [7159, 7159],
    [71d5, 71d5], [7213, 7213], [726a, 726a], [72e0, 72e0], [72ff, 72ff],
    [73da, 73da], [7402, 7402], [7430, 7430], [74db, 74db], [7517, 7517],
    [764c, 764c], [773c, 773c], [7814, 7814], [786f, 786f], [787d, 787d],
    [789e, 789e], [7939, 7939], [7b75, 7b75], [7bf6, 7bf6], [7c37, 7c37],
    [7d96, 7d96], [7e2f, 7e2f], [7f68, 7f68], [7fa1, 7fa1], [7fac, 7fac],
    [80ed, 80ed], [814c, 814c], [8181, 8181], [82ab, 82ab], [839a, 839a],
    [83f4, 83f4], [83f8, 83f8], [8412, 8412], [8455, 8455], [852b, 852b],
    [859f, 859f], [8664, 8664], [8712, 8712], [8758, 8758], [884d, 884d],
    [88fa, 88fa], [8917, 8917], [8983, 8983], [898e, 898e], [89fe, 89fe],
    [8a00, 8a00], [8a7d, 8a7d], [8afa, 8afa], [8b8c, 8b8c], [8b9e, 8b9e],
    [8c54, 8c54], [8c63, 8c63], [8d0b, 8d0b], [8d17, 8d17], [8dbc, 8dbc],
    [8ebd, 8ebd], [9019, 9019], [9043, 9043], [90d4, 90d4], [90fe, 90fe],
    [9122, 9122], [9140, 9140], [9153, 9153], [9183, 9183], [91b6, 91b6],
    [91bc, 91bc], [91c5, 91c5], [925b, 925b], [92cb, 92cb], [931f, 931f],
    [95b9, 95b9], [95bb, 95bc], [962d, 962d], [9681, 9681], [9692, 9692],
    [96aa, 96aa], [96c1, 96c1], [9768, 9768], [9851, 9851], [9854, 9854],
    [9869, 9869], [995c, 995c], [9a34, 9a34], [9a57, 9a57], [9a60, 9a60],
    [9b33, 9b33], [9b58, 9b58], [9c0b, 9c0b], [9cf1, 9cf1], [9d08, 9d08],
    [9d33, 9d33], [9da0, 9da0], [9dc3, 9dc3], [9e7d, 9e7d], [9e99, 9e99],
    [9ea3, 9ea3], [9eb2, 9eb2], [9ee4, 9ee4], [9eeb, 9eed], [9ef0, 9ef0],
    [9ef6, 9ef6], [9f34, 9f34], [9f57, 9f57], [9f5e, 9f5e], [9f74, 9f74],
    [9f91, 9f91], [201b2, 201b2], [2026c, 2026c], [2035b, 2035b],
    [20625, 20625], [206ed, 206ed], [20762, 20762], [20c16, 20c16],
    [20ee4, 20ee4], [21676, 21676], [21687, 21687], [218fd, 218fd],
    [21e76, 21e76], [21e7c, 21e7c], [21ee1, 21ee1], [22160, 22160],
    [221c8, 221c8], [221d8, 221d8], [22202, 22202], [22258, 22258],
    [22328, 22328], [22502, 22502], [22730, 22730], [2290d, 2290d],
    [22bfc, 22bfc], [22e34, 22e34], [22f91, 22f91], [230e7, 230e7],
    [230f3, 230f3], [230fe, 230fe], [23109, 23109], [23111, 23111],
    [2311d, 2311d], [23695, 23695], [2374e, 2374e], [23855, 23855],
    [2385e, 2385e], [23876, 23876], [23961, 23961], [23a59, 23a59],
    [23b7b, 23b7b], [23f1e, 23f1e], [23f20, 23f20], [240a0, 240a0],
    [2414a, 2414a], [24178, 24178], [24384, 24384], [244a6, 244a6],
    [2459d, 2459d], [245ce, 245ce], [24735, 24735], [247c7, 247c7],
    [247df, 247df], [24856, 24856], [24865, 24865], [2488b, 2488b],
    [24ae3, 24ae3], [24b1d, 24b1d], [24bc7, 24bc7], [24bd0, 24bd0],
    [24ca9, 24ca9], [24e39, 24e39], [2502c, 2502c], [250e9, 250e9],
    [250ff, 250ff], [25353, 25353], [2537b, 2537b], [2557c, 2557c],
    [25712, 25712], [258d8, 258d8], [2591f, 2591f], [25934, 25934],
    [2598d, 2598d], [259d1, 259d1], [25bc3, 25bc3], [25d3f, 25d3f],
    [25dbf, 25dc0], [2604f, 2604f], [26059, 26059], [2631a, 2631a],
    [263a3, 263a3], [263e5, 263e5], [263f9, 263f9], [2644e, 2644e],
    [26588, 26588], [265a7, 265a7], [266de, 266de], [266e3, 266e3],
    [2676a, 2676a], [269e1, 269e1], [26ae4, 26ae4], [271f1, 271f1],
    [2726e, 2726e], [27294, 27294], [27362, 27362], [27398, 27398],
    [277a3, 277a3], [27826, 27826], [2795c, 2795c], [27a45, 27a45],
    [27b0c, 27b0c], [27d23, 27d23], [27e6c, 27e6c], [27e85, 27e85],
    [27ec3, 27ec3], [27f49, 27f49], [27f5e, 27f5e], [27fa4, 27fa4],
    [28005, 28005], [2804d, 2804d], [28079, 28079], [280aa, 280aa],
    [280f0, 280f0], [28181, 28181], [28484, 28484], [287f9, 287f9],
    [2882d, 2882d], [28844, 28844], [2884e, 2884e], [28863, 28863],
    [288fb, 288fb], [2890e, 2890e], [28ab6, 28ab6], [28d23, 28d23],
    [28d81, 28d81], [28dfd, 28dfd], [28e2e, 28e2e], [28ea5, 28ea5],
    [28ec2, 28ec2], [28ef3, 28ef3], [28f51, 28f51], [290c0, 290c0],
    [291e0, 291e0], [2922f, 2922f], [29496, 29496], [295f7, 295f7],
    [2973d, 2973d], [298f2, 298f2], [29a44, 29a44], [29a74, 29a74],
    [29a76, 29a76], [29ab4, 29ab4], [29ce2, 29ce2], [29e1e, 29e1e],
    [29ed6, 29ed6], [29f9d, 29f9d], [29fb8, 29fb8], [2a061, 2a061],
    [2a088, 2a088], [2a418, 2a418], [2a448, 2a448], [2a478, 2a478],
    [2a49d, 2a49d], [2a4a0, 2a4a0], [2a5d9, 2a5d9], [2a5e4, 2a5e4],
    [2a64a, 2a64a]**/


    namespace {
    const static UnicodeSet::run_t __yan_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 1},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 7}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 4}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 2}, {Mixed, 3}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 1},
    {Mixed, 3}, {Empty, 12}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 1},
    {Mixed, 3}, {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 8},
    {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 9}, {Mixed, 2}, {Empty, 1},
    {Mixed, 5}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 3}, {Empty, 5}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 3}, {Empty, 3}, {Mixed, 2}, {Empty, 4},
    {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 4},
    {Empty, 2832}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 59}, {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 10}, {Mixed, 2},
    {Empty, 43}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 28}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 18}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 18},
    {Mixed, 2}, {Empty, 15}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 19}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 8}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 6}, {Mixed, 2},
    {Empty, 32}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 9}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 3}, {Mixed, 2}, {Empty, 12}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 2}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 10}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 5}, {Mixed, 2},
    {Empty, 27}, {Mixed, 1}, {Empty, 1}, {Mixed, 4}, {Empty, 8}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 29389}};
    const static UnicodeSet::bitquad_t  __yan_Set_quads[] = {
    0x00000008, 0x00400000, 0x00100000, 0x02400000, 0x00000080, 0x00000400,
    0x20000000, 0x04000000, 0x08000004, 0x80000000, 0x10000000, 0x80000008,
    0x04000000, 0x00040000, 0x20000000, 0x00000400, 0x00000010, 0x00080000,
    0x00400000, 0x00000004, 0x00200000, 0x10000000, 0x20000000, 0x02000000,
    0x00100200, 0x00000800, 0x00400000, 0x00000080, 0x40000000, 0x00800000,
    0x02000000, 0x00000400, 0x40000000, 0x00000040, 0x00002000, 0x00000004,
    0x40000000, 0x00004000, 0x04000002, 0x00080000, 0x08000002, 0x00002000,
    0x00002000, 0x00800000, 0x00040000, 0x10000000, 0x00000002, 0x00800000,
    0x00080000, 0x00000002, 0x00000800, 0x00200000, 0x00000040, 0x04000000,
    0x00000008, 0x00000008, 0x80000000, 0x10000000, 0x00800000, 0x00000002,
    0x20000000, 0x0000000c, 0x00102000, 0x20000000, 0x00001002, 0x00002000,
    0x40000000, 0x00100020, 0x00010000, 0x00008000, 0x00008000, 0x00010000,
    0x08000000, 0x00200000, 0x00000010, 0x80002000, 0x00040000, 0x00004800,
    0x00200000, 0x00000008, 0x00010000, 0x80004000, 0x00002000, 0x00100000,
    0x00200000, 0x00000040, 0x000c0008, 0x00004000, 0x01400000, 0x00000002,
    0x80000000, 0x00200000, 0x00400000, 0x00000080, 0x00000040, 0x20000000,
    0x00200000, 0x00002000, 0x00000400, 0x00000002, 0x08000000, 0x20000000,
    0x40000000, 0x00000200, 0x50000020, 0x00000020, 0x00008000, 0x08000000,
    0x00000020, 0x00200000, 0x00004008, 0x00000400, 0x18000000, 0x00001000,
    0x00000400, 0x00010000, 0x80000000, 0x00000200, 0x00800000, 0x00800000,
    0x00000010, 0x00000080, 0x00000080, 0x80000000, 0x20000080, 0x00004000,
    0x00000400, 0x02000802, 0x00810000, 0x00004000, 0x00100000, 0x02000000,
    0x00000200, 0x0000c000, 0x80000000, 0x08000000, 0x00000200, 0x00030000,
    0x02000000, 0x00200000, 0x00080000, 0x00000400, 0x80000001, 0x04000000,
    0x00000004, 0x00010000, 0x08000000, 0x00800000, 0x00001000, 0x10000000,
    0x00100000, 0x20008000, 0x40000000, 0x02000000, 0x00200000, 0x00400000,
    0x00800000, 0x00400000, 0x00008000, 0x00000100, 0x00001002, 0x00002000,
    0x00001000, 0x00000002, 0x00000800, 0x04000000, 0x01100000, 0x00040000,
    0x00200000, 0x00000800, 0x80000000, 0x00000010, 0x00040000, 0x01000000,
    0x00002000, 0x04000000, 0x00800000, 0x00004008, 0x40000000, 0x00000001,
    0x20000000, 0x04000000, 0x40001000, 0x00100000, 0x00000008, 0x00800800,
    0x10000000, 0x20000000, 0x02000000, 0x00000008, 0x00100000, 0x40000000,
    0x00000004, 0x00080001, 0x00000008, 0x10400000, 0x00000020, 0x08000000,
    0x00000800, 0x80000000, 0x1a000000, 0x00002000, 0x00040002, 0x00000400,
    0x00000002, 0x00000100, 0x00120000, 0x00000200, 0x10000000, 0x00100000,
    0x00800000, 0x00000001, 0x00080000, 0x01000000, 0x00000800, 0x00020000,
    0x00000100, 0x00080000, 0x00000001, 0x00000008, 0x20000000, 0x02000000,
    0x00040008, 0x00413810, 0x00100000, 0x40800000, 0x00100000, 0x00020000,
    0x00040000, 0x00001000, 0x08000000, 0x00000020, 0x00002000, 0x00000004,
    0x00400000, 0x00000010, 0x00400000, 0x00000080, 0x20000000, 0x10400000,
    0x00000002, 0x00000001, 0x01000100, 0x00000004, 0x01000000, 0x00000100,
    0x00000004, 0x00010000, 0x00002000, 0x10000000, 0x00100000, 0x00020000,
    0x40080080, 0x20020200, 0x00200000, 0x00004000, 0x40200000, 0x00400000,
    0x00000002, 0x02000000, 0x08000000, 0x40000000, 0x00000001, 0x00000001,
    0x00000400, 0x01000000, 0x00000010, 0x00000040, 0x20000000, 0x00004000,
    0x00200000, 0x80000080, 0x00400000, 0x00000020, 0x00000800, 0x00000008,
    0x20000000, 0x00010080, 0x00000200, 0x02000000, 0x00001000, 0x80000200,
    0x00080000, 0x08000000, 0x10000000, 0x00040000, 0x01000000, 0x80000000,
    0x00100000, 0x00002000, 0x00020000, 0x00000008, 0x80000000, 0x80000000,
    0x00000001, 0x02008000, 0x04000000, 0x00000008, 0x02000020, 0x00004000,
    0x00000100, 0x00000080, 0x40000000, 0x00000008, 0x00000400, 0x00000002,
    0x00000010, 0x00020000, 0x00004000, 0x00100000, 0x00000004, 0x01000000,
    0x00000008, 0x00000040, 0x10000000, 0x00000020, 0x00001000, 0x00000008,
    0x00001000, 0x00000020, 0x00000008, 0x40000200, 0x00000010, 0x00000020,
    0x00002000, 0x02000000, 0x00000400, 0x00010000, 0x00000002, 0x00000010,
    0x02000000, 0x00002000, 0x00004010, 0x00000008, 0x08000000, 0x00004000,
    0x00400000, 0x00000008, 0x00000002, 0x20000000, 0x00004000, 0x00000020,
    0x00000004, 0x00080000, 0x00020000, 0x00000001, 0x00000001, 0x00008000,
    0x00400000, 0x00800000, 0x20000000, 0x00040000, 0x00000010, 0x00500000,
    0x00100000, 0x00000004, 0x40000000, 0x00400000, 0x20000000, 0x01000000,
    0x00000002, 0x00000100, 0x01000000, 0x00000100, 0x01000000, 0x20000000,
    0x00000001, 0x02000000, 0x00000010, 0x00000400};
    }

    const static UnicodeSet yan_Set{const_cast<UnicodeSet::run_t *>(__yan_Set_runs), 549, 0, const_cast<UnicodeSet::bitquad_t *>(__yan_Set_quads), 370, 0};

    /** Code Point Ranges for hua
    [3566, 3566], [3572, 3572], [3577, 3577], [380f, 380f], [398a, 398a],
    [3a47, 3a47], [3b49, 3b49], [3baf, 3baf], [3cf8, 3cf8], [3f2b, 3f2b],
    [4028, 4028], [417f, 417f], [41c8, 41c8], [42c0, 42c0], [4bcf, 4bcf],
    [4c7b, 4c7b], [4d33, 4d33], [4da4, 4da4], [4f89, 4f89], [5212, 5212],
    [5283, 5283], [5290, 5290], [5316, 5316], [53f1, 53f1], [542a, 542a],
    [54b6, 54b6], [54c7, 54c7], [5629, 5629], [59e1, 59e1], [5aff, 5aff],
    [5b05, 5b05], [5b78, 5b78], [5d0b, 5d0b], [627e, 627e], [6433, 6433],
    [6466, 6466], [64b6, 64b6], [654c, 654c], [6779, 6779], [69ec, 69ec],
    [6a3a, 6a3a], [6ab4, 6ab4], [6ed1, 6ed1], [6f85, 6f85], [6fae, 6fae],
    [733e, 733e], [736a, 736a], [756b, 756b], [7809, 7809], [78c6, 78c6],
    [7a1e, 7a1e], [7af5, 7af5], [7cbf, 7cbf], [7e63, 7e63], [7f6b, 7f6b],
    [8142, 8142], [8219, 8219], [82b1, 82b1], [83ef, 83ef], [848d, 848d],
    [8796, 8796], [89df, 89df], [8a71, 8a71], [8ae3, 8ae3], [8b41, 8b41],
    [8b6e, 8b6e], [8c41, 8c41], [8f20, 8f20], [91ea, 91eb], [92d8, 92d8],
    [9335, 9335], [93f5, 93f5], [9a4a, 9a4a], [9b64, 9b64], [9bad, 9bad],
    [9de8, 9de8], [9eca, 9eca], [20750, 20750], [2090e, 2090e],
    [20cc2, 20cc2], [20fdc, 20fdc], [21051, 21051], [21e9b, 21e9b],
    [22136, 22136], [2299a, 2299a], [22f24, 22f24], [2406a, 2406a],
    [24655, 24655], [24f12, 24f12], [25244, 25244], [254b6, 254b6],
    [259f0, 259f0], [2604a, 2604a], [2658d, 2658d], [269e0, 269e0],
    [269f5, 269f5], [269f9, 269f9], [26aa0, 26aa0], [26d8e, 26d8e],
    [26f4a, 26f4a], [2744d, 2744d], [27a0b, 27a0b], [27aae, 27aae],
    [27f4c, 27f4c], [288c4, 288c4], [28dac, 28dac], [28db1, 28db1],
    [290a4, 290a4], [295d0, 295d0], [29768, 29768], [29909, 29909],
    [29a14, 29a14], [29c8f, 29c8f], [29d4f, 29d4f], [29e04, 29e04],
    [2a5fd, 2a5fd]**/


    namespace {
    const static UnicodeSet::run_t __hua_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 71}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
    {Empty, 27}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2883}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 113}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 66},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 137}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 50}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 75}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 29392}};
    const static UnicodeSet::bitquad_t  __hua_Set_quads[] = {
    0x00840040, 0x00008000, 0x00000400, 0x00000080, 0x00000200, 0x00008000,
    0x01000000, 0x00000800, 0x00000100, 0x80000000, 0x00000100, 0x00000001,
    0x00008000, 0x08000000, 0x00080000, 0x00000010, 0x00000200, 0x00040000,
    0x00010008, 0x00400000, 0x00020000, 0x00000400, 0x00400000, 0x00000080,
    0x00000200, 0x00000002, 0x80000000, 0x00000020, 0x01000000, 0x00000800,
    0x40000000, 0x00080000, 0x00000040, 0x00400000, 0x00001000, 0x02000000,
    0x00001000, 0x04000000, 0x00100000, 0x00020000, 0x00000020, 0x00004000,
    0x40000000, 0x00000400, 0x00000800, 0x00000200, 0x00000040, 0x40000000,
    0x00200000, 0x80000000, 0x00000008, 0x00000800, 0x00000004, 0x02000000,
    0x00020000, 0x00008000, 0x00002000, 0x00400000, 0x80000000, 0x00020000,
    0x00000008, 0x00000002, 0x00004000, 0x00000002, 0x00000001, 0x00000c00,
    0x01000000, 0x00200000, 0x00200000, 0x00000400, 0x00000010, 0x00002000,
    0x00000100, 0x00000400, 0x00010000, 0x00004000, 0x00000004, 0x10000000,
    0x00020000, 0x08000000, 0x00400000, 0x04000000, 0x00000010, 0x00000400,
    0x00200000, 0x00040000, 0x00000010, 0x00400000, 0x00010000, 0x00000400,
    0x00002000, 0x02200001, 0x00000001, 0x00004000, 0x00000400, 0x00002000,
    0x00000800, 0x00004000, 0x00001000, 0x00000010, 0x00021000, 0x00000010,
    0x00010000, 0x00000100, 0x00000200, 0x00100000, 0x00008000, 0x00008000,
    0x00000010, 0x20000000};
    }

    const static UnicodeSet hua_Set{const_cast<UnicodeSet::run_t *>(__hua_Set_runs), 213, 0, const_cast<UnicodeSet::bitquad_t *>(__hua_Set_quads), 110, 0};

    /** Code Point Ranges for fan
    [3568, 3568], [36ef, 36ef], [3906, 3906], [3ba5, 3ba5], [3d00, 3d00],
    [3d97, 3d97], [3e0b, 3e0b], [3e95, 3e95], [3f79, 3f79], [4000, 4000],
    [424a, 424a], [42a9, 42a9], [42e3, 42e3], [42e6, 42e6], [44a6, 44a6],
    [4570, 4570], [46c0, 46c0], [47ea, 47ea], [484a, 484a], [4a9b, 4a9b],
    [4aa4, 4aa4], [4abb, 4abb], [4af6, 4af6], [4b75, 4b75], [4bb3, 4bb3],
    [4f0b, 4f0b], [51e1, 51e1], [52eb, 52eb], [53cd, 53cd], [5643, 5643],
    [58a6, 58a6], [597f, 597f], [5a4f, 5a4f], [5b0e, 5b0f], [5e06, 5e06],
    [5e61, 5e61], [61a3, 61a3], [6255, 6255], [62da, 62da], [65db, 65db],
    [674b, 674b], [67c9, 67c9], [68b5, 68b5], [68e5, 68e5], [6953, 6953],
    [6a0a, 6a0a], [6a4e, 6a4e], [6c3e, 6c3e], [6c4e, 6c4e], [6cdb, 6cdb],
    [6e22, 6e22], [6efc, 6efc], [6f58, 6f58], [703f, 703f], [7169, 7169],
    [71d4, 71d4], [72af, 72af], [72bf, 72bf], [74a0, 74a0], [7548, 7548],
    [7568, 7568], [756a, 756a], [792c, 792c], [7b32, 7b32], [7b35, 7b35],
    [7bc4, 7bc4], [7c53, 7c53], [7e41, 7e41], [7e59, 7e59], [7fb3, 7fb3],
    [7ffb, 7ffb], [81b0, 81b0], [8229, 8229], [8303, 8303], [8543, 8543],
    [85a0, 85a0], [85e9, 85e9], [8629, 8629], [87e0, 87e0], [881c, 881c],
    [88a2, 88a2], [894e, 894e], [8a09, 8a09], [8ca9, 8ca9], [8e6f, 8e6f],
    [8ed3, 8ed3], [8eec, 8eec], [8f53, 8f53], [8fd4, 8fd4], [91e9, 91e9],
    [9407, 9407], [98bf, 98bf], [98ef, 98ef], [9c55, 9c55], [9ded, 9ded],
    [201a9, 201a9], [204be, 204be], [21048, 21048], [215f9, 215f9],
    [21700, 21700], [2190e, 2190e], [21d89, 21d89], [221ea, 221ea],
    [22432, 22432], [225f0, 225f0], [22b35, 22b35], [22d83, 22d83],
    [23536, 23536], [23cdc, 23cdc], [24111, 24111], [2412b, 2412b],
    [24b28, 24b28], [24b4d, 24b4d], [24cd6, 24cd6], [250f5, 250f5],
    [25152, 25152], [2588c, 2588c], [25e28, 25e28], [25e47, 25e47],
    [25eeb, 25eeb], [25f1e, 25f1e], [25fcb, 25fcb], [262bb, 262bb],
    [26712, 26712], [269bd, 269bd], [26a32, 26a32], [26a96, 26a96],
    [2702d, 2702d], [27049, 27049], [27264, 27264], [272be, 272be],
    [27359, 27359], [2789c, 2789c], [2799f, 2799f], [2818c, 2818c],
    [2866e, 2866e], [287c4, 287c4], [28812, 28812], [28967, 28967],
    [2954f, 2954f], [2986b, 2986b], [299c5, 299c5], [29a29, 29a29],
    [2a587, 2a587]**/


    namespace {
    const static UnicodeSet::run_t __fan_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 29}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2845},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 92}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 60}, {Mixed, 1},
    {Empty, 60}, {Mixed, 1}, {Empty, 33}, {Mixed, 2}, {Empty, 79},
    {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 44},
    {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 44}, {Mixed, 2},
    {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 63},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 94},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 90}, {Mixed, 1}, {Empty, 29395}};
    const static UnicodeSet::bitquad_t  __fan_Set_quads[] = {
    0x00000100, 0x00008000, 0x00000040, 0x00000020, 0x00000001, 0x00800000,
    0x00000800, 0x00200000, 0x02000000, 0x00000001, 0x00000400, 0x00000200,
    0x00000048, 0x00000040, 0x00010000, 0x00000001, 0x00000400, 0x00000400,
    0x08000000, 0x08000010, 0x00400000, 0x00200000, 0x00080000, 0x00000800,
    0x00000002, 0x00000800, 0x00002000, 0x00000008, 0x00000040, 0x80000000,
    0x00008000, 0x0000c000, 0x00000040, 0x00000002, 0x00000008, 0x00200000,
    0x04000000, 0x08000000, 0x00000800, 0x00000200, 0x00200000, 0x00000020,
    0x00080000, 0x00000400, 0x00004000, 0x40000000, 0x00004000, 0x08000000,
    0x00000004, 0x10000000, 0x01000000, 0x80000000, 0x00000200, 0x00100000,
    0x80008000, 0x00000001, 0x00000100, 0x00000500, 0x00001000, 0x00240000,
    0x00000010, 0x00080000, 0x02000002, 0x00080000, 0x08000000, 0x00010000,
    0x00000200, 0x00000008, 0x00000008, 0x00000001, 0x00000200, 0x00000200,
    0x00000001, 0x10000000, 0x00000004, 0x00004000, 0x00000200, 0x00000200,
    0x00008000, 0x00080000, 0x00001000, 0x00080000, 0x00100000, 0x00000200,
    0x00000080, 0x80000000, 0x00008000, 0x00200000, 0x00002000, 0x00000200,
    0x40000000, 0x00000100, 0x02000000, 0x00000001, 0x00004000, 0x00000200,
    0x00000400, 0x00040000, 0x00010000, 0x00200000, 0x00000008, 0x00400000,
    0x10000000, 0x00020000, 0x00000800, 0x00000100, 0x00002000, 0x00400000,
    0x00200000, 0x00040000, 0x00001000, 0x00000100, 0x00000080, 0x00000800,
    0x40000000, 0x00000800, 0x08000000, 0x00040000, 0x20000000, 0x00040000,
    0x00400000, 0x00002000, 0x00000200, 0x00000010, 0x40000000, 0x02000000,
    0x10000000, 0x80000000, 0x00001000, 0x00004000, 0x00000010, 0x00040000,
    0x00000080, 0x00008000, 0x00000800, 0x00000020, 0x00000200, 0x00000080};
    }

    const static UnicodeSet fan_Set{const_cast<UnicodeSet::run_t *>(__fan_Set_runs), 257, 0, const_cast<UnicodeSet::bitquad_t *>(__fan_Set_quads), 138, 0};

    /** Code Point Ranges for pang
    [3569, 3569], [396c, 396c], [416d, 416d], [43fa, 43fa], [448d, 448d],
    [4819, 4819], [4e53, 4e53], [4eff, 4eff], [508d, 508d], [55d9, 55d9],
    [5906, 5906], [5ace, 5ace], [5c28, 5c28], [5f6d, 5f6d], [5f77, 5f77],
    [5fac, 5fac], [623f, 623f], [65b9, 65b9], [65c1, 65c1], [699c, 699c],
    [6c78, 6c78], [6c97, 6c97], [6ec2, 6ec2], [7090, 7090], [7253, 7253],
    [78c5, 78c5], [7be3, 7be3], [802a, 802a], [80a8, 80a8], [80d6, 80d6],
    [80ee, 80ee], [8180, 8180], [823d, 823d], [84a1, 84a1], [8783, 8783],
    [882d, 882d], [89ab, 89ab], [8dbd, 8dbd], [9004, 9004], [9022, 9022],
    [938a, 938a], [96f1, 96f1], [9736, 9736], [9ac8, 9ac8], [9c1f, 9c1f],
    [9f90, 9f90], [205f5, 205f5], [209b2, 209b2], [21143, 21143],
    [2240a, 2240a], [23086, 23086], [249ed, 249ed], [24d78, 24d78],
    [25ab4, 25ab4], [2670d, 2670d], [268c2, 268c2], [27527, 27527],
    [27fc6, 27fc6], [28737, 28737], [290ce, 290ce], [29145, 29145],
    [29208, 29208], [29428, 29428], [2a43f, 2a43f], [2a514, 2a514]**/


    namespace {
    const static UnicodeSet::run_t __pang_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 63},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 27}, {Mixed, 2}, {Empty, 29},
    {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 17}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 51},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 3}, {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 18}, {Mixed, 2}, {Empty, 26}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 2866}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 149},
    {Mixed, 1}, {Empty, 99}, {Mixed, 1}, {Empty, 202}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 105}, {Mixed, 1}, {Empty, 98},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 98}, {Mixed, 1},
    {Empty, 84}, {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 76},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 127}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 29399}};
    const static UnicodeSet::bitquad_t  __pang_Set_quads[] = {
    0x00000200, 0x00001000, 0x00002000, 0x04000000, 0x00002000, 0x02000000,
    0x00080000, 0x80000000, 0x00002000, 0x02000000, 0x00000040, 0x00004000,
    0x00000100, 0x00802000, 0x00001000, 0x80000000, 0x02000000, 0x00000002,
    0x10000000, 0x01000000, 0x00800000, 0x00000004, 0x00010000, 0x00080000,
    0x00000020, 0x00000008, 0x00000400, 0x00000100, 0x00400000, 0x00004000,
    0x00000001, 0x20000000, 0x00000002, 0x00000008, 0x00002000, 0x00000800,
    0x20000000, 0x00000010, 0x00000004, 0x00000400, 0x00020000, 0x00400000,
    0x00000100, 0x80000000, 0x00010000, 0x00200000, 0x00040000, 0x00000008,
    0x00000400, 0x00000040, 0x00002000, 0x01000000, 0x00100000, 0x00002000,
    0x00000004, 0x00000080, 0x00000040, 0x00800000, 0x00004000, 0x00000020,
    0x00000100, 0x00000100, 0x80000000, 0x00100000};
    }

    const static UnicodeSet pang_Set{const_cast<UnicodeSet::run_t *>(__pang_Set_runs), 119, 0, const_cast<UnicodeSet::bitquad_t *>(__pang_Set_quads), 64, 0};

    /** Code Point Ranges for fang
    [356b, 356b], [3903, 3903], [39cd, 39cd], [4131, 4131], [488d, 488d],
    [4c03, 4c03], [4eff, 4eff], [531a, 531a], [574a, 574a], [57c5, 57c5],
    [59a8, 59a8], [5f77, 5f77], [623f, 623f], [653e, 653e], [65b9, 65b9],
    [65ca, 65ca], [6609, 6609], [6618, 6618], [661e, 661e], [678b, 678b],
    [6c78, 6c78], [6dd3, 6dd3], [7265, 7265], [74ec, 74ec], [7706, 7706],
    [772a, 772a], [794a, 794a], [7d21, 7d21], [80aa, 80aa], [822b, 822b],
    [82b3, 82b3], [8684, 8684], [8a2a, 8a2a], [8dbd, 8dbd], [90a1, 90a1],
    [9201, 9201], [9632, 9632], [96f1, 96f1], [9ae3, 9ae3], [9b74, 9b74],
    [9c1f, 9c1f], [9d0b, 9d0b], [9dad, 9dad], [23105, 23105],
    [25af3, 25af3], [28f94, 28f94], [291f4, 291f4], [295e7, 295e7],
    [29b1d, 29b1d], [29b97, 29b97], [29c8c, 29c8c], [29df8, 29df8],
    [2a543, 2a543]**/


    namespace {
    const static UnicodeSet::run_t __fang_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 58}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 16}, {Mixed, 2}, {Empty, 16}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 3226}, {Mixed, 1}, {Empty, 334}, {Mixed, 1}, {Empty, 420},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 29397}};
    const static UnicodeSet::bitquad_t  __fang_Set_quads[] = {
    0x00000800, 0x00000008, 0x00002000, 0x00020000, 0x00002000, 0x00000008,
    0x80000000, 0x04000000, 0x00000400, 0x00000020, 0x00000100, 0x00800000,
    0x80000000, 0x40000000, 0x02000000, 0x00000400, 0x41000200, 0x00000800,
    0x01000000, 0x00080000, 0x00000020, 0x00001000, 0x00000040, 0x00000400,
    0x00000400, 0x00000002, 0x00000400, 0x00000800, 0x00080000, 0x00000010,
    0x00000400, 0x20000000, 0x00000002, 0x00000002, 0x00040000, 0x00020000,
    0x00000008, 0x00100000, 0x80000000, 0x00000800, 0x00002000, 0x00000020,
    0x00080000, 0x00100000, 0x00100000, 0x00000080, 0x20000000, 0x00800000,
    0x00001000, 0x01000000, 0x00000008};
    }

    const static UnicodeSet fang_Set{const_cast<UnicodeSet::run_t *>(__fang_Set_runs), 99, 0, const_cast<UnicodeSet::bitquad_t *>(__fang_Set_quads), 51, 0};

    /** Code Point Ranges for song
    [356c, 356c], [379e, 379e], [38dd, 38dd], [3a73, 3a73], [3b1d, 3b1d],
    [4221, 4221], [4bf3, 4bf3], [4bf7, 4bf7], [4cb2, 4cb2], [502f, 502f],
    [50b1, 50b1], [51c7, 51c7], [5405, 5405], [5a00, 5a00], [5b8b, 5b8b],
    [5d69, 5d69], [5d77, 5d77], [5fea, 5fea], [609a, 609a], [612f, 612f],
    [616b, 616b], [6181, 6181], [61bd, 61bd], [6352, 6352], [63d4, 63d4],
    [6457, 6457], [677e, 677e], [68c7, 68c7], [6964, 6964], [6aa7, 6aa7],
    [6dde, 6dde], [6f0e, 6f0e], [6fcd, 6fcd], [7879, 7879], [7ae6, 7ae6],
    [8073, 8073], [83d8, 83d8], [84ef, 84ef], [8634, 8634], [8719, 8719],
    [8a1f, 8a1f], [8aa6, 8aa6], [9001, 9001], [9376, 9376], [980c, 980c],
    [9938, 9938], [99f7, 99f7], [9b06, 9b06], [20cfc, 20cfc],
    [211dd, 211dd], [21dfd, 21dfd], [21fbc, 21fbc], [224e3, 224e3],
    [2250b, 2250b], [22529, 22529], [22597, 22597], [22904, 22904],
    [22c64, 22c64], [2369c, 2369c], [23f6b, 23f6b], [24fa5, 24fa5],
    [25cfa, 25cfa], [26b18, 26b18], [26bd5, 26bd5], [26df4, 26df4],
    [27295, 27295], [2733b, 2733b], [28824, 28824], [28c5b, 28c5b],
    [28c7f, 28c7f], [28d0f, 28d0f], [290cd, 290cd], [290ed, 290ed],
    [29a7a, 29a7a], [29b80, 29b80], [2a01a, 2a01a]**/


    namespace {
    const static UnicodeSet::run_t __song_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 47}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 12}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 68}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2958}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 96}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 41},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 80}, {Mixed, 1}, {Empty, 70},
    {Mixed, 1}, {Empty, 129}, {Mixed, 1}, {Empty, 105}, {Mixed, 1},
    {Empty, 112}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 167}, {Mixed, 1}, {Empty, 32}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 29}, {Mixed, 2}, {Empty, 75}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 29439}};
    const static UnicodeSet::bitquad_t  __song_Set_quads[] = {
    0x00001000, 0x40000000, 0x20000000, 0x00080000, 0x20000000, 0x00000002,
    0x00880000, 0x00040000, 0x00008000, 0x00020000, 0x00000080, 0x00000020,
    0x00000001, 0x00000800, 0x00800200, 0x00000400, 0x04000000, 0x00008000,
    0x00000800, 0x00000002, 0x20000000, 0x00040000, 0x00100000, 0x00800000,
    0x40000000, 0x00000080, 0x00000010, 0x00000080, 0x40000000, 0x00004000,
    0x00002000, 0x02000000, 0x00000040, 0x00080000, 0x01000000, 0x00008000,
    0x00100000, 0x02000000, 0x80000000, 0x00000040, 0x00000002, 0x00400000,
    0x00001000, 0x01000000, 0x00800000, 0x00000040, 0x10000000, 0x20000000,
    0x20000000, 0x10000000, 0x00000008, 0x00000800, 0x00000200, 0x00800000,
    0x00000010, 0x00000010, 0x10000000, 0x00000800, 0x00000020, 0x04000000,
    0x01000000, 0x00200000, 0x00100000, 0x00200000, 0x08000000, 0x00000010,
    0x08000000, 0x80000000, 0x00008000, 0x00002000, 0x00002000, 0x04000000,
    0x00000001, 0x04000000};
    }

    const static UnicodeSet song_Set{const_cast<UnicodeSet::run_t *>(__song_Set_runs), 137, 0, const_cast<UnicodeSet::bitquad_t *>(__song_Set_quads), 74, 0};

    /** Code Point Ranges for ao
    [356d, 356d], [362c, 362c], [3729, 3729], [3802, 3802], [3907, 3907],
    [3a60, 3a60], [3ff0, 3ff0], [419f, 419f], [425b, 425b], [443f, 443f],
    [46ab, 46ab], [4712, 4712], [495d, 495d], [498b, 498b], [4adc, 4adc],
    [4be0, 4be0], [50b2, 50b2], [51f9, 51f9], [55f7, 55f7], [5662, 5662],
    [56c2, 56c2], [5773, 5773], [58ba, 58ba], [58bd, 58bd], [5961, 5961],
    [5965, 5965], [5aaa, 5aaa], [5aef, 5aef], [5c99, 5c99], [5cb0, 5cb0],
    [5d85, 5d85], [5db4, 5db4], [5ed2, 5ed2], [6160, 6160], [61ca, 61ca],
    [6277, 6277], [62d7, 62d7], [646e, 646e], [64d9, 64d9], [6556, 6556],
    [67ea, 67ea], [688e, 688e], [68cd, 68cd], [6cd1, 6cd1], [6ef6, 6ef6],
    [6f86, 6f86], [6fb3, 6fb3], [719d, 719d], [71ac, 71ac], [71e0, 71e0],
    [720a, 720a], [7352, 7353], [7488, 7488], [7711, 7711], [78dd, 78dd],
    [78fd, 78fd], [7909, 7909], [7ffa, 7ffa], [8071, 8071], [82ba, 82ba],
    [851c, 851c], [8779, 8779], [87af, 87af], [8956, 8956], [8b37, 8b37],
    [8eea, 8eea], [9068, 9068], [90e9, 90e9], [93ca, 93ca], [93d5, 93d6],
    [957a, 957a], [969e, 969e], [9a41, 9a41], [9c32, 9c32], [9d01, 9d01],
    [9d22, 9d22], [9dd4, 9dd4], [9f07, 9f07], [2129b, 2129b],
    [213fc, 213fc], [21483, 21483], [22071, 22071], [2255f, 2255f],
    [229f4, 229f4], [22cc6, 22cc6], [23281, 23281], [23deb, 23deb],
    [241ef, 241ef], [243f6, 243f6], [24ebe, 24ebe], [250a2, 250a2],
    [25451, 25451], [26a88, 26a88], [26f40, 26f40], [27143, 27143],
    [27a32, 27a32], [28c67, 28c67], [2920f, 2920f], [2944d, 2944d],
    [29464, 29464], [29540, 29540], [2962e, 2962e], [297c7, 297c7],
    [298fb, 298fb], [2994a, 2994a], [29baf, 29baf], [29c4f, 29c4f],
    [29f08, 29f08], [2a07e, 2a07e], [2a0e8, 2a0e8]**/


    namespace {
    const static UnicodeSet::run_t __ao_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 6}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 14},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 13}, {Mixed, 3},
    {Empty, 54}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 2971}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 94}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 90}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 85},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 177}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 70}, {Mixed, 1}, {Empty, 145}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 17}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 29432}};
    const static UnicodeSet::bitquad_t  __ao_Set_quads[] = {
    0x00002000, 0x00001000, 0x00000200, 0x00000004, 0x00000080, 0x00000001,
    0x00010000, 0x80000000, 0x08000000, 0x80000000, 0x00000800, 0x00040000,
    0x20000000, 0x00000800, 0x10000000, 0x00000001, 0x00040000, 0x02000000,
    0x00800000, 0x00000004, 0x00000004, 0x00080000, 0x24000000, 0x00000022,
    0x00000400, 0x00008000, 0x02000000, 0x00010000, 0x00000020, 0x00100000,
    0x00040000, 0x00000001, 0x00000400, 0x00800000, 0x00800000, 0x00004000,
    0x02000000, 0x00400000, 0x00000400, 0x00004000, 0x00002000, 0x00020000,
    0x00400000, 0x00000040, 0x00080000, 0x20000000, 0x00001000, 0x00000001,
    0x00000400, 0x000c0000, 0x00000100, 0x00020000, 0x20000000, 0x20000000,
    0x00000200, 0x04000000, 0x00020000, 0x04000000, 0x10000000, 0x02000000,
    0x00008000, 0x00400000, 0x00800000, 0x00000400, 0x00000100, 0x00000200,
    0x00600400, 0x04000000, 0x40000000, 0x00000002, 0x00040000, 0x00000002,
    0x00000004, 0x00100000, 0x00000080, 0x08000000, 0x10000000, 0x00000008,
    0x00020000, 0x80000000, 0x00100000, 0x00000040, 0x00000002, 0x00000800,
    0x00008000, 0x00400000, 0x40000000, 0x00000004, 0x00020000, 0x00000100,
    0x00000001, 0x00000008, 0x00040000, 0x00000080, 0x00008000, 0x00002000,
    0x00000010, 0x00000001, 0x00004000, 0x00000080, 0x08000000, 0x00000400,
    0x00008000, 0x00008000, 0x00000100, 0x40000000, 0x00000100};
    }

    const static UnicodeSet ao_Set{const_cast<UnicodeSet::run_t *>(__ao_Set_runs), 197, 0, const_cast<UnicodeSet::bitquad_t *>(__ao_Set_quads), 107, 0};

    /** Code Point Ranges for ne
    [356f, 356f], [415e, 415e], [43aa, 43aa], [4b46, 4b46], [5450, 5450],
    [5462, 5462], [54ea, 54ea], [6290, 6290], [7592, 7592], [7594, 7594],
    [7732, 7732], [8a25, 8a25], [90a3, 90a3], [225c9, 225c9],
    [239cd, 239cd], [2791c, 2791c]**/


    namespace {
    const static UnicodeSet::run_t __ne_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 94}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 71}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 108}, {Mixed, 1}, {Empty, 151},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 151}, {Mixed, 1},
    {Empty, 51}, {Mixed, 1}, {Empty, 3240}, {Mixed, 1}, {Empty, 159},
    {Mixed, 1}, {Empty, 505}, {Mixed, 1}, {Empty, 29751}};
    const static UnicodeSet::bitquad_t  __ne_Set_quads[] = {
    0x00008000, 0x40000000, 0x00000400, 0x00000040, 0x00010000, 0x00000004,
    0x00000400, 0x00010000, 0x00140000, 0x00040000, 0x00000020, 0x00000008,
    0x00000200, 0x00002000, 0x10000000};
    }

    const static UnicodeSet ne_Set{const_cast<UnicodeSet::run_t *>(__ne_Set_runs), 29, 0, const_cast<UnicodeSet::bitquad_t *>(__ne_Set_quads), 15, 0};

    /** Code Point Ranges for chen
    [3574, 3574], [3972, 3972], [3c80, 3c80], [403c, 403c], [43f9, 43f9],
    [441c, 441c], [4463, 4463], [449e, 449e], [478b, 478b], [4833, 4833],
    [4885, 4885], [4888, 4888], [48bb, 48bb], [48c5, 48c5], [4ad6, 4ad6],
    [4fb2, 4fb2], [5096, 5096], [512d, 512d], [55d4, 55d4], [56ab, 56ab],
    [582a, 582a], [586b, 586b], [5875, 5875], [588b, 588b], [5926, 5926],
    [5bb8, 5bb8], [5e18, 5e18], [5ff1, 5ff1], [6116, 6116], [62bb, 62bb],
    [6375, 6375], [63e8, 63e8], [6550, 6550], [6668, 6668], [66df, 66df],
    [6795, 6795], [686d, 686d], [68e7, 68e7], [68fd, 68fd], [6a04, 6a04],
    [6aec, 6aec], [6c88, 6c89], [6e5b, 6e5b], [700b, 700b], [7141, 7141],
    [741b, 741b], [75a2, 75a2], [75b9, 75b9], [760e, 760e], [7628, 7628],
    [7708, 7708], [778b, 778b], [7876, 7876], [78e3, 78e3], [7a31, 7a31],
    [7d9d, 7d9d], [7e1d, 7e1d], [809c, 809c], [80c2, 80c2], [81e3, 81e3],
    [831e, 831e], [8380, 8380], [8390, 8390], [852f, 852f], [85bc, 85bc],
    [87b4, 87b4], [896f, 896f], [8a26, 8a26], [8ac3, 8ac3], [8af6, 8af6],
    [8b13, 8b13], [8b32, 8b32], [8b96, 8b96], [8cdd, 8cdd], [8d02, 8d02],
    [8d81, 8d81], [8dbb, 8dbb], [8dc8, 8dc8], [8e38, 8e38], [8ed9, 8ed9],
    [8fb0, 8fb0], [90f4, 90f4], [91a6, 91a6], [9202, 9202], [9356, 9356],
    [95d6, 95d6], [9673, 9673], [9703, 9703], [9dd0, 9dd0], [9e8e, 9e8e],
    [9f54, 9f54], [21ac1, 21ac1], [221ba, 221ba], [22395, 22395],
    [2300d, 2300d], [2379f, 2379f], [24623, 24623], [2475a, 2475a],
    [247f8, 247f8], [24873, 24873], [24e5b, 24e5b], [2525c, 2525c],
    [2552a, 2552a], [255d2, 255d2], [25781, 25781], [25af9, 25af9],
    [26044, 26044], [2605f, 2605f], [27182, 27182], [2786c, 2786c],
    [27a21, 27a21], [27b7c, 27b7c], [27fd2, 27fd2], [2844c, 2844c],
    [288d4, 288d4], [28ed6, 28ed6], [28f0c, 28f0c], [28f10, 28f10],
    [28f24, 28f24], [29089, 29089], [2914c, 2914c], [291d6, 291d6],
    [29780, 29780], [2a04f, 2a04f], [2a067, 2a067], [2a541, 2a541]**/


    namespace {
    const static UnicodeSet::run_t __chen_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 29}, {Mixed, 2},
    {Empty, 2}, {Mixed, 2}, {Empty, 23}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 2}, {Mixed, 3}, {Empty, 15}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 4}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3035}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 99},
    {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 116}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 137},
    {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 47}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 69},
    {Mixed, 2}, {Empty, 38}, {Mixed, 1}, {Empty, 29397}};
    const static UnicodeSet::bitquad_t  __chen_Set_quads[] = {
    0x00100000, 0x00040000, 0x00000001, 0x10000000, 0x02000000, 0x10000000,
    0x00000008, 0x40000000, 0x00000800, 0x00080000, 0x00000120, 0x08000000,
    0x00000020, 0x00400000, 0x00040000, 0x00400000, 0x00002000, 0x00100000,
    0x00000800, 0x00000400, 0x00200800, 0x00000800, 0x00000040, 0x01000000,
    0x01000000, 0x00020000, 0x00400000, 0x08000000, 0x00200000, 0x00000100,
    0x00010000, 0x00000100, 0x80000000, 0x00200000, 0x00002000, 0x20000080,
    0x00000010, 0x00001000, 0x00000300, 0x08000000, 0x00000800, 0x00000002,
    0x08000000, 0x02000004, 0x00004000, 0x00000100, 0x00000100, 0x00000800,
    0x00400000, 0x00000008, 0x00020000, 0x20000000, 0x20000000, 0x10000000,
    0x00000004, 0x00000008, 0x40000000, 0x00010001, 0x00008000, 0x10000000,
    0x00100000, 0x00008000, 0x00000040, 0x00000008, 0x00400000, 0x00080000,
    0x00040000, 0x00400000, 0x20000000, 0x00000004, 0x00000002, 0x08000000,
    0x00000100, 0x01000000, 0x02000000, 0x00010000, 0x00100000, 0x00000040,
    0x00000004, 0x00400000, 0x00400000, 0x00080000, 0x00000008, 0x00010000,
    0x00004000, 0x00100000, 0x00000002, 0x04000000, 0x00200000, 0x00002000,
    0x80000000, 0x00000008, 0x04000000, 0x01000000, 0x00080000, 0x08000000,
    0x10000000, 0x00000400, 0x00040000, 0x00000002, 0x02000000, 0x80000010,
    0x00000004, 0x00001000, 0x00000002, 0x10000000, 0x00040000, 0x00001000,
    0x00100000, 0x00400000, 0x00011000, 0x00000010, 0x00000200, 0x00001000,
    0x00400000, 0x00000001, 0x00008000, 0x00000080, 0x00000002};
    }

    const static UnicodeSet chen_Set{const_cast<UnicodeSet::run_t *>(__chen_Set_runs), 213, 0, const_cast<UnicodeSet::bitquad_t *>(__chen_Set_quads), 119, 0};

    /** Code Point Ranges for guo
    [3575, 3575], [35aa, 35aa], [35e5, 35e5], [35fb, 35fb], [3cc0, 3cc0],
    [3d81, 3d81], [3fc6, 3fc6], [40b8, 40b8], [4438, 4438], [490b, 490b],
    [4b0e, 4b0e], [4d39, 4d39], [5212, 5212], [54b6, 54b6], [54bc, 54bc],
    [552c, 552c], [5613, 5613], [56d7, 56d7], [570b, 570b], [57fb, 57fb],
    [581d, 581d], [588e, 588e], [5d1e, 5d1e], [5e57, 5e57], [5f4d, 5f4d],
    [60c8, 60c8], [6156, 6156], [6451, 6451], [679c, 679c], [6901, 6901],
    [6947, 6947], [6ace, 6ace], [6d3b, 6d3b], [6dc9, 6dc9], [6e26, 6e26],
    [6f0d, 6f0d], [6fc4, 6fc4], [7313, 7313], [7611, 7611], [77cc, 77cc],
    [7c02, 7c02], [7cbf, 7cbf], [7db6, 7db6], [8052, 8052], [805d, 805d],
    [8142, 8142], [8195, 8195], [83d3, 83d3], [852e, 852e], [8662, 8662],
    [872e, 872e], [873e, 873e], [8778, 8778], [87c8, 87c8], [8803, 8803],
    [88f9, 88f9], [8f20, 8f20], [904e, 904e], [90ed, 90ed], [921b, 921b],
    [9301, 9301], [934b, 934b], [9439, 9439], [991c, 991c], [9998, 9998],
    [202dc, 202dc], [20734, 20734], [20a65, 20a65], [20fe4, 20fe4],
    [211b8, 211b8], [211c4, 211c4], [214e3, 214e3], [220e6, 220e6],
    [22157, 22157], [2241a, 2241a], [22778, 22778], [229f0, 229f0],
    [22e17, 22e17], [22e56, 22e56], [22f1b, 22f1b], [2306f, 2306f],
    [23084, 23084], [23f45, 23f45], [23f70, 23f70], [24081, 24081],
    [24af5, 24af5], [24b01, 24b01], [24b8b, 24b8b], [25041, 25041],
    [250a3, 250a3], [2510d, 2510d], [25198, 25198], [251dc, 251dc],
    [25556, 25556], [2572d, 2572d], [26130, 26130], [265d2, 265d2],
    [2660c, 2660c], [266e2, 266e2], [26b17, 26b17], [26e08, 26e08],
    [27496, 27496], [275bb, 275bb], [2792f, 2792f], [27975, 27975],
    [27b55, 27b55], [27b63, 27b63], [27c12, 27c12], [27f9b, 27f9b],
    [28279, 28279], [28b57, 28b57], [28f4f, 28f4f], [29255, 29255],
    [292d7, 292d7], [297c2, 297c2], [29a90, 29a90], [29acf, 29acf],
    [29c2c, 29c2d], [29ee7, 29ee7], [2a0a0, 2a0a0], [2a1b9, 2a1b9],
    [2a203, 2a203], [2a2ca, 2a2ca]**/


    namespace {
    const static UnicodeSet::run_t __guo_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2889}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 24}, {Mixed, 1},
    {Empty, 95}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 10}, {Mixed, 2}, {Empty, 117}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 82}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 79}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 14}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 70}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 29417}};
    const static UnicodeSet::bitquad_t  __guo_Set_quads[] = {
    0x00200000, 0x00000400, 0x08000020, 0x00000001, 0x00000002, 0x00000040,
    0x01000000, 0x01000000, 0x00000800, 0x00004000, 0x02000000, 0x00040000,
    0x10400000, 0x00001000, 0x00080000, 0x00800000, 0x00000800, 0x08000000,
    0x20000000, 0x00004000, 0x40000000, 0x00800000, 0x00002000, 0x00000100,
    0x00400000, 0x00020000, 0x10000000, 0x00000002, 0x00000080, 0x00004000,
    0x08000000, 0x00000200, 0x00000040, 0x00002000, 0x00000010, 0x00080000,
    0x00020000, 0x00001000, 0x00000004, 0x80000000, 0x00400000, 0x20040000,
    0x00000004, 0x00200000, 0x00080000, 0x00004000, 0x00000004, 0x40004000,
    0x01000000, 0x00000100, 0x00000008, 0x02000000, 0x00000001, 0x00004000,
    0x00002000, 0x08000000, 0x00000002, 0x00000800, 0x02000000, 0x10000000,
    0x01000000, 0x10000000, 0x00100000, 0x00000020, 0x00000010, 0x01000000,
    0x00000010, 0x00000008, 0x00000040, 0x00800000, 0x04000000, 0x01000000,
    0x00010000, 0x00800000, 0x00400000, 0x08000000, 0x00008000, 0x00000010,
    0x00000020, 0x00010000, 0x00000002, 0x00200000, 0x00000002, 0x00000800,
    0x00000002, 0x00000008, 0x00002000, 0x01000000, 0x10000000, 0x00400000,
    0x00002000, 0x00010000, 0x00040000, 0x00001000, 0x00000004, 0x00800000,
    0x00000100, 0x00400000, 0x08000000, 0x00008000, 0x00200000, 0x00200000,
    0x00000008, 0x00040000, 0x08000000, 0x02000000, 0x00800000, 0x00008000,
    0x00200000, 0x00800000, 0x00000004, 0x00010000, 0x00008000, 0x00003000,
    0x00000080, 0x00000001, 0x02000000, 0x00000008, 0x00000400};
    }

    const static UnicodeSet guo_Set{const_cast<UnicodeSet::run_t *>(__guo_Set_runs), 227, 0, const_cast<UnicodeSet::bitquad_t *>(__guo_Set_quads), 119, 0};

    /** Code Point Ranges for ňg
    [3576, 3576], [55ef, 55ef]**/


    namespace {
    const static UnicodeSet::run_t __ňg_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 259}, {Mixed, 1}, {Empty, 34128}};
    const static UnicodeSet::bitquad_t  __ňg_Set_quads[] = {
    0x00400000, 0x00008000};
    }

    const static UnicodeSet ňg_Set{const_cast<UnicodeSet::run_t *>(__ňg_Set_runs), 5, 0, const_cast<UnicodeSet::bitquad_t *>(__ňg_Set_quads), 2, 0};

    /** Code Point Ranges for ň
    [3576, 3576], [55ef, 55ef]**/


    namespace {
    const static UnicodeSet::run_t __ň_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 259}, {Mixed, 1}, {Empty, 34128}};
    const static UnicodeSet::bitquad_t  __ň_Set_quads[] = {
    0x00400000, 0x00008000};
    }

    const static UnicodeSet ň_Set{const_cast<UnicodeSet::run_t *>(__ň_Set_runs), 5, 0, const_cast<UnicodeSet::bitquad_t *>(__ň_Set_quads), 2, 0};

    /** Code Point Ranges for pa
    [3577, 3577], [378e, 378e], [4524, 4524], [4bf2, 4bf2], [53ed, 53ed],
    [5427, 5427], [556a, 556a], [5991, 5991], [5e0a, 5e0a], [5e15, 5e15],
    [6015, 6015], [6252, 6252], [628a, 628a], [63b1, 63b1], [6777, 6777],
    [6c43, 6c43], [6d3e, 6d3e], [6f56, 6f56], [722c, 722c], [7436, 7436],
    [7685, 7685], [7b62, 7b62], [8019, 8019], [8225, 8225], [82ad, 82ad],
    [82e9, 82e9], [8469, 8469], [8899, 8899], [8db4, 8db4], [8dc1, 8dc1],
    [9200, 9200], [23692, 23692], [239dc, 239dc], [23c7a, 23c7a],
    [241b5, 241b5], [24f49, 24f49], [25419, 25419], [25a59, 25a59],
    [26406, 26406], [27461, 27461], [278c3, 278c3], [278e3, 278e3],
    [282d0, 282d0], [29206, 29206], [2a5d4, 2a5d4]**/


    namespace {
    const static UnicodeSet::run_t __pa_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 108},
    {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 63}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 40}, {Mixed, 2}, {Empty, 33},
    {Mixed, 1}, {Empty, 3363}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 108},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 77}, {Mixed, 1}, {Empty, 130}, {Mixed, 1}, {Empty, 34},
    {Mixed, 2}, {Empty, 78}, {Mixed, 1}, {Empty, 121}, {Mixed, 1},
    {Empty, 157}, {Mixed, 1}, {Empty, 29393}};
    const static UnicodeSet::bitquad_t  __pa_Set_quads[] = {
    0x00800000, 0x00004000, 0x00000010, 0x00040000, 0x00002000, 0x00000080,
    0x00000400, 0x00020000, 0x00200400, 0x00200000, 0x00040000, 0x00000400,
    0x00020000, 0x00800000, 0x00000008, 0x40000000, 0x00400000, 0x00001000,
    0x00400000, 0x00000020, 0x00000004, 0x02000000, 0x00000020, 0x00002000,
    0x00000200, 0x00000200, 0x02000000, 0x00100000, 0x00000002, 0x00000001,
    0x00040000, 0x10000000, 0x04000000, 0x00200000, 0x00000200, 0x02000000,
    0x02000000, 0x00000040, 0x00000002, 0x00000008, 0x00000008, 0x00010000,
    0x00000040, 0x00100000};
    }

    const static UnicodeSet pa_Set{const_cast<UnicodeSet::run_t *>(__pa_Set_runs), 85, 0, const_cast<UnicodeSet::bitquad_t *>(__pa_Set_quads), 44, 0};

    /** Code Point Ranges for si
    [357d, 357d], [36b6, 36b6], [37c3, 37c3], [383c, 383c], [38c8, 38c8],
    [3b52, 3b52], [3b90, 3b90], [3d32, 3d32], [3e3b, 3e3b], [3e51, 3e51],
    [3e87, 3e87], [3ea8, 3ea8], [3f44, 3f44], [41c1, 41c1], [44a8, 44a8],
    [452e, 452e], [4873, 4873], [4999, 4999], [4ae2, 4ae2], [4c89, 4c89],
    [4ee5, 4ee5], [4f3a, 4f3a], [4f3c, 4f3c], [4f41, 4f41], [4fa1, 4fa1],
    [4fdf, 4fdf], [5072, 5072], [5082, 5082], [5129, 5129], [5155, 5155],
    [51d8, 51d8], [53b6, 53b6], [53f0, 53f0], [53f8, 53f8], [55e3, 55e3],
    [5636, 5636], [565d, 565d], [56db, 56db], [59d2, 59d2], [5aa4, 5aa4],
    [5bfa, 5bfa], [5df3, 5df3], [5ec1, 5ec1], [5edd, 5edd], [5f99, 5f99],
    [601d, 601d], [6122, 6122], [6495, 6495], [65af, 65af], [676b, 676b],
    [6790, 6790], [67b1, 67b1], [67f6, 67f6], [68a9, 68a9], [6952, 6952],
    [69b9, 69b9], [6b7b, 6b7b], [6c5c, 6c5c], [6cc0, 6cc0], [6cd7, 6cd7],
    [6d0d, 6d0d], [6d98, 6d98], [6f8c, 6f8c], [7003, 7003], [71cd, 71cd],
    [726d, 726d], [78c3, 78c3], [7940, 7940], [7960, 7960], [7997, 7997],
    [79a0, 79a0], [79c1, 79c1], [7ae2, 7ae2], [7b25, 7b25], [7c1b, 7c1b],
    [7cf8, 7cf8], [7d72, 7d72], [7de6, 7de6], [7f73, 7f73], [801c, 801c],
    [8082, 8082], [8084, 8084], [8086, 8086], [83e5, 83e5], [856c, 856c],
    [857c, 857c], [8724, 8724], [8784, 8784], [8794, 8794], [87d6, 87d6],
    [87f4, 87f4], [8997, 8997], [8b15, 8b15], [9018, 9018], [91f2, 91f2],
    [9236, 9236], [923b, 923b], [9270, 9270], [9289, 9289], [92d6, 92d6],
    [9376, 9376], [9401, 9401], [96c9, 96c9], [98b8, 98b8], [98df, 98df],
    [98f4, 98f4], [98fc, 98fc], [99df, 99df], [9a03, 9a03], [9a26, 9a26],
    [9dc9, 9dc9], [9de5, 9de5], [9e97, 9e97], [9f36, 9f36], [20013, 20013],
    [202e1, 202e1], [20593, 20593], [20b48, 20b48], [20cce, 20cce],
    [21852, 21852], [22236, 22236], [22280, 22280], [2236d, 2236d],
    [226e5, 226e5], [22839, 22839], [229b2, 229b2], [23096, 23096],
    [2367c, 2367c], [23684, 23684], [238cc, 238cc], [238d1, 238d1],
    [23a60, 23a60], [23c7b, 23c7b], [2419f, 2419f], [248f5, 248f5],
    [24c78, 24c78], [24e8a, 24e8a], [25136, 25136], [25400, 25400],
    [254b2, 254b2], [25576, 25576], [25649, 25649], [25760, 25760],
    [25831, 25831], [25be8, 25be8], [25e4a, 25e4a], [261f2, 261f2],
    [261f5, 261f5], [2650c, 2650c], [26b61, 26b61], [26bba, 26bba],
    [26e37, 26e37], [26f55, 26f55], [2701a, 2701a], [27029, 27029],
    [27764, 27764], [278db, 278db], [27b0a, 27b0a], [27c45, 27c45],
    [27cd9, 27cd9], [28bad, 28bad], [28f7c, 28f7c], [29170, 29170],
    [291b5, 291b5], [29d57, 29d57], [29e1f, 29e1f], [29e9b, 29e9b],
    [2a181, 2a181], [2a197, 2a197], [2a28d, 2a28d], [2a573, 2a573],
    [2a589, 2a589]**/


    namespace {
    const static UnicodeSet::run_t __si_Set_runs[] = {
    {Empty, 427}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 4}, {Mixed, 2},
    {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 13},
    {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 50},
    {Mixed, 1}, {Empty, 3}, {Mixed, 5}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 12}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 14}, {Mixed, 3}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 28}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2822}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 91}, {Mixed, 1}, {Empty, 78}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 46}, {Mixed, 2}, {Empty, 17}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 57}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 118}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 29395}};
    const static UnicodeSet::bitquad_t  __si_Set_quads[] = {
    0x20000000, 0x00400000, 0x00000008, 0x10000000, 0x00000100, 0x00040000,
    0x00010000, 0x00040000, 0x08000000, 0x00020000, 0x00000080, 0x00000100,
    0x00000010, 0x00000002, 0x00000100, 0x00004000, 0x00080000, 0x02000000,
    0x00000004, 0x00000200, 0x00000020, 0x14000000, 0x00000002, 0x00000002,
    0x80000000, 0x00040000, 0x00000004, 0x00000200, 0x00200000, 0x01000000,
    0x00400000, 0x01010000, 0x00000008, 0x00400000, 0x20000000, 0x08000000,
    0x00040000, 0x00000010, 0x04000000, 0x00080000, 0x20000002, 0x02000000,
    0x20000000, 0x00000004, 0x00200000, 0x00008000, 0x00000800, 0x00010000,
    0x00020000, 0x00400000, 0x00000200, 0x00040000, 0x02000000, 0x08000000,
    0x10000000, 0x00800001, 0x00002000, 0x01000000, 0x00001000, 0x00000008,
    0x00002000, 0x00002000, 0x00000008, 0x00000001, 0x00000001, 0x00800000,
    0x00000001, 0x00000002, 0x00000004, 0x00000020, 0x08000000, 0x01000000,
    0x00040000, 0x00000040, 0x00080000, 0x10000000, 0x00000054, 0x00000020,
    0x10001000, 0x00000010, 0x00100010, 0x00400000, 0x00100000, 0x00800000,
    0x00200000, 0x01000000, 0x00040000, 0x08400000, 0x00010000, 0x00000200,
    0x00400000, 0x00400000, 0x00000002, 0x00000200, 0x01000000, 0x80000000,
    0x10100000, 0x80000000, 0x00000008, 0x00000040, 0x00000200, 0x00000020,
    0x00800000, 0x00400000, 0x00080000, 0x00000002, 0x00080000, 0x00000100,
    0x00004000, 0x00040000, 0x00400000, 0x00000001, 0x00002000, 0x00000020,
    0x02000000, 0x00040000, 0x00400000, 0x10000000, 0x00000010, 0x00021000,
    0x00000001, 0x08000000, 0x80000000, 0x00200000, 0x01000000, 0x00000400,
    0x00400000, 0x00000001, 0x00040000, 0x00400000, 0x00000200, 0x00000001,
    0x00020000, 0x00000100, 0x00000400, 0x00240000, 0x00001000, 0x00000002,
    0x04000000, 0x00800000, 0x00200000, 0x04000000, 0x00000200, 0x00000010,
    0x08000000, 0x00000400, 0x00000020, 0x02000000, 0x00002000, 0x10000000,
    0x00010000, 0x00200000, 0x00800000, 0x80000000, 0x08000000, 0x00800002,
    0x00002000, 0x00080000, 0x00000200};
    }

    const static UnicodeSet si_Set{const_cast<UnicodeSet::run_t *>(__si_Set_runs), 275, 0, const_cast<UnicodeSet::bitquad_t *>(__si_Set_quads), 159, 0};

    /** Code Point Ranges for hou
    [3583, 3583], [3927, 3927], [3b0b, 3b0b], [3c2f, 3c2f], [3c3b, 3c3b],
    [3e38, 3e38], [4089, 4089], [45d4, 45d4], [4648, 4648], [4780, 4780],
    [47a7, 47a7], [4ab7, 4ab7], [4adb, 4adb], [4faf, 4faf], [5019, 5019],
    [539a, 539a], [540e, 540e], [543c, 543d], [5474, 5474], [5589, 5589],
    [5795, 5795], [5820, 5820], [5e3f, 5e3f], [5f8c, 5f8c], [6d09, 6d09],
    [72bc, 72bc], [7334, 7334], [760a, 760a], [777a, 777a], [7bcc, 7bcc],
    [7ff5, 7ff5], [8144, 8144], [8454, 8454], [8a6c, 8a6c], [8c5e, 8c5e],
    [9005, 9005], [90c8, 90c8], [9107, 9107], [9297, 9297], [936d, 936d],
    [9931, 9931], [9aba, 9aba], [9b9c, 9b9c], [9bf8, 9bf8], [9c5f, 9c5f],
    [9f41, 9f41], [20bdc, 20bdc], [20d23, 20d23], [20dcb, 20dcb],
    [217a5, 217a5], [217d1, 217d1], [21e75, 21e75], [22734, 22734],
    [23539, 23539], [238e0, 238e1], [2463d, 2463d], [2467d, 2467d],
    [25003, 25003], [25160, 25160], [25211, 25211], [256a6, 256a6],
    [26375, 26375], [2645a, 2645a], [266a5, 266a5], [26788, 26788],
    [26795, 26795], [271f9, 271f9], [2767a, 2767a], [27a68, 27a68],
    [27bb6, 27bb6], [27eff, 27eff], [27f35, 27f35], [28499, 28499],
    [290fa, 290fa], [2912c, 2912c], [2960b, 2960b], [29661, 29661],
    [2a0f6, 2a0f6], [2a117, 2a117], [2a17a, 2a17a], [2a1c2, 2a1c2],
    [2a47b, 2a47b]**/


    namespace {
    const static UnicodeSet::run_t __hou_Set_runs[] = {
    {Empty, 428}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 23}, {Mixed, 2},
    {Empty, 38}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 107},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 2915}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 78}, {Mixed, 2}, {Empty, 52},
    {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 111}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 105}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 101},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 82}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 98}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 83}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 29404}};
    const static UnicodeSet::bitquad_t  __hou_Set_quads[] = {
    0x00000008, 0x00000080, 0x00000800, 0x08008000, 0x01000000, 0x00000200,
    0x00100000, 0x00000100, 0x00000001, 0x00000080, 0x00800000, 0x08000000,
    0x00008000, 0x02000000, 0x04000000, 0x00004000, 0x30000000, 0x00100000,
    0x00000200, 0x00200000, 0x00000001, 0x80000000, 0x00001000, 0x00000200,
    0x10000000, 0x00100000, 0x00000400, 0x04000000, 0x00001000, 0x00200000,
    0x00000010, 0x00100000, 0x00001000, 0x40000000, 0x00000020, 0x00000100,
    0x00000080, 0x00800000, 0x00002000, 0x00020000, 0x04000000, 0x10000000,
    0x01000000, 0x80000000, 0x00000002, 0x10000000, 0x00000008, 0x00000800,
    0x00000020, 0x00020000, 0x00200000, 0x00100000, 0x02000000, 0x00000003,
    0x20000000, 0x20000000, 0x00000008, 0x00000001, 0x00020000, 0x00000040,
    0x00200000, 0x04000000, 0x00000020, 0x00200100, 0x02000000, 0x04000000,
    0x00000100, 0x00400000, 0x80000000, 0x00200000, 0x02000000, 0x04000000,
    0x00001000, 0x00000800, 0x00000002, 0x00400000, 0x00800000, 0x04000000,
    0x00000004, 0x08000000};
    }

    const static UnicodeSet hou_Set{const_cast<UnicodeSet::run_t *>(__hou_Set_runs), 151, 0, const_cast<UnicodeSet::bitquad_t *>(__hou_Set_quads), 80, 0};

    /** Code Point Ranges for qu
    [3586, 3586], [3617, 3617], [3718, 3718], [3739, 3739], [380a, 380a],
    [38c4, 38c4], [39c1, 39c1], [3a74, 3a74], [3ae2, 3ae2], [3b55, 3b55],
    [3beb, 3beb], [3c26, 3c26], [3c92, 3c92], [3e16, 3e16], [3ec3, 3ec3],
    [3f5b, 3f5b], [3f80, 3f80], [4082, 4082], [41bd, 41bd], [420c, 420c],
    [44a7, 44a7], [44bc, 44bc], [44da, 44db], [456e, 456e], [45a6, 45a6],
    [45c7, 45c7], [4763, 4763], [47a4, 47a4], [47ca, 47ca], [4810, 4810],
    [4897, 4897], [48b9, 48b9], [49e2, 49e2], [4d76, 4d76], [4f39, 4f39],
    [4f49, 4f49], [4f62, 4f62], [521e, 521e], [52ac, 52ac], [5324, 5324],
    [5340, 5340], [53bb, 53bb], [53d6, 53d6], [53e5, 53e5], [547f, 547f],
    [5765, 5765], [5a36, 5a36], [5c48, 5c48], [5ca8, 5ca8], [5cb4, 5cb4],
    [5d87, 5d87], [5de8, 5de8], [5f06, 5f06], [5fc2, 5fc2], [601a, 601a],
    [6188, 6188], [620c, 620c], [6235, 6235], [62be, 62be], [657a, 657a],
    [65aa, 65aa], [66f2, 66f2], [6710, 6710], [67b8, 67b8], [6b0b, 6b0b],
    [6b2a, 6b2a], [6bc6, 6bc6], [6c0d, 6c0d], [6d40, 6d40], [6ded, 6ded],
    [6e20, 6e20], [7048, 7048], [710c, 710c], [7496, 7496], [74a9, 74a9],
    [766f, 766f], [77bf, 77bf], [78f2, 78f2], [795b, 795b], [7ad8, 7ad8],
    [7aec, 7aec], [7b41, 7b41], [7c67, 7c67], [7d36, 7d36], [7d44, 7d44],
    [7d47, 7d47], [7ff5, 7ff5], [801d, 801d], [80e0, 80e0], [8125, 8125],
    [81de, 81de], [82e3, 82e3], [83c3, 83c3], [844b, 844b], [8556, 8556],
    [8627, 8627], [86bc, 86bc], [86c6, 86c6], [86d0, 86d0], [8721, 8721],
    [877a, 877a], [87b6, 87b6], [87dd, 87dd], [8837, 8837], [883c, 883c],
    [8862, 8862], [88aa, 88aa], [89b0, 89b0], [89b7, 89b7], [8a53, 8a53],
    [8a58, 8a58], [8a87, 8a87], [8ab3, 8ab3], [8d8d, 8d8d], [8d9c, 8d9c],
    [8da3, 8da3], [8da8, 8da8], [8dd4, 8dd4], [8dd9, 8dd9], [8dfc, 8dfc],
    [8ea3, 8ea3], [8ec0, 8ec0], [8ee5, 8ee5], [907d, 907d], [9264, 9264],
    [943b, 943b], [947a, 947a], [95c3, 95c3], [9639, 9639], [97a0, 97a0],
    [97ab, 97ab], [9a36, 9a36], [9a45, 9a45], [9af7, 9af7], [9b7c, 9b7c],
    [9b88, 9b88], [9c38, 9c38], [9c4b, 9c4b], [9d1d, 9d1d], [9d8c, 9d8c],
    [9eae, 9eaf], [9eb4, 9eb4], [9ee2, 9ee2], [9f01, 9f01], [9f29, 9f29],
    [9f72, 9f72], [201ef, 201ef], [20372, 20372], [203db, 203db],
    [208ea, 208ea], [217e5, 217e5], [21865, 21865], [21c45, 21c45],
    [21c7a, 21c7a], [21cb0, 21cb0], [21cc6, 21cc6], [22081, 22081],
    [22304, 22304], [22337, 22337], [22396, 22396], [2298c, 2298c],
    [22d2e, 22d2e], [22f30, 22f30], [235aa, 235aa], [23b73, 23b73],
    [23b88, 23b88], [23bf8, 23bf8], [23c0b, 23c0b], [23c20, 23c21],
    [23c3b, 23c3b], [245ac, 245ac], [2464f, 2464f], [24893, 24893],
    [24a0e, 24a0e], [250d4, 250d4], [255eb, 255eb], [259fb, 259fb],
    [25b14, 25b14], [25db6, 25db6], [25eb7, 25eb7], [25f67, 25f67],
    [2613d, 2613d], [2641b, 2641b], [2652c, 2652c], [26559, 26559],
    [265db, 265db], [266d5, 266d5], [266f1, 266f1], [268d2, 268d2],
    [26e36, 26e36], [26f2b, 26f2b], [27112, 27112], [27267, 27267],
    [2729b, 2729b], [27311, 27311], [27405, 27405], [2754e, 2754e],
    [275ea, 275ea], [27754, 27754], [27822, 27822], [27cb5, 27cb5],
    [27ec3, 27ec3], [27fb1, 27fb1], [27fb6, 27fb6], [280d8, 280d8],
    [28105, 28105], [28298, 28298], [283b6, 283b6], [28423, 28423],
    [284ed, 284ed], [28799, 28799], [289f1, 289f1], [28f2b, 28f2b],
    [28f3d, 28f3d], [291d0, 291d0], [2927f, 2927f], [29354, 29354],
    [295b7, 295b7], [298b3, 298b3], [298f9, 298f9], [299d8, 299d8],
    [29a8d, 29a8d], [29d39, 29d39], [29d45, 29d45], [29f69, 29f69],
    [29fdf, 29fdf], [29fe9, 29fe9], [2a00a, 2a00a], [2a056, 2a056],
    [2a10a, 2a10a], [2a182, 2a182], [2a2c4, 2a2c4], [2a306, 2a306],
    [2a32c, 2a32c], [2a378, 2a378], [2a6c3, 2a6c3]**/


    namespace {
    const static UnicodeSet::run_t __qu_Set_runs[] = {
    {Empty, 428}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 20}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 13}, {Mixed, 3},
    {Empty, 20}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 2}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 26}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 27}, {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 20}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 22}, {Mixed, 4}, {Empty, 5},
    {Mixed, 3}, {Empty, 11}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 19}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 4}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 1},
    {Empty, 2835}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 119}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 30}, {Mixed, 2}, {Empty, 1}, {Mixed, 2},
    {Empty, 29}, {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 45},
    {Mixed, 2}, {Empty, 2}, {Mixed, 3}, {Empty, 75}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 7}, {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 10}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 20}, {Mixed, 2},
    {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 1}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 29385}};
    const static UnicodeSet::bitquad_t  __qu_Set_quads[] = {
    0x00000040, 0x00800000, 0x01000000, 0x02000000, 0x00000400, 0x00000010,
    0x00000002, 0x00100000, 0x00000004, 0x00200000, 0x00000800, 0x00000040,
    0x00040000, 0x00400000, 0x00000008, 0x08000000, 0x00000001, 0x00000004,
    0x20000000, 0x00001000, 0x10000080, 0x0c000000, 0x00004000, 0x00000040,
    0x00000080, 0x00000008, 0x00000010, 0x00000400, 0x00010000, 0x00800000,
    0x02000000, 0x00000004, 0x00400000, 0x02000000, 0x00000200, 0x00000004,
    0x40000000, 0x00001000, 0x00000010, 0x00000001, 0x08000000, 0x00400000,
    0x00000020, 0x80000000, 0x00000020, 0x00400000, 0x00000100, 0x00100100,
    0x00000080, 0x00000100, 0x00000040, 0x00000004, 0x04000000, 0x00000100,
    0x00001000, 0x00200000, 0x40000000, 0x04000000, 0x00000400, 0x00040000,
    0x00010000, 0x01000000, 0x00000800, 0x00000400, 0x00000040, 0x00002000,
    0x00000001, 0x00002000, 0x00000001, 0x00000100, 0x00001000, 0x00400000,
    0x00000200, 0x00008000, 0x80000000, 0x00040000, 0x08000000, 0x01000000,
    0x00001000, 0x00000002, 0x00000080, 0x00400000, 0x00000090, 0x00200000,
    0x20000000, 0x00000001, 0x00000020, 0x40000000, 0x00000008, 0x00000008,
    0x00000800, 0x00400000, 0x00000080, 0x10000000, 0x00010040, 0x00000002,
    0x04000000, 0x00400000, 0x20000000, 0x10800000, 0x00000004, 0x00000400,
    0x00810000, 0x01080000, 0x00000080, 0x00080000, 0x10002000, 0x00000108,
    0x02100000, 0x10000000, 0x00000008, 0x00000001, 0x00000020, 0x20000000,
    0x00000010, 0x08000000, 0x04000000, 0x00000008, 0x02000000, 0x00000801,
    0x00400000, 0x00000020, 0x00800000, 0x10000000, 0x00000100, 0x01000000,
    0x00000800, 0x20000000, 0x00001000, 0x0010c000, 0x00000004, 0x00000002,
    0x00000200, 0x00040000, 0x00008000, 0x00040000, 0x08000000, 0x00000400,
    0x00000020, 0x00000020, 0x00000020, 0x04000000, 0x00010000, 0x00000040,
    0x00000002, 0x00000010, 0x00800000, 0x00400000, 0x00001000, 0x00004000,
    0x00010000, 0x00000400, 0x00080000, 0x00000100, 0x01000000, 0x00000800,
    0x08000003, 0x00001000, 0x00008000, 0x00080000, 0x00004000, 0x00100000,
    0x00000800, 0x08000000, 0x00100000, 0x00400000, 0x00800000, 0x00000080,
    0x20000000, 0x08000000, 0x00001000, 0x02000000, 0x08000000, 0x00200000,
    0x00020000, 0x00040000, 0x00400000, 0x00000800, 0x00040000, 0x00000080,
    0x08000000, 0x00020000, 0x00000020, 0x00004000, 0x00000400, 0x00100000,
    0x00000004, 0x00200000, 0x00000008, 0x00420000, 0x01000000, 0x00000020,
    0x01000000, 0x00400000, 0x00000008, 0x00002000, 0x02000000, 0x00020000,
    0x20000800, 0x00010000, 0x80000000, 0x00100000, 0x00800000, 0x00080000,
    0x02000000, 0x01000000, 0x00002000, 0x02000000, 0x00000020, 0x00000200,
    0x80000000, 0x00000200, 0x00000400, 0x00400000, 0x00000400, 0x00000004,
    0x00000010, 0x00000040, 0x00001000, 0x01000000, 0x00000008};
    }

    const static UnicodeSet qu_Set{const_cast<UnicodeSet::run_t *>(__qu_Set_runs), 357, 0, const_cast<UnicodeSet::bitquad_t *>(__qu_Set_quads), 221, 0};

    /** Code Point Ranges for er
    [3587, 3587], [36c5, 36c5], [39eb, 39eb], [42d9, 42d9], [42e9, 42e9],
    [439f, 43a0], [43b6, 43b6], [43ea, 43ea], [48f5, 48f5], [4b98, 4b98],
    [4e8c, 4e8c], [4f74, 4f74], [4f95, 4f95], [513f, 513f], [5152, 5152],
    [5235, 5235], [54a1, 54a1], [5532, 5532], [5b2d, 5b2d], [5ccf, 5ccf],
    [6752, 6752], [682d, 682e], [6a32, 6a32], [6be6, 6be6], [6d0f, 6d0f],
    [6d31, 6d31], [6fe1, 6fe1], [723e, 723e], [73e5, 73e5], [800c, 800c],
    [800f, 800f], [8033, 8033], [804f, 804f], [80f9, 80f9], [815d, 815d],
    [81d1, 81d1], [834b, 834b], [85be, 85be], [8848, 8848], [88bb, 88bb],
    [8a80, 8a80], [8cb3, 8cb3], [8f00, 8f00], [8f2d, 8f2d], [9087, 9087],
    [927a, 927a], [9651, 9651], [967e, 967e], [990c, 990c], [99ec, 99ec],
    [9af5, 9af6], [9b9e, 9b9e], [9d2f, 9d2f], [206a7, 206a7],
    [21995, 21995], [2202a, 2202a], [2213d, 2213d], [239f9, 239f9],
    [23a5a, 23a5a], [24f53, 24f53], [25161, 25161], [264d3, 264d4],
    [265a2, 265a2], [265fc, 265fc], [27323, 27323], [296aa, 296aa],
    [29916, 29916], [29c34, 29c34], [29c4a, 29c4a], [29c53, 29c53],
    [2a430, 2a430], [2a554, 2a554], [2a568, 2a568]**/


    namespace {
    const static UnicodeSet::run_t __er_Set_runs[] = {
    {Empty, 428}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 70}, {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 12},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 83}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 8}, {Mixed, 2},
    {Empty, 21}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 96}, {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 18}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 30}, {Mixed, 2}, {Empty, 20}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2891}, {Mixed, 1}, {Empty, 150},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 197}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 167},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 154}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 105},
    {Mixed, 1}, {Empty, 283}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 24}, {Mixed, 2}, {Empty, 62}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 29396}};
    const static UnicodeSet::bitquad_t  __er_Set_quads[] = {
    0x00000080, 0x00000020, 0x00000800, 0x02000000, 0x00000200, 0x80000000,
    0x00400001, 0x00000400, 0x00200000, 0x01000000, 0x00001000, 0x00100000,
    0x00200000, 0x80000000, 0x00040000, 0x00200000, 0x00000002, 0x00040000,
    0x00002000, 0x00008000, 0x00040000, 0x00006000, 0x00040000, 0x00000040,
    0x00008000, 0x00020000, 0x00000002, 0x40000000, 0x00000020, 0x00009000,
    0x00080000, 0x00008000, 0x02000000, 0x20000000, 0x00020000, 0x00000800,
    0x40000000, 0x00000100, 0x08000000, 0x00000001, 0x00080000, 0x00000001,
    0x00002000, 0x00000080, 0x04000000, 0x00020000, 0x40000000, 0x00001000,
    0x00001000, 0x00600000, 0x40000000, 0x00008000, 0x00000080, 0x00200000,
    0x00000400, 0x20000000, 0x02000000, 0x04000000, 0x00080000, 0x00000002,
    0x00180000, 0x00000004, 0x10000000, 0x00000008, 0x00000400, 0x00400000,
    0x00100000, 0x00080400, 0x00010000, 0x00100000, 0x00000100};
    }

    const static UnicodeSet er_Set{const_cast<UnicodeSet::run_t *>(__er_Set_runs), 121, 0, const_cast<UnicodeSet::bitquad_t *>(__er_Set_quads), 71, 0};

    /** Code Point Ranges for nie
    [358f, 358f], [3595, 3595], [361d, 361d], [3628, 3628], [363f, 363f],
    [365e, 365e], [3694, 3694], [3a76, 3a76], [3d2a, 3d2a], [3e0e, 3e0e],
    [40bc, 40bc], [41e3, 41e3], [431c, 431c], [4330, 4330], [4706, 4706],
    [487e, 487e], [4b43, 4b43], [4bf5, 4bf5], [4cd6, 4cd6], [4e5c, 4e5c],
    [502a, 502a], [54ea, 54ea], [55a6, 55a6], [5699, 5699], [56c1, 56c1],
    [56d0, 56d0], [56d3, 56d3], [56e1, 56e1], [57dd, 57dd], [5b7d, 5b7d],
    [5cca, 5cca], [5d52, 5d52], [5d72, 5d72], [5dad, 5dad], [5e78, 5e78],
    [60d7, 60d7], [634f, 634f], [637b, 637b], [639c, 639c], [6470, 6470],
    [651d, 651d], [655c, 655c], [67bf, 67bf], [68ff, 68ff], [69f7, 69f7],
    [6af1, 6af1], [6ce5, 6ce5], [6d85, 6d85], [75c6, 75c6], [7bde, 7bde],
    [7c4b, 7c4b], [7cf1, 7cf1], [8076, 8076], [81ec, 81ec], [81f2, 81f2],
    [82f6, 82f6], [83cd, 83cd], [8616, 8616], [8825, 8825], [8939, 8939],
    [8ad7, 8ad7], [8b98, 8b98], [8e02, 8e02], [8e17, 8e17], [8ea1, 8ea1],
    [9268, 9269], [92b8, 92b8], [92f7, 92f7], [931c, 931c], [93b3, 93b3],
    [9448, 9448], [9477, 9477], [9480, 9480], [95d1, 95d1], [9689, 9689],
    [9873, 9873], [9f67, 9f67], [2020a, 2020a], [20dbf, 20dbf],
    [211a3, 211a3], [211c4, 211c4], [21364, 21364], [21c06, 21c06],
    [21d0e, 21d0e], [21dab, 21dab], [21e23, 21e23], [21fa6, 21fa6],
    [21fb2, 21fb2], [21fd6, 21fd7], [22238, 22238], [22afb, 22afb],
    [22b34, 22b34], [23033, 23033], [2330d, 2330d], [23657, 23657],
    [23bed, 23bed], [23c3c, 23c3c], [24b42, 24b42], [24d18, 24d18],
    [24d9a, 24d9a], [24dc8, 24dc8], [24e0f, 24e0f], [24e90, 24e90],
    [25504, 25504], [25b2c, 25b2c], [25b59, 25b59], [25ba4, 25ba4],
    [2610c, 2610c], [26612, 26612], [266e0, 266e0], [26786, 26786],
    [26843, 26843], [268c0, 268c0], [26bd6, 26bd6], [26d50, 26d50],
    [27048, 27048], [272d6, 272d6], [2778d, 2778d], [27efc, 27efc],
    [2829e, 2829e], [28653, 28653], [28c7a, 28c7a], [28c80, 28c80],
    [28da0, 28da0], [28ec4, 28ec4], [292cf, 292cf], [2942d, 2942d],
    [29495, 29495], [29581, 29581], [298d8, 298d8], [2a30a, 2a30a],
    [2a33f, 2a33f], [2a383, 2a383], [2a385, 2a385], [2a60e, 2a60e]**/


    namespace {
    const static UnicodeSet::run_t __nie_Set_runs[] = {
    {Empty, 428}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 8}, {Mixed, 2}, {Empty, 30}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 19},
    {Mixed, 3}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 47}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 9}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 55}, {Mixed, 1},
    {Empty, 2836}, {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 31},
    {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 68}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 11}, {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 69},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 120}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 48}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 58},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 48}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 81}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 29391}};
    const static UnicodeSet::bitquad_t  __nie_Set_quads[] = {
    0x00208000, 0x20000000, 0x80000100, 0x40000000, 0x00100000, 0x00400000,
    0x00000400, 0x00004000, 0x10000000, 0x00000008, 0x10000000, 0x00010000,
    0x00000040, 0x40000000, 0x00000008, 0x00200000, 0x00400000, 0x10000000,
    0x00000400, 0x00000400, 0x00000040, 0x02000000, 0x00090002, 0x00000002,
    0x20000000, 0x20000000, 0x00000400, 0x00040000, 0x00040000, 0x00002000,
    0x01000000, 0x00800000, 0x00008000, 0x08000000, 0x10000000, 0x00010000,
    0x20000000, 0x10000000, 0x80000000, 0x80000000, 0x00800000, 0x00020000,
    0x00000020, 0x00000020, 0x00000040, 0x40000000, 0x00000800, 0x00020000,
    0x00400000, 0x00041000, 0x00400000, 0x00002000, 0x00400000, 0x00000020,
    0x02000000, 0x00800000, 0x01000000, 0x00800004, 0x00000002, 0x00000300,
    0x01000000, 0x00800000, 0x10000000, 0x00080000, 0x00000100, 0x00800000,
    0x00000001, 0x00020000, 0x00000200, 0x00080000, 0x00000080, 0x00000400,
    0x80000000, 0x00000008, 0x00000010, 0x00000010, 0x00000040, 0x00004000,
    0x00000800, 0x00000008, 0x00040040, 0x00c00000, 0x01000000, 0x08000000,
    0x00100000, 0x00080000, 0x00002000, 0x00800000, 0x00002000, 0x10000000,
    0x00000004, 0x01000000, 0x04000000, 0x00000100, 0x00008000, 0x00010000,
    0x00000010, 0x00001000, 0x02000000, 0x00000010, 0x00001000, 0x00040000,
    0x00000001, 0x00000040, 0x00000008, 0x00000001, 0x00400000, 0x00010000,
    0x00000100, 0x00400000, 0x00002000, 0x10000000, 0x40000000, 0x00080000,
    0x04000000, 0x00000001, 0x00000001, 0x00000010, 0x00008000, 0x00002000,
    0x00200000, 0x00000002, 0x01000000, 0x00000400, 0x80000000, 0x00000028,
    0x00004000};
    }

    const static UnicodeSet nie_Set{const_cast<UnicodeSet::run_t *>(__nie_Set_runs), 225, 0, const_cast<UnicodeSet::bitquad_t *>(__nie_Set_quads), 127, 0};

    /** Code Point Ranges for tun
    [3594, 3594], [39f7, 39f7], [3b3f, 3b3f], [3f0a, 3f0a], [402b, 402b],
    [541e, 541e], [5428, 5428], [5434, 5434], [554d, 554d], [564b, 564b],
    [56e4, 56e4], [5749, 5749], [5c6f, 5c6f], [5e89, 5e89], [5ff3, 5ff3],
    [619e, 619e], [6566, 6566], [65fd, 65fd], [66be, 66be], [6c3d, 6c3d],
    [6c6d, 6c6d], [6c8c, 6c8c], [6d92, 6d92], [7096, 7096], [711e, 711e],
    [71c9, 71c9], [757d, 757d], [7a80, 7a80], [7d14, 7d14], [80ab, 80ab],
    [81af, 81af], [81c0, 81c0], [829a, 829a], [8733, 8733], [892a, 892a],
    [8c58, 8c58], [8c5a, 8c5a], [8ed8, 8ed8], [9010, 9010], [932a, 932a],
    [9715, 9715], [98e9, 98e9], [9b68, 9b68], [9ed7, 9ed7], [20b7f, 20b7f],
    [21252, 21252], [2278b, 2278b], [2297d, 2297d], [232c4, 232c4],
    [23d5e, 23d5e], [24d95, 24d95], [25d2b, 25d2b], [25e35, 25e35],
    [26353, 26353], [2672f, 2672f], [26734, 26734], [267d3, 267d3],
    [267d9, 267d9], [27452, 27452], [27c2d, 27c2d], [28047, 28047],
    [28521, 28521], [28672, 28672], [289d0, 289d0], [28cd8, 28cd8],
    [28e59, 28e59], [29084, 29084], [295a4, 295a4], [29df5, 29df5],
    [2a30b, 2a30b], [2a3b4, 2a3b4], [2a3b6, 2a3b6], [2a3c6, 2a3c6],
    [2a452, 2a452]**/


    namespace {
    const static UnicodeSet::run_t __tun_Set_runs[] = {
    {Empty, 428}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 158}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 2916},
    {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 169}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 83},
    {Mixed, 1}, {Empty, 129}, {Mixed, 1}, {Empty, 124}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 99}, {Mixed, 1},
    {Empty, 62}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 65}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 29405}};
    const static UnicodeSet::bitquad_t  __tun_Set_quads[] = {
    0x00100000, 0x00800000, 0x80000000, 0x00000400, 0x00000800, 0x40000000,
    0x00100100, 0x00002000, 0x00000800, 0x00000010, 0x00000200, 0x00008000,
    0x00000200, 0x00080000, 0x40000000, 0x00000040, 0x20000000, 0x40000000,
    0x20000000, 0x00002000, 0x00001000, 0x00040000, 0x00400000, 0x40000000,
    0x00000200, 0x20000000, 0x00000001, 0x00100000, 0x00000800, 0x00008000,
    0x00000001, 0x04000000, 0x00080000, 0x00000400, 0x05000000, 0x01000000,
    0x00010000, 0x00000400, 0x00200000, 0x00000200, 0x00000100, 0x00800000,
    0x80000000, 0x00040000, 0x00000800, 0x20000000, 0x00000010, 0x40000000,
    0x00200000, 0x00000800, 0x00200000, 0x00080000, 0x00108000, 0x02080000,
    0x00040000, 0x00002000, 0x00000080, 0x00000002, 0x00040000, 0x00010000,
    0x01000000, 0x02000000, 0x00000010, 0x00000010, 0x00200000, 0x00000800,
    0x00500000, 0x00000040, 0x00040000};
    }

    const static UnicodeSet tun_Set{const_cast<UnicodeSet::run_t *>(__tun_Set_runs), 131, 0, const_cast<UnicodeSet::bitquad_t *>(__tun_Set_quads), 69, 0};

    /** Code Point Ranges for shou
    [359f, 359f], [3945, 3945], [39c3, 39c3], [46f5, 46f5], [4b6d, 4b6d],
    [53d7, 53d7], [552e, 552e], [563c, 563c], [58fd, 58fd], [5b88, 5b88],
    [624b, 624b], [6388, 6388], [63b1, 63b1], [6536, 6536], [654a, 654a],
    [6dad, 6dad], [6fe4, 6fe4], [719f, 719f], [72e9, 72e9], [7378, 7378],
    [7626, 7626], [7dac, 7dac], [824f, 824f], [91bb, 91bb], [93c9, 93c9],
    [9996, 9996], [20205, 20205], [20c54, 20c54], [20dc3, 20dc3],
    [20dce, 20dce], [219d5, 219d5], [21b33, 21b33], [21b6e, 21b6e],
    [234bb, 234bb], [24658, 24658], [24694, 24694], [24c5c, 24c5c],
    [2516a, 2516a], [25177, 25177], [25670, 25670], [25a1d, 25a1d],
    [25fb9, 25fb9], [268fb, 268fb], [27219, 27219], [27305, 27305],
    [276af, 276af], [27703, 27703], [27919, 27919], [27bfc, 27bfc],
    [27d43, 27d43], [286f6, 286f6], [287aa, 287aa], [29826, 29826],
    [29836, 29836], [29d0d, 29d0d], [2a200, 2a200]**/


    namespace {
    const static UnicodeSet::run_t __shou_Set_runs[] = {
    {Empty, 428}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 104}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 66}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 11},
    {Mixed, 2}, {Empty, 66}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 59}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 122}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 2883}, {Mixed, 1},
    {Empty, 81}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 95},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 201}, {Mixed, 1}, {Empty, 140}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 72}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 131}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 29423}};
    const static UnicodeSet::bitquad_t  __shou_Set_quads[] = {
    0x80000000, 0x00000020, 0x00000008, 0x00200000, 0x00002000, 0x00800000,
    0x00004000, 0x10000000, 0x20000000, 0x00000100, 0x00000800, 0x00000100,
    0x00020000, 0x00400000, 0x00000400, 0x00002000, 0x00000010, 0x80000000,
    0x00000200, 0x01000000, 0x00000040, 0x00001000, 0x00008000, 0x08000000,
    0x00000200, 0x00400000, 0x00000020, 0x00100000, 0x00004008, 0x00200000,
    0x00080000, 0x00004000, 0x08000000, 0x01000000, 0x00100000, 0x10000000,
    0x00800400, 0x00010000, 0x20000000, 0x02000000, 0x08000000, 0x02000000,
    0x00000020, 0x00008000, 0x00000008, 0x02000000, 0x10000000, 0x00000008,
    0x00400000, 0x00000400, 0x00400040, 0x00002000, 0x00000001};
    }

    const static UnicodeSet shou_Set{const_cast<UnicodeSet::run_t *>(__shou_Set_runs), 103, 0, const_cast<UnicodeSet::bitquad_t *>(__shou_Set_quads), 53, 0};

    /** Code Point Ranges for ye
    [35a1, 35a1], [35b6, 35b6], [35bf, 35bf], [35fc, 35fc], [3707, 3707],
    [384b, 384b], [39c9, 39c9], [3a91, 3a91], [3c4c, 3c4c], [3e23, 3e23],
    [4046, 4046], [4156, 4156], [41e9, 41e9], [420e, 420e], [42a6, 42a6],
    [42f5, 42f5], [43a8, 43a8], [44c9, 44c9], [4511, 4511], [487e, 487e],
    [48a1, 48a1], [4933, 4933], [4936, 4936], [495f, 495f], [49e8, 49e8],
    [4b47, 4b47], [4b4e, 4b4e], [4b9c, 4b9c], [4c52, 4c52], [4c9c, 4c9c],
    [4e5f, 4e5f], [503b, 503b], [505e, 505e], [50f7, 50f7], [51b6, 51b6],
    [53f6, 53f6], [5414, 5414], [54bd, 54bd], [5558, 5558], [559d, 559d],
    [5622, 5622], [564e, 564e], [5688, 5688], [57dc, 57dc], [5828, 5828],
    [5885, 5885], [58b7, 58b7], [591c, 591c], [5c04, 5c04], [5ceb, 5ceb],
    [5daa, 5daa], [61d5, 61d5], [62b4, 62b4], [62fd, 62fd], [6353, 6353],
    [6396, 6396], [63de, 63de], [63f2, 63f2], [63f6, 63f6], [64d6, 64d6],
    [64db, 64db], [64e8, 64e8], [64ea, 64ea], [659c, 659c], [668d, 668d],
    [66c4, 66c4], [66f3, 66f3], [6792, 6792], [67bc, 67bc], [6930, 6930],
    [696a, 696a], [696d, 696d], [6b4b, 6b4b], [6b95, 6b95], [6b97, 6b97],
    [6d07, 6d07], [6d82, 6d82], [6db2, 6db2], [6f1c, 6f1c], [6f71, 6f71],
    [6fb2, 6fb2], [7106, 7106], [7160, 7160], [7180, 7180], [71c1, 71c1],
    [7217, 7217], [723a, 723a], [74db, 74db], [75f7, 75f7], [76a3, 76a3],
    [77b1, 77b1], [77b8, 77b8], [790f, 790f], [7aab, 7aab], [7de4, 7de4],
    [8036, 8036], [8076, 8076], [814b, 814b], [837c, 837c], [8449, 8449],
    [8675, 8675], [882e, 882e], [8831, 8831], [8b01, 8b01], [90aa, 90aa],
    [90ba, 90ba], [9113, 9113], [9134, 9134], [91ce, 91ce], [91f6, 91f6],
    [91fe, 91fe], [92e3, 92e3], [9371, 9371], [9381, 9381], [9391, 9391],
    [9768, 9768], [9801, 9801], [9918, 9918], [9923, 9923], [9941, 9941],
    [9950, 9950], [9a5c, 9a5c], [9d7a, 9d7a], [9e08, 9e08], [9ee6, 9ee6],
    [20038, 20038], [20105, 20105], [207ea, 207ea], [20947, 20947],
    [20c5d, 20c5d], [2103d, 2103d], [21041, 21041], [21440, 21440],
    [216cc, 216cc], [216fd, 216fd], [21f63, 21f63], [22018, 22018],
    [22265, 22265], [2289c, 2289c], [22aa7, 22aa7], [22c74, 22c74],
    [230f3, 230f3], [233a9, 233a9], [23402, 23402], [2368b, 2368b],
    [23695, 23695], [23a6b, 23a6b], [23a6f, 23a6f], [23c1b, 23c1b],
    [24477, 24477], [24747, 24747], [24749, 24749], [24771, 24771],
    [24cea, 24cea], [2502c, 2502c], [25305, 25305], [2580d, 2580d],
    [25ba7, 25ba7], [25bd8, 25bd8], [26015, 26015], [260a1, 260a1],
    [26546, 26546], [2681c, 2681c], [2692a, 2692a], [26c33, 26c33],
    [27304, 27304], [273ad, 273ad], [273fd, 273fd], [27413, 27413],
    [27490, 27490], [27526, 27526], [275d6, 275d6], [28092, 28092],
    [2823a, 2823a], [28245, 28245], [28dae, 28dae], [28f25, 28f25],
    [28f40, 28f40], [29242, 29242], [29431, 29431], [29443, 29443],
    [2960f, 2960f], [2973a, 2973a], [29c5d, 29c5d], [29e3e, 29e3e],
    [29f0b, 29f0b], [29f34, 29f34], [2a2eb, 2a2eb], [2a345, 2a345],
    [2a466, 2a466], [2a4b2, 2a4b2]**/


    namespace {
    const static UnicodeSet::run_t __ye_Set_runs[] = {
    {Empty, 429}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 14},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 17},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 6}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 20}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 30}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 3}, {Empty, 7}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2825}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 30}, {Mixed, 2}, {Empty, 31}, {Mixed, 1}, {Empty, 19},
    {Mixed, 2}, {Empty, 67}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 66}, {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 43},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 28}, {Mixed, 2}, {Empty, 33},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 85}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 90}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 23},
    {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 13}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 29}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 29402}};
    const static UnicodeSet::bitquad_t  __ye_Set_quads[] = {
    0x80400002, 0x10000000, 0x00000080, 0x00000800, 0x00000200, 0x00020000,
    0x00001000, 0x00000008, 0x00000040, 0x00400000, 0x00000200, 0x00004000,
    0x00000040, 0x00200000, 0x00000100, 0x00000200, 0x00020000, 0x40000000,
    0x00000002, 0x00480000, 0x80000000, 0x00000100, 0x00004080, 0x10000000,
    0x00040000, 0x10000000, 0x80000000, 0x08000000, 0x40000000, 0x00800000,
    0x00400000, 0x00400000, 0x00100000, 0x20000000, 0x01000000, 0x20000000,
    0x00000004, 0x00004000, 0x00000100, 0x10000000, 0x00000100, 0x00000020,
    0x00800000, 0x10000000, 0x00000010, 0x00000800, 0x00000400, 0x00200000,
    0x00100000, 0x20000000, 0x00080000, 0x00400000, 0x40000000, 0x00440000,
    0x08400000, 0x00000500, 0x10000000, 0x00002000, 0x00000010, 0x00080000,
    0x00040000, 0x10000000, 0x00010000, 0x00002400, 0x00000800, 0x00a00000,
    0x00000080, 0x00000004, 0x00040000, 0x10000000, 0x00020000, 0x00040000,
    0x00000040, 0x00000001, 0x00000001, 0x00000002, 0x00800000, 0x04000000,
    0x08000000, 0x00800000, 0x00000008, 0x01020000, 0x00008000, 0x00000800,
    0x00000010, 0x00400000, 0x00400000, 0x00000800, 0x10000000, 0x00000200,
    0x00200000, 0x00024000, 0x00000002, 0x04000400, 0x00080000, 0x00100000,
    0x00004000, 0x40400000, 0x00000008, 0x00020000, 0x00020002, 0x00000100,
    0x00000002, 0x01000000, 0x00000008, 0x00010002, 0x10000000, 0x04000000,
    0x00000100, 0x00000040, 0x01000000, 0x00000020, 0x00000400, 0x00000080,
    0x20000000, 0x20000000, 0x00000002, 0x00000001, 0x00001000, 0x20000000,
    0x00000008, 0x01000000, 0x00000020, 0x10000000, 0x00000080, 0x00100000,
    0x00080000, 0x00000200, 0x00000004, 0x00200800, 0x00008800, 0x08000000,
    0x00800000, 0x00000280, 0x00020000, 0x00000400, 0x00001000, 0x00000020,
    0x00002000, 0x00000080, 0x01000000, 0x00200000, 0x00000002, 0x00000040,
    0x10000000, 0x00000400, 0x00080000, 0x00000010, 0x00002000, 0x20000000,
    0x00080000, 0x00010000, 0x00000040, 0x00400000, 0x00040000, 0x04000000,
    0x00000020, 0x00004000, 0x00000020, 0x00000001, 0x00000004, 0x00020000,
    0x00000008, 0x00008000, 0x04000000, 0x20000000, 0x40000000, 0x00000800,
    0x00100000, 0x00000800, 0x00000020, 0x00000040, 0x00040000};
    }

    const static UnicodeSet ye_Set{const_cast<UnicodeSet::run_t *>(__ye_Set_runs), 293, 0, const_cast<UnicodeSet::bitquad_t *>(__ye_Set_quads), 173, 0};

    /** Code Point Ranges for ju
    [35a9, 35a9], [360c, 360c], [3718, 3718], [3879, 3879], [394c, 394c],
    [3a74, 3a74], [3aba, 3aba], [3b2c, 3b2c], [3b82, 3b82], [3bef, 3bef],
    [3d75, 3d75], [3e7c, 3e7c], [3f64, 3f64], [4020, 4020], [40ca, 40ca],
    [4153, 4153], [4155, 4155], [422e, 422e], [42f0, 42f0], [43a4, 43a4],
    [43f1, 43f1], [456e, 456e], [45c7, 45c7], [46ef, 46ef], [472f, 472f],
    [477b, 477b], [485e, 485e], [48b8, 48b9], [490e, 490e], [4a95, 4a95],
    [4ab6, 4ab6], [4c2c, 4c2c], [4c5f, 4c5f], [4c61, 4c61], [4cd4, 4cd4],
    [4d55, 4d55], [4d99, 4d99], [4da5, 4da5], [4e14, 4e14], [4ec7, 4ec7],
    [4f5d, 4f5d], [4fb7, 4fb7], [4fe5, 4fe5], [4ff1, 4ff1], [5028, 5028],
    [50ea, 50ea], [5177, 5177], [51a3, 51a3], [5287, 5287], [52ee, 52ee],
    [530a, 530a], [53e5, 53e5], [544a, 544a], [5480, 5480], [5765, 5765],
    [57e7, 57e7], [57fe, 57fe], [58c9, 58c9], [59d0, 59d0], [59d6, 59d6],
    [5a35, 5a36], [5a45, 5a45], [5a6e, 5a6e], [5be0, 5be0], [5c40, 5c40],
    [5c45, 5c45], [5c48, 5c48], [5c68, 5c68], [5ca0, 5ca0], [5ca8, 5ca8],
    [5d0c, 5d0c], [5dc8, 5dc8], [5de8, 5de8], [5f06, 5f06], [5fc2, 5fc2],
    [6007, 6007], [6010, 6010], [601a, 601a], [61c5, 61c5], [61fc, 61fc],
    [62d2, 62d2], [62d8, 62d8], [62f1, 62f1], [6336, 6336], [6344, 6344],
    [636e, 636e], [63ac, 63ac], [63c8, 63c8], [63df, 63df], [64da, 64da],
    [661b, 661b], [67b8, 67b8], [67dc, 67dc], [6854, 6854], [68ae, 68ae],
    [6907, 6908], [6910, 6910], [6a58, 6a58], [6a8b, 6a8b], [6af8, 6af8],
    [6b6b, 6b6b], [6bf1, 6bf1], [6cae, 6cae], [6cc3, 6cc3], [6ce6, 6ce6],
    [6d30, 6d30], [6dba, 6dba], [6e20, 6e20], [6e68, 6e68], [6fbd, 6fbd],
    [70ac, 70ac], [7117, 7117], [7123, 7123], [728b, 728b], [7291, 7291],
    [72ca, 72ca], [72d9, 72d9], [73c7, 73c7], [741a, 741a], [75bd, 75bd],
    [75c0, 75c0], [7717, 7717], [77bf, 77bf], [77e9, 77e9], [7820, 7820],
    [79df, 79df], [79ec, 79ec], [7ab6, 7ab6], [7b65, 7b65], [7c0d, 7c0d],
    [7c34, 7c34], [7c67, 7c67], [7c94, 7c94], [7cb7, 7cb7], [7f5d, 7f5d],
    [801f, 801f], [805a, 805a], [8065, 8065], [8152, 8152], [81c4, 81c4],
    [8209, 8209], [824d, 824d], [82e3, 82e3], [82f4, 82f4], [8392, 8392],
    [83ca, 83ca], [83f9, 83f9], [842d, 842d], [849f, 849f], [84a9, 84a9],
    [84fb, 84fb], [851e, 851e], [861c, 861c], [8627, 8627], [8655, 8655],
    [8661, 8661], [86b7, 86b7], [86c6, 86c6], [871b, 871b], [87b6, 87b6],
    [8893, 8893], [88fe, 88fe], [8a4e, 8a4e], [8c66, 8c66], [8c97, 8c97],
    [8d84, 8d84], [8d89, 8d89], [8d9c, 8d9c], [8da1, 8da1], [8db3, 8db3],
    [8dd4, 8dd4], [8dd9, 8dd9], [8ddd, 8ddd], [8dfc, 8dfc], [8e18, 8e18],
    [8e1e, 8e1e], [8e3d, 8e3d], [8e6b, 8e6b], [8e7b, 8e7b], [8e86, 8e86],
    [8eb9, 8eb9], [8eca, 8eca], [8ee5, 8ee5], [8f02, 8f02], [907d, 907d],
    [90ad, 90ad], [90f0, 90f0], [90f9, 90f9], [9112, 9112], [9139, 9139],
    [91b5, 91b5], [9245, 9245], [924f, 924f], [92e4, 92e4], [92e6, 92e6],
    [92f8, 92f8], [943b, 943b], [95b0, 95b0], [9671, 9671], [96ce, 96ce],
    [96db, 96db], [97a0, 97a0], [97ab, 97ab], [98b6, 98b6], [99cf, 99cf],
    [99d2, 99d2], [99f6, 99f6], [9a55, 9a55], [9a67, 9a67], [9b3b, 9b3b],
    [9b88, 9b88], [9b8d, 9b8d], [9b94, 9b94], [9d21, 9d21], [9d59, 9d59],
    [9d74, 9d74], [9d8b, 9d8b], [9f33, 9f33], [9f5f, 9f5f], [20267, 20267],
    [202ec, 202ec], [20646, 20646], [206b5, 206b5], [20739, 20739],
    [207f0, 207f0], [20904, 20904], [20a2d, 20a2d], [20a49, 20a49],
    [20b91, 20b91], [20c3e, 20c3e], [2124e, 2124e], [2148d, 2148d],
    [21556, 21556], [21892, 21892], [21976, 21976], [21a05, 21a05],
    [21a22, 21a22], [21aec, 21aec], [21c7e, 21c7e], [21cd8, 21cd8],
    [21d8b, 21d8b], [21e18, 21e18], [21e28, 21e28], [21ffe, 21ffe],
    [22686, 22686], [2292b, 2292b], [22a41, 22a41], [22bfa, 22bfa],
    [2332c, 2332c], [23347, 23347], [2339b, 2339b], [2340a, 2340a],
    [234cc, 234cc], [235a3, 235a3], [23d9d, 23d9d], [23ed0, 23ed0],
    [244ef, 244ef], [2450b, 2450b], [245b5, 245b5], [24714, 24714],
    [24893, 24893], [24de2, 24de2], [24f33, 24f33], [25083, 25083],
    [25137, 25137], [251db, 251db], [2520b, 2520b], [25241, 25241],
    [25551, 25551], [2562e, 2562e], [258a7, 258a7], [25a8f, 25a8f],
    [25b19, 25b19], [25b97, 25b97], [25bd4, 25bd4], [25c9c, 25c9c],
    [25d27, 25d27], [25d2a, 25d2a], [25dda, 25dda], [26023, 26023],
    [2617d, 2617d], [261d9, 261d9], [26290, 26290], [265fb, 265fb],
    [2666e, 2666e], [266d3, 266d3], [2671b, 2671b], [26787, 26787],
    [267f3, 267f3], [26951, 26951], [26c45, 26c45], [26e96, 26e96],
    [26f08, 26f08], [2709c, 2709c], [2711b, 2711b], [27772, 27772],
    [278d2, 278d2], [278fb, 278fb], [27911, 27911], [27c8b, 27c8b],
    [27d5e, 27d5e], [27dfe, 27dfe], [27e27, 27e27], [27ea4, 27ea4],
    [27eb9, 27eb9], [27ed7, 27ed7], [27f7b, 27f7b], [27fa3, 27fa3],
    [27ffb, 27ffb], [2807a, 2807a], [282d4, 282d4], [282e7, 282e7],
    [2836f, 2836f], [285dd, 285dd], [286ee, 286ee], [2876e, 2876e],
    [289d9, 289d9], [28a20, 28a20], [28e30, 28e30], [29278, 29278],
    [292dc, 292dc], [29354, 29354], [29378, 29378], [296fa, 296fa],
    [29703, 29703], [299d2, 299d2], [29af4, 29af4], [29b1c, 29b1c],
    [29b4a, 29b4a], [29c24, 29c24], [29cf5, 29cf5], [29d18, 29d18],
    [29dd0, 29dd0], [29fdd, 29fdd], [2a00f, 2a00f], [2a023, 2a023],
    [2a065, 2a065], [2a093, 2a093], [2a5d6, 2a5d6]**/


    namespace {
    const static UnicodeSet::run_t __ju_Set_runs[] = {
    {Empty, 429}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 2},
    {Empty, 11}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 11}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 6}, {Mixed, 2},
    {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 3}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 9}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 4}, {Mixed, 2}, {Empty, 1}, {Mixed, 3}, {Empty, 20}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 2},
    {Empty, 7}, {Mixed, 4}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 16}, {Mixed, 2}, {Empty, 7},
    {Mixed, 6}, {Empty, 1}, {Mixed, 6}, {Empty, 10}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12},
    {Mixed, 4}, {Empty, 12}, {Mixed, 2}, {Empty, 2840}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 8}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 13},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 57},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 48}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 10}, {Mixed, 3}, {Empty, 27}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 18}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 27}, {Mixed, 2},
    {Empty, 21}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2},
    {Empty, 41}, {Mixed, 1}, {Empty, 29393}};
    const static UnicodeSet::bitquad_t  __ju_Set_quads[] = {
    0x00000200, 0x00001000, 0x01000000, 0x02000000, 0x00001000, 0x00100000,
    0x04000000, 0x00001000, 0x00000004, 0x00008000, 0x00200000, 0x10000000,
    0x00000010, 0x00000001, 0x00000400, 0x00280000, 0x00004000, 0x00010000,
    0x00000010, 0x00020000, 0x00004000, 0x00000080, 0x00008000, 0x00008000,
    0x08000000, 0x40000000, 0x03000000, 0x00004000, 0x00200000, 0x00400000,
    0x00001000, 0x80000000, 0x00000002, 0x00100000, 0x00200000, 0x02000000,
    0x00000020, 0x00100000, 0x00000080, 0x20000000, 0x00800000, 0x00020020,
    0x00000100, 0x00000400, 0x00800000, 0x00000008, 0x00000080, 0x00004000,
    0x00000400, 0x00000020, 0x00000400, 0x00000001, 0x00000020, 0x40000080,
    0x00000200, 0x00410000, 0x00600000, 0x00000020, 0x00004000, 0x00000001,
    0x00000121, 0x00000100, 0x00000101, 0x00001000, 0x00000100, 0x00000100,
    0x00000040, 0x00000004, 0x04010080, 0x00000020, 0x10000000, 0x01040000,
    0x00020000, 0x00400000, 0x00000010, 0x00004000, 0x00001000, 0x80000100,
    0x04000000, 0x08000000, 0x01000000, 0x10000000, 0x00100000, 0x00004000,
    0x00010180, 0x01000000, 0x00000800, 0x01000000, 0x00000800, 0x00020000,
    0x00004000, 0x00000008, 0x00000040, 0x00010000, 0x04000000, 0x00000001,
    0x00000100, 0x20000000, 0x00001000, 0x00800000, 0x00000008, 0x00020800,
    0x02000400, 0x00000080, 0x04000000, 0x20000000, 0x00000001, 0x00800000,
    0x80000000, 0x00000200, 0x00000001, 0x80000000, 0x00001000, 0x00400000,
    0x00000020, 0x00002000, 0x00100000, 0x00000080, 0x00100000, 0x00800000,
    0x20000000, 0x80000000, 0x04000000, 0x00000020, 0x00040000, 0x00000010,
    0x00000200, 0x00002000, 0x00100008, 0x00040000, 0x00000400, 0x02000000,
    0x00002000, 0x80000000, 0x00000200, 0x08000000, 0x40000000, 0x10000000,
    0x00000080, 0x00200000, 0x00000002, 0x00800000, 0x00000040, 0x08000000,
    0x00400000, 0x00080000, 0x40000000, 0x00004000, 0x00000040, 0x00800000,
    0x10000210, 0x00080002, 0x22100000, 0x10000000, 0x41000000, 0x20000000,
    0x08000800, 0x00000040, 0x02000000, 0x00000400, 0x00000020, 0x00000004,
    0x20000000, 0x00002000, 0x02010000, 0x00040000, 0x02000000, 0x00200000,
    0x00008020, 0x01000050, 0x08000000, 0x00010000, 0x00020000, 0x08004000,
    0x00000801, 0x00400000, 0x00048000, 0x00400000, 0x00200000, 0x00000080,
    0x08000000, 0x00102100, 0x00000002, 0x02000000, 0x00100000, 0x00000800,
    0x00080000, 0x80000000, 0x00000080, 0x00001000, 0x00000040, 0x00200000,
    0x02000000, 0x00010000, 0x00000010, 0x00002000, 0x00000200, 0x00020000,
    0x40000000, 0x00004000, 0x00002000, 0x00400000, 0x00040000, 0x00400000,
    0x00000020, 0x00000004, 0x00001000, 0x40000000, 0x01000000, 0x00000800,
    0x01000000, 0x00000100, 0x40000000, 0x00000040, 0x00000800, 0x00000002,
    0x04000000, 0x00001000, 0x00000080, 0x08000000, 0x00000400, 0x00001000,
    0x00000008, 0x20000000, 0x00010000, 0x00008000, 0x00000800, 0x00200000,
    0x00100000, 0x00080000, 0x00000004, 0x00080000, 0x00000008, 0x00800000,
    0x08000000, 0x00000800, 0x00000002, 0x00020000, 0x00004000, 0x00000080,
    0x00008000, 0x02000000, 0x00800000, 0x00100000, 0x10000000, 0x00000480,
    0x04000000, 0x00000008, 0x20000000, 0x02000000, 0x00010000, 0x08000000,
    0x00004000, 0x00080000, 0x08000000, 0x00000080, 0x00080000, 0x00020000,
    0x00000020, 0x00400000, 0x00000100, 0x10000000, 0x08000000, 0x00040000,
    0x00040000, 0x08000000, 0x00020000, 0x00000800, 0x40000000, 0x40000000,
    0x00000080, 0x02000010, 0x00800000, 0x08000000, 0x00000008, 0x08000000,
    0x04000000, 0x00100000, 0x00000080, 0x00008000, 0x20000000, 0x00004000,
    0x00004000, 0x02000000, 0x00000001, 0x00010000, 0x01000000, 0x10000000,
    0x00100000, 0x01000000, 0x04000000, 0x00000008, 0x00040000, 0x00100000,
    0x10000000, 0x00000400, 0x00000010, 0x00200000, 0x01000000, 0x00010000,
    0x20000000, 0x00008000, 0x00000008, 0x00000020, 0x00080000, 0x00400000};
    }

    const static UnicodeSet ju_Set{const_cast<UnicodeSet::run_t *>(__ju_Set_runs), 483, 0, const_cast<UnicodeSet::bitquad_t *>(__ju_Set_quads), 306, 0};

    /** Code Point Ranges for sou
    [35a9, 35a9], [37ec, 37ec], [422d, 422d], [43c2, 43c2], [4439, 4439],
    [4479, 4479], [45cf, 45cf], [4939, 4939], [4a73, 4a73], [4b12, 4b12],
    [4b9f, 4b9f], [4c78, 4c78], [53df, 53df], [55d6, 55d6], [55fd, 55fe],
    [5ecb, 5ecb], [6352, 6352], [641c, 641c], [6457, 6457], [64a8, 64a8],
    [64fb, 64fb], [6555, 6555], [65cf, 65cf], [68f7, 68f7], [6ae2, 6ae2],
    [6b36, 6b36], [6d91, 6d91], [6eb2, 6eb2], [6f5a, 6f5a], [7340, 7340],
    [7636, 7636], [778d, 778d], [7c54, 7c54], [8258, 8258], [8490, 8490],
    [84c3, 84c3], [85ea, 85ea], [878b, 878b], [8b0f, 8b0f], [910b, 910b],
    [9199, 9199], [93aa, 93aa], [93c9, 93c9], [98bc, 98bc], [98be, 98be],
    [993f, 993f], [9a2a, 9a2a], [202e2, 202e2], [2031e, 2031f],
    [20602, 20602], [2076c, 2076c], [20a87, 20a87], [2183c, 2183c],
    [218c2, 218c2], [22d3c, 22d3c], [23531, 23531], [23bac, 23bac],
    [23bdc, 23bdc], [24547, 24547], [255bb, 255bb], [25bea, 25bea],
    [25c1e, 25c1e], [268a9, 268a9], [26e8c, 26e8c], [27505, 27505],
    [27a6e, 27a6e], [27cf6, 27cf6], [27f2d, 27f2d], [27f4f, 27f4f],
    [2887b, 2887b], [28907, 28907], [28ea6, 28ea6], [295e3, 295e3],
    [29620, 29620], [29b83, 29b83], [29bb6, 29bb6], [29bb8, 29bb8]**/


    namespace {
    const static UnicodeSet::run_t __sou_Set_runs[] = {
    {Empty, 429}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 81},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 15},
    {Mixed, 2}, {Empty, 70}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 47},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16},
    {Mixed, 2}, {Empty, 38}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2885}, {Mixed, 2}, {Empty, 23}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 108},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 162}, {Mixed, 1},
    {Empty, 63}, {Mixed, 1}, {Empty, 51}, {Mixed, 2}, {Empty, 75},
    {Mixed, 1}, {Empty, 130}, {Mixed, 1}, {Empty, 49}, {Mixed, 2},
    {Empty, 100}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 51},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 17}, {Mixed, 2}, {Empty, 72}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 57}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 42}, {Mixed, 2}, {Empty, 29474}};
    const static UnicodeSet::bitquad_t  __sou_Set_quads[] = {
    0x00000200, 0x00001000, 0x00002000, 0x00000004, 0x02000000, 0x02000000,
    0x00008000, 0x02000000, 0x00080000, 0x00040000, 0x80000000, 0x01000000,
    0x80000000, 0x00400000, 0x60000000, 0x00000800, 0x00040000, 0x10000000,
    0x00800000, 0x00000100, 0x08000000, 0x00200000, 0x00008000, 0x00800000,
    0x00000004, 0x00400000, 0x00020000, 0x00040000, 0x04000000, 0x00000001,
    0x00400000, 0x00002000, 0x00100000, 0x01000000, 0x00010000, 0x00000008,
    0x00000400, 0x00000800, 0x00008000, 0x00000800, 0x02000000, 0x00000400,
    0x00000200, 0x50000000, 0x80000000, 0x00000400, 0x00000004, 0xc0000000,
    0x00000004, 0x00001000, 0x00000080, 0x10000000, 0x00000004, 0x10000000,
    0x00020000, 0x00001000, 0x10000000, 0x00000080, 0x08000000, 0x00000400,
    0x40000000, 0x00000200, 0x00001000, 0x00000020, 0x00004000, 0x00400000,
    0x00002000, 0x00008000, 0x08000000, 0x00000080, 0x00000040, 0x00000008,
    0x00000001, 0x00000008, 0x01400000};
    }

    const static UnicodeSet sou_Set{const_cast<UnicodeSet::run_t *>(__sou_Set_runs), 137, 0, const_cast<UnicodeSet::bitquad_t *>(__sou_Set_quads), 75, 0};

    /** Code Point Ranges for ling
    [35ab, 35ab], [3875, 3875], [3944, 3944], [39ad, 39ad], [3aae, 3aae],
    [3c65, 3c65], [3c86, 3c86], [3f89, 3f89], [4125, 4125], [420a, 420a],
    [4241, 4241], [4322, 4322], [4558, 4558], [4585, 4585], [4696, 4696],
    [4b9a, 4b9a], [4bcd, 4bcd], [4c31, 4c31], [4d07, 4d07], [4ee4, 4ee4],
    [4f36, 4f36], [5030, 5030], [51b7, 51b7], [51cc, 51cc], [5222, 5222],
    [53e6, 53e6], [5464, 5464], [56f9, 56f9], [577d, 577d], [590c, 590c],
    [59c8, 59c8], [5a48, 5a48], [5cad, 5cad], [5d1a, 5d1a], [5dba, 5dba],
    [5f7e, 5f7e], [601c, 601c], [62ce, 62ce], [6395, 6395], [6624, 6624],
    [670e, 670e], [67c3, 67c3], [68f1, 68f1], [6afa, 6afa], [6b1e, 6b1e],
    [6ce0, 6ce0], [6de9, 6de9], [6faa, 6faa], [7075, 7075], [70a9, 70a9],
    [7227, 7227], [72d1, 72d1], [73b2, 73b2], [74f4, 74f4], [7831, 7831],
    [78f7, 78f7], [797e, 797e], [79e2, 79e2], [7adb, 7adb], [7b2d, 7b2d],
    [7d37, 7d37], [7dbe, 7dbe], [7f9a, 7f9a], [7fce, 7fce], [8046, 8046],
    [8232, 8232], [82d3, 82d3], [83f1, 83f1], [8576, 8576], [8626, 8626],
    [86c9, 86c9], [8851, 8851], [888a, 888a], [88ec, 88ec], [8a45, 8a45],
    [8dc9, 8dc9], [8ee8, 8ee8], [8f18, 8f18], [9143, 9143], [91bd, 91bd],
    [91d8, 91d8], [9234, 9234], [9302, 9302], [959d, 959d], [963e, 963e],
    [9675, 9675], [96f6, 96f6], [971d, 971d], [9747, 9748], [9818, 9818],
    [99d6, 99d6], [9b7f, 9b7f], [9bea, 9bea], [9d12, 9d12], [9e77, 9e77],
    [9f61, 9f61], [9f97, 9f97], [20116, 20116], [203e1, 203e1],
    [207e8, 207e8], [20822, 20822], [2086d, 2086d], [20c60, 20c60],
    [20ee0, 20ee0], [20ef1, 20ef1], [20fa5, 20fa5], [2120d, 2120d],
    [2156e, 2156e], [21fe1, 21fe1], [22314, 22314], [22501, 22501],
    [22a57, 22a57], [22e5d, 22e5d], [22eb0, 22eb0], [2331f, 2331f],
    [238cb, 238cb], [23b39, 23b39], [240e9, 240e9], [245a6, 245a6],
    [24719, 24719], [248d8, 248d8], [249d8, 249d8], [24a3b, 24a3b],
    [24af2, 24af2], [24dd6, 24dd6], [24fc5, 24fc5], [2533c, 2533c],
    [2591c, 2591c], [2591e, 2591e], [2594b, 2594b], [25a54, 25a54],
    [25d5d, 25d5d], [25e99, 25e99], [25f82, 25f82], [26262, 26262],
    [26293, 26293], [2643d, 2643d], [26ac3, 26ac3], [26aca, 26aca],
    [271ba, 271ba], [27545, 27545], [2759c, 2759c], [277d9, 277d9],
    [27a08, 27a08], [27c3b, 27c3b], [27c62, 27c62], [27c99, 27c99],
    [27f87, 27f87], [27fae, 27fae], [2878e, 2878e], [2880e, 2880e],
    [28f72, 28f72], [29099, 29099], [290de, 290de], [2910a, 2910a],
    [29192, 29192], [2919a, 2919a], [291ae, 291ae], [291bb, 291bc],
    [291c4, 291c4], [291ce, 291ce], [29282, 29282], [2944a, 2944a],
    [2958a, 2958a], [295b5, 295b5], [296b9, 296b9], [29701, 29701],
    [297c3, 297c3], [29aa5, 29aa5], [29b14, 29b14], [29ca9, 29ca9],
    [29d40, 29d40], [2a14b, 2a14b], [2a2f3, 2a2f3], [2a2fe, 2a2fe],
    [2a30f, 2a30f], [2a54c, 2a54c], [2a6c8, 2a6c8]**/


    namespace {
    const static UnicodeSet::run_t __ling_Set_runs[] = {
    {Empty, 429}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13},
    {Mixed, 2}, {Empty, 23}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 14},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 17},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 7}, {Mixed, 2}, {Empty, 2827}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 83}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 22}, {Mixed, 2},
    {Empty, 12}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 23}, {Mixed, 2},
    {Empty, 62}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 58},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 5}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 17},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 29385}};
    const static UnicodeSet::bitquad_t  __ling_Set_quads[] = {
    0x00000800, 0x00200000, 0x00000010, 0x00002000, 0x00004000, 0x00000020,
    0x00000040, 0x00000200, 0x00000020, 0x00000400, 0x00000002, 0x00000004,
    0x01000000, 0x00000020, 0x00400000, 0x04000000, 0x00002000, 0x00020000,
    0x00000080, 0x00000010, 0x00400000, 0x00010000, 0x00800000, 0x00001000,
    0x00000004, 0x00000040, 0x00000010, 0x02000000, 0x20000000, 0x00001000,
    0x00000100, 0x00000100, 0x00002000, 0x04000000, 0x04000000, 0x40000000,
    0x10000000, 0x00004000, 0x00200000, 0x00000010, 0x00004000, 0x00000008,
    0x00020000, 0x04000000, 0x40000000, 0x00000001, 0x00000200, 0x00000400,
    0x00200000, 0x00000200, 0x00000080, 0x00020000, 0x00040000, 0x00100000,
    0x00020000, 0x00800000, 0x40000000, 0x00000004, 0x08000000, 0x00002000,
    0x00800000, 0x40000000, 0x04000000, 0x00004000, 0x00000040, 0x00040000,
    0x00080000, 0x00020000, 0x00400000, 0x00000040, 0x00000200, 0x00020000,
    0x00000400, 0x00001000, 0x00000020, 0x00000200, 0x00000100, 0x01000000,
    0x00000008, 0x20000000, 0x01000000, 0x00100000, 0x00000004, 0x20000000,
    0x40000000, 0x00200000, 0x00400000, 0x20000000, 0x00000180, 0x01000000,
    0x00400000, 0x80000000, 0x00000400, 0x00040000, 0x00800000, 0x00000002,
    0x00800000, 0x00400000, 0x00000002, 0x00000100, 0x00000004, 0x00002000,
    0x00000001, 0x00020001, 0x00000020, 0x00002000, 0x00004000, 0x00000002,
    0x00100000, 0x00000002, 0x00800000, 0x20000000, 0x00010000, 0x80000000,
    0x00000800, 0x02000000, 0x00000200, 0x00000040, 0x02000000, 0x01000000,
    0x01000000, 0x08000000, 0x00040000, 0x00400000, 0x00000020, 0x10000000,
    0x50000000, 0x00000800, 0x00100000, 0x20000000, 0x02000000, 0x00000004,
    0x00000004, 0x00080000, 0x20000000, 0x00000408, 0x04000000, 0x00000020,
    0x10000000, 0x02000000, 0x00000100, 0x08000000, 0x00000004, 0x02000000,
    0x00000080, 0x00004000, 0x00004000, 0x00004000, 0x00040000, 0x02000000,
    0x40000000, 0x00000400, 0x04040000, 0x18004000, 0x00004010, 0x00000004,
    0x00000400, 0x00000400, 0x00200000, 0x02000000, 0x00000002, 0x00000008,
    0x00000020, 0x00100000, 0x00000200, 0x00000001, 0x00000800, 0x40080000,
    0x00008000, 0x00001000, 0x00000100};
    }

    const static UnicodeSet ling_Set{const_cast<UnicodeSet::run_t *>(__ling_Set_runs), 315, 0, const_cast<UnicodeSet::bitquad_t *>(__ling_Set_quads), 171, 0};

    /** Code Point Ranges for lun
    [35ae, 35ae], [3dcd, 3dcd], [4201, 4201], [4473, 4473], [4f96, 4f96],
    [502b, 502b], [5707, 5707], [57e8, 57e8], [5a68, 5a68], [5d18, 5d19],
    [60c0, 60c0], [6384, 6384], [68c6, 68c6], [6dea, 6dea], [6ea3, 6ea3],
    [7754, 7754], [7896, 7896], [7a10, 7a10], [7db8, 7db8], [8023, 8023],
    [8140, 8140], [83d5, 83d5], [8726, 8726], [8ad6, 8ad6], [8e1a, 8e1a],
    [8f2a, 8f2a], [9300, 9300], [966f, 966f], [9be9, 9be9], [20515, 20515],
    [20f29, 20f29], [210dd, 210dd], [24c95, 24c95], [24dd4, 24dd4],
    [25fd1, 25fd1], [264fe, 264fe], [278f5, 278f5], [27c5c, 27c5c]**/


    namespace {
    const static UnicodeSet::run_t __lun_Set_runs[] = {
    {Empty, 429}, {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 88}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 68},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 2888}, {Mixed, 1}, {Empty, 80},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 477}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 143}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 159}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 29725}};
    const static UnicodeSet::bitquad_t  __lun_Set_quads[] = {
    0x00004000, 0x00002000, 0x00000002, 0x00080000, 0x00400000, 0x00000800,
    0x00000080, 0x00000100, 0x00000100, 0x03000000, 0x00000001, 0x00000010,
    0x00000040, 0x00000400, 0x00000008, 0x00100000, 0x00400000, 0x00010000,
    0x01000000, 0x00000008, 0x00000001, 0x00200000, 0x00000040, 0x00400000,
    0x04000000, 0x00000400, 0x00000001, 0x00008000, 0x00000200, 0x00200000,
    0x00000200, 0x20000000, 0x00200000, 0x00100000, 0x00020000, 0x40000000,
    0x00200000, 0x10000000};
    }

    const static UnicodeSet lun_Set{const_cast<UnicodeSet::run_t *>(__lun_Set_runs), 77, 0, const_cast<UnicodeSet::bitquad_t *>(__lun_Set_quads), 38, 0};

    /** Code Point Ranges for nia
    [35b8, 35b8]**/


    namespace {
    const static UnicodeSet::run_t __nia_Set_runs[] = {
    {Empty, 429}, {Mixed, 1}, {Empty, 34386}};
    const static UnicodeSet::bitquad_t  __nia_Set_quads[] = {
    0x01000000};
    }

    const static UnicodeSet nia_Set{const_cast<UnicodeSet::run_t *>(__nia_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__nia_Set_quads), 1, 0};

    /** Code Point Ranges for pen
    [35b9, 35b9], [5429, 5429], [5460, 5460], [55af, 55af], [5674, 5674],
    [6c7e, 6c7e], [6e53, 6e53], [6fc6, 6fc6], [74eb, 74eb], [76c6, 76c6],
    [7ff8, 7ff8], [8450, 8450], [886f, 886f], [20e94, 20e94],
    [20f7e, 20f7e], [21e9c, 21e9c], [29e02, 29e02], [2a0bd, 2a0bd]**/


    namespace {
    const static UnicodeSet::run_t __pen_Set_runs[] = {
    {Empty, 429}, {Mixed, 1}, {Empty, 243}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 175}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 72}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 3120}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 120}, {Mixed, 1}, {Empty, 1019}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 29434}};
    const static UnicodeSet::bitquad_t  __pen_Set_quads[] = {
    0x02000000, 0x00000200, 0x00000001, 0x00008000, 0x00100000, 0x40000000,
    0x00080000, 0x00000040, 0x00000800, 0x00000040, 0x01000000, 0x00010000,
    0x00008000, 0x00100000, 0x40000000, 0x10000000, 0x00000004, 0x20000000};
    }

    const static UnicodeSet pen_Set{const_cast<UnicodeSet::run_t *>(__pen_Set_runs), 37, 0, const_cast<UnicodeSet::bitquad_t *>(__pen_Set_quads), 18, 0};

    /** Code Point Ranges for fen
    [35b9, 35b9], [390b, 390b], [3979, 3979], [3c75, 3c75], [3e2e, 3e2e],
    [3fce, 3fce], [418f, 418f], [4ade, 4ade], [4b7b, 4b7b], [4d05, 4d05],
    [4efd, 4efd], [50e8, 50e8], [5206, 5206], [532a, 532a], [5429, 5429],
    [5674, 5674], [5746, 5746], [574b, 574b], [58b3, 58b3], [594b, 594b],
    [5954, 5954], [596e, 596e], [59a2, 59a2], [5c8e, 5c8e], [5e09, 5e09],
    [5e69, 5e69], [5f05, 5f05], [5fff, 5fff], [610d, 610d], [61a4, 61a4],
    [626e, 626e], [62da, 62da], [6543, 6543], [6610, 6610], [6706, 6706],
    [670c, 670c], [678c, 678c], [68a4, 68a4], [68fb, 68fc], [6a68, 6a68],
    [6c1b, 6c1b], [6c7e, 6c7e], [6fc6, 6fc6], [7035, 7035], [7083, 7083],
    [711a, 711a], [71cc, 71cc], [71d4, 71d4], [7356, 7356], [73a2, 73a2],
    [76fc, 76fc], [780f, 780f], [79ce, 79ce], [7c89, 7c89], [7cde, 7cde],
    [7d1b, 7d1b], [7f92, 7f92], [7fb5, 7fb5], [7fc2, 7fc2], [81b9, 81b9],
    [82ac, 82ac], [8450, 8450], [84b6, 84b6], [8561, 8561], [86a0, 86a0],
    [886f, 886f], [8a1c, 8a1c], [8c76, 8c76], [8cc1, 8cc1], [8f52, 8f52],
    [915a, 915a], [9216, 9216], [9300, 9300], [943c, 943c], [96ab, 96ab],
    [96f0, 96f0], [9812, 9812], [9959, 9959], [999a, 999a], [99a9, 99a9],
    [9b75, 9b75], [9c5d, 9c5d], [9cfb, 9cfb], [9ec2, 9ec2], [9efa, 9efa],
    [9f16, 9f16], [9f22, 9f22], [206f8, 206f8], [20d6e, 20d6e],
    [20eeb, 20eeb], [21284, 21285], [21a16, 21a16], [22064, 22064],
    [2216f, 2216f], [222b1, 222b1], [22685, 22685], [229dd, 229dd],
    [22d22, 22d22], [22e54, 22e54], [23b29, 23b29], [23bfb, 23bfb],
    [23c66, 23c66], [2451f, 2451f], [24598, 24598], [245f8, 245f8],
    [2461d, 2461d], [24c2a, 24c2a], [25099, 25099], [25ce1, 25ce1],
    [25e7b, 25e7b], [25f52, 25f52], [2634f, 2634f], [2636a, 2636a],
    [26408, 26408], [26991, 26991], [26c1b, 26c1b], [26d9a, 26d9a],
    [27bb1, 27bb1], [27dd0, 27dd0], [27fda, 27fda], [283be, 283be],
    [28918, 28918], [2891a, 2891a], [28cda, 28cda], [28ce3, 28ce3],
    [28dd2, 28dd2], [29275, 29275], [29877, 29877], [29c1f, 29c1f],
    [29e02, 29e02], [29fc8, 29fc8]**/


    namespace {
    const static UnicodeSet::run_t __fen_Set_runs[] = {
    {Empty, 429}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 73},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 19}, {Mixed, 3},
    {Empty, 14}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 14}, {Mixed, 4}, {Empty, 2877}, {Mixed, 1},
    {Empty, 51}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 102}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 48}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 98}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 31}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 112}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 29}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 29441}};
    const static UnicodeSet::bitquad_t  __fen_Set_quads[] = {
    0x02000000, 0x00000800, 0x02000000, 0x00200000, 0x00004000, 0x00004000,
    0x00008000, 0x40000000, 0x08000000, 0x00000020, 0x20000000, 0x00000100,
    0x00000040, 0x00000400, 0x00000200, 0x00100000, 0x00000840, 0x00080000,
    0x00100800, 0x00004000, 0x00000004, 0x00004000, 0x00000200, 0x00000200,
    0x00000020, 0x80000000, 0x00002000, 0x00000010, 0x00004000, 0x04000000,
    0x00000008, 0x00010000, 0x00001040, 0x00001000, 0x00000010, 0x18000000,
    0x00000100, 0x08000000, 0x40000000, 0x00000040, 0x00200000, 0x00000008,
    0x04000000, 0x00101000, 0x00400000, 0x00000004, 0x10000000, 0x00008000,
    0x00004000, 0x00000200, 0x40000000, 0x08000000, 0x00040000, 0x00200000,
    0x00000004, 0x02000000, 0x00001000, 0x00010000, 0x00400000, 0x00000002,
    0x00000001, 0x00008000, 0x10000000, 0x00400000, 0x00000002, 0x00040000,
    0x04000000, 0x00400000, 0x00000001, 0x10000000, 0x00000800, 0x00010000,
    0x00040000, 0x02000000, 0x04000000, 0x00000200, 0x00200000, 0x20000000,
    0x08000000, 0x00000004, 0x04000000, 0x00400000, 0x00000004, 0x01000000,
    0x00004000, 0x00000800, 0x00000030, 0x00400000, 0x00000010, 0x00008000,
    0x00020000, 0x00000020, 0x20000000, 0x00000004, 0x00100000, 0x00000200,
    0x08000000, 0x00000040, 0x80000000, 0x01000000, 0x01000000, 0x20000000,
    0x00000400, 0x02000000, 0x00000002, 0x08000000, 0x00040000, 0x00008000,
    0x00000400, 0x00000100, 0x00020000, 0x08000000, 0x04000000, 0x00020000,
    0x00010000, 0x04000000, 0x40000000, 0x05000000, 0x04000000, 0x00000008,
    0x00040000, 0x00200000, 0x00800000, 0x80000000, 0x00000004, 0x00000100};
    }

    const static UnicodeSet fen_Set{const_cast<UnicodeSet::run_t *>(__fen_Set_runs), 233, 0, const_cast<UnicodeSet::bitquad_t *>(__fen_Set_quads), 126, 0};

    /** Code Point Ranges for chun
    [35ba, 35ba], [3d6e, 3d6e], [3e2a, 3e2a], [3fe4, 3fe4], [4407, 4407],
    [440f, 440f], [44d0, 44d0], [451a, 451a], [47ba, 47ba], [4845, 4845],
    [48e9, 48e9], [494e, 494e], [49ae, 49ae], [4ac3, 4ac3], [4b9e, 4b9e],
    [5046, 5046], [50e2, 50e2], [5507, 5507], [5a8b, 5a8b], [60f7, 60f7],
    [6625, 6625], [6699, 6699], [6710, 6710], [6776, 6776], [693f, 693f],
    [696f, 696f], [6a41, 6a41], [6c8c, 6c8c], [6df3, 6df3], [6f18, 6f18],
    [7289, 7289], [7443, 7443], [7776, 7776], [7bba, 7bba], [7d14, 7d14],
    [80ab, 80ab], [8123, 8123], [819e, 819e], [829a, 829a], [8436, 8436],
    [8493, 8493], [84f4, 84f4], [8822, 8822], [8cf0, 8cf0], [8e33, 8e33],
    [8f07, 8f07], [8f34, 8f34], [9187, 9187], [931e, 931e], [9659, 9659],
    [9bd9, 9bd9], [9c06, 9c06], [9d89, 9d89], [9d9e, 9d9e], [20d67, 20d67],
    [20e38, 20e38], [21250, 21250], [215e5, 215e5], [22f8e, 22f8e],
    [2331a, 2331a], [23320, 23320], [23623, 23623], [23686, 23686],
    [23ba2, 23ba2], [2461b, 2461b], [24aaa, 24aaa], [263a7, 263a7],
    [266a7, 266a7], [271f6, 271f6], [28269, 28269], [282ee, 282ee],
    [2a0b9, 2a0b9]**/


    namespace {
    const static UnicodeSet::run_t __chun_Set_runs[] = {
    {Empty, 429}, {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 18}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 2942}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 204}, {Mixed, 1},
    {Empty, 27}, {Mixed, 2}, {Empty, 23}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 82}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 199}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 89}, {Mixed, 1}, {Empty, 131}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 237}, {Mixed, 1}, {Empty, 29434}};
    const static UnicodeSet::bitquad_t  __chun_Set_quads[] = {
    0x04000000, 0x00004000, 0x00000400, 0x00000010, 0x00008080, 0x00010000,
    0x04000000, 0x04000000, 0x00000020, 0x00000200, 0x00004000, 0x00004000,
    0x00000008, 0x40000000, 0x00000040, 0x00000004, 0x00000080, 0x00000800,
    0x00800000, 0x00000020, 0x02000000, 0x00010000, 0x00400000, 0x80000000,
    0x00008000, 0x00000002, 0x00001000, 0x00080000, 0x01000000, 0x00000200,
    0x00000008, 0x00400000, 0x04000000, 0x00100000, 0x00000800, 0x00000008,
    0x40000000, 0x04000000, 0x00400000, 0x00080000, 0x00100000, 0x00000004,
    0x00010000, 0x00080000, 0x00000080, 0x00100000, 0x00000080, 0x40000000,
    0x02000000, 0x02000000, 0x00000040, 0x40000200, 0x00000080, 0x01000000,
    0x00010000, 0x00000020, 0x00004000, 0x04000000, 0x00000001, 0x00000008,
    0x00000040, 0x00000004, 0x08000000, 0x00000400, 0x00000080, 0x00000080,
    0x00400000, 0x00000200, 0x00004000, 0x02000000};
    }

    const static UnicodeSet chun_Set{const_cast<UnicodeSet::run_t *>(__chun_Set_runs), 137, 0, const_cast<UnicodeSet::bitquad_t *>(__chun_Set_quads), 70, 0};

    /** Code Point Ranges for niu
    [35bb, 35bb], [3eb2, 3eb2], [3f71, 3f71], [4087, 4087], [42f4, 42f4],
    [43d4, 43d4], [449c, 449c], [599e, 599e], [5ff8, 5ff8], [6013, 6013],
    [626d, 626d], [62d7, 62d7], [677b, 677b], [6c7c, 6c7c], [6c91, 6c91],
    [7084, 7084], [725b, 725b], [72c3, 72c3], [7d10, 7d10], [83a5, 83a5],
    [86b4, 86b4], [9215, 9215], [2251f, 2251f], [2315a, 2315a],
    [239ca, 239ca], [23cb6, 23cb6], [2501d, 2501d], [25373, 25373],
    [25766, 25766], [27625, 27625], [282c0, 282c0], [2867a, 2867a],
    [28cde, 28cde], [28dc1, 28dc1], [29207, 29207], [29677, 29677],
    [29696, 29696], [29737, 29737], [29c8d, 29c8d], [29d60, 29d60],
    [2a3f2, 2a3f2]**/


    namespace {
    const static UnicodeSet::run_t __niu_Set_runs[] = {
    {Empty, 429}, {Mixed, 1}, {Empty, 71}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 167}, {Mixed, 1},
    {Empty, 50}, {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 39}, {Mixed, 2},
    {Empty, 31}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 81}, {Mixed, 1}, {Empty, 52}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 90}, {Mixed, 1}, {Empty, 3223},
    {Mixed, 1}, {Empty, 97}, {Mixed, 1}, {Empty, 67}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 154}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 245}, {Mixed, 1},
    {Empty, 100}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 50},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 34}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 29408}};
    const static UnicodeSet::bitquad_t  __niu_Set_quads[] = {
    0x08000000, 0x00040000, 0x00020000, 0x00000080, 0x00100000, 0x00100000,
    0x10000000, 0x40000000, 0x01000000, 0x00080000, 0x00002000, 0x00800000,
    0x08000000, 0x10000000, 0x00020000, 0x00000010, 0x08000000, 0x00000008,
    0x00010000, 0x00000020, 0x00100000, 0x00200000, 0x80000000, 0x04000000,
    0x00000400, 0x00400000, 0x20000000, 0x00080000, 0x00000040, 0x00000020,
    0x00000001, 0x04000000, 0x40000000, 0x00000002, 0x00000080, 0x00800000,
    0x00400000, 0x00800000, 0x00002000, 0x00000001, 0x00040000};
    }

    const static UnicodeSet niu_Set{const_cast<UnicodeSet::run_t *>(__niu_Set_runs), 77, 0, const_cast<UnicodeSet::bitquad_t *>(__niu_Set_quads), 41, 0};

    /** Code Point Ranges for rou
    [35bb, 35bb], [3f65, 3f65], [43d4, 43d4], [4413, 4413], [49f7, 49f7],
    [4c06, 4c06], [53b9, 53b9], [5a83, 5a83], [63c9, 63c9], [67d4, 67d4],
    [697a, 697a], [6e18, 6e18], [7163, 7163], [7448, 7448], [79b8, 79b8],
    [7cc5, 7cc5], [8089, 8089], [816c, 816c], [83a5, 83a5], [8447, 8447],
    [875a, 875a], [8e42, 8e42], [8f2e, 8f2e], [9352, 9352], [9450, 9450],
    [97a3, 97a3], [97d6, 97d6], [9a25, 9a25], [9af3, 9af3], [9c07, 9c07],
    [9d94, 9d94], [20810, 20810], [215d1, 215d1], [2251f, 2251f],
    [22605, 22605], [2580a, 2580a], [2636d, 2636d], [286f6, 286f6],
    [2a476, 2a476]**/


    namespace {
    const static UnicodeSet::run_t __rou_Set_runs[] = {
    {Empty, 429}, {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 26}, {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 2899}, {Mixed, 1}, {Empty, 109}, {Mixed, 1}, {Empty, 121},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 399}, {Mixed, 1},
    {Empty, 90}, {Mixed, 1}, {Empty, 283}, {Mixed, 1}, {Empty, 235},
    {Mixed, 1}, {Empty, 29404}};
    const static UnicodeSet::bitquad_t  __rou_Set_quads[] = {
    0x08000000, 0x00000020, 0x00100000, 0x00080000, 0x00800000, 0x00000040,
    0x02000000, 0x00000008, 0x00000200, 0x00100000, 0x04000000, 0x01000000,
    0x00000008, 0x00000100, 0x01000000, 0x00000020, 0x00000200, 0x00001000,
    0x00000020, 0x00000080, 0x04000000, 0x00000004, 0x00004000, 0x00040000,
    0x00010000, 0x00000008, 0x00400000, 0x00000020, 0x00080000, 0x00000080,
    0x00100000, 0x00010000, 0x00020000, 0x80000000, 0x00000020, 0x00000400,
    0x00002000, 0x00400000, 0x00400000};
    }

    const static UnicodeSet rou_Set{const_cast<UnicodeSet::run_t *>(__rou_Set_runs), 77, 0, const_cast<UnicodeSet::bitquad_t *>(__rou_Set_quads), 39, 0};

    /** Code Point Ranges for sheng
    [35c2, 35c2], [3b90, 3b90], [3c61, 3c61], [3e4c, 3e4c], [3f29, 3f29],
    [3f33, 3f33], [3faa, 3faa], [43b4, 43b4], [4687, 4687], [4cbc, 4cbc],
    [4d24, 4d24], [4e1e, 4e1e], [4e58, 4e58], [5057, 5057], [51bc, 51bc],
    [5269, 5269], [52dd, 52dd], [5347, 5347], [544f, 544f], [5723, 5723],
    [57a9, 57a9], [58ad, 58ad], [58f0, 58f0], [59d3, 59d3], [5a0d, 5a0d],
    [5ab5, 5ab5], [5d4a, 5d4a], [61b4, 61b4], [6598, 6598], [6607, 6607],
    [665f, 6660], [69ba, 69ba], [6b85, 6b85], [6bb8, 6bb8], [6ce9, 6ce9],
    [6e3b, 6e3b], [6e66, 6e66], [6fa0, 6fa0], [713a, 713a], [7272, 7272],
    [72cc, 72cc], [73c4, 73c4], [741e, 741e], [751f, 751f], [7525, 7525],
    [7538, 7538], [76db, 76db], [7701, 7701], [771a, 771a], [7b19, 7b19],
    [7bb5, 7bb5], [7e69, 7e69], [8056, 8056], [8072, 8072], [80dc, 80dc],
    [82fc, 82fc], [8542, 8542], [8b5d, 8b5d], [8cb9, 8cb9], [8cf8, 8cf8],
    [924e, 924e], [9629, 9629], [9679, 9679], [9c66, 9c66], [9d7f, 9d7f],
    [9f2a, 9f2a], [201f7, 201f7], [204f8, 204f8], [204fd, 204fd],
    [20d22, 20d22], [2179e, 2179e], [21a3d, 21a3d], [22991, 22991],
    [238a1, 238a1], [23b3a, 23b3a], [246a3, 246a3], [24be1, 24be1],
    [25625, 25625], [257ce, 257ce], [26504, 26504], [26561, 26561],
    [2659e, 2659e], [266d9, 266d9], [26a71, 26a71], [26cd7, 26cd7],
    [27356, 27356], [27876, 27876], [27a9d, 27a9d], [27fd8, 27fd8],
    [28060, 28060], [2857b, 2857b], [286b1, 286b1], [2871c, 2871c],
    [28c89, 28c89], [28c93, 28c93], [28d65, 28d65], [2934b, 2934b],
    [2a17b, 2a17b]**/


    namespace {
    const static UnicodeSet::run_t __sheng_Set_runs[] = {
    {Empty, 430}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 25}, {Mixed, 1},
    {Empty, 14}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 12}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 2837}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 82}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 122}, {Mixed, 1}, {Empty, 120},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 91}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 81}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 105}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 9}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 112}, {Mixed, 1}, {Empty, 29428}};
    const static UnicodeSet::bitquad_t  __sheng_Set_quads[] = {
    0x00000004, 0x00010000, 0x00000002, 0x00001000, 0x00080200, 0x00000400,
    0x00100000, 0x00000080, 0x10000000, 0x00000010, 0x40000000, 0x01000000,
    0x00800000, 0x10000000, 0x00000200, 0x20000000, 0x00000080, 0x00008000,
    0x00000008, 0x00000200, 0x00002000, 0x00010000, 0x00080000, 0x00002000,
    0x00200000, 0x00000400, 0x00100000, 0x01000000, 0x00000080, 0x80000000,
    0x00000001, 0x04000000, 0x00000020, 0x01000000, 0x00000200, 0x08000000,
    0x00000040, 0x00000001, 0x04000000, 0x00040000, 0x00001000, 0x00000010,
    0x40000000, 0x80000000, 0x01000020, 0x08000000, 0x04000002, 0x02000000,
    0x00200000, 0x00000200, 0x00400000, 0x00040000, 0x10000000, 0x10000000,
    0x00000004, 0x20000000, 0x02000000, 0x01000000, 0x00004000, 0x00000200,
    0x02000000, 0x00000040, 0x80000000, 0x00000400, 0x00800000, 0x21000000,
    0x00000004, 0x40000000, 0x20000000, 0x00020000, 0x00000002, 0x04000000,
    0x00000008, 0x00000002, 0x00000020, 0x00004000, 0x00000010, 0x00000002,
    0x40000000, 0x02000000, 0x00020000, 0x00800000, 0x00400000, 0x00400000,
    0x20000000, 0x01000000, 0x00000001, 0x08000000, 0x00020000, 0x10000000,
    0x00080200, 0x00000020, 0x00000800, 0x08000000};
    }

    const static UnicodeSet sheng_Set{const_cast<UnicodeSet::run_t *>(__sheng_Set_runs), 179, 0, const_cast<UnicodeSet::bitquad_t *>(__sheng_Set_quads), 94, 0};

    /** Code Point Ranges for ya
    [35c7, 35c7], [375e, 375e], [3909, 3909], [39ce, 39ce], [3c33, 3c33],
    [3ccc, 3ccc], [3d2b, 3d2b], [3e5e, 3e5e], [3f8e, 3f8f], [3fff, 3fff],
    [4034, 4034], [4039, 4039], [40c1, 40c1], [4130, 4130], [4198, 4198],
    [475f, 475f], [489d, 489d], [49aa, 49aa], [4ab5, 4ab5], [4ad4, 4ad4],
    [4c32, 4c32], [4d5d, 4d5d], [4e2b, 4e2b], [4e9e, 4e9e], [4f22, 4f22],
    [4ff9, 4ff9], [529c, 529c], [538a, 538a], [5393, 5393], [53ad, 53ad],
    [5416, 5416], [543e, 543e], [5440, 5440], [547e, 547e], [555e, 555e],
    [5714, 5714], [5720, 5720], [57e1, 57e1], [580a, 580a], [5810, 5810],
    [58d3, 58d3], [59f6, 59f6], [5a6d, 5a6d], [5b72, 5b72], [5c88, 5c88],
    [5d16, 5d16], [5e8c, 5e8c], [5e98, 5e98], [5fa1, 5fa1], [62bc, 62bc],
    [62c1, 62c1], [6397, 6397], [63e0, 63e0], [672d, 672d], [6792, 6792],
    [690f, 690f], [693b, 693b], [6b47, 6b47], [6c2c, 6c2c], [6d65, 6d65],
    [6daf, 6daf], [6f5d, 6f5d], [70cf, 70cf], [7259, 7259], [72bd, 72bd],
    [731a, 731a], [7330, 7330], [73a1, 73a1], [740a, 740a], [7458, 7458],
    [758b, 758b], [75a8, 75a8], [775a, 775a], [7811, 7811], [78a3, 78a3],
    [78cd, 78cd], [7a0f, 7a0f], [7a75, 7a75], [7aab, 7aab], [7b0c, 7b0c],
    [8050, 8050], [82bd, 82bd], [8565, 8565], [869c, 869c], [8859, 8859],
    [897e, 897e], [8a1d, 8a1d], [8ecb, 8ecb], [8f05, 8f05], [8f35, 8f35],
    [8fd3, 8fd3], [90aa, 90aa], [91fe, 91fe], [930f, 930f], [941a, 941a],
    [9598, 9598], [96c5, 96c5], [9854, 9854], [9d09, 9d09], [9d28, 9d28],
    [9d6a, 9d6a], [9d76, 9d76], [9f56, 9f56], [9f7e, 9f7e], [2012e, 2012e],
    [202d7, 202d7], [20732, 20732], [20b9c, 20b9c], [20d63, 20d63],
    [211fc, 211fc], [21d2d, 21d2d], [21da6, 21da6], [21dfb, 21dfb],
    [21e17, 21e17], [21e44, 21e44], [21fd6, 21fd6], [226c4, 226c4],
    [226df, 226df], [22b8a, 22b8a], [23269, 23269], [233ce, 233ce],
    [24605, 24606], [24d13, 24d13], [24d6d, 24d6d], [24dc5, 24dc5],
    [24e31, 24e31], [24e4e, 24e4e], [251e0, 251e0], [2531a, 2531a],
    [253dd, 253dd], [25415, 25415], [254a7, 254a7], [2625f, 2625f],
    [26267, 26267], [26716, 26716], [2721d, 2721d], [274ea, 274ea],
    [2784b, 2784b], [279dd, 279dd], [27b2c, 27b2c], [28076, 28076],
    [284f4, 284f4], [285ad, 285ad], [28a19, 28a19], [28e3a, 28e3a],
    [28e5d, 28e5d], [290d0, 290d0], [29454, 29454], [29581, 29581],
    [29a20, 29a20], [29b6f, 29b6f], [29b9d, 29b9d], [29e0b, 29e0b],
    [29fd4, 29fd4], [2a1b0, 2a1b0], [2a590, 2a590], [2a5f9, 2a5f9],
    [2a62c, 2a62c], [2a632, 2a632]**/


    namespace {
    const static UnicodeSet::run_t __ya_Set_runs[] = {
    {Empty, 430}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 2},
    {Mixed, 4}, {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 5},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 23}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11},
    {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 12},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 37}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 2829}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 89}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 55},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 145}, {Mixed, 1}, {Empty, 55},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 28}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 108}, {Mixed, 2}, {Empty, 36}, {Mixed, 1}, {Empty, 87},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 32}, {Mixed, 2}, {Empty, 19},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 19},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 29390}};
    const static UnicodeSet::bitquad_t  __ya_Set_quads[] = {
    0x00000080, 0x40000000, 0x00000200, 0x00004000, 0x00080000, 0x00001000,
    0x00000800, 0x40000000, 0x0000c000, 0x80000000, 0x02100000, 0x00000002,
    0x00010000, 0x01000000, 0x80000000, 0x20000000, 0x00000400, 0x00200000,
    0x00100000, 0x00040000, 0x20000000, 0x00000800, 0x40000000, 0x00000004,
    0x02000000, 0x10000000, 0x00080400, 0x00002000, 0x00400000, 0x40000000,
    0x00000001, 0x40000000, 0x40000000, 0x00100000, 0x00000001, 0x00000002,
    0x00010400, 0x00080000, 0x00400000, 0x00002000, 0x00040000, 0x00000100,
    0x00400000, 0x01001000, 0x00000002, 0x10000000, 0x00000002, 0x00800000,
    0x00000001, 0x00002000, 0x00040000, 0x00008000, 0x08000000, 0x00000080,
    0x00001000, 0x00000020, 0x00008000, 0x20000000, 0x00008000, 0x02000000,
    0x20000000, 0x04000000, 0x00010000, 0x00000002, 0x00000400, 0x01000000,
    0x00000800, 0x00000100, 0x04000000, 0x00020000, 0x00000008, 0x00002000,
    0x00008000, 0x00200000, 0x00000800, 0x00001000, 0x00010000, 0x20000000,
    0x00000020, 0x10000000, 0x02000000, 0x40000000, 0x20000000, 0x00000800,
    0x00000020, 0x00200000, 0x00080000, 0x00000400, 0x40000000, 0x00008000,
    0x04000000, 0x01000000, 0x00000020, 0x00100000, 0x00000200, 0x00000100,
    0x00400400, 0x00400000, 0x40000000, 0x00004000, 0x00800000, 0x00040000,
    0x10000000, 0x00000008, 0x10000000, 0x00002000, 0x00000040, 0x08000000,
    0x00800000, 0x00000010, 0x00400000, 0x80000010, 0x00000400, 0x00000200,
    0x00004000, 0x00000060, 0x00080000, 0x00002000, 0x00000020, 0x00020000,
    0x00004000, 0x00000001, 0x04000000, 0x20000000, 0x00200000, 0x00000080,
    0x80000000, 0x00000080, 0x00400000, 0x20000000, 0x00000400, 0x00000800,
    0x20000000, 0x00001000, 0x00400000, 0x00100000, 0x00002000, 0x02000000,
    0x04000000, 0x20000000, 0x00010000, 0x00100000, 0x00000002, 0x00000001,
    0x00008000, 0x20000000, 0x00000800, 0x00100000, 0x00010000, 0x00010000,
    0x02000000, 0x00041000};
    }

    const static UnicodeSet ya_Set{const_cast<UnicodeSet::run_t *>(__ya_Set_runs), 265, 0, const_cast<UnicodeSet::bitquad_t *>(__ya_Set_quads), 152, 0};

    /** Code Point Ranges for zhui
    [35d3, 35d3], [369d, 369d], [3a7e, 3a7e], [3b85, 3b85], [3fbd, 3fbd],
    [410c, 410c], [48a1, 48a1], [49f3, 49f3], [4a28, 4a28], [4ce1, 4ce1],
    [4d86, 4d86], [5015, 5015], [5782, 5782], [589c, 589c], [5a37, 5a37],
    [60f4, 60f4], [63e3, 63e3], [690e, 690e], [69cc, 69cc], [6c9d, 6c9d],
    [7500, 7500], [7577, 7577], [787e, 787e], [78d3, 78d3], [7b0d, 7b0d],
    [7ba0, 7ba0], [7db4, 7db4], [7e0b, 7e0b], [814f, 814f], [8187, 8187],
    [81f4, 81f4], [8411, 8411], [8ac8, 8ac8], [8d05, 8d05], [8f5b, 8f5b],
    [8ffd, 8ffd], [9180, 9180], [918a, 918a], [9310, 9310], [9317, 9317],
    [9323, 9323], [939a, 939a], [9446, 9446], [968a, 968a], [96a7, 96a7],
    [96b9, 96b9], [991f, 991f], [9a05, 9a05], [9d7b, 9d7b], [2010c, 2010c],
    [2147b, 2147b], [21bd1, 21bd1], [22285, 22285], [23778, 23778],
    [239ac, 239ac], [23a2b, 23a2b], [24e85, 24e85], [257d2, 257d2],
    [2697b, 2697b], [27ff2, 27ff2], [28489, 28489], [289e8, 289e8],
    [28a97, 28a97], [28eb5, 28eb5], [28fbb, 28fbb], [296f5, 296f5],
    [29700, 29700], [29a80, 29a80], [29b33, 29b33], [2a2c7, 2a2c7]**/


    namespace {
    const static UnicodeSet::run_t __zhui_Set_runs[] = {
    {Empty, 430}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 59}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 53},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 67},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 17}, {Mixed, 2}, {Empty, 18}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 2844},
    {Mixed, 1}, {Empty, 154}, {Mixed, 1}, {Empty, 58}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 166}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 162}, {Mixed, 1},
    {Empty, 73}, {Mixed, 1}, {Empty, 140}, {Mixed, 1}, {Empty, 179},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 57}, {Mixed, 2}, {Empty, 27}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 29417}};
    const static UnicodeSet::bitquad_t  __zhui_Set_quads[] = {
    0x00080000, 0x20000000, 0x40000000, 0x00000020, 0x20000000, 0x00001000,
    0x00000002, 0x00080000, 0x00000100, 0x00000002, 0x00000040, 0x00200000,
    0x00000004, 0x10000000, 0x00800000, 0x00100000, 0x00000008, 0x00004000,
    0x00001000, 0x20000000, 0x00000001, 0x00800000, 0x40000000, 0x00080000,
    0x00002000, 0x00000001, 0x00100000, 0x00000800, 0x00008000, 0x00000080,
    0x00100000, 0x00020000, 0x00000100, 0x00000020, 0x08000000, 0x20000000,
    0x00000401, 0x00810000, 0x00000008, 0x04000000, 0x00000040, 0x00000400,
    0x02000080, 0x80000000, 0x00000020, 0x08000000, 0x00001000, 0x08000000,
    0x00020000, 0x00000020, 0x01000000, 0x00001000, 0x00000800, 0x00000020,
    0x00040000, 0x08000000, 0x00040000, 0x00000200, 0x00000100, 0x00800000,
    0x00200000, 0x08000000, 0x00200000, 0x00000001, 0x00000001, 0x00080000,
    0x00000080};
    }

    const static UnicodeSet zhui_Set{const_cast<UnicodeSet::run_t *>(__zhui_Set_runs), 129, 0, const_cast<UnicodeSet::bitquad_t *>(__zhui_Set_quads), 67, 0};

    /** Code Point Ranges for gou
    [35d5, 35d5], [370c, 370c], [3745, 3745], [3764, 3764], [385a, 385a],
    [3a0c, 3a0c], [3f5b, 3f5b], [40d3, 40d3], [441f, 441f], [4466, 4466],
    [476d, 476d], [4ab7, 4ab7], [4b32, 4b32], [4d76, 4d76], [4f5d, 4f5d],
    [508b, 508b], [5193, 5193], [52fe, 52fe], [5340, 5340], [53e5, 53e5],
    [5474, 5474], [57a2, 57a2], [591f, 5920], [59e4, 59e4], [5abe, 5abe],
    [5ca3, 5ca3], [5f40, 5f40], [62d8, 62d8], [6406, 6406], [67b8, 67b8],
    [69cb, 69cb], [6c9f, 6c9f], [6cc3, 6cc3], [6e9d, 6e9d], [7179, 7179],
    [72d7, 72d7], [73bd, 73bd], [75c0, 75c0], [7b31, 7b31], [7bdd, 7bdd],
    [7df1, 7df1], [8007, 8007], [82df, 82df], [8329, 8329], [86bc, 86bc],
    [88a7, 88a7], [8920, 8920], [89af, 89af], [8a6c, 8a6c], [8c70, 8c70],
    [8c7f, 8c7f], [8cfc, 8cfc], [8ee5, 8ee5], [9058, 9058], [9264, 9264],
    [96ca, 96ca], [97dd, 97dd], [9b88, 9b88], [9d1d, 9d1d], [206ce, 206ce],
    [21591, 21591], [215c1, 215c1], [22107, 22107], [23549, 23549],
    [2354c, 2354c], [23671, 23671], [23acc, 23acc], [245ae, 245ae],
    [246bc, 246bc], [2483c, 2483c], [24af1, 24af1], [25247, 25247],
    [259d2, 259d2], [25b09, 25b09], [25d34, 25d34], [25ffa, 25ffa],
    [263af, 263af], [263bc, 263bc], [26a77, 26a77], [26c63, 26c63],
    [26d77, 26d77], [26f4b, 26f4b], [270db, 270db], [27cbf, 27cbf],
    [27d48, 27d48], [28a66, 28a66], [29122, 29122], [2a0fa, 2a0fa],
    [2a6ad, 2a6ad]**/


    namespace {
    const static UnicodeSet::run_t __gou_Set_runs[] = {
    {Empty, 430}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 10}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2893},
    {Mixed, 1}, {Empty, 117}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 89}, {Mixed, 1}, {Empty, 161}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 86}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 59}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 94}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 104}, {Mixed, 1}, {Empty, 53},
    {Mixed, 1}, {Empty, 125}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 29386}};
    const static UnicodeSet::bitquad_t  __gou_Set_quads[] = {
    0x00200000, 0x00001000, 0x00000020, 0x00000010, 0x04000000, 0x00001000,
    0x08000000, 0x00080000, 0x80000000, 0x00000040, 0x00002000, 0x00800000,
    0x00040000, 0x00400000, 0x20000000, 0x00000800, 0x00080000, 0x40000000,
    0x00000001, 0x00000020, 0x00100000, 0x00000004, 0x80000000, 0x00000001,
    0x00000010, 0x40000000, 0x00000008, 0x00000001, 0x01000000, 0x00000040,
    0x01000000, 0x00000800, 0x80000000, 0x00000008, 0x20000000, 0x02000000,
    0x00800000, 0x20000000, 0x00000001, 0x00020000, 0x20000000, 0x00020000,
    0x00000080, 0x80000000, 0x00000200, 0x10000000, 0x00000080, 0x00000001,
    0x00008000, 0x00001000, 0x80010000, 0x10000000, 0x00000020, 0x01000000,
    0x00000010, 0x00000400, 0x20000000, 0x00000100, 0x20000000, 0x00004000,
    0x00020000, 0x00000002, 0x00000080, 0x00001200, 0x00020000, 0x00001000,
    0x00004000, 0x10000000, 0x10000000, 0x00020000, 0x00000080, 0x00040000,
    0x00000200, 0x00100000, 0x04000000, 0x10008000, 0x00800000, 0x00000008,
    0x00800000, 0x00000800, 0x08000000, 0x80000000, 0x00000100, 0x00000040,
    0x00000004, 0x04000000, 0x00002000};
    }

    const static UnicodeSet gou_Set{const_cast<UnicodeSet::run_t *>(__gou_Set_runs), 171, 0, const_cast<UnicodeSet::bitquad_t *>(__gou_Set_quads), 87, 0};

    /** Code Point Ranges for bo
    [35d8, 35d8], [3788, 3788], [37d1, 37d1], [3a67, 3a67], [3a8d, 3a8d],
    [3b0d, 3b0d], [3b25, 3b25], [3d68, 3d68], [3dbf, 3dbf], [3e40, 3e40],
    [3f0e, 3f0e], [3f1f, 3f1f], [3f23, 3f23], [408d, 408d], [40d7, 40d7],
    [4136, 4136], [431f, 431f], [4378, 4378], [4448, 4448], [45da, 45da],
    [464f, 464f], [475b, 475b], [47b3, 47b3], [47d4, 47d4], [47db, 47db],
    [47ee, 47ee], [488c, 488c], [4aac, 4aac], [4b2a, 4b2a], [4b66, 4b66],
    [4ba1, 4ba1], [4bcb, 4bcb], [4c0a, 4c0a], [4cc1, 4cc1], [4d57, 4d57],
    [4d88, 4d88], [4eb3, 4eb3], [4ee2, 4ee2], [4f2f, 4f2f], [4f5b, 4f5b],
    [4fbc, 4fbc], [50e0, 50e0], [50f0, 50f0], [5265, 5265], [52c3, 52c3],
    [52df, 52df], [535a, 535a], [535c, 535c], [54f1, 54f1], [5575, 5575],
    [5643, 5643], [5697, 5697], [58c6, 58c6], [59ad, 59ad], [5b5b, 5b5b],
    [5d93, 5d93], [5e17, 5e17], [5e1b, 5e1b], [5f74, 5f74], [6015, 6015],
    [61ea, 61ea], [62cd, 62cd], [62d4, 62d4], [632c, 632c], [640f, 640f],
    [64a5, 64a5], [64ad, 64ad], [64d7, 64d8], [66b4, 66b4], [670d, 670d],
    [67cf, 67cf], [67ed, 67ed], [6872, 6872], [6991, 6991], [6a97, 6a98],
    [6b02, 6b02], [6b95, 6b95], [6cca, 6cca], [6ce2, 6ce2], [6d61, 6d61],
    [6e24, 6e24], [6ea5, 6ea5], [6f51, 6f51], [6f58, 6f58], [7011, 7011],
    [717f, 717f], [7206, 7206], [7254, 7254], [72a6, 72a6], [72bb, 72bb],
    [72db, 72db], [733c, 733c], [73bb, 73bb], [74dd, 74dd], [74df, 74df],
    [756a, 756a], [7676, 7676], [767c, 767e], [76aa, 76aa], [7835, 7835],
    [78fb, 78fb], [7934, 7934], [79e1, 79e1], [7a5b, 7a5b], [7b94, 7b94],
    [7ba5, 7ba5], [7c19, 7c19], [7c38, 7c38], [7c3f, 7c3f], [7cea, 7cea],
    [7d34, 7d34], [8091, 8091], [80c9, 80c9], [8116, 8116], [818a, 818a],
    [822c, 822c], [8236, 8236], [8274, 8274], [82e9, 82e9], [8300, 8300],
    [8337, 8337], [83e0, 83e0], [83e9, 83e9], [8467, 8467], [84b2, 84b2],
    [8514, 8514], [8522, 8522], [8543, 8543], [8584, 8584], [859c, 859c],
    [8616, 8617], [86be, 86be], [889a, 889a], [88b9, 88b9], [894e, 894f],
    [896e, 896e], [8a59, 8a59], [8b52, 8b52], [8c70, 8c70], [8db5, 8db5],
    [8dd1, 8dd1], [8ddb, 8ddb], [8e23, 8e23], [8e73, 8e73], [90e3, 90e3],
    [9238, 9238], [9251, 9251], [9262, 9262], [92cd, 92cd], [939b, 939b],
    [946e, 946e], [9911, 9911], [993a, 993a], [999b, 999b], [999e, 999e],
    [99c1, 99c1], [99ee, 99ee], [9a4b, 9a4b], [9ac6, 9ac6], [9ac9, 9ac9],
    [9b44, 9b44], [9b81, 9b81], [9b8a, 9b8a], [9c4d, 9c4d], [9d53, 9d53],
    [209db, 209db], [20bad, 20bad], [20c40, 20c40], [20d38, 20d38],
    [20dfa, 20dfa], [20e33, 20e33], [20ea3, 20ea3], [21016, 21016],
    [21142, 21142], [212ef, 212ef], [21bf3, 21bf3], [21bf7, 21bf7],
    [2208d, 2208d], [2243e, 2243e], [2283a, 2283a], [228de, 228de],
    [22a5e, 22a5e], [22aef, 22aef], [22ebd, 22ebd], [232f5, 232f5],
    [236d3, 236d3], [239e7, 239e7], [23b77, 23b77], [23f61, 23f61],
    [240f5, 240f5], [24494, 24494], [2455d, 2455d], [245f3, 245f3],
    [245fa, 245fa], [246bd, 246bd], [24727, 24727], [24d8b, 24d8b],
    [24f9d, 24f9d], [24fd1, 24fd1], [25716, 25716], [25b56, 25b56],
    [25baf, 25baf], [25d2e, 25d2e], [25e25, 25e25], [25e28, 25e28],
    [25e78, 25e78], [260d9, 260d9], [262c9, 262c9], [2688a, 2688a],
    [2691a, 2691a], [26923, 26923], [26bc9, 26bc9], [26c2c, 26c2c],
    [26cb1, 26cb1], [26f2d, 26f2d], [26f6e, 26f6e], [271da, 271da],
    [2761f, 2761f], [27644, 27644], [277f1, 277f1], [27caf, 27caf],
    [27ff2, 27ff2], [28229, 28229], [2836d, 2836d], [283eb, 283eb],
    [28b42, 28b42], [290f6, 290f6], [2913f, 2913f], [29214, 29214],
    [2930f, 2930f], [2937f, 2937f], [293ef, 293ef], [294d0, 294d0],
    [295c0, 295c0], [295d2, 295d3], [29725, 29725], [297d5, 297d5],
    [298e1, 298e1], [29b38, 29b38], [29bcc, 29bcc], [29c5a, 29c5a],
    [29dda, 29dda], [29f5b, 29f5b], [2a330, 2a330], [2a361, 2a361],
    [2a4dc, 2a4dc], [2a64d, 2a64d], [2a6b7, 2a6b7]**/


    namespace {
    const static UnicodeSet::run_t __bo_Set_runs[] = {
    {Empty, 430}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 20}, {Mixed, 2}, {Empty, 3}, {Mixed, 2},
    {Empty, 17}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 4}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 14},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 3}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 4},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 9}, {Mixed, 3}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 36},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 2915}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 71}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 20}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 58}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 29386}};
    const static UnicodeSet::bitquad_t  __bo_Set_quads[] = {
    0x01000000, 0x00000100, 0x00020000, 0x00000080, 0x00002000, 0x00002000,
    0x00000020, 0x00000100, 0x80000000, 0x00000001, 0x80004000, 0x00000008,
    0x00002000, 0x00800000, 0x00400000, 0x80000000, 0x01000000, 0x00000100,
    0x04000000, 0x00008000, 0x08000000, 0x00080000, 0x08100000, 0x00004000,
    0x00001000, 0x00001000, 0x00000400, 0x00000040, 0x00000002, 0x00000800,
    0x00000400, 0x00000002, 0x00800000, 0x00000100, 0x00080000, 0x00000004,
    0x00008000, 0x08000000, 0x10000000, 0x00010001, 0x00000020, 0x80000008,
    0x14000000, 0x00020000, 0x00200000, 0x00000008, 0x00800000, 0x00000040,
    0x00002000, 0x08000000, 0x00080000, 0x08800000, 0x00100000, 0x00200000,
    0x00000400, 0x00102000, 0x00001000, 0x00008000, 0x00002020, 0x01800000,
    0x00100000, 0x00002000, 0x00008000, 0x00002000, 0x00040000, 0x00020000,
    0x01800000, 0x00000004, 0x00200000, 0x00000400, 0x00000004, 0x00000002,
    0x00000010, 0x00000020, 0x01020000, 0x00020000, 0x80000000, 0x00000040,
    0x00100000, 0x08000040, 0x08000000, 0x10000000, 0x08000000, 0xa0000000,
    0x00000400, 0x70400000, 0x00000400, 0x00200000, 0x08000000, 0x00100000,
    0x00000002, 0x08000000, 0x00100000, 0x00000020, 0x02000000, 0x81000000,
    0x00000400, 0x00100000, 0x00020000, 0x00000200, 0x00400000, 0x00000400,
    0x00401000, 0x00100000, 0x00000200, 0x00000001, 0x00800000, 0x00000201,
    0x00000080, 0x00040000, 0x00100000, 0x00000004, 0x00000008, 0x10000010,
    0x00c00000, 0x40000000, 0x04000000, 0x02000000, 0x0000c000, 0x00004000,
    0x02000000, 0x00040000, 0x00010000, 0x00200000, 0x08020000, 0x00000008,
    0x00080000, 0x00000008, 0x01000000, 0x00020000, 0x00000004, 0x00002000,
    0x08000000, 0x00004000, 0x00020000, 0x04000000, 0x48000000, 0x00000002,
    0x00004000, 0x00000800, 0x00000240, 0x00000010, 0x00000402, 0x00002000,
    0x00080000, 0x08000000, 0x00002000, 0x00000001, 0x01000000, 0x04000000,
    0x00080000, 0x00000008, 0x00400000, 0x00000004, 0x00008000, 0x00880000,
    0x00002000, 0x40000000, 0x04000000, 0x40000000, 0x40000000, 0x00008000,
    0x20000000, 0x00200000, 0x00080000, 0x00000080, 0x00800000, 0x00000002,
    0x00200000, 0x00100000, 0x20000000, 0x04080000, 0x20000000, 0x00000080,
    0x00000800, 0x20000000, 0x00020000, 0x00400000, 0x00400000, 0x00008000,
    0x00004000, 0x00000120, 0x01000000, 0x02000000, 0x00000200, 0x00000400,
    0x04000000, 0x00000008, 0x00000200, 0x00001000, 0x00020000, 0x00002000,
    0x00004000, 0x04000000, 0x80000000, 0x00000010, 0x00020000, 0x00008000,
    0x00040000, 0x00000200, 0x00002000, 0x00000800, 0x00000004, 0x00400000,
    0x80000000, 0x00100000, 0x00008000, 0x80000000, 0x00008000, 0x00010000,
    0x000c0001, 0x00000020, 0x00200000, 0x00000002, 0x01000000, 0x00001000,
    0x04000000, 0x04000000, 0x08000000, 0x00010000, 0x00000002, 0x10000000,
    0x00002000, 0x00800000};
    }

    const static UnicodeSet bo_Set{const_cast<UnicodeSet::run_t *>(__bo_Set_runs), 399, 0, const_cast<UnicodeSet::bitquad_t *>(__bo_Set_quads), 224, 0};

    /** Code Point Ranges for chu
    [35d9, 35d9], [3647, 3647], [3915, 3915], [3d86, 3d86], [3fa5, 3fa5],
    [3fbb, 3fbb], [4173, 4173], [4177, 4177], [41cd, 41cd], [42b0, 42b0],
    [438c, 438c], [440d, 440d], [4422, 4422], [4658, 4658], [4734, 4734],
    [47e3, 47e3], [4827, 4827], [48ba, 48ba], [498c, 498c], [4da5, 4da5],
    [4e8d, 4e8d], [4ff6, 4ff6], [5097, 5097], [510a, 510a], [5132, 5132],
    [51fa, 51fa], [521d, 521d], [52a9, 52a9], [5614, 5614], [563c, 563c],
    [57f1, 57f1], [5ab0, 5ab0], [5e6e, 5e6e], [5eda, 5eda], [6035, 6035],
    [6149, 6149], [61b7, 61b7], [62c0, 62c0], [6410, 6410], [6462, 6462],
    [6474, 6474], [654a, 654a], [65b6, 65b6], [6775, 6775], [67e0, 67e0],
    [695a, 695a], [696e, 696e], [6a17, 6a17], [6a71, 6a71], [6ad6, 6ad6],
    [6b2a, 6b2a], [6b5c, 6b5c], [6d82, 6d82], [6dd1, 6dd1], [6ec0, 6ec1],
    [6fcb, 6fcb], [70aa, 70aa], [7293, 7293], [73ff, 73ff], [7421, 7421],
    [755c, 755c], [77d7, 77d7], [786b, 786b], [790e, 790e], [795d, 795d],
    [7acc, 7acc], [7be8, 7be8], [7d40, 7d40], [7d6e, 7d6e], [801d, 801d],
    [8021, 8021], [81c5, 81c5], [82bb, 82bb], [83c6, 83c6], [8457, 8457],
    [84a2, 84a2], [84eb, 84eb], [85f8, 85f8], [8655, 8655], [870d, 870d],
    [8829, 8829], [891a, 891a], [89d5, 89d5], [89f8, 89f8], [8a58, 8a58],
    [8ad4, 8ad4], [8af8, 8af8], [8c56, 8c56], [8c60, 8c60], [8c99, 8c99],
    [8d8e, 8d8e], [8de6, 8de6], [8e00, 8e00], [8e30, 8e30], [8e70, 8e70],
    [8e87, 8e87], [8e95, 8e95], [9110, 9110], [924f, 924f], [92e4, 92e4],
    [95a6, 95a6], [9664, 9664], [96db, 96db], [9e00, 9e00], [9edc, 9edc],
    [9f63, 9f63], [9f7c, 9f7c], [20049, 20049], [201d8, 201d8],
    [209d6, 209d6], [20c15, 20c15], [20fdd, 20fdd], [2140c, 2140c],
    [21748, 21748], [21cd1, 21cd1], [22165, 22165], [2228d, 2228d],
    [22494, 22494], [22553, 22553], [228f5, 228f5], [228ff, 228ff],
    [22a2b, 22a2b], [238b6, 238b6], [23979, 23979], [239a0, 239a1],
    [243f1, 243f1], [2465f, 2465f], [2475e, 2475e], [24ec7, 24ec7],
    [2506f, 2506f], [254ad, 254ad], [25e75, 25e75], [26eb5, 26eb5],
    [26fc0, 26fc0], [270cf, 270cf], [273b7, 273b7], [278b6, 278b6],
    [27be9, 27be9], [27c2b, 27c2b], [27cb0, 27cb0], [27eb6, 27eb6],
    [27f67, 27f67], [2807f, 2807f], [280d5, 280d5], [28152, 28152],
    [28562, 28562], [28795, 28795], [28d30, 28d30], [28f2a, 28f2a],
    [290ab, 290ab], [29224, 29224], [29659, 29659], [29a38, 29a38],
    [29e71, 29e71], [2a029, 2a029], [2a072, 2a072], [2a1b7, 2a1b7],
    [2a1c6, 2a1c6], [2a4d0, 2a4d0]**/


    namespace {
    const static UnicodeSet::run_t __chu_Set_runs[] = {
    {Empty, 430}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 16}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 5}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 26}, {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 17}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 10}, {Mixed, 2}, {Empty, 20}, {Mixed, 2}, {Empty, 12},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 10}, {Mixed, 3}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 1}, {Mixed, 2}, {Empty, 19},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 2822}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 63},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 115}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 81}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 77}, {Mixed, 1}, {Empty, 129}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 23},
    {Mixed, 1}, {Empty, 29401}};
    const static UnicodeSet::bitquad_t  __chu_Set_quads[] = {
    0x02000000, 0x00000080, 0x00200000, 0x00000040, 0x08000020, 0x00880000,
    0x00002000, 0x00010000, 0x00001000, 0x00002000, 0x00000004, 0x01000000,
    0x00100000, 0x00000008, 0x00000080, 0x04000000, 0x00001000, 0x00000020,
    0x00002000, 0x00400000, 0x00800000, 0x00000400, 0x00040000, 0x04000000,
    0x20000000, 0x00000200, 0x00100000, 0x10000000, 0x00020000, 0x00010000,
    0x00004000, 0x04000000, 0x00200000, 0x00000200, 0x00800000, 0x00000001,
    0x00010000, 0x00100004, 0x00000400, 0x00400000, 0x00200000, 0x00000001,
    0x04000000, 0x00004000, 0x00800000, 0x00020000, 0x00400000, 0x00000400,
    0x10000000, 0x00000004, 0x00020000, 0x00000003, 0x00000800, 0x00000400,
    0x00080000, 0x80000000, 0x00000002, 0x10000000, 0x00800000, 0x00000800,
    0x00004000, 0x20000000, 0x00001000, 0x00000100, 0x00000001, 0x00004000,
    0x20000000, 0x00000002, 0x00000020, 0x08000000, 0x00000040, 0x00800000,
    0x00000004, 0x00000800, 0x01000000, 0x00200000, 0x00002000, 0x00000200,
    0x04000000, 0x00200000, 0x01000000, 0x01000000, 0x00100000, 0x01000000,
    0x00400000, 0x00000001, 0x02000000, 0x00004000, 0x00000040, 0x00000001,
    0x00010000, 0x00010000, 0x00200080, 0x00010000, 0x00008000, 0x00000010,
    0x00000040, 0x00000010, 0x08000000, 0x00000001, 0x10000000, 0x10000008,
    0x00000200, 0x01000000, 0x00400000, 0x00200000, 0x20000000, 0x00001000,
    0x00000100, 0x00020000, 0x00000020, 0x00002000, 0x00100000, 0x00080000,
    0x80200000, 0x00000800, 0x00400000, 0x02000000, 0x00000003, 0x00020000,
    0x80000000, 0x40000000, 0x00000080, 0x00008000, 0x00002000, 0x00200000,
    0x00200000, 0x00000001, 0x00008000, 0x00800000, 0x00400000, 0x00000200,
    0x00000800, 0x00010000, 0x00400000, 0x00000080, 0x80000000, 0x00200000,
    0x00040000, 0x00000004, 0x00200000, 0x00010000, 0x00000400, 0x00000800,
    0x00000010, 0x02000000, 0x01000000, 0x00020000, 0x00000200, 0x00040000,
    0x00800000, 0x00000040, 0x00010000};
    }

    const static UnicodeSet chu_Set{const_cast<UnicodeSet::run_t *>(__chu_Set_runs), 275, 0, const_cast<UnicodeSet::bitquad_t *>(__chu_Set_quads), 153, 0};

    /** Code Point Ranges for na
    [35d9, 35d9], [3a25, 3a25], [3a8e, 3a8e], [3b8f, 3b8f], [3d4a, 3d4a],
    [422b, 422b], [42c8, 42c8], [42fe, 42fe], [438e, 438e], [43e7, 43e7],
    [4593, 4593], [45a7, 45a7], [46d4, 46d4], [47dc, 47dc], [4a8f, 4a8f],
    [4e78, 4e78], [5185, 5185], [5357, 5357], [5450, 5450], [5476, 5476],
    [54ea, 54ea], [59a0, 59a0], [5a1c, 5a1c], [6290, 6290], [62cf, 62cf],
    [62ff, 62ff], [6310, 6310], [637a, 637a], [6df0, 6df0], [79c5, 79c5],
    [7b1a, 7b1a], [7b1d, 7b1d], [7bac, 7bac], [7d0d, 7d0d], [7d6e, 7d6e],
    [80ad, 80ad], [8498, 8498], [84b3, 84b3], [8872, 8872], [88a6, 88a6],
    [8a24, 8a24], [8a49, 8a49], [8abd, 8abd], [8c7d, 8c7d], [8c80, 8c80],
    [8e43, 8e43], [8edc, 8edc], [90a3, 90a3], [90cd, 90cd], [9209, 9209],
    [93bf, 93bf], [96eb, 96eb], [9779, 9779], [9b76, 9b76], [20544, 20544],
    [20c72, 20c72], [20d3e, 20d3e], [21919, 21919], [21c00, 21c00],
    [21ddd, 21ddd], [221f5, 221f5], [224c7, 224c7], [22732, 22732],
    [2284f, 2284f], [2315a, 2315a], [23870, 23870], [23e0f, 23e0f],
    [23e75, 23e75], [244f7, 244f7], [24500, 24500], [24752, 24752],
    [24864, 24864], [24b37, 24b37], [24b60, 24b60], [24c45, 24c46],
    [24dc8, 24dc8], [24e0f, 24e0f], [24e3b, 24e3b], [25372, 25372],
    [25452, 25452], [25e49, 25e49], [25fc3, 25fc3], [2665c, 2665c],
    [266d0, 266d0], [268c0, 268c0], [26b3b, 26b3b], [26cd0, 26cd0],
    [272e1, 272e1], [2763d, 2763d], [27923, 27923], [279ae, 279ae],
    [27c39, 27c39], [2969b, 2969b], [29b85, 29b85], [29bb8, 29bb8],
    [29e7e, 29e7e], [2a305, 2a305], [2a400, 2a400], [2a5dd, 2a5dd]**/


    namespace {
    const static UnicodeSet::run_t __na_Set_runs[] = {
    {Empty, 430}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 8}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 7}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 1}, {Mixed, 3},
    {Empty, 2}, {Mixed, 1}, {Empty, 83}, {Mixed, 1}, {Empty, 94},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 30}, {Mixed, 2}, {Empty, 29}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 13}, {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 9}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 2894}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 94},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 71}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 51}, {Mixed, 2}, {Empty, 17}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 41}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 79},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 48}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 210}, {Mixed, 1},
    {Empty, 39}, {Mixed, 2}, {Empty, 21}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 29393}};
    const static UnicodeSet::bitquad_t  __na_Set_quads[] = {
    0x02000000, 0x00000020, 0x00004000, 0x00008000, 0x00000400, 0x00000800,
    0x00000100, 0x40000000, 0x00004000, 0x00000080, 0x00080000, 0x00000080,
    0x00100000, 0x10000000, 0x00008000, 0x01000000, 0x00000020, 0x00800000,
    0x00010000, 0x00400000, 0x00000400, 0x00000001, 0x10000000, 0x00010000,
    0x00008000, 0x80000000, 0x00010000, 0x04000000, 0x00010000, 0x00000020,
    0x24000000, 0x00001000, 0x00002000, 0x00004000, 0x00002000, 0x01000000,
    0x00080000, 0x00040000, 0x00000040, 0x00000010, 0x00000200, 0x20000000,
    0x20000000, 0x00000001, 0x00000008, 0x10000000, 0x00000008, 0x00002000,
    0x00000200, 0x80000000, 0x00000800, 0x02000000, 0x00400000, 0x00000010,
    0x00040000, 0x40000000, 0x02000000, 0x00000001, 0x20000000, 0x00200000,
    0x00000080, 0x00040000, 0x00008000, 0x04000000, 0x00010000, 0x00008000,
    0x00200000, 0x00800000, 0x00000001, 0x00040000, 0x00000010, 0x00800000,
    0x00000001, 0x00000060, 0x00000100, 0x00008000, 0x08000000, 0x00040000,
    0x00040000, 0x00000200, 0x00000008, 0x10000000, 0x00010000, 0x00000001,
    0x08000000, 0x00010000, 0x00000002, 0x20000000, 0x00000008, 0x00004000,
    0x02000000, 0x08000000, 0x00000020, 0x01000000, 0x40000000, 0x00000020,
    0x00000001, 0x20000000};
    }

    const static UnicodeSet na_Set{const_cast<UnicodeSet::run_t *>(__na_Set_runs), 173, 0, const_cast<UnicodeSet::bitquad_t *>(__na_Set_quads), 98, 0};

    /** Code Point Ranges for hong
    [35e2, 35e2], [38ac, 38ac], [39e6, 39e6], [3b34, 3b34], [3db9, 3db9],
    [4027, 4027], [40ab, 40ab], [40d4, 40d4], [4196, 4196], [41aa, 41aa],
    [427a, 427a], [4395, 4395], [472b, 472b], [4791, 4791], [49c6, 49c6],
    [4aa6, 4aa6], [4afa, 4afa], [4ca8, 4ca8], [4edc, 4edc], [5171, 5171],
    [53b7, 53b7], [53ff, 53ff], [5430, 5430], [543d, 543d], [54c4, 54c5],
    [55ca, 55ca], [569d, 569d], [57ac, 57ac], [5a02, 5a02], [5b8f, 5b8f],
    [5b96, 5b96], [5c78, 5c78], [5dc6, 5dc6], [5f18, 5f18], [5f4b, 5f4b],
    [6129, 6129], [63c8, 63c8], [6494, 6494], [664e, 664e], [6c6a, 6c6a],
    [6c6f, 6c6f], [6cd3, 6cd3], [6d1a, 6d1a], [6d2a, 6d2a], [6d64, 6d64],
    [6d72, 6d72], [6e2f, 6e2f], [6e31, 6e31], [6e39, 6e39], [6f8b, 6f8b],
    [6f92, 6f92], [7074, 7074], [70d8, 70d8], [7122, 7122], [7392, 7392],
    [74e8, 74e8], [7854, 7854], [7861, 7861], [7ad1, 7ad1], [7bca, 7bca],
    [7d05, 7d05], [7d18, 7d18], [7d8b, 7d8b], [7fc3, 7fc3], [803e, 803e],
    [823c, 823c], [82f0, 82f0], [8452, 8453], [857b, 857b], [85a8, 85a8],
    [8679, 8679], [8a07, 8a07], [8a0c, 8a0c], [8b0d, 8b0d], [8c39, 8c39],
    [8c3c, 8c3c], [8c3e, 8c3e], [8f37, 8f37], [8f5f, 8f5f], [921c, 921c],
    [9277, 9277], [92be, 92be], [92d0, 92d0], [9367, 9367], [958e, 958e],
    [95a7, 95a7], [95c2, 95c2], [9710, 9710], [971f, 971f], [9783, 9783],
    [9b28, 9b28], [9b5f, 9b5f], [9d3b, 9d3b], [9ecc, 9ecc], [2043f, 2043f],
    [20ab7, 20ab7], [20c93, 20c93], [20cc3, 20cc3], [20e45, 20e45],
    [211f3, 211f3], [21d53, 21d53], [21ead, 21ead], [22094, 22094],
    [225f5, 225f5], [2260c, 2260c], [22741, 22741], [22985, 22985],
    [22b00, 22b00], [22f26, 22f26], [23f5d, 23f5d], [240b2, 240b2],
    [240eb, 240eb], [2410f, 2410f], [247fc, 247fc], [2523f, 2523f],
    [253d5, 253d5], [254f0, 254f0], [25500, 25500], [25557, 25557],
    [25948, 25948], [25961, 25961], [25c32, 25c32], [26077, 26077],
    [263fa, 263fa], [26433, 26433], [2645f, 26460], [26483, 26483],
    [26560, 26560], [26577, 26577], [26d93, 26d93], [2723d, 2723d],
    [272af, 272af], [272d4, 272d4], [2742c, 2742c], [27bb4, 27bb4],
    [27fa7, 27fa7], [282ee, 282ee], [28306, 28306], [28397, 28397],
    [288a3, 288a3], [2897a, 2897a], [28e41, 28e41], [28f8a, 28f8a],
    [29420, 29420], [29493, 29493], [294b4, 294b4], [294bc, 294bc],
    [294c5, 294c5], [29546, 29546], [29549, 29549], [29589, 29589],
    [295c4, 295c4], [295e2, 295e2], [29607, 29607], [2960e, 2960e],
    [2965b, 2965b], [29c13, 29c13], [29da5, 29da5], [2a218, 2a218]**/


    namespace {
    const static UnicodeSet::run_t __hong_Set_runs[] = {
    {Empty, 431}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 5}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 26}, {Mixed, 2},
    {Empty, 18}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 23}, {Mixed, 2}, {Empty, 21}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 16}, {Mixed, 3}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 28}, {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 2858}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 90}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 42},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 128},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 54}, {Mixed, 1}, {Empty, 81}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 31},
    {Mixed, 2}, {Empty, 21}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 1}, {Mixed, 4}, {Empty, 6}, {Mixed, 1},
    {Empty, 64}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 59}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 25}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 29423}};
    const static UnicodeSet::bitquad_t  __hong_Set_quads[] = {
    0x00000004, 0x00001000, 0x00000040, 0x00100000, 0x02000000, 0x00000080,
    0x00000800, 0x00100000, 0x00400000, 0x00000400, 0x04000000, 0x00200000,
    0x00000800, 0x00020000, 0x00000040, 0x00000040, 0x04000000, 0x00000100,
    0x10000000, 0x00020000, 0x00800000, 0x80000000, 0x20010000, 0x00000030,
    0x00000400, 0x20000000, 0x00001000, 0x00000004, 0x00408000, 0x01000000,
    0x00000040, 0x01000000, 0x00000800, 0x00000200, 0x00000100, 0x00100000,
    0x00004000, 0x00008400, 0x00080000, 0x04000000, 0x00000400, 0x00040010,
    0x02028000, 0x00040800, 0x00100000, 0x01000000, 0x00000004, 0x00040000,
    0x00000100, 0x00100000, 0x00000002, 0x00020000, 0x00000400, 0x01000020,
    0x00000800, 0x00000008, 0x40000000, 0x10000000, 0x00010000, 0x000c0000,
    0x08000000, 0x00000100, 0x02000000, 0x00001080, 0x00002000, 0x52000000,
    0x00800000, 0x80000000, 0x10000000, 0x00800000, 0x40000000, 0x00010000,
    0x00000080, 0x00004000, 0x00000080, 0x00000004, 0x80010000, 0x00000008,
    0x00000100, 0x80000000, 0x08000000, 0x00001000, 0x80000000, 0x00800000,
    0x00080000, 0x00000008, 0x00000020, 0x00080000, 0x00080000, 0x00002000,
    0x00100000, 0x00200000, 0x00001000, 0x00000002, 0x00000020, 0x00000001,
    0x00000040, 0x20000000, 0x00040000, 0x00000800, 0x00008000, 0x10000000,
    0x80000000, 0x00200000, 0x00010000, 0x00000001, 0x00800000, 0x00000100,
    0x00000002, 0x00040000, 0x00800000, 0x04000000, 0x00080000, 0x80000000,
    0x00000001, 0x00000008, 0x00800001, 0x00080000, 0x20000000, 0x00008000,
    0x00100000, 0x00001000, 0x00100000, 0x00000080, 0x00004000, 0x00000040,
    0x00800000, 0x00000008, 0x04000000, 0x00000002, 0x00000400, 0x00000001,
    0x00080000, 0x10100000, 0x00000020, 0x00000240, 0x00000200, 0x00000010,
    0x00000004, 0x00004080, 0x08000000, 0x00080000, 0x00000020, 0x01000000};
    }

    const static UnicodeSet hong_Set{const_cast<UnicodeSet::run_t *>(__hong_Set_runs), 245, 0, const_cast<UnicodeSet::bitquad_t *>(__hong_Set_quads), 144, 0};

    /** Code Point Ranges for cu
    [35e4, 35e4], [40da, 40da], [44da, 44da], [466f, 466f], [46e4, 46e4],
    [47df, 47df], [4813, 4813], [4890, 4890], [48ef, 48ef], [4944, 4944],
    [4e14, 4e14], [4fc3, 4fc3], [5352, 5352], [5648, 5648], [5a15, 5a16],
    [5f82, 5f82], [601a, 601a], [61b1, 61b1], [621a, 621a], [637d, 637d],
    [6b82, 6b82], [731d, 731d], [7604, 7604], [762f, 762f], [76bb, 76bb],
    [7c07, 7c07], [7c97, 7c97], [7e10, 7e10], [7e2c, 7e2c], [8128, 8128],
    [850d, 850d], [8516, 8516], [851f, 851f], [89d5, 89d5], [8a8e, 8a8e],
    [8d97, 8d97], [8da3, 8da3], [8da5, 8da5], [8da8, 8da8], [8e00, 8e00],
    [8e13, 8e13], [8e24, 8e24], [8e27, 8e27], [8e59, 8e59], [8e74, 8e74],
    [9162, 9162], [918b, 918b], [932f, 932f], [9863, 9863], [9e86, 9e86],
    [9ea4, 9ea4], [9f00, 9f00], [2046f, 2046f], [206d9, 206d9],
    [20c59, 20c59], [20d2b, 20d2b], [21131, 21131], [2161b, 2161b],
    [21749, 21749], [2179c, 2179c], [22127, 22127], [22220, 22220],
    [22a83, 22a83], [245c1, 245c1], [246cf, 246cf], [2483d, 2483d],
    [24fda, 24fda], [25157, 25157], [25ab1, 25ab1], [25dfc, 25dfc],
    [25ed2, 25ed2], [25f9b, 25f9b], [267e0, 267e0], [26801, 26801],
    [26be3, 26be3], [27193, 27193], [27eb2, 27eb2], [27f1c, 27f1c],
    [2a4e1, 2a4e1], [2a4f0, 2a4f0], [2a55d, 2a55d], [2a6af, 2a6af]**/


    namespace {
    const static UnicodeSet::run_t __cu_Set_runs[] = {
    {Empty, 431}, {Mixed, 1}, {Empty, 86}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 23}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11},
    {Mixed, 2}, {Empty, 23}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 23},
    {Mixed, 2}, {Empty, 2}, {Mixed, 4}, {Empty, 23}, {Mixed, 2},
    {Empty, 12}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 48},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2858}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 76}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 217},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 60}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 74},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 66}, {Mixed, 2}, {Empty, 30}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 104}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 302}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 29386}};
    const static UnicodeSet::bitquad_t  __cu_Set_quads[] = {
    0x00000010, 0x04000000, 0x04000000, 0x00008000, 0x00000010, 0x80000000,
    0x00080000, 0x00010000, 0x00008000, 0x00000010, 0x00100000, 0x00000008,
    0x00040000, 0x00000100, 0x00600000, 0x00000004, 0x04000000, 0x00020000,
    0x04000000, 0x20000000, 0x00000004, 0x20000000, 0x00000010, 0x00008000,
    0x08000000, 0x00000080, 0x00800000, 0x00010000, 0x00001000, 0x00000100,
    0x80402000, 0x00200000, 0x00004000, 0x00800000, 0x00000128, 0x00080001,
    0x00000090, 0x02000000, 0x00100000, 0x00000004, 0x00000800, 0x00008000,
    0x00000008, 0x00000040, 0x00000010, 0x00000001, 0x00008000, 0x02000000,
    0x02000000, 0x00000800, 0x00020000, 0x08000000, 0x00000200, 0x10000000,
    0x00000080, 0x00000001, 0x00000008, 0x00000002, 0x00008000, 0x20000000,
    0x04000000, 0x00800000, 0x00020000, 0x10000000, 0x00040000, 0x08000000,
    0x00000001, 0x00000002, 0x00000008, 0x00080000, 0x00040000, 0x10000000,
    0x00010002, 0x20000000, 0x00008000};
    }

    const static UnicodeSet cu_Set{const_cast<UnicodeSet::run_t *>(__cu_Set_runs), 133, 0, const_cast<UnicodeSet::bitquad_t *>(__cu_Set_quads), 75, 0};

    /** Code Point Ranges for kuo
    [35e5, 35e5], [3fa7, 3fa7], [47ef, 47ef], [4a79, 4a79], [564b, 564b],
    [5672, 5672], [5ed3, 5ed3], [61d6, 61d6], [62ec, 62ec], [6304, 6304],
    [64f4, 64f4], [6703, 6703], [681d, 681d], [6870, 6870], [6f37, 6f37],
    [71ed, 71ed], [79f3, 79f3], [7b48, 7b48], [843f, 8440], [86de, 86de],
    [9002, 9002], [913a, 913a], [95ca, 95ca], [9729, 9729], [979f, 979f],
    [9822, 9822], [9afa, 9afa], [9b20, 9b20], [2080e, 2080e],
    [21392, 21392], [21ed9, 21ed9], [2281b, 2281b], [24af5, 24af5],
    [2554f, 2554f], [269cd, 269cd], [269d4, 269d4], [284c8, 284c8],
    [28a31, 28a31], [28d90, 28d90], [292fb, 292fb], [2a5fd, 2a5fd]**/


    namespace {
    const static UnicodeSet::run_t __kuo_Set_runs[] = {
    {Empty, 431}, {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 65},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 94}, {Mixed, 2},
    {Empty, 66}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 63}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 70}, {Mixed, 2}, {Empty, 19}, {Mixed, 1},
    {Empty, 73}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2918}, {Mixed, 1}, {Empty, 91}, {Mixed, 1}, {Empty, 89},
    {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 278}, {Mixed, 1},
    {Empty, 82}, {Mixed, 1}, {Empty, 163}, {Mixed, 1}, {Empty, 215},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 151}, {Mixed, 1}, {Empty, 29392}};
    const static UnicodeSet::bitquad_t  __kuo_Set_quads[] = {
    0x00000020, 0x00000080, 0x00008000, 0x02000000, 0x00000800, 0x00040000,
    0x00080000, 0x00400000, 0x00001000, 0x00000010, 0x00100000, 0x00000008,
    0x20000000, 0x00010000, 0x00800000, 0x00002000, 0x00080000, 0x00000100,
    0x80000000, 0x00000001, 0x40000000, 0x00000004, 0x04000000, 0x00000400,
    0x00000200, 0x80000000, 0x00000004, 0x04000000, 0x00000001, 0x00004000,
    0x00040000, 0x02000000, 0x08000000, 0x00200000, 0x00008000, 0x00102000,
    0x00000100, 0x00020000, 0x00010000, 0x08000000, 0x20000000};
    }

    const static UnicodeSet kuo_Set{const_cast<UnicodeSet::run_t *>(__kuo_Set_runs), 77, 0, const_cast<UnicodeSet::bitquad_t *>(__kuo_Set_quads), 41, 0};

    /** Code Point Ranges for lao
    [35e6, 35e6], [37c9, 37c9], [37f9, 37f9], [39ef, 39ef], [3e90, 3e90],
    [40d5, 40d5], [41ed, 41ed], [4569, 4569], [470e, 470e], [472e, 472e],
    [4741, 4741], [4764, 4764], [4c8f, 4c8f], [4cd3, 4cd3], [4d4f, 4d4f],
    [4f6c, 4f6c], [50d7, 50d7], [50da, 50da], [52de, 52de], [54be, 54be],
    [54f0, 54f0], [5610, 5610], [562e, 562e], [59e5, 59e5], [5aea, 5aea],
    [5afd, 5afd], [5d97, 5d97], [6045, 6045], [61a5, 61a6], [6488, 6488],
    [64a9, 64a9], [6833, 6833], [6a51, 6a51], [6a6f, 6a6f], [6d76, 6d76],
    [6f66, 6f66], [6f87, 6f87], [70d9, 70d9], [7262, 7262], [72eb, 72eb],
    [7360, 7360], [7646, 7646], [7c29, 7c29], [7d61, 7d61], [8001, 8001],
    [802e, 802e], [8356, 8356], [843d, 843d], [84fc, 84fc], [87e7, 87e7],
    [8ec2, 8ec2], [8f51, 8f51], [916a, 916a], [91aa, 91aa], [92a0, 92a0],
    [9412, 9412], [985f, 985f], [9add, 9add], [2022d, 2022d],
    [21095, 21095], [2144d, 2144d], [21b18, 21b18], [22684, 22684],
    [22b42, 22b42], [2362a, 2362a], [237fd, 237fd], [2383c, 2383c],
    [2424d, 2424d], [243a4, 243a4], [246ee, 246ee], [24a42, 24a42],
    [24d81, 24d81], [25892, 25892], [264b4, 264b4], [26e9c, 26e9c],
    [2788b, 2788b], [27bcd, 27bcd], [28864, 28864], [288c3, 288c3],
    [289ad, 289ad], [28cae, 28cae], [2a027, 2a027], [2a054, 2a054]**/


    namespace {
    const static UnicodeSet::run_t __lao_Set_runs[] = {
    {Empty, 431}, {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 15},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 12},
    {Mixed, 4}, {Empty, 40}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 29}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 27},
    {Mixed, 1}, {Empty, 16}, {Mixed, 2}, {Empty, 23}, {Mixed, 1},
    {Empty, 15}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 20}, {Mixed, 2}, {Empty, 24}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 2874}, {Mixed, 1}, {Empty, 114}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 91}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 86}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 80}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 87}, {Mixed, 1},
    {Empty, 96}, {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 79},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 100}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 155}, {Mixed, 2}, {Empty, 29437}};
    const static UnicodeSet::bitquad_t  __lao_Set_quads[] = {
    0x00000040, 0x00000200, 0x02000000, 0x00008000, 0x00010000, 0x00200000,
    0x00002000, 0x00000200, 0x00004000, 0x00004000, 0x00000002, 0x00000010,
    0x00008000, 0x00080000, 0x00008000, 0x00001000, 0x04800000, 0x40000000,
    0x40000000, 0x00010000, 0x00010000, 0x00004000, 0x00000020, 0x20000400,
    0x00800000, 0x00000020, 0x00000060, 0x00000100, 0x00000200, 0x00080000,
    0x00020000, 0x00008000, 0x00400000, 0x00000040, 0x00000080, 0x02000000,
    0x00000004, 0x00000800, 0x00000001, 0x00000040, 0x00000200, 0x00000002,
    0x00000002, 0x00004000, 0x00400000, 0x20000000, 0x10000000, 0x00000080,
    0x00000004, 0x00020000, 0x00000400, 0x00000400, 0x00000001, 0x00040000,
    0x80000000, 0x20000000, 0x00002000, 0x00200000, 0x00002000, 0x01000000,
    0x00000010, 0x00000004, 0x00000400, 0x20000000, 0x10000000, 0x00002000,
    0x00000010, 0x00004000, 0x00000004, 0x00000002, 0x00040000, 0x00100000,
    0x10000000, 0x00000800, 0x00002000, 0x00000010, 0x00000008, 0x00002000,
    0x00004000, 0x00000080, 0x00100000};
    }

    const static UnicodeSet lao_Set{const_cast<UnicodeSet::run_t *>(__lao_Set_runs), 143, 0, const_cast<UnicodeSet::bitquad_t *>(__lao_Set_quads), 81, 0};

    /** Code Point Ranges for cong
    [35f0, 35f0], [3721, 3721], [37b1, 37b1], [3956, 3956], [3f3b, 3f3b],
    [4221, 4221], [440b, 440b], [442b, 442b], [44d7, 44d7], [457a, 457a],
    [45d3, 45d3], [486f, 486f], [48a8, 48a8], [4c0c, 4c0c], [4cf7, 4cf7],
    [506c, 506c], [5306, 5306], [53e2, 53e2], [56f1, 56f1], [5a43, 5a43],
    [5b6e, 5b6e], [5f96, 5f96], [5f9e, 5f9e], [6031, 6031], [60a4, 60a4],
    [60b0, 60b0], [6152, 6152], [6181, 6181], [66b0, 66b0], [68c7, 68c7],
    [6964, 6964], [6a05, 6a05], [6a37, 6a37], [6b09, 6b09], [6dd9, 6dd9],
    [6f0e, 6f0e], [6f17, 6f17], [6f68, 6f68], [7047, 7047], [7127, 7127],
    [719c, 719c], [721c, 721c], [742e, 742e], [747d, 747d], [7481, 7481],
    [779b, 779b], [7882, 7882], [7a97, 7a97], [7bf5, 7bf5], [7dcf, 7dcf],
    [7e31, 7e31], [7e3d, 7e3d], [8070, 8070], [83c6, 83c6], [8471, 8471],
    [84ef, 84ef], [85c2, 85c2], [8ab4, 8ab4], [8ce8, 8ce8], [93d3, 93d3],
    [93e6, 93e6], [9a44, 9a44], [200a5, 200a5], [20541, 20541],
    [20642, 20642], [2089b, 2089b], [20930, 20930], [21147, 21147],
    [217df, 217df], [219b7, 219b7], [21d77, 21d77], [21e78, 21e78],
    [220cf, 220cf], [22295, 22295], [22414, 22414], [22529, 22529],
    [230d7, 230d7], [232b7, 232b7], [24113, 24113], [25377, 25377],
    [2538b, 2538b], [2586c, 2586c], [258d9, 258d9], [25ba8, 25ba8],
    [25d6b, 25d6b], [261ce, 261ce], [261f1, 261f1], [265dc, 265dc],
    [26770, 26770], [27431, 27431], [274cf, 274cf], [2776e, 2776e],
    [27a6a, 27a6a], [280b4, 280b4], [28349, 28349], [2846a, 2846a],
    [28480, 28480], [2886e, 2886e], [289b1, 289b1], [28c78, 28c78],
    [28ca7, 28ca7], [28f41, 28f41], [29b3c, 29b3c], [29bcd, 29bcd]**/


    namespace {
    const static UnicodeSet::run_t __cong_Set_runs[] = {
    {Empty, 431}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 23}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 54}, {Mixed, 2}, {Empty, 50}, {Mixed, 1}, {Empty, 2866},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 64},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 114}, {Mixed, 1}, {Empty, 146}, {Mixed, 2},
    {Empty, 38}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 34}, {Mixed, 2},
    {Empty, 30}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 101},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 30}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 94}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 29473}};
    const static UnicodeSet::bitquad_t  __cong_Set_quads[] = {
    0x00010000, 0x00000002, 0x00020000, 0x00400000, 0x08000000, 0x00000002,
    0x00000800, 0x00000800, 0x00800000, 0x04000000, 0x00080000, 0x00008000,
    0x00000100, 0x00001000, 0x00800000, 0x00001000, 0x00000040, 0x00000004,
    0x00020000, 0x00000008, 0x00004000, 0x40400000, 0x00020000, 0x00010010,
    0x00040000, 0x00000002, 0x00010000, 0x00000080, 0x00000010, 0x00000020,
    0x00800000, 0x00000200, 0x02000000, 0x00804000, 0x00000100, 0x00000080,
    0x00000080, 0x10000000, 0x10000000, 0x00004000, 0x20000000, 0x00000002,
    0x08000000, 0x00000004, 0x00800000, 0x00200000, 0x00008000, 0x20020000,
    0x00010000, 0x00000040, 0x00020000, 0x00008000, 0x00000004, 0x00100000,
    0x00000100, 0x00080000, 0x00000040, 0x00000010, 0x00000020, 0x00000002,
    0x00000004, 0x08000000, 0x00010000, 0x00000080, 0x80000000, 0x00800000,
    0x00800000, 0x01000000, 0x00008000, 0x00200000, 0x00100000, 0x00000200,
    0x00800000, 0x00800000, 0x00080000, 0x00800000, 0x00000800, 0x00001000,
    0x02000000, 0x00000100, 0x00000800, 0x00004000, 0x00020000, 0x10000000,
    0x00010000, 0x00020000, 0x00008000, 0x00004000, 0x00000400, 0x00100000,
    0x00000200, 0x00000400, 0x00000001, 0x00004000, 0x00020000, 0x01000000,
    0x00000080, 0x00000002, 0x10000000, 0x00002000};
    }

    const static UnicodeSet cong_Set{const_cast<UnicodeSet::run_t *>(__cong_Set_runs), 187, 0, const_cast<UnicodeSet::bitquad_t *>(__cong_Set_quads), 100, 0};

    /** Code Point Ranges for da
    [35f3, 35f3], [366e, 366e], [3713, 3713], [37f7, 37f7], [3a49, 3a49],
    [3bd3, 3bd3], [3f91, 3f91], [3fef, 3fef], [3ff4, 3ff4], [40ee, 40ee],
    [430b, 430b], [4a62, 4a62], [4a8f, 4a8f], [4a9a, 4a9a], [4cf4, 4cf4],
    [4d63, 4d63], [50e4, 50e4], [5273, 5273], [5312, 5312], [547e, 547e],
    [55d2, 55d2], [5660, 5660], [584c, 584c], [5854, 5854], [5927, 5927],
    [59b2, 59b2], [601b, 601b], [619a, 619a], [6253, 6253], [6428, 6428],
    [642d, 642d], [6bfc, 6bfc], [6c4f, 6c4f], [6c93, 6c93], [6e9a, 6e9a],
    [709f, 709f], [7557, 7557], [75b8, 75b8], [7629, 7629], [7714, 7714],
    [77fa, 77fa], [7b1a, 7b1a], [7b2a, 7b2a], [7b54, 7b54], [7f8d, 7f8d],
    [8037, 8037], [80c6, 80c6], [8345, 8345], [8598, 8598], [87fd, 87fd],
    [8921, 8921], [89f0, 89f0], [8a5a, 8a5a], [8e82, 8e82], [8fbe, 8fbe],
    [8fed, 8fed], [9054, 9054], [9389, 9389], [939d, 939d], [943d, 943d],
    [977c, 977c], [97c3, 97c3], [9f96, 9f96], [9f98, 9f98], [20264, 20264],
    [20788, 20788], [20dab, 20dab], [20e65, 20e65], [21210, 21210],
    [21251, 21251], [21329, 21329], [21372, 21372], [2143f, 2143f],
    [216bb, 216bb], [22607, 22607], [226c1, 226c1], [22749, 22749],
    [22f47, 22f47], [2332d, 2332d], [238f4, 238f4], [2397e, 2397e],
    [23e09, 23e09], [24770, 24770], [2490a, 2490a], [24a11, 24a11],
    [2524c, 2524c], [25547, 25547], [26080, 26080], [2647b, 2647b],
    [265bf, 265bf], [265e7, 265e7], [26782, 26782], [26aad, 26aad],
    [26b39, 26b39], [28153, 28153], [281b0, 281b0], [285fe, 285fe],
    [28a39, 28a39], [293d2, 293d2], [29763, 29763], [297d0, 297d0],
    [298ef, 298ef], [29b63, 29b63], [29e97, 29e97]**/


    namespace {
    const static UnicodeSet::run_t __da_Set_runs[] = {
    {Empty, 431}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 58}, {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 24}, {Mixed, 3},
    {Empty, 33}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 2838}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 122}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 63}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 89}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 176},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 29451}};
    const static UnicodeSet::bitquad_t  __da_Set_quads[] = {
    0x00080000, 0x00004000, 0x00080000, 0x00800000, 0x00000200, 0x00080000,
    0x00020000, 0x00108000, 0x00004000, 0x00000800, 0x00000004, 0x04008000,
    0x00100000, 0x00000008, 0x00000010, 0x00080000, 0x00040000, 0x40000000,
    0x00040000, 0x00000001, 0x00101000, 0x00000080, 0x00040000, 0x08000000,
    0x04000000, 0x00080000, 0x00002100, 0x10000000, 0x00008000, 0x00080000,
    0x04000000, 0x80000000, 0x00800000, 0x01000000, 0x00000200, 0x00100000,
    0x04000000, 0x04000000, 0x00000400, 0x00100000, 0x00002000, 0x00800000,
    0x00000040, 0x00000020, 0x01000000, 0x20000000, 0x00000002, 0x00010000,
    0x04000000, 0x00000004, 0x40000000, 0x00002000, 0x00100000, 0x20000200,
    0x20000000, 0x10000000, 0x00000008, 0x01400000, 0x00000010, 0x00000100,
    0x00000800, 0x00000020, 0x00010000, 0x00020000, 0x00000200, 0x00040000,
    0x80000000, 0x08000000, 0x00000080, 0x00000002, 0x00000200, 0x00000080,
    0x00002000, 0x00100000, 0x40000000, 0x00000200, 0x00010000, 0x00000400,
    0x00020000, 0x00001000, 0x00000080, 0x00000001, 0x08000000, 0x80000000,
    0x00000080, 0x00000004, 0x00002000, 0x02000000, 0x00080000, 0x00010000,
    0x40000000, 0x02000000, 0x00040000, 0x00000008, 0x00010000, 0x00008000,
    0x00000008, 0x00800000};
    }

    const static UnicodeSet da_Set{const_cast<UnicodeSet::run_t *>(__da_Set_runs), 191, 0, const_cast<UnicodeSet::bitquad_t *>(__da_Set_quads), 98, 0};

    /** Code Point Ranges for po
    [35f6, 35f6], [36d8, 36d8], [3915, 3915], [39ca, 39ca], [3a07, 3a07],
    [3a6f, 3a6f], [4138, 4138], [42e3, 42e3], [4368, 4368], [4385, 4385],
    [438a, 438a], [479f, 479f], [48ea, 48ea], [4a30, 4a30], [4a99, 4a99],
    [4bd9, 4bd9], [53f5, 53f5], [54f1, 54f1], [5619, 5619], [5761, 5761],
    [5964, 5964], [5a46, 5a46], [5c03, 5c03], [5c70, 5c70], [5ca5, 5ca5],
    [5cb6, 5cb6], [5dff, 5dff], [642b, 642b], [6540, 6540], [6622, 6622],
    [6734, 6734], [6ac7, 6ac7], [6cca, 6cca], [6d26, 6d26], [6ea5, 6ea5],
    [6f51, 6f51], [6ffc, 6ffc], [70de, 70de], [733c, 733c], [73c0, 73c0],
    [756a, 756a], [769b, 769b], [76a4, 76a4], [7834, 7834], [7b38, 7b38],
    [7c95, 7c95], [7e41, 7e41], [7fcd, 7fcd], [818a, 818a], [84aa, 84aa],
    [8522, 8522], [8b08, 8b08], [8ddb, 8ddb], [8feb, 8feb], [9131, 9131],
    [91b1, 91b1], [91d9, 91d9], [9255, 9255], [93fa, 93fa], [9642, 9642],
    [9738, 9738], [9817, 9817], [999e, 999e], [99ca, 99ca], [9ac6, 9ac6],
    [9b44, 9b44], [20c10, 20c10], [20c3c, 20c3c], [20d73, 20d73],
    [20dd1, 20dd1], [20f8c, 20f8c], [2129f, 2129f], [21d86, 21d86],
    [21f03, 21f03], [21f60, 21f60], [220a4, 220a4], [22c68, 22c68],
    [22d89, 22d89], [23378, 23378], [233b5, 233b5], [23b1a, 23b1a],
    [23cb3, 23cb3], [2402a, 2402a], [245bc, 245bc], [2476f, 2476f],
    [24c4d, 24c4d], [24f4c, 24f4c], [25114, 25114], [255df, 255df],
    [25b12, 25b12], [25d5c, 25d5c], [25e56, 25e56], [260e1, 260e1],
    [26341, 26341], [26426, 26426], [26440, 26440], [26475, 26475],
    [2649f, 2649f], [2696d, 2696d], [26972, 26972], [26ad4, 26ad4],
    [26f95, 26f95], [26fcd, 26fcd], [27089, 27089], [2761f, 2761f],
    [27645, 27645], [27d24, 27d24], [27ed9, 27ed9], [27ffd, 27ffd],
    [280a9, 280a9], [28145, 28145], [281b5, 281b5], [2836d, 2836d],
    [2845d, 2845d], [28813, 28813], [28869, 28869], [28ac1, 28ac1],
    [28e2d, 28e2d], [29280, 29280], [2947b, 2947c], [29495, 29495],
    [29508, 29508], [2954f, 2954f], [29898, 29898], [29e3f, 29e3f]**/


    namespace {
    const static UnicodeSet::run_t __po_Set_runs[] = {
    {Empty, 431}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 31}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 8}, {Mixed, 2},
    {Empty, 11}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2949}, {Mixed, 2}, {Empty, 9}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 87}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 93}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 58}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 6}, {Mixed, 4},
    {Empty, 38}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 29454}};
    const static UnicodeSet::bitquad_t  __po_Set_quads[] = {
    0x00400000, 0x01000000, 0x00200000, 0x00000400, 0x00000080, 0x00008000,
    0x01000000, 0x00000008, 0x00000100, 0x00000420, 0x80000000, 0x00000400,
    0x00010000, 0x02000000, 0x02000000, 0x00200000, 0x00020000, 0x02000000,
    0x00000002, 0x00000010, 0x00000040, 0x00000008, 0x00010000, 0x00400020,
    0x80000000, 0x00000800, 0x00000001, 0x00000004, 0x00100000, 0x00000080,
    0x00000400, 0x00000040, 0x00000020, 0x00020000, 0x10000000, 0x40000000,
    0x10000000, 0x00000001, 0x00000400, 0x08000000, 0x00000010, 0x00100000,
    0x01000000, 0x00200000, 0x00000002, 0x00002000, 0x00000400, 0x00000400,
    0x00000004, 0x00000100, 0x08000000, 0x00000800, 0x00020000, 0x00020000,
    0x02000000, 0x00200000, 0x04000000, 0x00000004, 0x01000000, 0x00800000,
    0x40000000, 0x00000400, 0x00000040, 0x00000010, 0x00010000, 0x10000000,
    0x00080000, 0x00020000, 0x00001000, 0x80000000, 0x00000040, 0x00000008,
    0x00000001, 0x00000010, 0x00000100, 0x00000200, 0x01000000, 0x00200000,
    0x04000000, 0x00080000, 0x00000400, 0x10000000, 0x00008000, 0x00002000,
    0x00001000, 0x00100000, 0x80000000, 0x00040000, 0x10000000, 0x00400000,
    0x00000002, 0x00000002, 0x00000040, 0x00000001, 0x00200000, 0x80000000,
    0x00042000, 0x00100000, 0x00200000, 0x00002000, 0x00000200, 0x80000000,
    0x00000020, 0x00000010, 0x02000000, 0x20000000, 0x00000200, 0x00000020,
    0x00200000, 0x00002000, 0x20000000, 0x00080000, 0x00000200, 0x00000002,
    0x00002000, 0x00000001, 0x18000000, 0x00200000, 0x00000100, 0x00008000,
    0x01000000, 0x80000000};
    }

    const static UnicodeSet po_Set{const_cast<UnicodeSet::run_t *>(__po_Set_runs), 229, 0, const_cast<UnicodeSet::bitquad_t *>(__po_Set_quads), 122, 0};

    /** Code Point Ranges for xiang
    [35fd, 35fd], [37c4, 37c4], [4108, 4108], [41e8, 41e8], [441f, 441f],
    [4517, 4517], [4736, 4736], [49b3, 49b3], [4b15, 4b15], [4d02, 4d02],
    [4ea8, 4ea8], [4eab, 4eab], [4f6d, 4f6d], [50a2, 50a2], [50cf, 50cf],
    [5134, 5134], [52e8, 52e8], [52f7, 52f7], [5411, 5411], [554c, 554d],
    [56ae, 56ae], [5842, 5842], [59e0, 59e0], [5d91, 5d91], [5df7, 5df7],
    [5ea0, 5ea0], [5ec2, 5ec2], [5fc0, 5fc0], [60f3, 60f3], [6518, 6518],
    [6651, 6651], [66cf, 66cf], [6819, 6819], [6a23, 6a23], [6a61, 6a61],
    [6b00, 6b00], [6d0b, 6d0b], [6e58, 6e58], [6f52, 6f52], [73e6, 73e6],
    [74d6, 74d6], [74e8, 74e8], [7680, 7680], [76f8, 76f8], [7965, 7965],
    [7bb1, 7bb1], [7d74, 7d74], [7dd7, 7dd7], [7e95, 7e95], [7f3f, 7f3f],
    [7f8f, 7f8f], [7fd4, 7fd4], [81b7, 81b7], [8221, 8221], [842b, 842b],
    [8459, 8459], [858c, 858c], [8618, 8618], [87d3, 87d3], [8801, 8801],
    [8856, 8856], [8944, 8944], [8950, 8950], [8a73, 8a73], [8c61, 8c61],
    [8ded, 8ded], [8fd2, 8fd2], [9109, 9109], [9284, 9284], [9297, 9297],
    [940c, 940c], [9472, 9472], [95a7, 95a7], [95c2, 95c2], [964d, 964d],
    [97ff, 97ff], [9805, 9805], [9909, 9909], [9957, 9957], [9999, 9999],
    [9a64, 9a64], [9b28, 9b28], [9b9d, 9b9d], [9bd7, 9bd7], [9c4c, 9c4c],
    [9d39, 9d39], [20e2e, 20e2e], [21a07, 21a07], [21e77, 21e77],
    [22135, 22135], [226d6, 226d6], [227a1, 227a1], [22837, 22837],
    [22ab7, 22ab7], [22b4e, 22b4e], [2309d, 2309d], [23170, 23170],
    [23a33, 23a33], [23ecd, 23ecd], [2426a, 2426a], [24340, 24340],
    [245bd, 245bd], [24777, 24777], [24a6a, 24a6a], [24b6c, 24b6c],
    [24c05, 24c05], [24dfc, 24dfc], [2503e, 2503e], [252be, 252be],
    [255f5, 255f5], [258df, 258df], [25969, 25969], [25ad6, 25ad6],
    [25fe7, 25fe7], [26372, 26372], [26374, 26374], [26388, 26388],
    [2657a, 2657a], [26ea3, 26ea3], [26ea8, 26ea8], [275bf, 275bf],
    [27b30, 27b30], [28018, 28018], [2827d, 2827d], [285b6, 285b6],
    [28675, 28675], [286dc, 286dc], [289d1, 289d1], [28dc4, 28dc4],
    [29447, 29447], [2977e, 2977e], [29783, 29783], [297a5, 297a5],
    [29844, 29844], [2984c, 2984c], [29860, 29860], [29fac, 29fac],
    [2a0bc, 2a0bc]**/


    namespace {
    const static UnicodeSet::run_t __xiang_Set_runs[] = {
    {Empty, 431}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 73},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2951}, {Mixed, 1}, {Empty, 94}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 69}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 27},
    {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 73}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 24},
    {Mixed, 3}, {Empty, 4}, {Mixed, 2}, {Empty, 57}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 29434}};
    const static UnicodeSet::bitquad_t  __xiang_Set_quads[] = {
    0x20000000, 0x00000010, 0x00000100, 0x00000100, 0x80000000, 0x00800000,
    0x00400000, 0x00080000, 0x00200000, 0x00000004, 0x00000900, 0x00002000,
    0x00000004, 0x00008000, 0x00100000, 0x00800100, 0x00020000, 0x00003000,
    0x00004000, 0x00000004, 0x00000001, 0x00020000, 0x00800000, 0x00000001,
    0x00000004, 0x00000001, 0x00080000, 0x01000000, 0x00020000, 0x00008000,
    0x02000000, 0x00000008, 0x00000002, 0x00000001, 0x00000800, 0x01000000,
    0x00040000, 0x00000040, 0x00400000, 0x00000100, 0x00000001, 0x01000000,
    0x00000020, 0x00020000, 0x00100000, 0x00800000, 0x00200000, 0x80000000,
    0x00008000, 0x00100000, 0x00800000, 0x00000002, 0x00000800, 0x02000000,
    0x00001000, 0x01000000, 0x00080000, 0x00000002, 0x00400000, 0x00010010,
    0x00080000, 0x00000002, 0x00002000, 0x00040000, 0x00000200, 0x00800010,
    0x00001000, 0x00040000, 0x00000080, 0x00000004, 0x00002000, 0x80000000,
    0x00000020, 0x00000200, 0x00800000, 0x02000000, 0x00000010, 0x00000100,
    0x20000000, 0x00800000, 0x00001000, 0x02000000, 0x00004000, 0x00000080,
    0x00800000, 0x00200000, 0x00400000, 0x00000002, 0x00800000, 0x00800000,
    0x00004000, 0x20000000, 0x00010000, 0x00080000, 0x00002000, 0x00000400,
    0x00000001, 0x20000000, 0x00800000, 0x00000400, 0x00001000, 0x00000020,
    0x10000000, 0x40000000, 0x40000000, 0x00200000, 0x80000000, 0x00000200,
    0x00400000, 0x00000080, 0x00140000, 0x00000100, 0x04000000, 0x00000108,
    0x80000000, 0x00010000, 0x01000000, 0x20000000, 0x00400000, 0x00200000,
    0x10000000, 0x00020000, 0x00000010, 0x00000080, 0x40000000, 0x00000008,
    0x00000020, 0x00001010, 0x00000001, 0x00001000, 0x10000000};
    }

    const static UnicodeSet xiang_Set{const_cast<UnicodeSet::run_t *>(__xiang_Set_runs), 243, 0, const_cast<UnicodeSet::bitquad_t *>(__xiang_Set_quads), 131, 0};

    /** Code Point Ranges for zuo
    [3600, 3600], [3638, 3638], [36d7, 36d7], [377e, 377e], [3930, 3930],
    [3a47, 3a47], [3b6e, 3b6e], [3d76, 3d76], [3e32, 3e32], [42cf, 42cf],
    [43b0, 43b0], [476b, 476b], [47a2, 47a2], [47b0, 47b0], [47c4, 47c4],
    [47ed, 47ed], [47f6, 47f6], [4988, 4988], [4e4d, 4e4d], [4f50, 4f50],
    [4f5c, 4f5c], [4fb3, 4fb3], [505a, 505a], [5497, 5497], [5511, 5511],
    [562c, 562c], [5750, 5750], [5c9d, 5c9e], [5de6, 5de6], [5ea7, 5ea7],
    [600d, 600d], [632b, 632b], [637d, 637d], [64ae, 64ae], [6628, 6628],
    [67de, 67de], [67ee, 67ee], [690a, 690a], [7422, 7422], [781f, 781f],
    [795a, 795a], [79e8, 79e8], [7a13, 7a13], [7b2e, 7b2e], [7b70, 7b70],
    [7e53, 7e53], [80d9, 80d9], [82f2, 82f2], [838b, 838b], [8443, 8444],
    [888f, 888f], [8ace, 8ace], [8fee, 8fee], [9162, 9162], [918b, 918b],
    [923c, 923c], [947f, 947f], [963c, 963c], [98f5, 98f5], [20087, 20087],
    [20c6f, 20c6f], [20e60, 20e60], [21ab3, 21ab3], [21be8, 21be8],
    [21e65, 21e65], [22021, 22021], [22083, 22083], [2290e, 2290e],
    [23839, 23839], [23a48, 23a48], [23e67, 23e67], [24fc0, 24fc0],
    [25141, 25141], [25640, 25640], [2594f, 2594f], [25e41, 25e41],
    [25f7f, 25f7f], [2604e, 2604e], [2696c, 2696c], [269b9, 269b9],
    [270d8, 270d8], [27a00, 27a00], [27b99, 27b99], [27cad, 27cad],
    [28028, 28028], [28433, 28433], [28768, 28768], [28792, 28792],
    [296e0, 296e0], [2a387, 2a387], [2a3b2, 2a3b2]**/


    namespace {
    const static UnicodeSet::run_t __zuo_Set_runs[] = {
    {Empty, 432}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 12}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 88}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 11},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 2876},
    {Mixed, 1}, {Empty, 94}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 97}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 67}, {Mixed, 1}, {Empty, 120}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 138}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 25}, {Mixed, 2}, {Empty, 122},
    {Mixed, 1}, {Empty, 100}, {Mixed, 2}, {Empty, 29410}};
    const static UnicodeSet::bitquad_t  __zuo_Set_quads[] = {
    0x00000001, 0x01000000, 0x00800000, 0x40000000, 0x00010000, 0x00000080,
    0x00004000, 0x00400000, 0x00040000, 0x00008000, 0x00010000, 0x00000800,
    0x00010004, 0x00000010, 0x00402000, 0x00000100, 0x00002000, 0x10010000,
    0x00080000, 0x04000000, 0x00800000, 0x00020000, 0x00001000, 0x00010000,
    0x60000000, 0x00000040, 0x00000080, 0x00002000, 0x00000800, 0x20000000,
    0x00004000, 0x00000100, 0x40000000, 0x00004000, 0x00000400, 0x00000004,
    0x80000000, 0x04000000, 0x00000100, 0x00080000, 0x00004000, 0x00010000,
    0x00080000, 0x02000000, 0x00040000, 0x00000800, 0x00000018, 0x00008000,
    0x00004000, 0x00004000, 0x00000004, 0x00000800, 0x10000000, 0x80000000,
    0x10000000, 0x00200000, 0x00000080, 0x00008000, 0x00000001, 0x00080000,
    0x00000100, 0x00000020, 0x00000002, 0x00000008, 0x00004000, 0x02000000,
    0x00000100, 0x00000080, 0x00000001, 0x00000002, 0x00000001, 0x00008000,
    0x00000002, 0x80000000, 0x00004000, 0x00001000, 0x02000000, 0x01000000,
    0x00000001, 0x02000000, 0x00002000, 0x00000100, 0x00080000, 0x00000100,
    0x00040000, 0x00000001, 0x00000080, 0x00040000};
    }

    const static UnicodeSet zuo_Set{const_cast<UnicodeSet::run_t *>(__zuo_Set_runs), 161, 0, const_cast<UnicodeSet::bitquad_t *>(__zuo_Set_quads), 88, 0};

    /** Code Point Ranges for tai
    [3606, 3606], [3b03, 3b03], [3dd8, 3dd8], [421a, 421a], [4536, 4536],
    [5113, 5113], [53f0, 53f0], [5454, 5454], [548d, 548d], [5927, 5927],
    [592a, 592a], [5964, 5964], [5b2f, 5b2f], [5fd5, 5fd5], [5ff2, 5ff2],
    [614b, 614b], [62ac, 62ac], [64e1, 64e1], [6584, 6584], [65f2, 65f2],
    [67b1, 67b1], [6aaf, 6aaf], [6c4f, 6c4f], [6c70, 6c70], [6cf0, 6cf0],
    [6e99, 6e99], [6f26, 6f26], [70b1, 70b1], [71e4, 71e4], [73c6, 73c6],
    [7b88, 7b88], [7c49, 7c49], [80bd, 80bd], [80ce, 80ce], [80fd, 80fd],
    [81fa, 81fa], [8226, 8226], [82d4, 82d4], [83ed, 83ed], [85b9, 85b9],
    [8a52, 8a52], [8dc6, 8dc6], [90b0, 90b0], [915e, 915e], [91d0, 91d0],
    [9226, 9226], [9236, 9236], [98b1, 98b1], [99d8, 99d8], [9a03, 9a03],
    [9b90, 9b90], [211f7, 211f7], [214a2, 214a2], [225a4, 225a4],
    [238ff, 238ff], [245ff, 245ff], [25649, 25649], [264b0, 264b0],
    [26ec0, 26ec0], [27251, 27251], [2725f, 2725f], [27b4f, 27b4f],
    [27bbc, 27bbc], [29b20, 29b20], [29fe1, 29fe1], [2a41d, 2a41d],
    [2a425, 2a425], [2a4b4, 2a4b4]**/


    namespace {
    const static UnicodeSet::run_t __tai_Set_runs[] = {
    {Empty, 432}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 94}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 36}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 34}, {Mixed, 3}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2994}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 135}, {Mixed, 1}, {Empty, 153},
    {Mixed, 1}, {Empty, 103}, {Mixed, 1}, {Empty, 130}, {Mixed, 1},
    {Empty, 114}, {Mixed, 1}, {Empty, 80}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 71}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 251}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 32},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 29402}};
    const static UnicodeSet::bitquad_t  __tai_Set_quads[] = {
    0x00000040, 0x00000008, 0x01000000, 0x04000000, 0x00400000, 0x00080000,
    0x00010000, 0x00100000, 0x00002000, 0x00000480, 0x00000010, 0x00008000,
    0x00200000, 0x00040000, 0x00000800, 0x00001000, 0x00000002, 0x00000010,
    0x00040000, 0x00020000, 0x00008000, 0x00008000, 0x00010000, 0x00010000,
    0x02000000, 0x00000040, 0x00020000, 0x00000010, 0x00000040, 0x00000100,
    0x00000200, 0x20000000, 0x00004000, 0x20000000, 0x04000000, 0x00000040,
    0x00100000, 0x00002000, 0x02000000, 0x00040000, 0x00000040, 0x00010000,
    0x40000000, 0x00010000, 0x00400040, 0x00020000, 0x01000000, 0x00000008,
    0x00010000, 0x00800000, 0x00000004, 0x00000010, 0x80000000, 0x80000000,
    0x00000200, 0x00010000, 0x00000001, 0x80020000, 0x00008000, 0x10000000,
    0x00000001, 0x00000002, 0x20000000, 0x00000020, 0x00100000};
    }

    const static UnicodeSet tai_Set{const_cast<UnicodeSet::run_t *>(__tai_Set_runs), 121, 0, const_cast<UnicodeSet::bitquad_t *>(__tai_Set_quads), 65, 0};

    /** Code Point Ranges for rong
    [3607, 3607], [38d1, 38d1], [3b5c, 3b5c], [3ca8, 3ca8], [3f38, 3f38],
    [413e, 413e], [41ef, 41ef], [4236, 4236], [462c, 462c], [481c, 481c],
    [4846, 4846], [4887, 4887], [490a, 490a], [4a78, 4a78], [5087, 5087],
    [509b, 509b], [5748, 5748], [5ab6, 5ab6], [5ac6, 5ac6], [5b2b, 5b2b],
    [5b82, 5b82], [5bb9, 5bb9], [5d64, 5d64], [5db8, 5db8], [5dc6, 5dc6],
    [620e, 620e], [6408, 6408], [6411, 6411], [66e7, 66e7], [6995, 6995],
    [69ae, 69ae], [69b5, 69b5], [6be7, 6be7], [6c04, 6c04], [6eb6, 6eb6],
    [701c, 701c], [70ff, 70ff], [7194, 7194], [7203, 7203], [72e8, 72e8],
    [7462, 7462], [7a41, 7a41], [7d68, 7d68], [7e19, 7e19], [7e1f, 7e1f],
    [7fa2, 7fa2], [809c, 809c], [8319, 8319], [8338, 8338], [84c9, 84c9],
    [878d, 878d], [8811, 8811], [8923, 8923], [8ef5, 8ef5], [9394, 9394],
    [9694, 9694], [980c, 980c], [99e5, 99e5], [9af6, 9af6], [20795, 20795],
    [20c3d, 20c3d], [20e4d, 20e4d], [212ab, 212ab], [212b8, 212b8],
    [215a2, 215a2], [219bc, 219bc], [21ae6, 21ae6], [21b4b, 21b4b],
    [229bf, 229bf], [22ae8, 22ae8], [23baa, 23baa], [23bcd, 23bcd],
    [23bcf, 23bd0], [23cbd, 23cbd], [2463a, 2463b], [25382, 25382],
    [2539c, 2539c], [25473, 25473], [25a33, 25a33], [25b2a, 25b2a],
    [25f2c, 25f2c], [2650b, 2650b], [265cb, 265cb], [265e8, 265e8],
    [26d87, 26d87], [27261, 27261], [273a3, 273a3], [28274, 28274],
    [28277, 28277], [282e0, 282e0], [28323, 28323], [28345, 28345],
    [28377, 28377], [28486, 28486], [28c9f, 28c9f], [29349, 29349],
    [29382, 29382], [294b7, 294b7], [29697, 29697], [29ba0, 29ba0],
    [29f05, 29f05], [2a0fe, 2a0fe], [2a541, 2a541], [2a54e, 2a54e],
    [2a5f4, 2a5f4]**/


    namespace {
    const static UnicodeSet::run_t __rong_Set_runs[] = {
    {Empty, 432}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 26}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 33},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 20}, {Mixed, 2}, {Empty, 17}, {Mixed, 2}, {Empty, 20},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 19}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2916}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 114}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 133}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 75},
    {Mixed, 1}, {Empty, 106}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
    {Empty, 60}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 117}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 3}, {Empty, 8}, {Mixed, 1}, {Empty, 63}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 29392}};
    const static UnicodeSet::bitquad_t  __rong_Set_quads[] = {
    0x00000080, 0x00020000, 0x10000000, 0x00000100, 0x01000000, 0x40000000,
    0x00008000, 0x00400000, 0x00001000, 0x10000000, 0x00000040, 0x00000080,
    0x00000400, 0x01000000, 0x08000080, 0x00000100, 0x00400000, 0x00000040,
    0x00000800, 0x00000004, 0x02000000, 0x00000010, 0x01000000, 0x00000040,
    0x00004000, 0x00020100, 0x00000080, 0x00200000, 0x00204000, 0x00000080,
    0x00000010, 0x00400000, 0x10000000, 0x80000000, 0x00100000, 0x00000008,
    0x00000100, 0x00000004, 0x00000002, 0x00000100, 0x82000000, 0x00000004,
    0x10000000, 0x02000000, 0x01000000, 0x00000200, 0x00002000, 0x00020000,
    0x00000008, 0x00200000, 0x00100000, 0x00100000, 0x00001000, 0x00000020,
    0x00400000, 0x00200000, 0x20000000, 0x00002000, 0x01000800, 0x00000004,
    0x10000000, 0x00000040, 0x00000800, 0x80000000, 0x00000100, 0x00000400,
    0x0001a000, 0x20000000, 0x0c000000, 0x10000004, 0x00080000, 0x00080000,
    0x00000400, 0x00001000, 0x00000800, 0x00000800, 0x00000100, 0x00000080,
    0x00000002, 0x00000008, 0x00900000, 0x00000001, 0x00000008, 0x00000020,
    0x00800000, 0x00000040, 0x80000000, 0x00000200, 0x00000004, 0x00800000,
    0x00800000, 0x00000001, 0x00000020, 0x40000000, 0x00004002, 0x00100000};
    }

    const static UnicodeSet rong_Set{const_cast<UnicodeSet::run_t *>(__rong_Set_runs), 173, 0, const_cast<UnicodeSet::bitquad_t *>(__rong_Set_quads), 96, 0};

    /** Code Point Ranges for ni
    [3608, 3608], [397e, 397e], [3990, 3990], [3a58, 3a58], [3a92, 3a92],
    [3b8f, 3b8f], [3cbb, 3cbb], [3d6b, 3d6b], [4065, 4065], [460c, 460c],
    [4626, 4626], [463d, 463d], [46cf, 46cf], [475a, 475a], [4d52, 4d52],
    [4f32, 4f32], [4f60, 4f60], [502a, 502a], [5117, 5117], [5152, 5152],
    [533f, 533f], [5462, 5462], [57ff, 57ff], [5804, 5804], [59ae, 59ae],
    [59b3, 59b3], [5a57, 5a57], [5adf, 5adf], [5b2d, 5b2d], [5b68, 5b68],
    [5b74, 5b74], [5c3c, 5c3c], [5c54, 5c54], [5c70, 5c70], [5db7, 5db7],
    [5f4c, 5f4c], [6029, 6029], [60c4, 60c4], [615d, 615d], [61dd, 61dd],
    [6290, 6290], [62b3, 62b3], [639c, 639c], [64ec, 64ec], [65ce, 65ce],
    [6635, 6635], [6672, 6672], [66b1, 66b1], [67c5, 67c5], [68ff, 68ff],
    [6ab7, 6ab7], [6c3c, 6c3c], [6ce5, 6ce5], [6de3, 6de3], [6eba, 6eba],
    [6fd4, 6fd4], [6fd8, 6fd8], [7030, 7030], [7044, 7044], [723e, 723e],
    [72d4, 72d4], [730a, 730a], [75c6, 75c6], [7724, 7724], [7768, 7768],
    [79b0, 79b0], [79dc, 79dc], [7c7e, 7c7e], [7e0c, 7e0c], [807b, 807b],
    [80d2, 80d2], [815d, 815d], [81a9, 81a9], [81e1, 81e1], [82e8, 82e8],
    [85bf, 85bf], [86ad, 86ad], [86ea, 86ea], [873a, 873a], [89ec, 89ec],
    [8abd, 8abd], [8b7a, 8b7a], [8ddc, 8ddc], [8f17, 8f17], [8fe1, 8fe1],
    [9006, 9006], [90f3, 90f3], [922e, 922e], [9268, 9268], [9448, 9448],
    [96ac, 96ac], [9713, 9713], [999c, 999c], [9be2, 9be2], [9e91, 9e91],
    [9f6f, 9f6f], [201b5, 201b5], [204b0, 204b0], [20c58, 20c58],
    [20e3a, 20e3a], [20f6c, 20f6c], [213b3, 213b3], [213bf, 213bf],
    [217ad, 217ad], [218c1, 218c1], [21966, 21966], [21968, 21968],
    [21af8, 21af8], [21b17, 21b17], [2215f, 2215f], [226ae, 226ae],
    [226dc, 226dc], [228da, 228da], [229b1, 229b1], [23617, 23617],
    [2384b, 2384b], [2389e, 2389e], [23b59, 23b59], [23cb7, 23cb7],
    [2464c, 2464c], [249a4, 249a4], [2513d, 2513d], [251c4, 251c4],
    [25726, 25726], [2572c, 2572c], [25dc4, 25dc4], [25e9c, 25e9c],
    [261a6, 261a6], [2693d, 2693d], [26983, 26983], [26bbe, 26bbe],
    [26c2b, 26c2b], [270e9, 270e9], [2721e, 2721e], [273fe, 273fe],
    [275b7, 275b7], [27d7c, 27d7c], [27eb0, 27eb0], [28000, 28000],
    [282d7, 282d7], [284ab, 284ab], [28e99, 28e99], [28f66, 28f66],
    [29222, 29222], [29279, 29279], [292ea, 292ea], [29366, 29366],
    [296ae, 296af], [29a62, 29a62], [29be8, 29be8], [29c1e, 29c1e],
    [29c44, 29c44], [29e26, 29e27], [29e9d, 29e9d], [29eb1, 29eb1],
    [2a3f5, 2a3f5], [2a3f8, 2a3f8], [2a40c, 2a40c], [2a65b, 2a65b]**/


    namespace {
    const static UnicodeSet::run_t __ni_Set_runs[] = {
    {Empty, 432}, {Mixed, 1}, {Empty, 26}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 44}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 27}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 3}, {Empty, 9}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 17}, {Mixed, 2}, {Empty, 20}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2833}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 11}, {Mixed, 2}, {Empty, 49}, {Mixed, 1}, {Empty, 42},
    {Mixed, 2}, {Empty, 15}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 98}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 76}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 41}, {Mixed, 2}, {Empty, 17}, {Mixed, 1}, {Empty, 29389}};
    const static UnicodeSet::bitquad_t  __ni_Set_quads[] = {
    0x00000100, 0x40000000, 0x00010000, 0x01000000, 0x00040000, 0x00008000,
    0x08000000, 0x00000800, 0x00000020, 0x00001000, 0x20000040, 0x00008000,
    0x04000000, 0x00040000, 0x00040000, 0x00000001, 0x00000400, 0x00800000,
    0x00040000, 0x80000000, 0x00000004, 0x80000000, 0x00000010, 0x00084000,
    0x00800000, 0x80000000, 0x00002000, 0x00100100, 0x10000000, 0x00100000,
    0x00010000, 0x00800000, 0x00001000, 0x00000200, 0x00000010, 0x20000000,
    0x20000000, 0x00010000, 0x00080000, 0x10000000, 0x00001000, 0x00004000,
    0x00200000, 0x00040000, 0x00020000, 0x00000020, 0x80000000, 0x00800000,
    0x10000000, 0x00000020, 0x00000008, 0x04000000, 0x01100000, 0x00010000,
    0x00000010, 0x40000000, 0x00100000, 0x00000400, 0x00000040, 0x00000010,
    0x00000100, 0x00010000, 0x10000000, 0x40000000, 0x00001000, 0x08000000,
    0x00040000, 0x20000000, 0x00000200, 0x00000002, 0x00000100, 0x80000000,
    0x00002000, 0x00000400, 0x04000000, 0x00001000, 0x20000000, 0x04000000,
    0x10000000, 0x00800000, 0x00000002, 0x00000040, 0x00080000, 0x00004000,
    0x00000100, 0x00000100, 0x00001000, 0x00080000, 0x10000000, 0x00000004,
    0x00020000, 0x00008000, 0x00200000, 0x00010000, 0x01000000, 0x04000000,
    0x00001000, 0x80080000, 0x00002000, 0x00000002, 0x00000140, 0x01000000,
    0x00800000, 0x80000000, 0x00004000, 0x10000000, 0x04000000, 0x00020000,
    0x00800000, 0x00000800, 0x40000000, 0x02000000, 0x00800000, 0x00001000,
    0x00000010, 0x20000000, 0x00000010, 0x00001040, 0x00000010, 0x10000000,
    0x00000040, 0x20000000, 0x00000008, 0x40000000, 0x00000800, 0x00000200,
    0x40000000, 0x40000000, 0x00800000, 0x10000000, 0x00010000, 0x00000001,
    0x00800000, 0x00000800, 0x02000000, 0x00000040, 0x00000004, 0x02000000,
    0x00000400, 0x00000040, 0x0000c000, 0x00000004, 0x00000100, 0x40000000,
    0x00000010, 0x000000c0, 0x20000000, 0x00020000, 0x01200000, 0x00001000,
    0x08000000};
    }

    const static UnicodeSet ni_Set{const_cast<UnicodeSet::run_t *>(__ni_Set_runs), 275, 0, const_cast<UnicodeSet::bitquad_t *>(__ni_Set_quads), 151, 0};

    /** Code Point Ranges for pao
    [3610, 3610], [36bf, 36bf], [3be1, 3be1], [3bf1, 3bf1], [3c8f, 3c8f],
    [46cc, 46cc], [4a5d, 4a5d], [4afd, 4afd], [5228, 5228], [5305, 5305],
    [530f, 530f], [5486, 5486], [5697, 5697], [5789, 5789], [5945, 5945],
    [5e96, 5e96], [629b, 629b], [62b1, 62b1], [647d, 647d], [6ce1, 6ce1],
    [70ae, 70ae], [70b0, 70b0], [722e, 722e], [72a5, 72a5], [72cd, 72cd],
    [74df, 74df], [75b1, 75b1], [76b0, 76b0], [7832, 7832], [792e, 792e],
    [7a6e, 7a6e], [7a8c, 7a8c], [80de, 80de], [811f, 811f], [812c, 812c],
    [82de, 82de], [85e8, 85e8], [86ab, 86ab], [888c, 888d], [8b08, 8b08],
    [8db5, 8db5], [8dd1, 8dd1], [8ef3, 8ef3], [924b, 924b], [9784, 9784],
    [98ae, 98ae], [9b91, 9b91], [9e83, 9e83], [9e85, 9e85], [9ead, 9ead],
    [208f3, 208f3], [21098, 21098], [219d9, 219d9], [21bc8, 21bc8],
    [21f8c, 21f8c], [22fb3, 22fb3], [22fcf, 22fcf], [23545, 23545],
    [23687, 23687], [237cf, 237cf], [23b83, 23b83], [23d90, 23d90],
    [24509, 24509], [25d94, 25d94], [26438, 26438], [26529, 26529],
    [26816, 26816], [2764c, 2764c], [282db, 282db], [288d9, 288d9],
    [2909e, 2909e], [29198, 29198], [29398, 29398], [293be, 293be],
    [2941c, 2941c], [295e5, 295e5], [2a2b3, 2a2b3]**/


    namespace {
    const static UnicodeSet::run_t __pao_Set_runs[] = {
    {Empty, 432}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 81}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 31}, {Mixed, 2},
    {Empty, 13}, {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 15}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 2},
    {Empty, 49}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 12},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 20},
    {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 23}, {Mixed, 2}, {Empty, 2897}, {Mixed, 1},
    {Empty, 60}, {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 128}, {Mixed, 2},
    {Empty, 43}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 195}, {Mixed, 1}, {Empty, 52}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 113},
    {Mixed, 1}, {Empty, 99}, {Mixed, 1}, {Empty, 47}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 15},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 101}, {Mixed, 1}, {Empty, 29418}};
    const static UnicodeSet::bitquad_t  __pao_Set_quads[] = {
    0x00010000, 0x80000000, 0x00020002, 0x00008000, 0x00001000, 0x20000000,
    0x20000000, 0x00000100, 0x00008020, 0x00000040, 0x00800000, 0x00000200,
    0x00000020, 0x00400000, 0x08000000, 0x00020000, 0x20000000, 0x00000002,
    0x00014000, 0x00004000, 0x00000020, 0x00002000, 0x80000000, 0x00020000,
    0x00010000, 0x00040000, 0x00004000, 0x00004000, 0x00001000, 0x40000000,
    0x80000000, 0x00001000, 0x40000000, 0x00000100, 0x00000800, 0x00003000,
    0x00000100, 0x00200000, 0x00020000, 0x00080000, 0x00000800, 0x00000010,
    0x00004000, 0x00020000, 0x00000028, 0x00002000, 0x00080000, 0x01000000,
    0x02000000, 0x00000100, 0x00001000, 0x00080000, 0x00008000, 0x00000020,
    0x00000080, 0x00008000, 0x00000008, 0x00010000, 0x00000200, 0x00100000,
    0x01000000, 0x00000200, 0x00400000, 0x00001000, 0x08000000, 0x02000000,
    0x40000000, 0x01000000, 0x01000000, 0x40000000, 0x10000000, 0x00000020,
    0x00080000};
    }

    const static UnicodeSet pao_Set{const_cast<UnicodeSet::run_t *>(__pao_Set_runs), 131, 0, const_cast<UnicodeSet::bitquad_t *>(__pao_Set_quads), 73, 0};

    /** Code Point Ranges for sai
    [3614, 3614], [3a59, 3a59], [4222, 4222], [46a1, 46a1], [4c04, 4c04],
    [50ff, 50ff], [567b, 567b], [585e, 585e], [601d, 601d], [6122, 6122],
    [63cc, 63cc], [6be2, 6be2], [6bf8, 6bf8], [7c3a, 7c3a], [816e, 816e],
    [8cfd, 8cfd], [9c13, 9c13], [21a04, 21a04], [21b09, 21b09],
    [267ab, 267ab], [2a0c4, 2a0c4]**/


    namespace {
    const static UnicodeSet::run_t __sai_Set_runs[] = {
    {Empty, 432}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 129},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 91}, {Mixed, 1},
    {Empty, 120}, {Mixed, 1}, {Empty, 3055}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 612}, {Mixed, 1}, {Empty, 456}, {Mixed, 1},
    {Empty, 29433}};
    const static UnicodeSet::bitquad_t  __sai_Set_quads[] = {
    0x00100000, 0x02000000, 0x00000004, 0x00000002, 0x00000010, 0x80000000,
    0x08000000, 0x40000000, 0x20000000, 0x00000004, 0x00001000, 0x01000004,
    0x04000000, 0x00004000, 0x20000000, 0x00080000, 0x00000010, 0x00000200,
    0x00000800, 0x00000010};
    }

    const static UnicodeSet sai_Set{const_cast<UnicodeSet::run_t *>(__sai_Set_runs), 41, 0, const_cast<UnicodeSet::bitquad_t *>(__sai_Set_quads), 20, 0};

    /** Code Point Ranges for kan
    [361b, 361b], [3673, 3673], [3a81, 3a81], [3e1d, 3e1d], [400d, 400d],
    [404d, 404d], [4594, 4594], [4613, 4613], [4af2, 4af2], [4cda, 4cda],
    [4f83, 4f83], [519a, 519a], [51f5, 51f5], [520a, 520a], [52d8, 52d8],
    [558a, 558a], [574e, 574e], [57f3, 57f3], [582a, 582a], [583f, 583f],
    [5888, 5888], [5d01, 5d01], [5d41, 5d41], [5d4c, 5d4c], [60c2, 60c2],
    [6221, 6221], [627b, 627b], [681e, 681e], [6abb, 6abb], [6b3f, 6b3f],
    [6b41, 6b41], [76e3, 76e3], [770b, 770b], [77b0, 77b0], [780d, 780d],
    [78aa, 78aa], [78e1, 78e1], [7af7, 7af7], [83b0, 83b0], [859f, 859f],
    [884e, 884e], [8f21, 8f21], [8f31, 8f31], [8f41, 8f41], [8f57, 8f57],
    [95de, 95de], [976c, 976c], [9851, 9851], [9921, 9921], [9f95, 9f95],
    [20772, 20772], [20a9a, 20a9a], [2169c, 2169c], [21daa, 21daa],
    [21e1e, 21e1e], [21e97, 21e97], [2266e, 2266e], [2299f, 2299f],
    [2329f, 2329f], [238d2, 238d2], [23f4c, 23f4c], [24b2a, 24b2a],
    [25353, 25353], [2546b, 2546b], [254d2, 254d2], [25931, 25931],
    [25994, 25994], [26796, 26796], [271e6, 271e6], [27875, 27875],
    [27bf0, 27bf0], [27c44, 27c44], [2835c, 2835c], [2849e, 2849e],
    [2942c, 2942c], [2945f, 2945f], [29483, 29483], [294df, 294df],
    [29731, 29731], [2a26f, 2a26f]**/


    namespace {
    const static UnicodeSet::run_t __kan_Set_runs[] = {
    {Empty, 432}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 92}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 54}, {Mixed, 2}, {Empty, 51},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 2878}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 95}, {Mixed, 1}, {Empty, 56},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 71}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 94},
    {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 111}, {Mixed, 1}, {Empty, 82}, {Mixed, 1}, {Empty, 51},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 124},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 89}, {Mixed, 1}, {Empty, 29420}};
    const static UnicodeSet::bitquad_t  __kan_Set_quads[] = {
    0x08000000, 0x00080000, 0x00000002, 0x20000000, 0x00002000, 0x00002000,
    0x00100000, 0x00080000, 0x00040000, 0x04000000, 0x00000008, 0x04000000,
    0x00200000, 0x00000400, 0x01000000, 0x00000400, 0x00004000, 0x00080000,
    0x80000400, 0x00000100, 0x00000002, 0x00001002, 0x00000004, 0x00000002,
    0x08000000, 0x40000000, 0x08000000, 0x80000000, 0x00000002, 0x00000008,
    0x00000800, 0x00010000, 0x00002000, 0x00000400, 0x00000002, 0x00800000,
    0x00010000, 0x80000000, 0x00004000, 0x00020002, 0x00800002, 0x40000000,
    0x00001000, 0x00020000, 0x00000002, 0x00200000, 0x00040000, 0x04000000,
    0x10000000, 0x00000400, 0x40000000, 0x00800000, 0x00004000, 0x80000000,
    0x80000000, 0x00040000, 0x00001000, 0x00000400, 0x00080000, 0x00000800,
    0x00040000, 0x00020000, 0x00100000, 0x00400000, 0x00000040, 0x00200000,
    0x00010000, 0x00000010, 0x10000000, 0x40000000, 0x00001000, 0x80000000,
    0x00000008, 0x80000000, 0x00020000, 0x00008000};
    }

    const static UnicodeSet kan_Set{const_cast<UnicodeSet::run_t *>(__kan_Set_runs), 143, 0, const_cast<UnicodeSet::bitquad_t *>(__kan_Set_quads), 76, 0};

    /** Code Point Ranges for weng
    [3622, 3622], [3642, 3642], [3bac, 3bac], [3e59, 3e59], [3e8b, 3e8b],
    [4235, 4235], [4425, 4425], [4a7a, 4a7a], [4c75, 4c75], [52dc, 52dc],
    [55e1, 55e1], [5855, 5855], [58c5, 58c5], [5963, 5963], [5d61, 5d61],
    [66a1, 66a1], [6ec3, 6ec3], [74ee, 74ee], [7515, 7515], [7788, 7788],
    [7fc1, 7fc1], [806c, 806c], [84ca, 84ca], [8579, 8579], [8789, 8789],
    [9393, 9393], [9db2, 9db2], [9f46, 9f46], [20c08, 20c08],
    [2137b, 2137b], [21a65, 21a65], [21ed0, 21ed0], [2430f, 2430f],
    [25540, 25540], [267a1, 267a1], [269c5, 269c5], [27690, 27690],
    [276f9, 276f9], [2873a, 2873a], [28791, 28791], [29118, 29118],
    [2951a, 2951a], [29853, 29853], [29bac, 29bac], [29c0e, 29c0e]**/


    namespace {
    const static UnicodeSet::run_t __weng_Set_runs[] = {
    {Empty, 433}, {Mixed, 2}, {Empty, 42}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 64},
    {Mixed, 1}, {Empty, 48}, {Mixed, 2}, {Empty, 19}, {Mixed, 1},
    {Empty, 65}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 95}, {Mixed, 1}, {Empty, 80}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 2917}, {Mixed, 1}, {Empty, 58}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 289},
    {Mixed, 1}, {Empty, 145}, {Mixed, 1}, {Empty, 146}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 101}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 129}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 75}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 29471}};
    const static UnicodeSet::bitquad_t  __weng_Set_quads[] = {
    0x00000004, 0x00000004, 0x00001000, 0x02000000, 0x00000800, 0x00200000,
    0x00000020, 0x04000000, 0x00200000, 0x10000000, 0x00000002, 0x00200000,
    0x00000020, 0x00000008, 0x00000002, 0x00000002, 0x00000008, 0x00004000,
    0x00200000, 0x00000100, 0x00000002, 0x00001000, 0x00000400, 0x02000000,
    0x00000200, 0x00080000, 0x00040000, 0x00000040, 0x00000100, 0x08000000,
    0x00000020, 0x00010000, 0x00008000, 0x00000001, 0x00000002, 0x00000020,
    0x00010000, 0x02000000, 0x04000000, 0x00020000, 0x01000000, 0x04000000,
    0x00080000, 0x00001000, 0x00004000};
    }

    const static UnicodeSet weng_Set{const_cast<UnicodeSet::run_t *>(__weng_Set_runs), 87, 0, const_cast<UnicodeSet::bitquad_t *>(__weng_Set_quads), 45, 0};

    /** Code Point Ranges for yuan
    [3623, 3623], [37f6, 37f6], [383e, 383e], [3973, 3973], [3b47, 3b47],
    [3c67, 3c67], [3e49, 3e49], [3f93, 3f93], [4148, 4148], [4220, 4220],
    [43cd, 43cd], [46c4, 46c4], [46c7, 46c7], [485d, 485d], [4949, 4949],
    [49be, 49be], [4a0a, 4a0a], [4a69, 4a69], [4b27, 4b27], [4b3c, 4b3c],
    [4c72, 4c72], [4cae, 4cae], [4cbb, 4cbb], [5086, 5086], [5141, 5141],
    [5143, 5143], [5186, 5186], [51a4, 51a4], [5248, 5248], [539f, 539f],
    [54bd, 54bd], [54e1, 54e1], [559b, 559b], [566e, 566e], [56ed, 56ed],
    [5712, 5713], [571c, 571c], [57a3, 57a3], [57b8, 57b8], [586c, 586c],
    [5917, 5917], [59a7, 59a7], [59b4, 59b4], [5a9b, 5a9b], [5ab4, 5ab4],
    [5ac4, 5ac4], [5ada, 5ada], [5b9b, 5b9b], [5f32, 5f32], [6028, 6028],
    [6081, 6081], [60cc, 60cc], [613f, 613f], [6350, 6350], [63be, 63be],
    [63f4, 63f4], [676c, 676c], [68e9, 68e9], [6965, 6965], [699e, 699e],
    [69ac, 69ac], [6ade, 6ade], [6c85, 6c85], [6d93, 6d93], [6db4, 6db4],
    [6df5, 6df5], [6e72, 6e72], [6e90, 6e90], [6e92, 6e92], [7106, 7106],
    [7230, 7230], [733f, 733f], [7457, 7457], [7579, 7579], [76f6, 76f6],
    [7722, 7722], [7990, 7990], [7a7f, 7a7f], [7b0e, 7b0e], [7ba2, 7ba2],
    [7de3, 7de3], [7fb1, 7fb1], [8099, 8099], [82ab, 82ab], [82d1, 82d1],
    [847e, 847e], [849d, 849d], [84ac, 84ac], [85b3, 85b3], [8696, 8696],
    [870e, 870e], [8735, 8735], [875d, 875d], [876f, 876f], [8788, 8788],
    [884f, 884f], [8881, 8881], [88eb, 88eb], [88f7, 88f7], [8911, 8911],
    [8b1c, 8b1c], [8f10, 8f10], [8f45, 8f45], [9060, 9060], [908d, 908d],
    [90a7, 90a7], [92fa, 92fa], [93b1, 93b1], [962e, 962e], [9662, 9662],
    [9695, 9695], [9858, 9858], [99cc, 99cc], [9a35, 9a35], [9b6d, 9b6d],
    [9cf6, 9cf6], [9d1b, 9d1b], [9d77, 9d77], [9da2, 9da2], [9db0, 9db0],
    [9eff, 9eff], [9f18, 9f18], [2049c, 2049c], [206ed, 206ed],
    [20773, 20773], [20a60, 20a60], [21212, 21213], [2188a, 2188a],
    [218ec, 218ec], [21bf1, 21bf1], [21de1, 21de1], [220b1, 220b1],
    [22180, 22180], [22348, 22348], [223ee, 223ee], [22404, 22404],
    [2254b, 2254b], [225ef, 225ef], [22c7d, 22c7d], [22dfb, 22dfb],
    [23e60, 23e60], [24b0c, 24b0c], [25b5e, 25b5e], [25c1f, 25c1f],
    [25fce, 25fce], [2637c, 2637c], [26fc2, 26fc2], [27257, 27257],
    [2751e, 2751e], [2766e, 2766e], [27ced, 27ced], [27eda, 27eda],
    [2802e, 2802e], [284ef, 284ef], [28557, 28557], [285b3, 285b3],
    [28e18, 28e18], [28ee3, 28ee3], [2926f, 2926f], [29311, 29311],
    [2937b, 2937b], [29418, 29418], [29503, 29503], [2957e, 2957e],
    [2960d, 2960d], [296df, 296df], [29778, 29778], [297c1, 297c1],
    [29c35, 29c35], [29fa2, 29fa2], [2a01d, 2a01d], [2a0a6, 2a0a6],
    [2a101, 2a101], [2a505, 2a505], [2a517, 2a517], [2a519, 2a519],
    [2a540, 2a540]**/


    namespace {
    const static UnicodeSet::run_t __yuan_Set_runs[] = {
    {Empty, 433}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 6}, {Mixed, 3}, {Empty, 5}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 8}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 19}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 16}, {Mixed, 2}, {Empty, 12}, {Mixed, 3}, {Empty, 7},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 5}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 15},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 3}, {Empty, 17}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 13},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 2859}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 9}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 131}, {Mixed, 1}, {Empty, 100}, {Mixed, 1},
    {Empty, 129}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 98}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 29397}};
    const static UnicodeSet::bitquad_t  __yuan_Set_quads[] = {
    0x00000008, 0x00400000, 0x40000000, 0x00080000, 0x00000080, 0x00000080,
    0x00000200, 0x00080000, 0x00000100, 0x00000001, 0x00002000, 0x00000090,
    0x20000000, 0x00000200, 0x40000000, 0x00000400, 0x00000200, 0x10000080,
    0x00040000, 0x08004000, 0x00000040, 0x0000000a, 0x00000040, 0x00000010,
    0x00000100, 0x80000000, 0x20000000, 0x00000002, 0x08000000, 0x00004000,
    0x00002000, 0x100c0000, 0x01000008, 0x00001000, 0x00800000, 0x00100080,
    0x08000000, 0x00100000, 0x04000010, 0x08000000, 0x00040000, 0x00000100,
    0x00000002, 0x00001000, 0x80000000, 0x00010000, 0x40000000, 0x00100000,
    0x00001000, 0x00000200, 0x00000020, 0x40000000, 0x00001000, 0x40000000,
    0x00000020, 0x00080000, 0x00100000, 0x00200000, 0x00040000, 0x00050000,
    0x00000040, 0x00010000, 0x80000000, 0x00800000, 0x02000000, 0x00400000,
    0x00000004, 0x00010000, 0x80000000, 0x00004000, 0x00000004, 0x00000008,
    0x00020000, 0x02000000, 0x00000800, 0x00020000, 0x40000000, 0x20000000,
    0x00001000, 0x00080000, 0x00400000, 0x00004000, 0x00200000, 0x20000000,
    0x00008000, 0x00000100, 0x00008000, 0x00000002, 0x00800800, 0x00020000,
    0x10000000, 0x00010000, 0x00000020, 0x00000001, 0x00002000, 0x00000080,
    0x04000000, 0x00020000, 0x00004000, 0x00000004, 0x00200000, 0x01000000,
    0x00001000, 0x00200000, 0x00002000, 0x00400000, 0x08000000, 0x00800000,
    0x00010004, 0x80000000, 0x01000000, 0x10000000, 0x00002000, 0x00080000,
    0x00000001, 0x000c0000, 0x00000400, 0x00001000, 0x00020000, 0x00000002,
    0x00020000, 0x00000001, 0x00000100, 0x00004000, 0x00000010, 0x00000800,
    0x00008000, 0x20000000, 0x08000000, 0x00000001, 0x00001000, 0x40000000,
    0x80000000, 0x00004000, 0x10000000, 0x00000004, 0x00800000, 0x40000000,
    0x00004000, 0x00002000, 0x04000000, 0x00004000, 0x00008000, 0x00800000,
    0x00080000, 0x01000000, 0x00000008, 0x00008000, 0x00020000, 0x08000000,
    0x01000000, 0x00000008, 0x40000000, 0x00002000, 0x80000000, 0x01000000,
    0x00000002, 0x00200000, 0x00000004, 0x20000000, 0x00000040, 0x00000002,
    0x02800020, 0x00000001};
    }

    const static UnicodeSet yuan_Set{const_cast<UnicodeSet::run_t *>(__yuan_Set_runs), 285, 0, const_cast<UnicodeSet::bitquad_t *>(__yuan_Set_quads), 164, 0};

    /** Code Point Ranges for wan
    [3624, 3624], [3e49, 3e49], [3ff8, 3ff8], [414b, 414b], [4471, 4471],
    [460e, 460e], [463c, 463c], [46c3, 46c3], [46f7, 46f7], [4779, 4779],
    [4a32, 4a32], [4a4a, 4a4a], [4bc8, 4bc8], [4bdb, 4bdb], [4e07, 4e07],
    [4e38, 4e38], [5007, 5007], [514d, 514d], [5213, 5213], [525c, 525c],
    [5350, 5350], [550d, 550d], [56ed, 56ed], [57e6, 57e6], [58ea, 58ea],
    [5917, 5918], [59a7, 59a7], [5a29, 5a29], [5a49, 5a49], [5a60, 5a60],
    [5b8c, 5b8c], [5b9b, 5b9b], [5c8f, 5c8f], [5e35, 5e35], [5f4e, 5f4e],
    [5fe8, 5fe8], [60cb, 60cc], [628f, 628f], [633d, 633d], [6356, 6356],
    [6365, 6365], [6394, 6394], [665a, 665a], [667c, 667c], [670a, 670a],
    [689a, 689a], [69fe, 69fe], [6c4d, 6c4d], [6db4, 6db4], [6f6b, 6f6b],
    [6fab, 6fab], [7063, 7063], [70f7, 70f7], [73a9, 73a9], [742c, 742c],
    [7579, 7579], [7696, 7696], [76cc, 76cc], [7755, 7755], [7897, 7897],
    [7ba2, 7ba2], [7d08, 7d08], [7d7b, 7d7b], [7d84, 7d84], [7da9, 7da9],
    [7db0, 7db0], [7feb, 7feb], [8115, 8115], [8118, 8118], [8155, 8155],
    [8284, 8284], [839e, 839e], [83a7, 83a7], [83ac, 83ac], [83c0, 83c0],
    [842c, 842c], [8513, 8513], [858d, 858d], [8696, 8696], [873f, 873f],
    [87c3, 87c3], [8c4c, 8c4c], [8cab, 8cab], [8d03, 8d03], [8d0e, 8d0e],
    [8e20, 8e20], [8f10, 8f10], [8f13, 8f13], [9124, 9124], [92d4, 92d4],
    [92fa, 92fa], [933d, 933d], [95dc, 95dc], [9811, 9811], [9aab, 9aab],
    [9b6d, 9b6d], [204a2, 204a2], [2076a, 2076a], [2082a, 2082a],
    [208c9, 208c9], [21185, 21185], [211ff, 211ff], [21936, 21936],
    [21a44, 21a44], [21e25, 21e25], [22017, 22017], [224c3, 224c3],
    [224c6, 224c6], [22a14, 22a14], [22beb, 22beb], [22bf2, 22bf2],
    [22eaf, 22eaf], [2319b, 2319b], [23869, 23869], [23943, 23943],
    [245cd, 245cd], [24959, 24959], [249e9, 249e9], [24ec6, 24ec6],
    [251b6, 251b6], [25744, 25744], [257f6, 257f6], [25938, 25938],
    [25fce, 25fce], [26094, 26094], [26710, 26710], [268fe, 268fe],
    [26caf, 26caf], [26f5e, 26f5e], [27687, 27687], [27806, 27806],
    [27be1, 27be1], [27ca6, 27ca6], [27fd9, 27fd9], [2820a, 2820a],
    [2825d, 2825d], [28314, 28314], [287bc, 287bc], [28967, 28967],
    [28a6f, 28a6f], [28a75, 28a75], [28a7b, 28a7b], [29166, 29166],
    [2922c, 2922c], [29281, 29281], [29884, 29884], [298f5, 298f5],
    [29f9e, 29f9e], [2a0a6, 2a0a7], [2a2c5, 2a2c5], [2a39b, 2a39b],
    [2a42c, 2a42c], [2a449, 2a449]**/


    namespace {
    const static UnicodeSet::run_t __wan_Set_runs[] = {
    {Empty, 433}, {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 21}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 17},
    {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 8},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 4}, {Mixed, 4}, {Empty, 21}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 17},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 7}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2889}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 99}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 52}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 57}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 29405}};
    const static UnicodeSet::bitquad_t  __wan_Set_quads[] = {
    0x00000010, 0x00000200, 0x01000000, 0x00000800, 0x00020000, 0x00004000,
    0x10000000, 0x00000008, 0x00800000, 0x02000000, 0x00040000, 0x00000400,
    0x08000100, 0x00000080, 0x01000000, 0x00000080, 0x00002000, 0x00080000,
    0x10000000, 0x00010000, 0x00002000, 0x00002000, 0x00000040, 0x00000400,
    0x01800000, 0x00000080, 0x00000200, 0x00000200, 0x00000001, 0x08001000,
    0x00008000, 0x00200000, 0x00004000, 0x00000100, 0x00001800, 0x00008000,
    0x20000000, 0x00400000, 0x00000020, 0x00100000, 0x04000000, 0x10000000,
    0x00000400, 0x04000000, 0x40000000, 0x00002000, 0x00100000, 0x00000800,
    0x00000800, 0x00000008, 0x00800000, 0x00000200, 0x00001000, 0x02000000,
    0x00400000, 0x00001000, 0x00200000, 0x00800000, 0x00000004, 0x00000100,
    0x08000000, 0x00000010, 0x00010200, 0x00000800, 0x01200000, 0x00200000,
    0x00000010, 0x40000000, 0x00001080, 0x00000001, 0x00001000, 0x00080000,
    0x00002000, 0x00400000, 0x80000000, 0x00000008, 0x00001000, 0x00000800,
    0x00004008, 0x00000001, 0x00090000, 0x00000010, 0x00100000, 0x04000000,
    0x20000000, 0x10000000, 0x00020000, 0x00000800, 0x00002000, 0x00000004,
    0x00000400, 0x00000400, 0x00000200, 0x00000020, 0x80000000, 0x00400000,
    0x00000010, 0x00000020, 0x00800000, 0x00000048, 0x00100000, 0x00040800,
    0x00008000, 0x08000000, 0x00000200, 0x00000008, 0x00002000, 0x02000000,
    0x00000200, 0x00000040, 0x00400000, 0x00000010, 0x00400000, 0x01000000,
    0x00004000, 0x00100000, 0x00010000, 0x40000000, 0x00008000, 0x40000000,
    0x00000080, 0x00000040, 0x00000002, 0x00000040, 0x02000000, 0x00000400,
    0x20000000, 0x00100000, 0x10000000, 0x00000080, 0x08208000, 0x00000040,
    0x00001000, 0x00000002, 0x00000010, 0x00200000, 0x40000000, 0x000000c0,
    0x00000020, 0x08000000, 0x00001000, 0x00000200};
    }

    const static UnicodeSet wan_Set{const_cast<UnicodeSet::run_t *>(__wan_Set_runs), 251, 0, const_cast<UnicodeSet::bitquad_t *>(__wan_Set_quads), 142, 0};

    /** Code Point Ranges for hao
    [362a, 362a], [3740, 3740], [37bb, 37bb], [3819, 3819], [3a5d, 3a5d],
    [3b14, 3b14], [3b36, 3b36], [44b5, 44b5], [46bd, 46bd], [475e, 475e],
    [4765, 4765], [49da, 49da], [4abd, 4abd], [4beb, 4beb], [5090, 5090],
    [53f7, 53f7], [547a, 547a], [54e0, 54e0], [552c, 552c], [55e5, 55e5],
    [5686, 5686], [568e, 568e], [58d5, 58d5], [597d, 597d], [599e, 599e],
    [604f, 604f], [608e, 608e], [660a, 660a], [66a0, 66a0], [66a4, 66a4],
    [6beb, 6beb], [6d69, 6d69], [6dcf, 6dcf], [6ec8, 6ec8], [6fe0, 6fe0],
    [705d, 705d], [734b, 734b], [768b, 768b], [7693, 7693], [769e, 769e],
    [777e, 777e], [79cf, 79cf], [7c47, 7c47], [7fef, 7fef], [8017, 8017],
    [8055, 8055], [81a0, 81a0], [8320, 8320], [84bf, 84bf], [8583, 8583],
    [8585, 8585], [85a7, 85a7], [85c3, 85c3], [865f, 8660], [869d, 869d],
    [8814, 8814], [8ad5, 8ad5], [8b79, 8b79], [8c6a, 8c6a], [8c89, 8c89],
    [90dd, 90dd], [9117, 9117], [9392, 9392], [93ac, 93ac], [9865, 9865],
    [9c1d, 9c1d], [20683, 20683], [20895, 20895], [21412, 21412],
    [2168c, 2168c], [216bd, 216bd], [21816, 21816], [21946, 21946],
    [21f5d, 21f5d], [22ec7, 22ec7], [231a7, 231a7], [2362b, 2362b],
    [236a7, 236a7], [23b56, 23b56], [23b79, 23b79], [23c53, 23c53],
    [23f4e, 23f4e], [24003, 24003], [24750, 24750], [24847, 24847],
    [248a8, 248a8], [248ad, 248ad], [24a69, 24a69], [24a6d, 24a6d],
    [24ae7, 24ae7], [25363, 25363], [25891, 25891], [26cc1, 26cc1],
    [271fc, 271fc], [2799d, 2799d], [27b01, 27b01], [27bcc, 27bcc],
    [2809c, 2809c], [28491, 28491], [28699, 28699], [286ae, 286ae],
    [28772, 28772], [2882c, 2882c], [28f0d, 28f0d], [2942e, 2942e],
    [2954d, 2954d], [295b8, 295b8], [29ad5, 29ad5], [29b98, 29b98],
    [29c8a, 29c8a]**/


    namespace {
    const static UnicodeSet::run_t __hao_Set_runs[] = {
    {Empty, 433}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 75}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 4}, {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 53}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 28}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 6}, {Mixed, 3}, {Empty, 3}, {Mixed, 3}, {Empty, 11},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 33}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 19}, {Mixed, 2}, {Empty, 37}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 2899}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 91}, {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 10},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 47}, {Mixed, 1},
    {Empty, 123}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 36}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 57}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 67},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 161}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 29467}};
    const static UnicodeSet::bitquad_t  __hao_Set_quads[] = {
    0x00000400, 0x00000001, 0x08000000, 0x02000000, 0x20000000, 0x00100000,
    0x00400000, 0x00200000, 0x20000000, 0x40000000, 0x00000020, 0x04000000,
    0x20000000, 0x00000800, 0x00010000, 0x00800000, 0x04000000, 0x00000001,
    0x00001000, 0x00000020, 0x00004040, 0x00200000, 0x20000000, 0x40000000,
    0x00008000, 0x00004000, 0x00000400, 0x00000011, 0x00000800, 0x00000200,
    0x00008000, 0x00000100, 0x00000001, 0x20000000, 0x00000800, 0x40080800,
    0x40000000, 0x00008000, 0x00000080, 0x00008000, 0x00800000, 0x00200000,
    0x00000001, 0x00000001, 0x80000000, 0x00000028, 0x00000080, 0x00000008,
    0x80000000, 0x00000001, 0x20000000, 0x00100000, 0x00200000, 0x02000000,
    0x00000400, 0x00000200, 0x20000000, 0x00800000, 0x00040000, 0x00001000,
    0x00000020, 0x20000000, 0x00000008, 0x00200000, 0x00040000, 0x00001000,
    0x20000000, 0x00400000, 0x00000040, 0x20000000, 0x00000080, 0x00000080,
    0x00000800, 0x00000080, 0x00400000, 0x02000000, 0x00080000, 0x00004000,
    0x00000008, 0x00010000, 0x00000080, 0x00002100, 0x00002200, 0x00000080,
    0x00000008, 0x00020000, 0x00000002, 0x10000000, 0x20000000, 0x00000002,
    0x00001000, 0x10000000, 0x00020000, 0x02000000, 0x00004000, 0x00040000,
    0x00001000, 0x00002000, 0x00004000, 0x00002000, 0x01000000, 0x00200000,
    0x01000000, 0x00000400};
    }

    const static UnicodeSet hao_Set{const_cast<UnicodeSet::run_t *>(__hao_Set_runs), 183, 0, const_cast<UnicodeSet::bitquad_t *>(__hao_Set_quads), 104, 0};

    /** Code Point Ranges for jing
    [362b, 362b], [3b0c, 3b0c], [3d7e, 3d7e], [3e12, 3e12], [4514, 4514],
    [477c, 477c], [4aab, 4aab], [4e3c, 4e3c], [4e95, 4e95], [4eac, 4eac],
    [4ef1, 4ef1], [4fd3, 4fd3], [501e, 501e], [50b9, 50b9], [5106, 5106],
    [5162, 5162], [51c0, 51c0], [5244, 5244], [52c1, 52c1], [5753, 5753],
    [5883, 5883], [598c, 598c], [5a5b, 5a5b], [5a67, 5a67], [5b91, 5b91],
    [5de0, 5de0], [5e5c, 5e5c], [5f33, 5f33], [5f91, 5f91], [60ca, 60ca],
    [61ac, 61ac], [61bc, 61bc], [64cf, 64cf], [656c, 656c], [65cc, 65cc],
    [665f, 665f], [666f, 666f], [6676, 6676], [66bb, 66bb], [66d4, 66d4],
    [6871, 6871], [68b7, 68b7], [6aa0, 6aa0], [6b91, 6b91], [6c0f, 6c0f],
    [6c6b, 6c6b], [6d87, 6d87], [6de8, 6de8], [70f4, 70f4], [7304, 7304],
    [734d, 734d], [7377, 7377], [749f, 749f], [74a5, 74a5], [75d9, 75d9],
    [775b, 775b], [79d4, 79d4], [7a7d, 7a7d], [7adf, 7adf], [7ae7, 7ae7],
    [7aeb, 7aeb], [7af6, 7af6], [7b90, 7b90], [7c87, 7c87], [7cb3, 7cb3],
    [7cbe, 7cbe], [7d93, 7d93], [8059, 8059], [80bc, 80bc], [811b, 811b],
    [8148, 8148], [8346, 8346], [8396, 8396], [83c1, 83c1], [844f, 844f],
    [845d, 845d], [873b, 873b], [87fc, 87fc], [8aa9, 8aa9], [8b66, 8b66],
    [8e01, 8e01], [9015, 9015], [9192, 9192], [92de, 92de], [93e1, 93e1],
    [9631, 9631], [9658, 9658], [9752, 9752], [9756, 9756], [9758, 975a],
    [9834, 9834], [9838, 9838], [9a5a, 9a5a], [9be8, 9be8], [9d5b, 9d5b],
    [9d81, 9d81], [9d84, 9d84], [9e96, 9e96], [9f31, 9f31], [20471, 20471],
    [205ca, 205ca], [205cc, 205cc], [2098b, 2098b], [20b49, 20b49],
    [20b57, 20b57], [20cae, 20cae], [20cec, 20cec], [20dd0, 20dd0],
    [21054, 21054], [22234, 22234], [22e58, 22e58], [232e2, 232e2],
    [23b19, 23b19], [23ed2, 23ed2], [24730, 24730], [24c33, 24c33],
    [24de6, 24de6], [25178, 25178], [2581b, 2581b], [25bd9, 25bd9],
    [25db9, 25db9], [260a0, 260a0], [26733, 26733], [2694d, 2694d],
    [26cf2, 26cf2], [26f41, 26f41], [26fbf, 26fbf], [2744a, 2744a],
    [274d4, 274d4], [276ab, 276ab], [27935, 27935], [2804e, 2804e],
    [28677, 28677], [28959, 28959], [28d7c, 28d7c], [290cb, 290cb],
    [291d5, 291d5], [294de, 294de], [294e8, 294e8], [29a4b, 29a4b],
    [29c39, 29c39], [29cef, 29cef], [29e62, 29e62], [29ef1, 29ef1],
    [2a0b4, 2a0b4], [2a1d2, 2a1d2]**/


    namespace {
    const static UnicodeSet::run_t __jing_Set_runs[] = {
    {Empty, 433}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 55}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 12},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 8}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 17},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 2857}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 142}, {Mixed, 1}, {Empty, 96}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 66}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 52}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 56},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 23}, {Mixed, 2}, {Empty, 42}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 29425}};
    const static UnicodeSet::bitquad_t  __jing_Set_quads[] = {
    0x00000800, 0x00001000, 0x40000000, 0x00040000, 0x00100000, 0x10000000,
    0x00000800, 0x10000000, 0x00200000, 0x00001000, 0x00020000, 0x00080000,
    0x40000000, 0x02000000, 0x00000040, 0x00000004, 0x00000001, 0x00000010,
    0x00000002, 0x00080000, 0x00000008, 0x00001000, 0x08000000, 0x00000080,
    0x00020000, 0x00000001, 0x10000000, 0x00080000, 0x00020000, 0x00000400,
    0x10001000, 0x00008000, 0x00001000, 0x00001000, 0x80000000, 0x00408000,
    0x08000000, 0x00100000, 0x00020000, 0x00800000, 0x00000001, 0x00020000,
    0x00008000, 0x00000800, 0x00000080, 0x00000100, 0x00100000, 0x00000010,
    0x00002000, 0x00800000, 0x80000000, 0x00000020, 0x02000000, 0x08000000,
    0x00100000, 0x20000000, 0x80000000, 0x00400880, 0x00010000, 0x00000080,
    0x40080000, 0x00080000, 0x02000000, 0x10000000, 0x08000000, 0x00000100,
    0x00000040, 0x00400000, 0x00000002, 0x20008000, 0x08000000, 0x10000000,
    0x00000200, 0x00000040, 0x00000002, 0x00200000, 0x00040000, 0x40000000,
    0x00000002, 0x00020000, 0x01000000, 0x07440000, 0x01100000, 0x04000000,
    0x00000100, 0x08000000, 0x00000012, 0x00400000, 0x00020000, 0x00020000,
    0x00001400, 0x00000800, 0x00800200, 0x00004000, 0x00001000, 0x00010000,
    0x00100000, 0x00100000, 0x01000000, 0x00000004, 0x02000000, 0x00040000,
    0x00010000, 0x00080000, 0x00000040, 0x01000000, 0x08000000, 0x02000000,
    0x02000000, 0x00000001, 0x00080000, 0x00002000, 0x00040000, 0x00000002,
    0x80000000, 0x00000400, 0x00100000, 0x00000800, 0x00200000, 0x00004000,
    0x00800000, 0x02000000, 0x10000000, 0x00000800, 0x00200000, 0x40000000,
    0x00000100, 0x00000800, 0x02000000, 0x00008000, 0x00000004, 0x00020000,
    0x00100000, 0x00040000};
    }

    const static UnicodeSet jing_Set{const_cast<UnicodeSet::run_t *>(__jing_Set_runs), 249, 0, const_cast<UnicodeSet::bitquad_t *>(__jing_Set_quads), 134, 0};

    /** Code Point Ranges for bu
    [3635, 3635], [365b, 365b], [36b4, 36b4], [3a10, 3a10], [3c5b, 3c5b],
    [3ccd, 3ccd], [3ec9, 3ec9], [3f9f, 3f9f], [402f, 402f], [4287, 4287],
    [43fd, 43fd], [4480, 4480], [4775, 4775], [4a81, 4a81], [4a94, 4a94],
    [4b0f, 4b0f], [4cdd, 4cdd], [4d3a, 4d3a], [4e0d, 4e0d], [4f48, 4f48],
    [50d5, 50d5], [52cf, 52cf], [535c, 535c], [535f, 535f], [5425, 5425],
    [5498, 5498], [54fa, 54fa], [57d4, 57d4], [57d7, 57d7], [57e0, 57e0],
    [5821, 5821], [5a44, 5a44], [5c03, 5c03], [5cec, 5cec], [5e03, 5e03],
    [5eaf, 5eaf], [6016, 6016], [62aa, 62aa], [62ca, 62ca], [6355, 6355],
    [6357, 6357], [636c, 636c], [64b2, 64b2], [6661, 6661], [67e8, 67e8],
    [6b65, 6b65], [6ea5, 6ea5], [74ff, 74ff], [79ff, 79ff], [7b81, 7b81],
    [7bf0, 7bf0], [7c3f, 7c3f], [8379, 8379], [8500, 8500], [8584, 8584],
    [88dc, 88dc], [8aa7, 8aa7], [8e04, 8e04], [8f39, 8f39], [8f50, 8f50],
    [900b, 900b], [90e8, 90e8], [91ad, 91ad], [9208, 9208], [923d, 923d],
    [9644, 9644], [9660, 9660], [97b4, 97b4], [9914, 9914], [9922, 9922],
    [9bc6, 9bc6], [9cea, 9cea], [9d4f, 9d4f], [20601, 20601],
    [20689, 20689], [20719, 20719], [21850, 21850], [2207b, 2207b],
    [221f4, 221f4], [22f39, 22f39], [23c76, 23c76], [246b5, 246b5],
    [248f0, 248f0], [24e35, 24e35], [250e8, 250e8], [25462, 25462],
    [258cc, 258cc], [25a80, 25a80], [25cd6, 25cd6], [25e28, 25e28],
    [25e74, 25e74], [25ede, 25ede], [27269, 27269], [27ef7, 27ef7],
    [282de, 282de], [286d2, 286d2], [28d2a, 28d2a], [29147, 29147],
    [292ac, 292ac], [292b6, 292b6], [2930f, 2930f], [293ee, 293ee],
    [293f5, 293f5], [29895, 29895], [298dd, 298dd], [29bcf, 29bcf],
    [29d89, 29d89], [29dd6, 29dd6], [29ebc, 29ebc], [29ed7, 29ed7],
    [2a1f0, 2a1f0]**/


    namespace {
    const static UnicodeSet::run_t __bu_Set_runs[] = {
    {Empty, 433}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 22}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 20}, {Mixed, 2},
    {Empty, 3}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 57}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 32}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 10},
    {Mixed, 2}, {Empty, 20}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2885}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 137}, {Mixed, 1}, {Empty, 64},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 105}, {Mixed, 1},
    {Empty, 105}, {Mixed, 1}, {Empty, 81}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 156},
    {Mixed, 1}, {Empty, 99}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 24}, {Mixed, 1},
    {Empty, 29424}};
    const static UnicodeSet::bitquad_t  __bu_Set_quads[] = {
    0x00200000, 0x08000000, 0x00100000, 0x00010000, 0x08000000, 0x00002000,
    0x00000200, 0x80000000, 0x00008000, 0x00000080, 0x20000000, 0x00000001,
    0x00200000, 0x00100002, 0x00008000, 0x20000000, 0x04000000, 0x00002000,
    0x00000100, 0x00200000, 0x00008000, 0x90000000, 0x00000020, 0x01000000,
    0x04000000, 0x00900000, 0x00000001, 0x00000002, 0x00000010, 0x00000008,
    0x00001000, 0x00000008, 0x00008000, 0x00400000, 0x00000400, 0x00000400,
    0x00a00000, 0x00001000, 0x00040000, 0x00000002, 0x00000100, 0x00000020,
    0x00000020, 0x80000000, 0x80000000, 0x00000002, 0x00010000, 0x80000000,
    0x02000000, 0x00000001, 0x00000010, 0x10000000, 0x00000080, 0x00000010,
    0x02000000, 0x00010000, 0x00000800, 0x00000100, 0x00002000, 0x00000100,
    0x20000000, 0x00000010, 0x00000001, 0x00100000, 0x00100000, 0x00000004,
    0x00000040, 0x00000400, 0x00008000, 0x00000002, 0x00000200, 0x02000000,
    0x00010000, 0x08000000, 0x00100000, 0x02000000, 0x00400000, 0x00200000,
    0x00010000, 0x00200000, 0x00000100, 0x00000004, 0x00001000, 0x00000001,
    0x00400000, 0x00000100, 0x00100000, 0x40000000, 0x00000200, 0x00800000,
    0x40000000, 0x00040000, 0x00000400, 0x00000080, 0x00401000, 0x00008000,
    0x00204000, 0x00200000, 0x20000000, 0x00008000, 0x00000200, 0x00400000,
    0x10000000, 0x00800000, 0x00010000};
    }

    const static UnicodeSet bu_Set{const_cast<UnicodeSet::run_t *>(__bu_Set_runs), 193, 0, const_cast<UnicodeSet::bitquad_t *>(__bu_Set_quads), 105, 0};

    /** Code Point Ranges for zang
    [3638, 3638], [3b9c, 3b9c], [5328, 5328], [5958, 5958], [6215, 6215],
    [7242, 7242], [726b, 726b], [7f98, 7f98], [81df, 81df], [81e7, 81e7],
    [846c, 846c], [8535, 8535], [85cf, 85cf], [8d13, 8d13], [92ba, 92ba],
    [99d4, 99d4], [9a61, 9a61], [9ad2, 9ad2], [21067, 21067],
    [21146, 21146], [2221c, 2221c], [22348, 22348], [2237f, 2237f],
    [23edf, 23edf], [240fc, 240fc], [246fb, 246fb], [2479b, 2479b],
    [267c3, 267c3], [27568, 27568], [28304, 28304], [2a4c5, 2a4c5]**/


    namespace {
    const static UnicodeSet::run_t __zang_Set_runs[] = {
    {Empty, 433}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 188},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 69}, {Mixed, 1},
    {Empty, 129}, {Mixed, 2}, {Empty, 104}, {Mixed, 1}, {Empty, 17},
    {Mixed, 2}, {Empty, 19}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2988}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 133},
    {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 218}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 257}, {Mixed, 1}, {Empty, 108}, {Mixed, 1},
    {Empty, 108}, {Mixed, 1}, {Empty, 269}, {Mixed, 1}, {Empty, 29401}};
    const static UnicodeSet::bitquad_t  __zang_Set_quads[] = {
    0x01000000, 0x10000000, 0x00000100, 0x01000000, 0x00200000, 0x00000004,
    0x00000800, 0x01000000, 0x80000000, 0x00000080, 0x00001000, 0x00200000,
    0x00008000, 0x00080000, 0x04000000, 0x00100000, 0x00000002, 0x00040000,
    0x00000080, 0x00000040, 0x10000000, 0x00000100, 0x80000000, 0x80000000,
    0x10000000, 0x08000000, 0x08000000, 0x00000008, 0x00000100, 0x00000010,
    0x00000020};
    }

    const static UnicodeSet zang_Set{const_cast<UnicodeSet::run_t *>(__zang_Set_runs), 57, 0, const_cast<UnicodeSet::bitquad_t *>(__zang_Set_quads), 31, 0};

    /** Code Point Ranges for liu
    [3640, 3640], [36b9, 36b9], [39d5, 39d5], [3a28, 3a28], [3daf, 3daf],
    [4267, 4267], [45dc, 45dc], [46a7, 46a7], [4740, 4740], [4b1f, 4b1f],
    [4c18, 4c18], [4d89, 4d89], [50c2, 50c2], [516d, 516d], [5289, 5289],
    [586f, 586f], [5ab9, 5ab9], [5b3c, 5b3c], [5d67, 5d67], [5ec7, 5ec7],
    [61f0, 61f0], [644e, 644e], [65bf, 65bf], [65d2, 65d2], [67f3, 67f3],
    [69b4, 69b4], [6cd6, 6cd6], [6cf5, 6cf5], [6d41, 6d41], [6e38, 6e38],
    [6e9c, 6e9c], [6f3b, 6f3b], [700f, 700f], [7198, 7198], [71ae, 71ae],
    [73cb, 73cb], [7409, 7409], [7460, 7460], [746c, 746c], [7559, 7559],
    [7581, 7581], [7624, 7624], [786b, 786b], [788c, 788c], [78c2, 78c2],
    [78df, 78df], [7a8c, 7a8c], [7db9, 7db9], [7f76, 7f76], [7fcf, 7fcf],
    [804a, 804a], [84a5, 84a5], [84c5, 84c5], [84fc, 84fc], [851e, 851e],
    [85f0, 85f0], [87c9, 87c9], [88d7, 88d7], [8e53, 8e53], [905b, 905b],
    [925a, 925a], [92f6, 92f6], [938f, 938f], [93a6, 93a6], [93d0, 93d0],
    [9678, 9678], [96e1, 96e1], [9724, 9724], [98c0, 98c0], [98c2, 98c2],
    [993e, 993e], [9a2e, 9a2e], [9b38, 9b38], [9c21, 9c21], [9db9, 9db9],
    [9dda, 9dda], [9e8d, 9e8d], [205fd, 205fd], [206d3, 206d3],
    [20a90, 20a90], [20e95, 20e95], [21eea, 21eea], [223ed, 223ed],
    [22532, 22532], [227ad, 227ad], [228e0, 228e0], [22910, 22910],
    [22df6, 22df6], [23797, 23797], [237d1, 237d1], [2381a, 2381a],
    [23c73, 23c73], [23c96, 23c96], [24957, 24957], [24bb7, 24bb7],
    [25013, 25013], [251a6, 251a6], [25310, 25310], [256c5, 256c5],
    [25837, 25837], [25979, 25979], [259d5, 259d5], [25a0c, 25a0c],
    [25c23, 25c23], [25d85, 25d85], [25e77, 25e77], [26020, 26020],
    [260d3, 260d3], [26249, 26249], [26297, 26297], [262bf, 262bf],
    [26301, 26301], [2647e, 2647e], [273d3, 273d3], [27b97, 27b97],
    [282d6, 282d6], [28378, 28378], [28887, 28887], [289b0, 289b0],
    [28abf, 28abf], [28daa, 28daa], [28ee7, 28ee7], [2918e, 2918e],
    [295b4, 295b4], [295e9, 295e9], [29644, 29644], [2989e, 2989e],
    [2a0c2, 2a0c2], [2a1b1, 2a1b1], [2a1ef, 2a1ef], [2a3a3, 2a3a3]**/


    namespace {
    const static UnicodeSet::run_t __liu_Set_runs[] = {
    {Empty, 434}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 16},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 24}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 2},
    {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 17}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 34}, {Mixed, 4},
    {Empty, 6}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 20},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 2874}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 130},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 38},
    {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 34}, {Mixed, 2}, {Empty, 101}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 122}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 65}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 29410}};
    const static UnicodeSet::bitquad_t  __liu_Set_quads[] = {
    0x00000001, 0x02000000, 0x00200000, 0x00000100, 0x00008000, 0x00000080,
    0x10000000, 0x00000080, 0x00000001, 0x80000000, 0x01000000, 0x00000200,
    0x00000004, 0x00002000, 0x00000200, 0x00008000, 0x02000000, 0x10000000,
    0x00000080, 0x00000080, 0x00010000, 0x00004000, 0x80000000, 0x00040000,
    0x00080000, 0x00100000, 0x00400000, 0x00200000, 0x00000002, 0x01000000,
    0x10000000, 0x08000000, 0x00008000, 0x01000000, 0x00004000, 0x00000800,
    0x00000200, 0x00001001, 0x02000000, 0x00000002, 0x00000010, 0x00000800,
    0x00001000, 0x80000004, 0x00001000, 0x02000000, 0x00400000, 0x00008000,
    0x00000400, 0x00000020, 0x00000020, 0x10000000, 0x40000000, 0x00010000,
    0x00000200, 0x00800000, 0x00080000, 0x08000000, 0x04000000, 0x00400000,
    0x00008000, 0x00000040, 0x00010000, 0x01000000, 0x00000002, 0x00000010,
    0x00000005, 0x40000000, 0x00004000, 0x01000000, 0x00000002, 0x02000000,
    0x04000000, 0x00002000, 0x20000000, 0x00080000, 0x00010000, 0x00200000,
    0x00000400, 0x00002000, 0x00040000, 0x00002000, 0x00000001, 0x00010000,
    0x00400000, 0x00800000, 0x00020000, 0x04000000, 0x00080000, 0x00400000,
    0x00800000, 0x00800000, 0x00080000, 0x00000040, 0x00010000, 0x00000020,
    0x00800000, 0x02000000, 0x00200000, 0x00001000, 0x00000008, 0x00000020,
    0x00800000, 0x00000001, 0x00080000, 0x00000200, 0x00800000, 0x80000000,
    0x00000002, 0x40000000, 0x00080000, 0x00800000, 0x00400000, 0x01000000,
    0x00000080, 0x00010000, 0x80000000, 0x00000400, 0x00000080, 0x00004000,
    0x00100000, 0x00000200, 0x00000010, 0x40000000, 0x00000004, 0x00020000,
    0x00008000, 0x00000008};
    }

    const static UnicodeSet liu_Set{const_cast<UnicodeSet::run_t *>(__liu_Set_runs), 231, 0, const_cast<UnicodeSet::bitquad_t *>(__liu_Set_quads), 128, 0};

    /** Code Point Ranges for jiu
    [3640, 3640], [374c, 374c], [3807, 3807], [3939, 3939], [3962, 3962],
    [39c3, 39c3], [3a46, 3a46], [3c83, 3c83], [3e28, 3e28], [3ea9, 3ea9],
    [3f71, 3f71], [4162, 4162], [41b6, 41b6], [4286, 4286], [4298, 4298],
    [44d8, 44d8], [46ee, 46ee], [4842, 4842], [4b28, 4b28], [4cce, 4cce],
    [4cd4, 4cd4], [4e29, 4e29], [4e45, 4e45], [4e5d, 4e5d], [4e63, 4e63],
    [5003, 5003], [50e6, 50e6], [5279, 5279], [52fc, 52fc], [548e, 548e],
    [557e, 557e], [564d, 564d], [5c31, 5c31], [5ecf, 5ecf], [6101, 6101],
    [6166, 6166], [6344, 6344], [63c2, 63c2], [63ea, 63eb], [644e, 644e],
    [6551, 6551], [65e7, 65e7], [673b, 673b], [67e9, 67e9], [6855, 6855],
    [6a1b, 6a1b], [6ba7, 6ba7], [6c3f, 6c3f], [6e6b, 6e6b], [7078, 7078],
    [725e, 725e], [7396, 7396], [759a, 759a], [7a35, 7a35], [7a4b, 7a4b],
    [7a76, 7a76], [7cfa, 7cfa], [7cfe, 7cfe], [7d24, 7d24], [7e46, 7e46],
    [81fc, 81fc], [8205, 8205], [820a, 820a], [820f, 820f], [8764, 8764],
    [8d73, 8d73], [9152, 9152], [97ed, 97ed], [9b0f, 9b0f], [9b2e, 9b2e],
    [9be6, 9be6], [9ce9, 9ce9], [9df2, 9df2], [9e94, 9e94], [9f68, 9f68],
    [200d6, 200d6], [200fa, 200fa], [20574, 20574], [205ac, 205ac],
    [20654, 20654], [206a8, 206a8], [206e9, 206e9], [20703, 20703],
    [20709, 20709], [20833, 20833], [208ff, 208ff], [20d04, 20d04],
    [20fc8, 20fc8], [211a5, 211a5], [216ae, 216ae], [22019, 22019],
    [22447, 22447], [22725, 22725], [22f6d, 22f6d], [2306d, 2306d],
    [237fc, 237fc], [23c84, 23c84], [24265, 24265], [24d25, 24d26],
    [24d2a, 24d2a], [24dd1, 24dd1], [251b7, 251b7], [25626, 25626],
    [25803, 25803], [25933, 25933], [26822, 26822], [26b7a, 26b7b],
    [26c60, 26c60], [26c71, 26c72], [26f6c, 26f6c], [27851, 27851],
    [27afe, 27afe], [27ceb, 27ceb], [27fbb, 27fbb], [2858f, 2858f],
    [28602, 28602], [2862e, 2862e], [28cca, 28cca], [28f89, 28f89],
    [28f9e, 28f9e], [293f6, 293f7], [294a6, 294a6], [298b9, 298b9],
    [29b53, 29b53], [29c7c, 29c7c], [29da7, 29da7], [2a00f, 2a00f]**/


    namespace {
    const static UnicodeSet::run_t __jiu_Set_runs[] = {
    {Empty, 434}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 10}, {Mixed, 3}, {Empty, 12}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 36}, {Mixed, 3}, {Empty, 19},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 28},
    {Mixed, 2}, {Empty, 42}, {Mixed, 1}, {Empty, 47}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 24},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2826}, {Mixed, 2}, {Empty, 35}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 65}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 85}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 119}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 70}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 52}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 29439}};
    const static UnicodeSet::bitquad_t  __jiu_Set_quads[] = {
    0x00000001, 0x00001000, 0x00000080, 0x02000000, 0x00000004, 0x00000008,
    0x00000040, 0x00000008, 0x00000100, 0x00000200, 0x00020000, 0x00000004,
    0x00400000, 0x01000040, 0x01000000, 0x00004000, 0x00000004, 0x00000100,
    0x00104000, 0x00000200, 0x20000020, 0x00000008, 0x00000008, 0x00000040,
    0x02000000, 0x10000000, 0x00004000, 0x40000000, 0x00002000, 0x00020000,
    0x00008000, 0x00000002, 0x00000040, 0x00000010, 0x00000004, 0x00000c00,
    0x00004000, 0x00020000, 0x00000080, 0x08000000, 0x00000200, 0x00200000,
    0x08000000, 0x00000080, 0x80000000, 0x00000800, 0x01000000, 0x40000000,
    0x00400000, 0x04000000, 0x00200000, 0x00000800, 0x00400000, 0x44000000,
    0x00000010, 0x00000040, 0x10000000, 0x00008420, 0x00000010, 0x00080000,
    0x00040000, 0x00002000, 0x00008000, 0x00004000, 0x00000040, 0x00000200,
    0x00040000, 0x00100000, 0x00000100, 0x00400000, 0x04000000, 0x00100000,
    0x00001000, 0x00100000, 0x00000100, 0x00000200, 0x00000208, 0x00080000,
    0x80000000, 0x00000010, 0x00000100, 0x00000020, 0x00004000, 0x02000000,
    0x00000080, 0x00000020, 0x00002000, 0x00002000, 0x10000000, 0x00000010,
    0x00000020, 0x00000460, 0x00020000, 0x00800000, 0x00000040, 0x00000008,
    0x00080000, 0x00000004, 0x0c000000, 0x00060001, 0x00001000, 0x00020000,
    0x40000000, 0x00000800, 0x08000000, 0x00008000, 0x00000004, 0x00004000,
    0x00000400, 0x40000200, 0x00c00000, 0x00000040, 0x02000000, 0x00080000,
    0x10000000, 0x00000080, 0x00008000};
    }

    const static UnicodeSet jiu_Set{const_cast<UnicodeSet::run_t *>(__jiu_Set_runs), 215, 0, const_cast<UnicodeSet::bitquad_t *>(__jiu_Set_quads), 117, 0};

    /** Code Point Ranges for mei
    [3641, 3641], [3b51, 3b51], [401b, 401b], [4180, 4180], [418a, 418a],
    [424b, 424b], [4288, 4288], [4359, 4359], [44fa, 44fa], [4738, 4738],
    [4902, 4902], [4c55, 4c55], [4d62, 4d62], [5445, 5445], [5473, 5473],
    [569c, 569c], [5746, 5746], [5776, 5776], [5833, 5833], [587a, 587a],
    [58a8, 58a8], [59b9, 59b9], [5a84, 5a84], [5a92, 5a92], [5a9a, 5a9a],
    [5bd0, 5bd0], [5d44, 5d44], [5d4b, 5d4b], [5fbe, 5fbe], [62ba, 62ba],
    [6334, 6334], [6517, 6517], [6627, 6627], [679a, 679a], [67d0, 67d0],
    [6885, 6885], [6963, 6963], [6ad7, 6ad7], [6bcf, 6bcf], [6c3c, 6c3c],
    [6ca1, 6ca1], [6cac, 6cac], [6d7c, 6d7c], [6e3c, 6e3c], [6e44, 6e44],
    [6e48, 6e48], [6ea6, 6ea6], [715d, 715d], [7164, 7164], [71d8, 71d8],
    [7338, 7338], [73ab, 73ab], [73fb, 73fb], [7442, 7442], [75d7, 75d7],
    [7709, 770a], [771b, 771b], [7778, 7778], [77c0, 77c0], [7996, 7996],
    [7bc3, 7bc3], [7cdc, 7cdc], [7f8e, 7f8e], [7f99, 7f99], [8122, 8122],
    [815c, 815c], [81b4, 81b4], [82fa, 82fa], [8393, 8393], [847f, 847f],
    [862a, 862a], [875e, 875e], [8882, 8882], [8dca, 8dca], [90ff, 90ff],
    [9176, 9176], [92c2, 92c2], [9382, 9382], [9387, 9387], [9b45, 9b45],
    [9da5, 9da5], [9ee3, 9ee3], [9ef4, 9ef4], [20289, 20289],
    [20368, 20368], [20a83, 20a83], [21cad, 21cad], [22b87, 22b87],
    [237f8, 237f8], [24226, 24226], [246a4, 246a4], [24f43, 24f43],
    [2578a, 2578a], [259f4, 259f4], [26f3b, 26f3b], [27b75, 27b75],
    [27cec, 27cec], [2826d, 2826d], [29210, 29210], [292ff, 292ff],
    [2939f, 2939f], [29acd, 29acd], [29c88, 29c88], [29ca2, 29ca2],
    [29d08, 29d08], [2a09c, 2a09c], [2a0cf, 2a0cf], [2a3a6, 2a3a6],
    [2a3ad, 2a3ad]**/


    namespace {
    const static UnicodeSet::run_t __mei_Set_runs[] = {
    {Empty, 434}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 54}, {Mixed, 2},
    {Empty, 16}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 20}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 2844}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 144}, {Mixed, 1},
    {Empty, 118}, {Mixed, 1}, {Empty, 98}, {Mixed, 1}, {Empty, 81},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 68}, {Mixed, 1},
    {Empty, 65}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 169},
    {Mixed, 1}, {Empty, 97}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 124}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 57}, {Mixed, 1},
    {Empty, 13}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 29410}};
    const static UnicodeSet::bitquad_t  __mei_Set_quads[] = {
    0x00000002, 0x00020000, 0x08000000, 0x00000401, 0x00000800, 0x00000100,
    0x02000000, 0x04000000, 0x01000000, 0x00000004, 0x00200000, 0x00000004,
    0x00000020, 0x00080000, 0x10000000, 0x00000040, 0x00400000, 0x00080000,
    0x04000000, 0x00000100, 0x02000000, 0x04040010, 0x00010000, 0x00000810,
    0x40000000, 0x04000000, 0x00100000, 0x00800000, 0x00000080, 0x04000000,
    0x00010000, 0x00000020, 0x00000008, 0x00800000, 0x00008000, 0x10000000,
    0x00001002, 0x10000000, 0x10000000, 0x00000110, 0x00000040, 0x20000000,
    0x00000010, 0x01000000, 0x01000000, 0x00000800, 0x08000000, 0x00000004,
    0x00800000, 0x08000600, 0x01000000, 0x00000001, 0x00400000, 0x00000008,
    0x10000000, 0x02004000, 0x00000004, 0x10000000, 0x00100000, 0x04000000,
    0x00080000, 0x80000000, 0x00000400, 0x40000000, 0x00000004, 0x00000400,
    0x80000000, 0x00400000, 0x00000004, 0x00000084, 0x00000020, 0x00000020,
    0x00100008, 0x00000200, 0x00000100, 0x00000008, 0x00002000, 0x00000080,
    0x01000000, 0x00000040, 0x00000010, 0x00000008, 0x00000400, 0x00100000,
    0x08000000, 0x00200000, 0x00001000, 0x00002000, 0x00010000, 0x80000000,
    0x80000000, 0x00002000, 0x00000100, 0x00000004, 0x00000100, 0x10000000,
    0x00008000, 0x00002040};
    }

    const static UnicodeSet mei_Set{const_cast<UnicodeSet::run_t *>(__mei_Set_runs), 185, 0, const_cast<UnicodeSet::bitquad_t *>(__mei_Set_quads), 98, 0};

    /** Code Point Ranges for mu
    [3641, 3641], [3708, 3708], [37c2, 37c2], [38ce, 38ce], [39c5, 39c5],
    [3f87, 3f87], [4032, 4032], [42be, 42be], [4948, 4948], [4c6f, 4c6f],
    [4eeb, 4eeb], [52df, 52df], [563f, 563f], [5776, 5776], [5893, 5893],
    [58b2, 58b2], [59c6, 59c6], [59e5, 59e5], [5a12, 5a12], [5a7a, 5a7a],
    [5cd4, 5cd4], [5e55, 5e55], [5e59, 5e59], [6154, 6155], [62c7, 62c7],
    [66ae, 66ae], [6728, 6728], [6737, 6737], [6958, 6958], [6a21, 6a22],
    [6bcd, 6bcd], [6be3, 6be3], [6bea, 6bea], [6c01, 6c01], [6c90, 6c90],
    [7091, 7091], [725f, 725f], [7261, 7261], [7267, 7267], [7273, 7273],
    [734f, 734f], [755d, 755d], [76ee, 76ee], [7766, 7766], [782a, 782a],
    [7a46, 7a46], [7e38, 7e38], [7e46, 7e46], [8252, 8252], [82dc, 82dc],
    [833b, 833b], [83ab, 83ab], [83af, 83af], [843a, 843a], [869e, 869e],
    [8e07, 8e07], [9267, 9267], [926c, 926c], [96ee, 96ee], [9702, 9702],
    [97aa, 97aa], [9da9, 9da9], [20e96, 20e96], [21d6c, 21d6c],
    [22603, 22603], [2272f, 2272f], [227e8, 227e8], [2320a, 2320a],
    [23ce0, 23ce0], [24685, 24685], [24742, 24742], [24755, 24755],
    [24d5d, 24d5d], [25108, 25108], [258f8, 258f8], [25c3b, 25c3b],
    [260e4, 260e4], [26c52, 26c52], [27680, 27680], [27a52, 27a52],
    [27b0f, 27b0f], [27c37, 27c37], [27ff9, 27ff9], [28236, 28236],
    [2834e, 2834e], [283b8, 283b8], [2886d, 2886d], [288a2, 288a2],
    [29868, 29868], [29b0d, 29b0d], [29d66, 29d66], [29d96, 29d96],
    [29da9, 29da9], [2a3ab, 2a3ab]**/


    namespace {
    const static UnicodeSet::run_t __mu_Set_runs[] = {
    {Empty, 434}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 8}, {Mixed, 3},
    {Empty, 2}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12}, {Mixed, 3}, {Empty, 3},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 13}, {Mixed, 2},
    {Empty, 6}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 30}, {Mixed, 2}, {Empty, 31}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 35}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 2950},
    {Mixed, 1}, {Empty, 118}, {Mixed, 1}, {Empty, 68}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 80}, {Mixed, 1},
    {Empty, 86}, {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 62}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 90}, {Mixed, 1}, {Empty, 81}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 125}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 18}, {Mixed, 3}, {Empty, 47}, {Mixed, 1}, {Empty, 29410}};
    const static UnicodeSet::bitquad_t  __mu_Set_quads[] = {
    0x00000002, 0x00000100, 0x00000004, 0x00004000, 0x00000020, 0x00000080,
    0x00040000, 0x40000000, 0x00000100, 0x00008000, 0x00000800, 0x80000000,
    0x80000000, 0x00400000, 0x00080000, 0x00040000, 0x00000040, 0x00000020,
    0x00040000, 0x04000000, 0x00100000, 0x02200000, 0x00300000, 0x00000080,
    0x00004000, 0x00800100, 0x01000000, 0x00000006, 0x00002000, 0x00000408,
    0x00000002, 0x00010000, 0x00020000, 0x80000000, 0x00080082, 0x00008000,
    0x20000000, 0x00004000, 0x00000040, 0x00000400, 0x00000040, 0x01000000,
    0x00000040, 0x00040000, 0x10000000, 0x08000000, 0x00008800, 0x04000000,
    0x40000000, 0x00000080, 0x00001080, 0x00004000, 0x00000004, 0x00000400,
    0x00000200, 0x00400000, 0x00001000, 0x00000008, 0x00008000, 0x00000100,
    0x00000400, 0x00000001, 0x00000020, 0x00200004, 0x20000000, 0x00000100,
    0x01000000, 0x08000000, 0x00000010, 0x00040000, 0x00000001, 0x00040000,
    0x00008000, 0x00800000, 0x02000000, 0x00400000, 0x00004000, 0x01000000,
    0x00002000, 0x00000004, 0x00000100, 0x00002000, 0x00000040, 0x00400000,
    0x00000200, 0x00000800};
    }

    const static UnicodeSet mu_Set{const_cast<UnicodeSet::run_t *>(__mu_Set_runs), 153, 0, const_cast<UnicodeSet::bitquad_t *>(__mu_Set_quads), 86, 0};

    /** Code Point Ranges for dui
    [3642, 3642], [37cb, 37cb], [381a, 381a], [3882, 3882], [3888, 3888],
    [3a03, 3a03], [3b23, 3b23], [4099, 4099], [41cf, 41cf], [43e8, 43e8],
    [453b, 453b], [4703, 4703], [4a34, 4a34], [4a3a, 4a3a], [4b08, 4b08],
    [4b3d, 4b3d], [4b54, 4b54], [4bdf, 4bdf], [5151, 5151], [554d, 554d],
    [57fb, 57fb], [5806, 5806], [5860, 5860], [596a, 596a], [5c0d, 5c0d],
    [5d5f, 5d5f], [619d, 619e], [61df, 61df], [6425, 6425], [6566, 6566],
    [6778, 6778], [69cc, 69cc], [6fe7, 6fe7], [7022, 7022], [7029, 7029],
    [75fd, 75fd], [7893, 7893], [78d3, 78d3], [794b, 794b], [7d90, 7d90],
    [81ad, 81ad], [85b1, 85b1], [8b09, 8b09], [8b48, 8b48], [8ffd, 8ffd],
    [9217, 9217], [92ed, 92ed], [931e, 931e], [939a, 939a], [9413, 9413],
    [941c, 941c], [966e, 966e], [968a, 968a], [9827, 9827], [9d2d, 9d2d],
    [200a4, 200a4], [203ee, 203ee], [20711, 20711], [20852, 20852],
    [20997, 20997], [20ae8, 20ae8], [21068, 21068], [213e9, 213e9],
    [21448, 21448], [21725, 21725], [21dcb, 21dcb], [21f3b, 21f3b],
    [221bb, 221bb], [22239, 22239], [227cb, 227cb], [23749, 23749],
    [23a8c, 23a8c], [2411b, 2411b], [24937, 24937], [249eb, 249eb],
    [24ba9, 24ba9], [24dce, 24dce], [24e75, 24e75], [25475, 25475],
    [25e72, 25e72], [267b1, 267b1], [26877, 26877], [26d8f, 26d8f],
    [279c6, 279c6], [28b0d, 28b0d], [28e45, 28e45], [28ef5, 28ef5],
    [2912e, 2912e], [29146, 29146], [29165, 29165], [29172, 29172],
    [29201, 29201], [2921c, 2921c], [292ad, 292ad], [2940c, 2940c],
    [29700, 29700], [29a3d, 29a3d], [2a324, 2a324], [2a49b, 2a49b],
    [2a4a1, 2a4a1]**/


    namespace {
    const static UnicodeSet::run_t __dui_Set_runs[] = {
    {Empty, 434}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 6}, {Mixed, 3}, {Empty, 3},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 20}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 18}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 2843}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 123}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 51},
    {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 79}, {Mixed, 1},
    {Empty, 73}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 97}, {Mixed, 1}, {Empty, 137}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 17},
    {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 71}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 29402}};
    const static UnicodeSet::bitquad_t  __dui_Set_quads[] = {
    0x00000004, 0x00000800, 0x04000000, 0x00000104, 0x00000008, 0x00000008,
    0x02000000, 0x00008000, 0x00000100, 0x08000000, 0x00000008, 0x04100000,
    0x00000100, 0x20000000, 0x00100000, 0x80000000, 0x00020000, 0x00002000,
    0x08000000, 0x00000040, 0x00000001, 0x00000400, 0x00002000, 0x80000000,
    0x60000000, 0x80000000, 0x00000020, 0x00000040, 0x01000000, 0x00001000,
    0x00000080, 0x00000204, 0x20000000, 0x00080000, 0x00080000, 0x00000800,
    0x00010000, 0x00002000, 0x00020000, 0x00000200, 0x00000100, 0x20000000,
    0x00800000, 0x00002000, 0x40000000, 0x04000000, 0x10080000, 0x00004000,
    0x00000400, 0x00000080, 0x00002000, 0x00000010, 0x00004000, 0x00020000,
    0x00040000, 0x00800000, 0x00000100, 0x00000100, 0x00000200, 0x00000100,
    0x00000020, 0x00000800, 0x08000000, 0x08000000, 0x02000000, 0x00000800,
    0x00000200, 0x00001000, 0x08000000, 0x00800000, 0x00000800, 0x00000200,
    0x00004000, 0x00200000, 0x00200000, 0x00040000, 0x00020000, 0x00800000,
    0x00008000, 0x00000040, 0x00002000, 0x00000020, 0x00200000, 0x00004000,
    0x00000040, 0x00040020, 0x10000002, 0x00002000, 0x00001000, 0x00000001,
    0x20000000, 0x00000010, 0x08000000, 0x00000002};
    }

    const static UnicodeSet dui_Set{const_cast<UnicodeSet::run_t *>(__dui_Set_runs), 173, 0, const_cast<UnicodeSet::bitquad_t *>(__dui_Set_quads), 94, 0};

    /** Code Point Ranges for bang
    [3643, 3643], [3a0d, 3a0d], [3ff6, 3ff6], [409c, 409c], [43a7, 43a7],
    [45ab, 45ab], [49db, 49db], [4a77, 4a77], [4c37, 4c37], [4e26, 4e26],
    [508d, 508d], [55d9, 55d9], [57b9, 57b9], [57f2, 57f2], [585d, 585d],
    [5ace, 5ace], [5e6b, 5e6b], [5f6d, 5f6d], [5fac, 5fac], [6412, 6412],
    [65c1, 65c1], [6886, 6886], [68d2, 68d3], [699c, 699c], [6d5c, 6d5c],
    [7253, 7253], [73a4, 73a4], [7865, 7865], [78c5, 78c5], [7d21, 7d21],
    [7d81, 7d81], [7e0d, 7e0d], [8180, 8180], [8255, 8255], [84a1, 84a1],
    [8684, 8684], [868c, 868c], [86d6, 86d6], [872f, 872f], [8783, 8783],
    [8b17, 8b17], [90a6, 90a6], [938a, 938a], [97a4, 97a4], [9a2f, 9a2f],
    [9ac8, 9ac8], [20a35, 20a35], [20b23, 20b23], [20c91, 20c91],
    [20cd0, 20cd0], [21f72, 21f72], [2204f, 2204f], [2210e, 2210e],
    [22717, 22717], [22a8b, 22a8b], [22b8f, 22b8f], [22db6, 22db6],
    [22e0c, 22e0c], [23619, 23619], [23ba1, 23ba1], [23ba7, 23ba7],
    [246b0, 246b0], [24c75, 24c75], [25002, 25002], [26c25, 26c25],
    [26fad, 26fad], [28890, 28890], [292ee, 292ee], [29357, 29357],
    [299a0, 299a0], [29b97, 29b97]**/


    namespace {
    const static UnicodeSet::run_t __bang_Set_runs[] = {
    {Empty, 434}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 46},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 2938}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 148}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 47}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 63}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 87}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 224}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 198}, {Mixed, 1}, {Empty, 82},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 29475}};
    const static UnicodeSet::bitquad_t  __bang_Set_quads[] = {
    0x00000008, 0x00002000, 0x00400000, 0x10000000, 0x00000080, 0x00000800,
    0x08000000, 0x00800000, 0x00800000, 0x00000040, 0x00002000, 0x02000000,
    0x02000000, 0x00040000, 0x20000000, 0x00004000, 0x00000800, 0x00002000,
    0x00001000, 0x00040000, 0x00000002, 0x00000040, 0x000c0000, 0x10000000,
    0x10000000, 0x00080000, 0x00000010, 0x00000020, 0x00000020, 0x00000002,
    0x00000002, 0x00002000, 0x00000001, 0x00200000, 0x00000002, 0x00001010,
    0x00400000, 0x00008000, 0x00000008, 0x00800000, 0x00000040, 0x00000400,
    0x00000010, 0x00008000, 0x00000100, 0x00200000, 0x00000008, 0x00020000,
    0x00010000, 0x00040000, 0x00008000, 0x00004000, 0x00800000, 0x00000800,
    0x00008000, 0x00400000, 0x00001000, 0x02000000, 0x00000082, 0x00010000,
    0x00200000, 0x00000004, 0x00000020, 0x00002000, 0x00010000, 0x00004000,
    0x00800000, 0x00000001, 0x00800000};
    }

    const static UnicodeSet bang_Set{const_cast<UnicodeSet::run_t *>(__bang_Set_runs), 139, 0, const_cast<UnicodeSet::bitquad_t *>(__bang_Set_quads), 69, 0};

    /** Code Point Ranges for chang
    [364a, 364a], [415b, 415b], [45c5, 45c5], [45c9, 45c9], [4800, 4800],
    [4806, 4806], [4a68, 4a68], [4b96, 4b96], [4bf4, 4bf4], [5000, 5000],
    [5018, 5018], [5021, 5021], [50d8, 50d8], [511f, 511f], [513b, 513b],
    [5382, 5382], [5531, 5531], [5617, 5617], [5690, 5690], [5834, 5834],
    [5872, 5872], [5a3c, 5a3c], [5ae6, 5ae6], [5c1a, 5c1a], [5e38, 5e38],
    [5ee0, 5ee0], [5f9c, 5f9c], [60b5, 60b5], [60dd, 60dd], [655e, 655e],
    [660c, 660c], [6636, 6636], [667f, 667f], [66a2, 66a2], [68d6, 68d6],
    [6c05, 6c05], [6dcc, 6dcc], [6dd0, 6dd0], [713b, 713b], [7316, 7316],
    [7429, 7429], [7452, 7452], [747a, 747a], [74fa, 74fa], [757c, 757c],
    [8139, 8139], [8178, 8178], [83d6, 83d6], [8407, 8407], [88ee, 88ee],
    [88f3, 88f3], [92f9, 92f9], [92ff, 92ff], [9329, 9329], [9577, 9577],
    [95b6, 95b6], [95db, 95db], [97d4, 97d4], [9b2f, 9b2f], [9be7, 9be7],
    [9c68, 9c68], [9f1a, 9f1a], [20641, 20641], [2068a, 2068a],
    [21b7f, 21b7f], [2205d, 2205d], [225fa, 225fa], [2288c, 2288c],
    [24884, 24884], [24f63, 24f63], [24ffc, 24ffc], [251d4, 251d4],
    [252e4, 252e4], [255ca, 255ca], [257da, 257da], [25834, 25834],
    [25ac5, 25ac5], [26c31, 26c31], [26f33, 26f33], [27004, 27004],
    [28396, 28396], [288db, 288db], [28c6e, 28c6e], [28dc7, 28dc7],
    [29cb9, 29cb9], [29ce4, 29ce4], [2a07a, 2a07a], [2a087, 2a087],
    [2a139, 2a139], [2a268, 2a268]**/


    namespace {
    const static UnicodeSet::run_t __chang_Set_runs[] = {
    {Empty, 434}, {Mixed, 1}, {Empty, 87}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 32}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 18}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 35}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 3}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 93}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 79}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 15}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 2873}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 166},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 255}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 138},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 155}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 118}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 27}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 29420}};
    const static UnicodeSet::bitquad_t  __chang_Set_quads[] = {
    0x00000400, 0x08000000, 0x00000220, 0x00000041, 0x00000100, 0x00400000,
    0x00100000, 0x01000001, 0x00000002, 0x01000000, 0x80000000, 0x08000000,
    0x00000004, 0x00020000, 0x00800000, 0x00010000, 0x00100000, 0x00040000,
    0x10000000, 0x00000040, 0x04000000, 0x01000000, 0x00000001, 0x10000000,
    0x00200000, 0x20000000, 0x40000000, 0x00001000, 0x00400000, 0x80000000,
    0x00000004, 0x00400000, 0x00000020, 0x00011000, 0x08000000, 0x00400000,
    0x00000200, 0x00040000, 0x04000000, 0x04000000, 0x10000000, 0x02000000,
    0x01000000, 0x00400000, 0x00000080, 0x00084000, 0x82000000, 0x00000200,
    0x00800000, 0x00400000, 0x08000000, 0x00100000, 0x00008000, 0x00000080,
    0x00000100, 0x04000000, 0x00000002, 0x00000400, 0x80000000, 0x20000000,
    0x04000000, 0x00001000, 0x00000010, 0x00000008, 0x10000000, 0x00100000,
    0x00000010, 0x00000400, 0x04000000, 0x00100000, 0x00000020, 0x00020000,
    0x00080000, 0x00000010, 0x00400000, 0x08000000, 0x00004000, 0x00000080,
    0x02000000, 0x00000010, 0x04000000, 0x00000080, 0x02000000, 0x00000100};
    }

    const static UnicodeSet chang_Set{const_cast<UnicodeSet::run_t *>(__chang_Set_runs), 153, 0, const_cast<UnicodeSet::bitquad_t *>(__chang_Set_quads), 84, 0};

    /** Code Point Ranges for zhang
    [364a, 364a], [3663, 3663], [3f74, 3f74], [46eb, 46eb], [4a68, 4a68],
    [4e08, 4e08], [4ec9, 4ec9], [4ed7, 4ed7], [50bd, 50bd], [5adc, 5adc],
    [5d82, 5d82], [5e33, 5e33], [5e5b, 5e5b], [5f21, 5f21], [5f35, 5f35],
    [5f70, 5f70], [615e, 615e], [6259, 6259], [638c, 638c], [66b2, 66b2],
    [6756, 6756], [6a1f, 6a1f], [6f32, 6f33], [7350, 7350], [748b, 748b],
    [75ee, 75ee], [7634, 7634], [7795, 7795], [7903, 7903], [7ae0, 7ae0],
    [7cbb, 7cbb], [8139, 8139], [8501, 8501], [87d1, 87d1], [8cec, 8cec],
    [9067, 9067], [9123, 9123], [9577, 9577], [969c, 969c], [979d, 979d],
    [9926, 9926], [9a3f, 9a3f], [9c46, 9c46], [20179, 20179],
    [20add, 20add], [21220, 21220], [21444, 21444], [216b9, 216b9],
    [2254e, 2254e], [22554, 22554], [22a70, 22a70], [22abe, 22abe],
    [22de2, 22de2], [2331e, 2331e], [23fa6, 23fa6], [244ef, 244ef],
    [24544, 24544], [251d4, 251d4], [25cf6, 25cf6], [26ea1, 26ea1],
    [2740a, 2740a], [27f63, 27f63], [28130, 28130], [2932c, 2932c],
    [29b6b, 29b6b], [2a142, 2a142]**/


    namespace {
    const static UnicodeSet::run_t __zhang_Set_runs[] = {
    {Empty, 434}, {Mixed, 2}, {Empty, 71}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 80},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 2856}, {Mixed, 1},
    {Empty, 74}, {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 116}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 100}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 99},
    {Mixed, 1}, {Empty, 88}, {Mixed, 1}, {Empty, 141}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 90}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 143}, {Mixed, 1}, {Empty, 65}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 29429}};
    const static UnicodeSet::bitquad_t  __zhang_Set_quads[] = {
    0x00000400, 0x00000008, 0x00100000, 0x00000800, 0x00000100, 0x00000100,
    0x00800200, 0x20000000, 0x10000000, 0x00000004, 0x00080000, 0x08000000,
    0x00200002, 0x00010000, 0x40000000, 0x02000000, 0x00001000, 0x00040000,
    0x00400000, 0x80000000, 0x000c0000, 0x00010000, 0x00000800, 0x00004000,
    0x00100000, 0x00200000, 0x00000008, 0x00000001, 0x08000000, 0x02000000,
    0x00000002, 0x00020000, 0x00001000, 0x00000080, 0x00000008, 0x00800000,
    0x10000000, 0x20000000, 0x00000040, 0x80000000, 0x00000040, 0x02000000,
    0x20000000, 0x00000001, 0x00000010, 0x02000000, 0x00104000, 0x00010000,
    0x40000000, 0x00000004, 0x40000000, 0x00000040, 0x00008000, 0x00000010,
    0x00100000, 0x00400000, 0x00000002, 0x00000400, 0x00000008, 0x00010000,
    0x00001000, 0x00000800, 0x00000004};
    }

    const static UnicodeSet zhang_Set{const_cast<UnicodeSet::run_t *>(__zhang_Set_runs), 123, 0, const_cast<UnicodeSet::bitquad_t *>(__zhang_Set_quads), 63, 0};

    /** Code Point Ranges for duo
    [364d, 364d], [3650, 3650], [36c6, 36c6], [386f, 386f], [38de, 38de],
    [391e, 391e], [3969, 3969], [3a0a, 3a0a], [3a9c, 3a9c], [3ed4, 3ed4],
    [415c, 415c], [443e, 443e], [4643, 4643], [4664, 4664], [4750, 4750],
    [4824, 4824], [493b, 493b], [4a54, 4a54], [4ac2, 4ac2], [4c8a, 4c8a],
    [4edb, 4edb], [5151, 5151], [51d9, 51d9], [5234, 5234], [525f, 525f],
    [526b, 526b], [5484, 5484], [54c6, 54c6], [54da, 54da], [55a5, 55a5],
    [56b2, 56b2], [579b, 579b], [57f5, 57f5], [58ae, 58af], [591a, 591a],
    [596a, 596a], [5972, 5972], [5aa0, 5aa0], [5c2e, 5c2e], [5d1c, 5d1c],
    [5d9e, 5d9e], [5ea6, 5ea6], [60f0, 60f0], [6305, 6305], [6376, 6376],
    [6387, 6387], [63e3, 63e3], [6553, 6553], [6560, 6560], [6735, 6735],
    [6742, 6742], [6755, 6755], [675d, 675d], [67c1, 67c2], [67ee, 67ee],
    [6857, 6857], [68f0, 68f0], [692f, 692f], [6a62, 6a62], [6bf2, 6bf2],
    [6cb0, 6cb1], [6fa4, 6fa4], [75e5, 75e5], [787e, 787e], [7d9e, 7d9e],
    [8235, 8235], [8324, 8324], [88b3, 88b3], [88f0, 88f0], [8957, 8957],
    [8a51, 8a51], [8a83, 8a83], [8c80, 8c80], [8d93, 8d93], [8de2, 8de2],
    [8de5, 8de5], [8dff, 8dff], [8e31, 8e31], [8eb1, 8eb1], [8ec3, 8ec3],
    [9132, 9132], [9161, 9161], [931e, 931e], [937a, 937a], [9438, 9438],
    [9640, 9640], [964a, 964a], [964f, 964f], [968b, 968b], [9693, 9693],
    [98ff, 98ff], [99b1, 99b1], [9b0c, 9b0c], [9bb5, 9bb5], [9d7d, 9d7d],
    [9ede, 9ede], [206eb, 206eb], [2132d, 2132d], [214c9, 214c9],
    [214f7, 214f7], [21db2, 21db2], [21e87, 21e87], [2272c, 2272c],
    [22cfd, 22cfd], [22f20, 22f20], [22fce, 22fce], [23467, 23467],
    [239f7, 239f7], [23d7a, 23d7b], [242e8, 242e8], [24303, 24303],
    [246db, 246db], [24895, 24895], [24938, 24938], [24b3e, 24b3e],
    [2579b, 2579b], [25b32, 25b32], [25cd4, 25cd4], [25ff0, 25ff0],
    [26366, 26366], [26570, 26570], [2658b, 2658b], [272b1, 272b1],
    [27664, 27664], [278b5, 278b5], [279c7, 279c7], [27a67, 27a67],
    [27c6b, 27c6b], [2801f, 2801f], [28185, 28185], [28261, 28261],
    [2834f, 2834f], [28983, 28983], [28b0d, 28b0d], [28c89, 28c89],
    [28e43, 28e43], [290d2, 290d2], [2929c, 2929c], [2935c, 2935c],
    [293ab, 293ab], [29452, 29452], [2988e, 2988e], [29b3b, 29b3b],
    [29fe9, 29fe9], [2a0d2, 2a0d2], [2a609, 2a609]**/


    namespace {
    const static UnicodeSet::run_t __duo_Set_runs[] = {
    {Empty, 434}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 16}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 16},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 2}, {Empty, 13}, {Mixed, 2}, {Empty, 3},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 18},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2880}, {Mixed, 1},
    {Empty, 97}, {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 69},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 68}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 43}, {Mixed, 2}, {Empty, 29},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 98}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 104},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 29391}};
    const static UnicodeSet::bitquad_t  __duo_Set_quads[] = {
    0x00012000, 0x00000040, 0x00008000, 0x40000000, 0x40000000, 0x00000200,
    0x00000400, 0x10000000, 0x00100000, 0x10000000, 0x40000000, 0x00000008,
    0x00000010, 0x00010000, 0x00000010, 0x08000000, 0x00100000, 0x00000004,
    0x00000400, 0x08000000, 0x00020000, 0x02000000, 0x00100000, 0x80000000,
    0x00000800, 0x00000010, 0x04000040, 0x00000020, 0x00040000, 0x08000000,
    0x00200000, 0x0000c000, 0x04000000, 0x00040400, 0x00000001, 0x00004000,
    0x10000000, 0x40000000, 0x00000040, 0x00010000, 0x00000020, 0x00400000,
    0x00000080, 0x00000008, 0x00080000, 0x00000001, 0x00200000, 0x20200004,
    0x00000006, 0x00004000, 0x00800000, 0x00010000, 0x00008000, 0x00000004,
    0x00040000, 0x00030000, 0x00000010, 0x00000020, 0x40000000, 0x40000000,
    0x00200000, 0x00000010, 0x00080000, 0x00010000, 0x00800000, 0x00020000,
    0x00000008, 0x00000001, 0x00080000, 0x80000024, 0x00020000, 0x00020000,
    0x00000008, 0x00040000, 0x00000002, 0x40000000, 0x04000000, 0x01000000,
    0x00008401, 0x00080800, 0x80000000, 0x00020000, 0x00001000, 0x00200000,
    0x20000000, 0x40000000, 0x00000800, 0x00002000, 0x00000200, 0x00800000,
    0x00040000, 0x00000080, 0x00001000, 0x20000000, 0x00000001, 0x00004000,
    0x00000080, 0x00800000, 0x0c000000, 0x00000100, 0x00000008, 0x08000000,
    0x00200000, 0x01000000, 0x40000000, 0x08000000, 0x00040000, 0x00100000,
    0x00010000, 0x00000040, 0x00010000, 0x00000800, 0x00020000, 0x00000010,
    0x00200000, 0x00000080, 0x00000080, 0x00000800, 0x80000000, 0x00000020,
    0x00000002, 0x00008000, 0x00000008, 0x00002000, 0x00000200, 0x00000008,
    0x00040000, 0x10000000, 0x10000000, 0x00000800, 0x00040000, 0x00004000,
    0x08000000, 0x00000200, 0x00040000, 0x00000200};
    }

    const static UnicodeSet duo_Set{const_cast<UnicodeSet::run_t *>(__duo_Set_runs), 251, 0, const_cast<UnicodeSet::bitquad_t *>(__duo_Set_quads), 136, 0};

    /** Code Point Ranges for long
    [3659, 3659], [3685, 3685], [36de, 36de], [376b, 376b], [37d6, 37d6],
    [3885, 3885], [3995, 3995], [3c0d, 3c0d], [3ce5, 3ce5], [40e7, 40e7],
    [418d, 418d], [4841, 4841], [4962, 4962], [4a8a, 4a8a], [4bbe, 4bbe],
    [4c31, 4c31], [5131, 5131], [54e2, 54e2], [56a8, 56a8], [58df, 58df],
    [5bf5, 5bf5], [5c78, 5c78], [5d90, 5d90], [5dc3, 5dc3], [5f04, 5f04],
    [5fbf, 5fbf], [650f, 650f], [66e8, 66e8], [6727, 6727], [6887, 6887],
    [6af3, 6af3], [6e70, 6e70], [7027, 7027], [7216, 7216], [74cf, 74cf],
    [7643, 7643], [77d3, 77d3], [7866, 7866], [7931, 7932], [7abf, 7abf],
    [7ac9, 7ac9], [7adc, 7adc], [7be2, 7be2], [7c60, 7c60], [807e, 807e],
    [8622, 8622], [8755, 8755], [882a, 882a], [882c, 882c], [8856, 8856],
    [8971, 8971], [8c3e, 8c3e], [8c45, 8c45], [8d1a, 8d1a], [8e98, 8e98],
    [93e7, 93e7], [9468, 9468], [9686, 9686], [96b4, 96b4], [9733, 9733],
    [9747, 9747], [9a61, 9a61], [9e17, 9e17], [9f8d, 9f8d], [9f90, 9f90],
    [9f93, 9f93], [20bbd, 20bbd], [20c5a, 20c5a], [20f90, 20f90],
    [210e1, 210e1], [21b15, 21b15], [21c6f, 21c6f], [22671, 22671],
    [22931, 22932], [22e2d, 22e2d], [23ae3, 23ae3], [24d78, 24d78],
    [24f03, 24f03], [24fad, 24fad], [2598c, 2598c], [25aa2, 25aa2],
    [25abb, 25abb], [25b06, 25b06], [25ccc, 25ccc], [25e09, 25e09],
    [26abd, 26abd], [27370, 27370], [27665, 27665], [27682, 27682],
    [281d8, 281d8], [283e0, 283e0], [286d3, 286d3], [28e9a, 28e9a],
    [290bd, 290bd], [2913a, 2913a], [29658, 29658], [29660, 29660],
    [297ed, 297ed], [2a416, 2a416], [2a515, 2a515], [2a533, 2a533],
    [2a537, 2a537], [2a691, 2a691], [2a693, 2a693], [2a698, 2a698],
    [2a69d, 2a69d], [2a6a0, 2a6a0]**/


    namespace {
    const static UnicodeSet::run_t __long_Set_runs[] = {
    {Empty, 434}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 8}, {Mixed, 1},
    {Empty, 21}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 16}, {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 24},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 2912}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 80}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 79}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 101}, {Mixed, 1},
    {Empty, 147}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 100}, {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 23},
    {Mixed, 2}, {Empty, 89}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 40}, {Mixed, 2},
    {Empty, 11}, {Mixed, 1}, {Empty, 96}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 10}, {Mixed, 2}, {Empty, 29386}};
    const static UnicodeSet::bitquad_t  __long_Set_quads[] = {
    0x02000000, 0x00000020, 0x40000000, 0x00000800, 0x00400000, 0x00000020,
    0x00200000, 0x00002000, 0x00000020, 0x00000080, 0x00002000, 0x00000002,
    0x00000004, 0x00000400, 0x40000000, 0x00020000, 0x00020000, 0x00000004,
    0x00000100, 0x80000000, 0x00200000, 0x01000000, 0x00010000, 0x00000008,
    0x00000010, 0x80000000, 0x00008000, 0x00000100, 0x00000080, 0x00000080,
    0x00080000, 0x00010000, 0x00000080, 0x00400000, 0x00008000, 0x00000008,
    0x00080000, 0x00000040, 0x00060000, 0x80000000, 0x10000200, 0x00000004,
    0x00000001, 0x40000000, 0x00000004, 0x00200000, 0x00001400, 0x00400000,
    0x00020000, 0x40000000, 0x00000020, 0x04000000, 0x01000000, 0x00000080,
    0x00000100, 0x00000040, 0x00100000, 0x00080000, 0x00000080, 0x00000002,
    0x00800000, 0x00092000, 0x20000000, 0x04000000, 0x00010000, 0x00000002,
    0x00200000, 0x00008000, 0x00020000, 0x00060000, 0x00002000, 0x00000008,
    0x01000000, 0x00000008, 0x00002000, 0x00001000, 0x08000004, 0x00000040,
    0x00001000, 0x00000200, 0x20000000, 0x00010000, 0x00000020, 0x00000004,
    0x01000000, 0x00000001, 0x00080000, 0x04000000, 0x20000000, 0x04000000,
    0x01000000, 0x00000001, 0x00002000, 0x00400000, 0x00200000, 0x00880000,
    0x210a0000, 0x00000001};
    }

    const static UnicodeSet long_Set{const_cast<UnicodeSet::run_t *>(__long_Set_runs), 179, 0, const_cast<UnicodeSet::bitquad_t *>(__long_Set_quads), 98, 0};

    /** Code Point Ranges for lang
    [365f, 365f], [3757, 3757], [37cd, 37cd], [3883, 3883], [3af0, 3af0],
    [3bbe, 3bbe], [3c62, 3c62], [3fbf, 3fbf], [4036, 4036], [41a1, 41a1],
    [435a, 435a], [455e, 455e], [4859, 4859], [4bd6, 4bd6], [4fcd, 4fcd],
    [52c6, 52c6], [54f4, 54f4], [5577, 5577], [57cc, 57cc], [5acf, 5acf],
    [5d00, 5d00], [5eca, 5eca], [60a2, 60a2], [6717, 6717], [6879, 6879],
    [6994, 6994], [6a03, 6a03], [6a20, 6a20], [6b34, 6b34], [6d6a, 6d6a],
    [70fa, 70fa], [72fc, 72fc], [7405, 7405], [746f, 746f], [7860, 7860],
    [7a02, 7a02], [7b64, 7b64], [7fb9, 7fb9], [813c, 813c], [8246, 8246],
    [83a8, 83a8], [8497, 8497], [84c8, 84c8], [84e2, 84e2], [870b, 870b],
    [8782, 8782], [8a8f, 8a8f], [8e09, 8e09], [8eb4, 8eb4], [90ce, 90ce],
    [92c3, 92c3], [93af, 93af], [95ac, 95ac], [99fa, 99fa], [20e98, 20e98],
    [20ef4, 20ef4], [22cd1, 22cd1], [22f42, 22f42], [232a7, 232a7],
    [23ee1, 23ee1], [251d1, 251d1], [2536b, 2536b], [259eb, 259eb],
    [26d67, 26d67], [26eab, 26eab], [27685, 27685], [27ef4, 27ef4],
    [287bf, 287bf], [28d97, 28d97], [296e1, 296e1], [29ce4, 29ce4],
    [29dd5, 29dd5], [2a05c, 2a05c]**/


    namespace {
    const static UnicodeSet::run_t __lang_Set_runs[] = {
    {Empty, 434}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 50},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 2980}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 238},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 97}, {Mixed, 1}, {Empty, 150}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 155}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 66},
    {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 74}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 29437}};
    const static UnicodeSet::bitquad_t  __lang_Set_quads[] = {
    0x80000000, 0x00800000, 0x00002000, 0x00000008, 0x00010000, 0x40000000,
    0x00000004, 0x80000000, 0x00400000, 0x00000002, 0x04000000, 0x40000000,
    0x02000000, 0x00400000, 0x00002000, 0x00000040, 0x00100000, 0x00800000,
    0x00001000, 0x00008000, 0x00000001, 0x00000400, 0x00000004, 0x00800000,
    0x02000000, 0x00100000, 0x00000008, 0x00000001, 0x00100000, 0x00000400,
    0x04000000, 0x10000000, 0x00000020, 0x00008000, 0x00000001, 0x00000004,
    0x00000010, 0x02000000, 0x10000000, 0x00000040, 0x00000100, 0x00800000,
    0x00000100, 0x00000004, 0x00000800, 0x00000004, 0x00008000, 0x00000200,
    0x00100000, 0x00004000, 0x00000008, 0x00008000, 0x00001000, 0x04000000,
    0x01000000, 0x00100000, 0x00020000, 0x00000004, 0x00000080, 0x00000002,
    0x00020000, 0x00000800, 0x00000800, 0x00000080, 0x00000800, 0x00000020,
    0x00100000, 0x80000000, 0x00800000, 0x00000002, 0x00000010, 0x00200000,
    0x10000000};
    }

    const static UnicodeSet lang_Set{const_cast<UnicodeSet::run_t *>(__lang_Set_runs), 143, 0, const_cast<UnicodeSet::bitquad_t *>(__lang_Set_quads), 73, 0};

    /** Code Point Ranges for zong
    [3661, 3661], [3687, 3687], [3894, 3894], [38ed, 38ed], [3a11, 3a11],
    [4053, 4053], [4226, 4226], [435f, 435f], [4478, 4478], [45b2, 45b2],
    [45e5, 45e5], [4655, 4655], [474b, 474b], [486f, 486f], [48a8, 48a8],
    [4c0c, 4c0c], [500a, 500a], [5027, 5027], [506c, 506c], [582b, 582b],
    [5b97, 5b97], [5d4f, 5d4f], [5d78, 5d78], [5f9e, 5f9e], [60fe, 60fe],
    [63d4, 63d4], [662e, 662e], [6721, 6721], [6936, 6936], [6a05, 6a05],
    [6f68, 6f68], [719c, 719c], [71a7, 71a7], [7323, 7323], [7632, 7632],
    [7882, 7882], [78eb, 78eb], [7a2f, 7a2f], [7cbd, 7cbd], [7d9c, 7d9c],
    [7dc3, 7dc3], [7dcf, 7dcf], [7df5, 7df5], [7e31, 7e31], [7e3d, 7e3d],
    [7fea, 7fea], [8159, 8159], [8250, 8250], [847c, 847c], [84d7, 84d7],
    [84ef, 84ef], [876c, 876c], [8c75, 8c75], [8e64, 8e64], [931d, 931d],
    [9350, 9350], [93d3, 93d3], [9a23, 9a23], [9b03, 9b03], [9b09, 9b09],
    [9b37, 9b37], [9bee, 9bee], [9bfc, 9bfc], [203ed, 203ed],
    [2054c, 2054c], [2087b, 2087b], [20d7b, 20d7b], [21570, 21570],
    [217a7, 217a7], [23012, 23012], [23be8, 23be8], [24846, 24846],
    [2537a, 2537a], [254fb, 254fb], [256be, 256be], [25821, 25821],
    [265b8, 265b8], [26859, 26859], [27ea3, 27ea3], [28330, 28330],
    [28348, 28349], [283a2, 283a2], [28ea1, 28ea1], [292ef, 292ef],
    [29917, 29917], [299b2, 299b2], [29b64, 29b64], [29b80, 29b80],
    [29c3d, 29c3d], [2a581, 2a581]**/


    namespace {
    const static UnicodeSet::run_t __zong_Set_runs[] = {
    {Empty, 435}, {Mixed, 2}, {Empty, 15}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 31}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 13}, {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 16}, {Mixed, 2}, {Empty, 11},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 19}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 2879}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 63},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 194}, {Mixed, 1},
    {Empty, 94}, {Mixed, 1}, {Empty, 98}, {Mixed, 1}, {Empty, 88},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 107}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 178}, {Mixed, 1}, {Empty, 35}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 87}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 13}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 74},
    {Mixed, 1}, {Empty, 29395}};
    const static UnicodeSet::bitquad_t  __zong_Set_quads[] = {
    0x00000002, 0x00000080, 0x00100000, 0x00002000, 0x00020000, 0x00080000,
    0x00000040, 0x80000000, 0x01000000, 0x00040000, 0x00000020, 0x00200000,
    0x00000800, 0x00008000, 0x00000100, 0x00001000, 0x00000400, 0x00000080,
    0x00001000, 0x00000800, 0x00800000, 0x00008000, 0x01000000, 0x40000000,
    0x40000000, 0x00100000, 0x00004000, 0x00000002, 0x00400000, 0x00000020,
    0x00000100, 0x10000000, 0x00000080, 0x00000008, 0x00040000, 0x00000004,
    0x00000800, 0x00008000, 0x20000000, 0x10000000, 0x00008008, 0x00200000,
    0x20020000, 0x00000400, 0x02000000, 0x00010000, 0x10000000, 0x00800000,
    0x00008000, 0x00001000, 0x00200000, 0x00000010, 0x20000000, 0x00010000,
    0x00080000, 0x00000008, 0x00000208, 0x00800000, 0x10004000, 0x00002000,
    0x00001000, 0x08000000, 0x08000000, 0x00010000, 0x00000080, 0x00040000,
    0x00000100, 0x00000040, 0x04000000, 0x08000000, 0x40000000, 0x00000002,
    0x01000000, 0x02000000, 0x00000008, 0x00010000, 0x00000300, 0x00000004,
    0x00000002, 0x00008000, 0x00800000, 0x00040000, 0x00000010, 0x00000001,
    0x20000000, 0x00000002};
    }

    const static UnicodeSet zong_Set{const_cast<UnicodeSet::run_t *>(__zong_Set_runs), 155, 0, const_cast<UnicodeSet::bitquad_t *>(__zong_Set_quads), 86, 0};

    /** Code Point Ranges for gun
    [3665, 3665], [3a30, 3a30], [3ace, 3ace], [3bfb, 3bfb], [40c2, 40c2],
    [4707, 4707], [4d6a, 4d6a], [4e28, 4e28], [5377, 5377], [60c3, 60c3],
    [68cd, 68cd], [6df7, 6df7], [6e3e, 6e3e], [6eda, 6eda], [742f, 742f],
    [7754, 7754], [7774, 7774], [78d9, 78d9], [7dc4, 7dc4], [7df7, 7df7],
    [84d8, 84d8], [886e, 886e], [88f7, 88f7], [8b34, 8b34], [8f25, 8f25],
    [9315, 9315], [9bc0, 9bc0], [9c25, 9c25], [200cc, 200cc],
    [207ac, 207ac], [21227, 21227], [2161d, 2161d], [21ee8, 21ee8],
    [220e9, 220e9], [23b8e, 23b8e], [264fc, 264fc], [2683a, 2683a],
    [26ace, 26ace], [27b2a, 27b2a], [27e2b, 27e2b], [28372, 28372],
    [29a2c, 29a2c], [29a4c, 29a4c]**/


    namespace {
    const static UnicodeSet::run_t __gun_Set_runs[] = {
    {Empty, 435}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 106}, {Mixed, 1},
    {Empty, 63}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 24}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 39},
    {Mixed, 2}, {Empty, 54}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 69}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2852}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 83}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 70}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 212},
    {Mixed, 1}, {Empty, 330}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 130}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 181}, {Mixed, 2},
    {Empty, 29485}};
    const static UnicodeSet::bitquad_t  __gun_Set_quads[] = {
    0x00000020, 0x00010000, 0x00004000, 0x08000000, 0x00000004, 0x00000080,
    0x00000400, 0x00000100, 0x00800000, 0x00000008, 0x00002000, 0x00800000,
    0x40000000, 0x04000000, 0x00008000, 0x00100000, 0x00100000, 0x02000000,
    0x00000010, 0x00800000, 0x01000000, 0x00004000, 0x00800000, 0x00100000,
    0x00000020, 0x00200000, 0x00000001, 0x00000020, 0x00001000, 0x00001000,
    0x00000080, 0x20000000, 0x00000100, 0x00000200, 0x00004000, 0x10000000,
    0x04000000, 0x00004000, 0x00000400, 0x00000800, 0x00040000, 0x00001000,
    0x00001000};
    }

    const static UnicodeSet gun_Set{const_cast<UnicodeSet::run_t *>(__gun_Set_runs), 81, 0, const_cast<UnicodeSet::bitquad_t *>(__gun_Set_quads), 43, 0};

    /** Code Point Ranges for liao
    [3669, 3669], [374b, 374b], [3d73, 3d73], [4126, 4126], [4386, 4386],
    [4460, 4460], [470d, 470d], [472e, 472e], [4740, 4740], [4764, 4764],
    [48a7, 48a7], [4a4d, 4a4d], [4e86, 4e86], [4f6c, 4f6c], [50c7, 50c7],
    [50da, 50da], [52de, 52de], [5639, 5639], [5afd, 5afd], [5be5, 5be5],
    [5bee, 5bee], [5c1e, 5c1e], [5c25, 5c25], [5c6a, 5c6a], [5d7a, 5d7a],
    [5d9a, 5d9a], [5ed6, 5ed6], [5eeb, 5eeb], [6180, 6180], [61ad, 61ad],
    [644e, 644e], [6482, 6482], [64a9, 64a9], [6579, 6579], [6599, 6599],
    [66b8, 66b8], [6a02, 6a02], [6a1b, 6a1b], [6f3b, 6f3b], [6f66, 6f66],
    [7093, 7093], [71ce, 71ce], [7212, 7212], [7360, 7360], [7499, 7499],
    [7642, 7642], [77ad, 77ad], [7a8c, 7a8c], [7ab7, 7ab7], [7c1d, 7c1d],
    [7e46, 7e46], [7e5a, 7e5a], [804a, 804a], [818b, 818b], [81ab, 81ab],
    [84fc, 84fc], [87c9, 87c9], [87df, 87df], [87e7, 87e7], [8c42, 8c42],
    [8cff, 8cff], [8e58, 8e58], [8e7d, 8e7d], [8f51, 8f51], [907c, 907c],
    [911d, 911d], [91d5, 91d5], [93d0, 93d0], [9410, 9410], [957d, 957d],
    [98c2, 98c2], [98c9, 98c9], [9ace, 9ace], [9def, 9def], [2040b, 2040b],
    [20582, 20582], [20a25, 20a25], [20e95, 20e95], [21eea, 21eea],
    [22137, 22137], [222bb, 222bb], [22a3a, 22a3a], [22e18, 22e18],
    [22ee2, 22ee2], [22f19, 22f19], [22fde, 22fde], [23070, 23070],
    [233b8, 233b8], [237c6, 237c6], [23a62, 23a62], [242bd, 242bd],
    [24457, 24457], [24d60, 24d60], [255c0, 255c0], [256f0, 256f0],
    [25c8a, 25c8a], [26312, 26312], [26575, 26575], [265d6, 265d6],
    [26a95, 26a95], [26eb9, 26eb9], [2708f, 2708f], [27608, 27608],
    [2775c, 2775c], [2785c, 2785c], [27f7d, 27f7d], [2859a, 2859a],
    [288c0, 288c0], [29550, 29550], [2959d, 2959d], [29bca, 29bca],
    [29d24, 29d24], [2a300, 2a300], [2a335, 2a335], [2a5b7, 2a5b7]**/


    namespace {
    const static UnicodeSet::run_t __liao_Set_runs[] = {
    {Empty, 435}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 20}, {Mixed, 4}, {Empty, 9}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 7},
    {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 9},
    {Mixed, 2}, {Empty, 20}, {Mixed, 2}, {Empty, 20}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 5}, {Mixed, 2}, {Empty, 8}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 22},
    {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 25},
    {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 34}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 2864}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 130}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 72}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 99}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 46},
    {Mixed, 2}, {Empty, 19}, {Mixed, 1}, {Empty, 29394}};
    const static UnicodeSet::bitquad_t  __liao_Set_quads[] = {
    0x00000200, 0x00000800, 0x00080000, 0x00000040, 0x00000040, 0x00000001,
    0x00002000, 0x00004000, 0x00000001, 0x00000010, 0x00000080, 0x00002000,
    0x00000040, 0x00001000, 0x04000080, 0x40000000, 0x02000000, 0x20000000,
    0x00004020, 0x40000000, 0x00000020, 0x00000400, 0x04000000, 0x04000000,
    0x00400000, 0x00000800, 0x00000001, 0x00002000, 0x00004000, 0x00000004,
    0x00000200, 0x02000000, 0x02000000, 0x01000000, 0x08000004, 0x08000000,
    0x00000040, 0x00080000, 0x00004000, 0x00040000, 0x00000001, 0x02000000,
    0x00000004, 0x00002000, 0x00001000, 0x00800000, 0x20000000, 0x04000040,
    0x00000400, 0x00000800, 0x00000800, 0x10000000, 0x80000200, 0x00000080,
    0x00000004, 0x80000000, 0x01000000, 0x20000000, 0x00020000, 0x10000000,
    0x20000000, 0x00200000, 0x00010000, 0x00010000, 0x20000000, 0x00000204,
    0x00004000, 0x00008000, 0x00000800, 0x00000004, 0x00000020, 0x00200000,
    0x00000400, 0x00800000, 0x08000000, 0x04000000, 0x01000000, 0x00000004,
    0x02000000, 0x40000000, 0x00010000, 0x01000000, 0x00000040, 0x00000004,
    0x20000000, 0x00800000, 0x00000001, 0x00000001, 0x00010000, 0x00000400,
    0x00040000, 0x00200000, 0x00400000, 0x00200000, 0x02000000, 0x00008000,
    0x00000100, 0x10000000, 0x10000000, 0x20000000, 0x04000000, 0x00000001,
    0x00010000, 0x20000000, 0x00000400, 0x00000010, 0x00000001, 0x00200000,
    0x00800000};
    }

    const static UnicodeSet liao_Set{const_cast<UnicodeSet::run_t *>(__liao_Set_runs), 187, 0, const_cast<UnicodeSet::bitquad_t *>(__liao_Set_quads), 109, 0};

    /** Code Point Ranges for chan
    [3674, 3674], [36b2, 36b2], [389f, 389f], [3910, 3910], [3983, 3983],
    [3a3b, 3a3b], [3b04, 3b04], [3bc6, 3bc6], [3c2b, 3c2b], [3da3, 3da3],
    [3e25, 3e25], [3e4c, 3e4c], [3e7d, 3e7d], [3e97, 3e97], [3ea5, 3ea5],
    [4021, 4021], [4081, 4081], [42b2, 42b2], [442e, 442e], [444e, 444e],
    [4828, 4828], [4872, 4872], [4918, 4918], [4993, 4993], [49b2, 49b2],
    [49ef, 49ef], [4a65, 4a65], [4a76, 4a76], [4a9c, 4a9c], [4aee, 4aee],
    [4c7f, 4c7f], [4d3c, 4d3c], [4d50, 4d50], [4e33, 4e33], [4eb6, 4eb6],
    [4f54, 4f54], [50dd, 50dd], [50e4, 50e4], [5103, 5103], [5133, 5133],
    [5154, 5154], [5257, 5257], [5296, 5296], [5398, 5398], [55ae, 55ae],
    [563d, 563d], [56b5, 56b5], [56c5, 56c5], [58a0, 58a0], [5b0b, 5b0b],
    [5b17, 5b17], [5b71, 5b71], [5d7c, 5d7c], [5d84, 5d84], [5dc9, 5dc9],
    [5e5d, 5e5d], [5e68, 5e68], [5edb, 5edb], [5fcf, 5fcf], [619a, 619a],
    [61fa, 61fa], [644c, 644c], [6472, 6472], [647b, 647b], [64a3, 64a3],
    [6519, 6519], [65ba, 65ba], [65f5, 65f5], [68b4, 68b4], [68ce, 68ce],
    [6990, 6990], [6b03, 6b03], [6bda, 6bda], [6cbe, 6cbe], [6efb, 6efb],
    [6f38, 6f38], [6f7a, 6f7a], [6fb6, 6fb6], [700d, 700d], [703a, 703a],
    [705b, 705b], [7158, 7158], [71c0, 71c0], [7351, 7351], [7523, 7523],
    [785f, 785f], [78db, 78db], [79aa, 79aa], [7c05, 7c05], [7dc2, 7dc2],
    [7e5f, 7e5f], [7e75, 7e75], [7e8f, 7e8f], [7fbc, 7fbc], [8120, 8120],
    [826c, 826c], [82eb, 82eb], [8546, 8546], [87b9, 87b9], [87ec, 87ec],
    [87fa, 87fa], [87fe, 87fe], [88a9, 88a9], [88e7, 88e7], [895c, 895d],
    [8962, 8962], [8998, 8998], [8a97, 8a97], [8ac2, 8ac2], [8b42, 8b42],
    [8b87, 8b87], [8b92, 8b92], [8b96, 8b96], [8e4d, 8e4d], [8e94, 8e94],
    [8fbf, 8fbf], [9141, 9141], [91a6, 91a6], [9246, 9246], [92cb, 92cb],
    [92d3, 92d3], [93df, 93df], [9471, 9471], [95e1, 95e1], [97c2, 97c2],
    [986b, 986b], [995e, 995e], [20077, 20077], [202f7, 202f7],
    [20429, 20429], [20446, 20446], [20451, 20451], [20461, 20461],
    [207c9, 207c9], [208c4, 208c4], [20e56, 20e56], [2134c, 2134c],
    [213bb, 213bb], [2159e, 2159e], [215a4, 215a4], [2176b, 2176b],
    [21bbf, 21bbf], [22067, 22067], [2231a, 2231a], [2294b, 2294b],
    [22c5f, 22c5f], [22df9, 22df9], [22e9f, 22e9f], [22f5d, 22f5d],
    [230d8, 230d8], [23535, 23535], [2353b, 2353b], [23931, 23931],
    [243a5, 243a5], [245fb, 245fb], [2468d, 2468d], [24aae, 24aae],
    [24bad, 24bad], [24be5, 24be5], [24d3f, 24d3f], [24e26, 24e26],
    [24f0b, 24f0b], [25293, 25293], [259d1, 259d1], [25b54, 25b54],
    [26180, 26180], [2675f, 2675f], [26899, 26899], [26e30, 26e30],
    [2722a, 2722a], [27432, 27432], [274cb, 274cb], [27543, 27543],
    [2781b, 2781b], [27953, 27953], [27a17, 27a17], [27b26, 27b26],
    [27d03, 27d03], [27f8d, 27f8d], [27fa1, 27fa1], [28109, 28109],
    [281dd, 281dd], [281e6, 281e6], [2829d, 2829d], [28522, 28522],
    [28a6a, 28a6a], [28a91, 28a91], [28b16, 28b16], [28bbb, 28bbb],
    [28cb5, 28cb5], [28cc2, 28cc2], [28d4d, 28d4d], [28ded, 28ded],
    [28f12, 28f12], [28f4a, 28f4a], [29372, 29372], [2958c, 2958c],
    [2975a, 2975a], [297f6, 297f6], [2996e, 2996e], [29b11, 29b11],
    [29b8f, 29b8f], [29f5d, 29f5d], [2a3c1, 2a3c2], [2a3cb, 2a3cb],
    [2a3e6, 2a3e6], [2a4c4, 2a4c4], [2a58e, 2a58e], [2a5c2, 2a5c2],
    [2a65e, 2a65e], [2a683, 2a683]**/


    namespace {
    const static UnicodeSet::run_t __chan_Set_runs[] = {
    {Empty, 435}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 5},
    {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 30}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 5},
    {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 14}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 18}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 21}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 7}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 3}, {Mixed, 3}, {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 7}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2872}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 9}, {Mixed, 3}, {Empty, 26},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14},
    {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 49},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 83},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 19}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 41}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 7}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 35},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 29387}};
    const static UnicodeSet::bitquad_t  __chan_Set_quads[] = {
    0x00100000, 0x00040000, 0x80000000, 0x00010000, 0x00000008, 0x08000000,
    0x00000010, 0x00000040, 0x00000800, 0x00000008, 0x00000020, 0x00001000,
    0x20000000, 0x00800000, 0x00000020, 0x00000002, 0x00000002, 0x00040000,
    0x00004000, 0x00004000, 0x00000100, 0x00040000, 0x01000000, 0x00080000,
    0x00040000, 0x00008000, 0x00400020, 0x10000000, 0x00004000, 0x80000000,
    0x10000000, 0x00010000, 0x00080000, 0x00400000, 0x00100000, 0x20000000,
    0x00000010, 0x00000008, 0x00080000, 0x00100000, 0x00800000, 0x00400000,
    0x01000000, 0x00004000, 0x20000000, 0x00200000, 0x00000020, 0x00000001,
    0x00800800, 0x00020000, 0x10000000, 0x00000010, 0x00000200, 0x20000000,
    0x00000100, 0x08000000, 0x00008000, 0x04000000, 0x04000000, 0x00001000,
    0x08040000, 0x00000008, 0x02000000, 0x04000000, 0x00200000, 0x00100000,
    0x00004000, 0x00010000, 0x00000008, 0x04000000, 0x40000000, 0x08000000,
    0x01000000, 0x04000000, 0x00400000, 0x00002000, 0x04000000, 0x08000000,
    0x01000000, 0x00000001, 0x00020000, 0x00000008, 0x80000000, 0x08000000,
    0x00000400, 0x00000020, 0x00000004, 0x80000000, 0x00200000, 0x00008000,
    0x10000000, 0x00000001, 0x00001000, 0x00000800, 0x00000040, 0x02000000,
    0x44001000, 0x00000200, 0x00000080, 0x30000000, 0x00000004, 0x01000000,
    0x00800000, 0x00000004, 0x00000004, 0x00440080, 0x00002000, 0x00100000,
    0x80000000, 0x00000002, 0x00000040, 0x00000040, 0x00080800, 0x80000000,
    0x00020000, 0x00000002, 0x00000004, 0x00000800, 0x40000000, 0x00800000,
    0x00800000, 0x00000200, 0x00020040, 0x00000002, 0x00000200, 0x00000010,
    0x00400000, 0x00001000, 0x08000000, 0x40000000, 0x00000010, 0x00000800,
    0x80000000, 0x00000080, 0x04000000, 0x00000800, 0x80000000, 0x02000000,
    0x80000000, 0x20000000, 0x01000000, 0x08200000, 0x00020000, 0x00000020,
    0x08000000, 0x00002000, 0x00004000, 0x00002000, 0x00000020, 0x80000000,
    0x00000040, 0x00000800, 0x00080000, 0x00020000, 0x00100000, 0x00000001,
    0x80000000, 0x02000000, 0x00010000, 0x00000400, 0x00040000, 0x00000800,
    0x00000008, 0x08000000, 0x00080000, 0x00800000, 0x00000040, 0x00000008,
    0x00002000, 0x00000002, 0x00000200, 0x20000000, 0x00000040, 0x20000000,
    0x00000004, 0x00000400, 0x00020000, 0x00400000, 0x08000000, 0x00200000,
    0x00000004, 0x00002000, 0x00002000, 0x00040000, 0x00000400, 0x00040000,
    0x00001000, 0x04000000, 0x00400000, 0x00004000, 0x00020000, 0x00008000,
    0x20000000, 0x00000806, 0x00000040, 0x00000010, 0x00004000, 0x00000004,
    0x40000000, 0x00000008};
    }

    const static UnicodeSet chan_Set{const_cast<UnicodeSet::run_t *>(__chan_Set_runs), 339, 0, const_cast<UnicodeSet::bitquad_t *>(__chan_Set_quads), 200, 0};

    /** Code Point Ranges for zhe
    [3677, 3677], [3742, 3742], [378f, 378f], [3847, 3847], [388e, 388e],
    [3b59, 3b59], [3b6f, 3b6f], [3bd9, 3bd9], [3c05, 3c05], [3e19, 3e19],
    [3e1e, 3e1e], [404b, 404b], [4064, 4064], [429e, 429e], [43f3, 43f3],
    [4411, 4411], [4432, 4432], [44c6, 44c6], [45b3, 45b3], [45ea, 45ea],
    [4706, 4706], [4743, 4743], [4755, 4755], [4a7e, 4a7e], [4bb0, 4bb0],
    [4d6d, 4d6d], [4e47, 4e47], [4edb, 4edb], [5387, 5387], [54f2, 54f2],
    [55fb, 55fb], [5600, 5600], [56c1, 56c1], [5835, 5835], [5aec, 5aec],
    [5eb6, 5eb6], [608a, 608a], [6174, 6174], [6179, 6179], [6278, 6278],
    [6298, 6298], [647a, 647a], [651d, 651d], [65a5, 65a5], [6662, 6662],
    [6754, 6754], [67d8, 67d8], [68cf, 68cf], [6a00, 6a00], [6a1c, 6a1c],
    [6b7d, 6b7d], [6d59, 6d59], [6f6a, 6f6a], [7740, 7740], [77fa, 77fa],
    [7813, 7813], [78d4, 78d4], [7c77, 7c77], [7c8d, 7c8d], [8005, 8005],
    [8037, 8037], [8051, 8051], [8076, 8076], [8457, 8457], [8517, 8517],
    [8674, 8674], [8707, 8707], [87c4, 87c5], [88a9, 88a9], [891a, 891a],
    [8936, 8936], [8975, 8975], [8b2b, 8b2b], [8b36, 8b36], [8b3a, 8b3a],
    [8b8b, 8b8b], [8d6d, 8d6d], [8efc, 8efc], [8f12, 8f12], [8f4d, 8f4d],
    [9019, 9019], [9069, 9069], [906e, 906e], [92b8, 92b8], [937a, 937a],
    [966c, 966c], [99b2, 99b2], [9bbf, 9bbf], [9dd3, 9dd3], [9dd9, 9dd9],
    [2032e, 2032e], [206b1, 206b1], [2075a, 2075a], [2075d, 2075d],
    [20783, 20783], [20bd3, 20bd3], [20f7b, 20f7b], [20f80, 20f80],
    [210ad, 210ad], [21121, 21121], [211e0, 211e0], [2162d, 2162d],
    [2172f, 2172f], [2174a, 2174a], [227ef, 227ef], [2288d, 2288d],
    [22af0, 22af0], [22b34, 22b34], [231e7, 231e7], [23675, 23675],
    [2381e, 2381e], [23d8b, 23d8b], [23ee9, 23ee9], [24724, 24724],
    [247cd, 247cd], [24bb1, 24bb1], [253ef, 253ef], [2543d, 2543d],
    [25461, 25461], [25563, 25563], [256e7, 256e7], [2590b, 2590b],
    [259ee, 259ee], [25b59, 25b59], [26144, 26144], [2652e, 2652e],
    [265d1, 265d1], [265d7, 265d7], [267a5, 267a5], [2681f, 26820],
    [26823, 26823], [268c0, 268c0], [26b03, 26b03], [26bcd, 26bcd],
    [273b4, 273b4], [27467, 27467], [27920, 27920], [27ca2, 27ca2],
    [2814a, 2814a], [28403, 28403], [28c35, 28c35], [28d4a, 28d4a],
    [292b5, 292b5], [29436, 29436], [29890, 29890], [298e9, 298e9],
    [2991c, 2991c], [2a04a, 2a04a], [2a40f, 2a40f], [2a6a5, 2a6a5]**/


    namespace {
    const static UnicodeSet::run_t __zhe_Set_runs[] = {
    {Empty, 435}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 17}, {Mixed, 2}, {Empty, 16}, {Mixed, 1},
    {Empty, 10}, {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 28}, {Mixed, 2},
    {Empty, 27}, {Mixed, 4}, {Empty, 30}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 2858}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 28}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 7}, {Mixed, 2},
    {Empty, 132}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 65}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 65},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 47},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 57}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 29386}};
    const static UnicodeSet::bitquad_t  __zhe_Set_quads[] = {
    0x00800000, 0x00000004, 0x00008000, 0x00000080, 0x00004000, 0x02000000,
    0x00008000, 0x02000000, 0x00000020, 0x42000000, 0x00000800, 0x00000010,
    0x40000000, 0x00080000, 0x00020000, 0x00040000, 0x00000040, 0x00080000,
    0x00000400, 0x00000040, 0x00200008, 0x40000000, 0x00010000, 0x00002000,
    0x00000080, 0x08000000, 0x00000080, 0x00040000, 0x08000000, 0x00000001,
    0x00000002, 0x00200000, 0x00001000, 0x00400000, 0x00000400, 0x02100000,
    0x01000000, 0x01000000, 0x04000000, 0x20000000, 0x00000020, 0x00000004,
    0x00100000, 0x01000000, 0x00008000, 0x10000001, 0x20000000, 0x02000000,
    0x00000400, 0x00000001, 0x04000000, 0x00080000, 0x00100000, 0x00800000,
    0x00002000, 0x00000020, 0x00800000, 0x00020000, 0x00400000, 0x00800000,
    0x00800000, 0x00100000, 0x00000080, 0x00000030, 0x00000200, 0x04000000,
    0x00400000, 0x00200000, 0x04400800, 0x00000800, 0x00002000, 0x10000000,
    0x00040000, 0x00002000, 0x02000000, 0x00004200, 0x01000000, 0x04000000,
    0x00001000, 0x00040000, 0x80000000, 0x02080000, 0x00004000, 0x00020000,
    0x24000000, 0x00000008, 0x00080000, 0x08000000, 0x00000001, 0x00002000,
    0x00000002, 0x00000001, 0x00002000, 0x00008000, 0x00000400, 0x00008000,
    0x00002000, 0x00010000, 0x00100000, 0x00000080, 0x00200000, 0x40000000,
    0x00000800, 0x00000200, 0x00000010, 0x00002000, 0x00020000, 0x00008000,
    0x20000000, 0x00000002, 0x00000008, 0x00000080, 0x00000800, 0x00004000,
    0x02000000, 0x00000010, 0x00004000, 0x00820000, 0x00000020, 0x80000000,
    0x00000009, 0x00000001, 0x00000008, 0x00002000, 0x00100000, 0x00000080,
    0x00000001, 0x00000004, 0x00000400, 0x00000008, 0x00200000, 0x00000400,
    0x00200000, 0x00400000, 0x00010000, 0x00000200, 0x10000000, 0x00000400,
    0x00008000, 0x00000020};
    }

    const static UnicodeSet zhe_Set{const_cast<UnicodeSet::run_t *>(__zhe_Set_runs), 247, 0, const_cast<UnicodeSet::bitquad_t *>(__zhe_Set_quads), 140, 0};

    /** Code Point Ranges for meng
    [3679, 3679], [3734, 3734], [3813, 3813], [3a5a, 3a5a], [4045, 4045],
    [406b, 406b], [420d, 420d], [425a, 425a], [43f5, 43f5], [4490, 4490],
    [44dd, 44dd], [4666, 4666], [47e5, 47e5], [4822, 4822], [4942, 4942],
    [4970, 4970], [4c12, 4c12], [4c9b, 4c9b], [4d3f, 4d3f], [511a, 511a],
    [51a1, 51a1], [52d0, 52d0], [5922, 5922], [5ac7, 5ac7], [5b5f, 5b5f],
    [5c28, 5c28], [5e6a, 5e6a], [5eac, 5eac], [61dc, 61dc], [61de, 61de],
    [61f5, 61f5], [660e, 660e], [66da, 66da], [671a, 671a], [6726, 6726],
    [6a57, 6a57], [6aac, 6aac], [6c0b, 6c0b], [6c13, 6c13], [6fdb, 6fdb],
    [731b, 731b], [7374, 7374], [750d, 750d], [753f, 753f], [76df, 76df],
    [7791, 7791], [77a2, 77a2], [77c7, 77c7], [791e, 791e], [824b, 824b],
    [8268, 8268], [8394, 8394], [840c, 840c], [8499, 8499], [8544, 8544],
    [8609, 8609], [867b, 867b], [8722, 8722], [8771, 8771], [87ca, 87ca],
    [87d2, 87d2], [8813, 8813], [9133, 9133], [9138, 9138], [92c2, 92c2],
    [9333, 9333], [96fa, 96fa], [9725, 9725], [9727, 9727], [973f, 9740],
    [986d, 986d], [995b, 995b], [9af3, 9af3], [9bed, 9bed], [9c66, 9c66],
    [9e0f, 9e0f], [9efd, 9efd], [9f06, 9f06], [20401, 20401],
    [20427, 20427], [20586, 20586], [20d7c, 20d7c], [214af, 214af],
    [21694, 21694], [21b06, 21b06], [21b0c, 21b0c], [22110, 22110],
    [22559, 22559], [22918, 22918], [22fc2, 22fc2], [23294, 23294],
    [234dd, 234dd], [23791, 23791], [23c25, 23c25], [23f6d, 23f6d],
    [24bfb, 24bfb], [24c74, 24c74], [24f01, 24f01], [24fac, 24fac],
    [25082, 25082], [25101, 25101], [25255, 25255], [252dd, 252dd],
    [2532f, 2532f], [25331, 25331], [258db, 258db], [25b6e, 25b6e],
    [2619f, 2619f], [262bd, 262bd], [268a7, 268a7], [26af0, 26af0],
    [26c4b, 26c4b], [26cf6, 26cf6], [26d14, 26d14], [26df9, 26df9],
    [26fcf, 26fcf], [27006, 27006], [27027, 27027], [2704a, 2704a],
    [2709b, 2709b], [270a1, 270a1], [27227, 27227], [274e8, 274e8],
    [27791, 27791], [27b4a, 27b4a], [27c8d, 27c8d], [287ab, 287ab],
    [2888a, 2888a], [288a0, 288a0], [288d8, 288d8], [28a38, 28a38],
    [28b92, 28b92], [28f3f, 28f3f], [29116, 29116], [291bd, 291bd],
    [29571, 29571], [297de, 297de], [299ba, 299ba], [29d32, 29d32],
    [29da1, 29da1], [2a147, 2a147], [2a1d3, 2a1d3], [2a206, 2a206]**/


    namespace {
    const static UnicodeSet::run_t __meng_Set_runs[] = {
    {Empty, 435}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 47}, {Mixed, 2},
    {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 24}, {Mixed, 2}, {Empty, 32},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 24},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 12}, {Mixed, 1},
    {Empty, 5}, {Mixed, 3}, {Empty, 9}, {Mixed, 1}, {Empty, 73}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 2855}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 99}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 2},
    {Empty, 11}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 88}, {Mixed, 1}, {Empty, 6}, {Mixed, 3}, {Empty, 10},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 29423}};
    const static UnicodeSet::bitquad_t  __meng_Set_quads[] = {
    0x02000000, 0x00100000, 0x00080000, 0x04000000, 0x00000020, 0x00000800,
    0x00002000, 0x04000000, 0x00200000, 0x00010000, 0x20000000, 0x00000040,
    0x00000020, 0x00000004, 0x00000004, 0x00010000, 0x00040000, 0x08000000,
    0x80000000, 0x04000000, 0x00000002, 0x00010000, 0x00000004, 0x00000080,
    0x80000000, 0x00000100, 0x00000400, 0x00001000, 0x50000000, 0x00200000,
    0x00004000, 0x04000000, 0x04000000, 0x00000040, 0x00800000, 0x00001000,
    0x00080800, 0x08000000, 0x08000000, 0x00100000, 0x00002000, 0x80000000,
    0x80000000, 0x00020000, 0x00000004, 0x00000080, 0x40000000, 0x00000800,
    0x00000100, 0x00100000, 0x00001000, 0x02000000, 0x00000010, 0x00000200,
    0x08000000, 0x00000004, 0x00020000, 0x00040400, 0x00080000, 0x01080000,
    0x00000004, 0x00080000, 0x04000000, 0x800000a0, 0x00000001, 0x00002000,
    0x08000000, 0x00080000, 0x00002000, 0x00000040, 0x00008000, 0x20000000,
    0x00000040, 0x00000002, 0x00000080, 0x00000040, 0x10000000, 0x00008000,
    0x00100000, 0x00001040, 0x00010000, 0x02000000, 0x01000000, 0x00000004,
    0x00100000, 0x20000000, 0x00020000, 0x00000020, 0x00002000, 0x08000000,
    0x00100000, 0x00000002, 0x00001000, 0x00000004, 0x00000002, 0x00200000,
    0x20000000, 0x00028000, 0x08000000, 0x00004000, 0x80000000, 0x20000000,
    0x00000080, 0x00010000, 0x00000800, 0x00400000, 0x00100000, 0x02000000,
    0x00008000, 0x00000040, 0x00000080, 0x00000400, 0x08000000, 0x00000002,
    0x00000080, 0x00000100, 0x00020000, 0x00000400, 0x00002000, 0x00000800,
    0x00000400, 0x00000001, 0x01000000, 0x01000000, 0x00040000, 0x80000000,
    0x00400000, 0x20000000, 0x00020000, 0x40000000, 0x04000000, 0x00040000,
    0x00000002, 0x00000080, 0x00080000, 0x00000040};
    }

    const static UnicodeSet meng_Set{const_cast<UnicodeSet::run_t *>(__meng_Set_runs), 239, 0, const_cast<UnicodeSet::bitquad_t *>(__meng_Set_quads), 136, 0};

    /** Code Point Ranges for gui
    [367a, 367a], [39ea, 39ea], [3a33, 3a33], [3a7b, 3a7b], [3a88, 3a88],
    [3c2a, 3c2a], [3e35, 3e35], [405b, 405b], [40f6, 40f6], [40fd, 40fd],
    [4145, 4145], [4210, 4210], [4306, 4306], [436f, 436f], [4429, 4429],
    [4434, 4434], [4788, 4788], [47f8, 47f8], [4829, 4829], [48c0, 48c0],
    [4906, 4906], [4925, 4925], [4bb9, 4bb9], [4be3, 4be3], [4c85, 4c85],
    [4ccf, 4ccf], [4f79, 4f79], [507d, 507d], [5080, 5080], [528a, 528a],
    [528c, 528c], [532d, 532d], [5331, 5331], [53ac, 53ac], [54c7, 54c7],
    [572d, 572d], [579d, 579d], [59fd, 59fd], [5a03, 5a03], [5aaf, 5aaf],
    [5ae2, 5ae2], [5b84, 5b84], [5da1, 5da1], [5dc2, 5dc2], [5e8b, 5e8b],
    [5eaa, 5eaa], [5ec6, 5ec6], [6051, 6051], [646b, 646b], [6485, 6485],
    [648c, 648c], [6530, 6531], [660b, 660b], [6677, 6677], [6739, 6739],
    [67dc, 67dc], [6842, 6842], [6845, 6845], [6982, 6982], [69e3, 69e3],
    [69f6, 69f6], [69fb, 69fc], [6a9c, 6a9c], [6ac3, 6ac3], [6af0, 6af0],
    [6b78, 6b78], [6c3f, 6c3f], [6d3c, 6d3c], [6e40, 6e40], [6e8e, 6e8e],
    [6f59, 6f59], [7085, 7085], [7094, 7094], [7324, 7324], [7470, 7470],
    [7650, 7650], [7678, 7678], [7688, 7688], [77a1, 77a1], [77b6, 77b6],
    [7845, 7845], [784a, 784a], [7948, 7948], [796a, 796a], [79ac, 79ac],
    [7a90, 7a90], [7b40, 7b40], [7c02, 7c02], [7c0b, 7c0b], [7e6a, 7e6a],
    [80ff, 80ff], [81ad, 81ad], [8325, 8325], [84d5, 84d5], [862c, 862c],
    [86eb, 86eb], [879d, 879d], [87e1, 87e1], [88bf, 88bf], [8958, 8958],
    [898f, 898f], [89d6, 89d6], [89e4, 89e4], [8a6d, 8a6d], [8b09, 8b09],
    [8b4c, 8b4c], [8cb4, 8cb4], [8d7d, 8d7d], [8db9, 8db9], [8dea, 8dea],
    [8e76, 8e76], [8ecc, 8ecc], [90bd, 90bd], [95a8, 95a8], [9652, 9652],
    [9697, 9697], [97bc, 97bc], [9a29, 9a29], [9b39, 9b39], [9b3c, 9b3c],
    [9bad, 9bad], [9c56, 9c56], [9c65, 9c65], [9cfa, 9cfa], [9d02, 9d02],
    [9f9c, 9f9c], [2043d, 2043d], [2073e, 2073e], [20a91, 20a91],
    [20c53, 20c53], [20fe5, 20fe5], [210e9, 210e9], [21332, 21332],
    [215e4, 215e4], [219ed, 219ed], [21b02, 21b02], [21dfa, 21dfa],
    [21e59, 21e59], [220ef, 220ef], [2210a, 2210a], [2283f, 2283f],
    [22ec2, 22ec2], [22ed7, 22ed7], [2311c, 2311c], [238aa, 238aa],
    [239a6, 239a6], [239ce, 239ce], [23dfe, 23dfe], [24627, 24627],
    [24702, 24702], [24871, 24871], [24c7a, 24c7a], [24c7e, 24c7e],
    [24c89, 24c89], [24eff, 24eff], [24f2e, 24f2e], [24fe1, 24fe1],
    [251f3, 251f3], [25238, 25238], [25341, 25341], [25368, 25368],
    [2539b, 2539b], [2570f, 2570f], [25960, 25960], [259a3, 259a3],
    [264ef, 264ef], [26907, 26907], [26cdb, 26cdb], [27284, 27284],
    [2786b, 2786b], [278a6, 278a6], [27df1, 27df1], [27edc, 27edc],
    [27f78, 27f78], [281d9, 281d9], [282e1, 282e1], [28cbf, 28cbf],
    [28f9a, 28f9a], [28fb4, 28fb4], [2925d, 2925d], [2929b, 2929b],
    [29303, 29303], [29368, 29368], [293d0, 293d0], [293e1, 293e1],
    [2946c, 2946c], [29499, 29499], [294e0, 294e0], [29506, 29506],
    [29a81, 29a81], [29c7b, 29c7b], [29ca1, 29ca1], [29cdd, 29cdd],
    [29ce7, 29ce7], [2a017, 2a017], [2a12f, 2a12f], [2a1b3, 2a1b3],
    [2a225, 2a225], [2a2a7, 2a2a7], [2a3e4, 2a3e4]**/


    namespace {
    const static UnicodeSet::run_t __gui_Set_runs[] = {
    {Empty, 435}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 12}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 19}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 15}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 18}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 16},
    {Mixed, 2}, {Empty, 5}, {Mixed, 3}, {Empty, 11}, {Mixed, 1},
    {Empty, 32}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 14},
    {Mixed, 3}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 19},
    {Mixed, 1}, {Empty, 2852}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 20}, {Mixed, 2}, {Empty, 56}, {Mixed, 1}, {Empty, 52},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 60}, {Mixed, 1},
    {Empty, 7}, {Mixed, 2}, {Empty, 32}, {Mixed, 1}, {Empty, 65},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 31}, {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 3}, {Empty, 27}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 89},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 77}, {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 20},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 43}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 1}, {Mixed, 3}, {Empty, 24}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 29408}};
    const static UnicodeSet::bitquad_t  __gui_Set_quads[] = {
    0x04000000, 0x00000400, 0x00080000, 0x08000000, 0x00000100, 0x00000400,
    0x00200000, 0x08000000, 0x20400000, 0x00000020, 0x00010000, 0x00000040,
    0x00008000, 0x00100200, 0x00000100, 0x01000000, 0x00000200, 0x00000001,
    0x00000040, 0x00000020, 0x02000000, 0x00000008, 0x00000020, 0x00008000,
    0x02000000, 0x20000000, 0x00000001, 0x00001400, 0x00022000, 0x00001000,
    0x00000080, 0x00002000, 0x20000000, 0x20000000, 0x00000008, 0x00008000,
    0x00000004, 0x00000010, 0x00000002, 0x00000004, 0x00000800, 0x00000400,
    0x00000040, 0x00020000, 0x00000800, 0x00001020, 0x00030000, 0x00000800,
    0x00800000, 0x02000000, 0x10000000, 0x00000024, 0x00000004, 0x18400008,
    0x10000000, 0x00000008, 0x00010000, 0x01000000, 0x80000000, 0x10000000,
    0x00000001, 0x00004000, 0x02000000, 0x00100020, 0x00000010, 0x00010000,
    0x00010000, 0x01000000, 0x00000100, 0x00400002, 0x00000420, 0x00000100,
    0x00000400, 0x00001000, 0x00010000, 0x00000001, 0x00000804, 0x00000400,
    0x80000000, 0x00002000, 0x00000020, 0x00200000, 0x00001000, 0x00000800,
    0x20000000, 0x00000002, 0x80000000, 0x01000000, 0x00008000, 0x00400000,
    0x00000010, 0x00002000, 0x00000200, 0x00001000, 0x00100000, 0x20000000,
    0x02000000, 0x00000400, 0x00400000, 0x00001000, 0x20000000, 0x00000100,
    0x00040000, 0x00800000, 0x10000000, 0x00000200, 0x12000000, 0x00002000,
    0x00400000, 0x00000020, 0x04000000, 0x00000004, 0x10000000, 0x20000000,
    0x40000000, 0x00020000, 0x00080000, 0x00000020, 0x00000200, 0x00040000,
    0x00000010, 0x00002000, 0x00000004, 0x04000000, 0x02000000, 0x00008000,
    0x00000400, 0x80000000, 0x00800004, 0x10000000, 0x00000400, 0x00000040,
    0x00004000, 0x40000000, 0x00000080, 0x00000004, 0x00020000, 0x44000000,
    0x00000200, 0x80000000, 0x00004000, 0x00000002, 0x00080000, 0x01000000,
    0x00000002, 0x00000100, 0x08000000, 0x00008000, 0x00000001, 0x00000008,
    0x00008000, 0x00000080, 0x08000000, 0x00000010, 0x00000800, 0x00000040,
    0x00020000, 0x10000000, 0x01000000, 0x02000000, 0x00000002, 0x80000000,
    0x04000000, 0x00100000, 0x20000000, 0x08000000, 0x00000008, 0x00000100,
    0x00010000, 0x00000002, 0x00001000, 0x02000000, 0x00000001, 0x00000040,
    0x00000002, 0x08000000, 0x00000002, 0x20000000, 0x00000080, 0x00800000,
    0x00008000, 0x00080000, 0x00000020, 0x00000080, 0x00000010};
    }

    const static UnicodeSet gui_Set{const_cast<UnicodeSet::run_t *>(__gui_Set_runs), 319, 0, const_cast<UnicodeSet::bitquad_t *>(__gui_Set_quads), 185, 0};

    /** Code Point Ranges for qiao
    [3681, 3681], [36bd, 36bd], [3851, 3851], [3897, 3897], [390d, 390d],
    [3aa3, 3aa3], [3e92, 3e92], [4009, 4009], [40aa, 40aa], [40ad, 40ad],
    [40dd, 40dd], [41cc, 41cc], [4397, 4397], [46a9, 46a9], [4992, 4992],
    [4a4c, 4a4c], [4ade, 4ade], [4be8, 4be8], [4c41, 4c41], [4cbe, 4cbe],
    [4d72, 4d72], [4e02, 4e02], [4fcf, 4fcf], [5062, 5062], [50d1, 50d1],
    [50fa, 50fa], [524a, 524a], [5281, 5281], [55ac, 55ac], [55bf, 55bf],
    [563a, 563a], [566d, 566d], [5859, 5859], [589d, 589d], [58a7, 58a7],
    [58bd, 58bd], [5af6, 5af6], [5ced, 5ced], [5d6a, 5d6a], [5da0, 5da0],
    [5de7, 5de7], [5e29, 5e29], [5e53, 5e53], [5e67, 5e67], [6084, 6084],
    [6100, 6101], [6194, 6194], [62db, 62db], [634e, 634e], [641e, 641e],
    [646e, 646e], [64ac, 64ac], [64bd, 64bd], [656b, 656b], [6572, 6572],
    [6821, 6821], [6a35, 6a35], [6a47, 6a47], [6a4b, 6a4b], [6a7e, 6a7e],
    [6bbc, 6bbc], [6bc3, 6bc3], [6bf3, 6bf3], [6f50, 6f50], [7126, 7126],
    [71c6, 71c6], [71cb, 71cb], [7644, 7644], [7744, 7744], [77a7, 77a7],
    [785d, 785d], [78bb, 78bb], [78dd, 78dd], [78fd, 78fd], [7904, 7904],
    [7909, 7909], [7aaf, 7aaf], [7ac5, 7ac5], [7bbe, 7bbe], [7e51, 7e51],
    [7e70, 7e70], [7ff9, 7ff9], [832d, 832d], [834d, 834d], [83ec, 83ec],
    [8549, 8549], [854e, 854e], [87dc, 87dc], [8a9a, 8a9a], [8b51, 8b51],
    [8b59, 8b59], [8dab, 8dac], [8de4, 8de4], [8e03, 8e03], [8e0d, 8e0d],
    [8e7a, 8e7b], [8e88, 8e88], [90fb, 90fb], [9117, 9117], [9121, 9121],
    [91ae, 91ae], [91e5, 91e5], [929a, 929a], [936c, 936c], [93d2, 93d2],
    [9408, 9408], [9430, 9430], [9657, 9657], [96c0, 96c0], [9798, 9798],
    [97bd, 97bd], [97d2, 97d2], [981d, 981d], [9864, 9864], [9866, 9866],
    [9a55, 9a55], [9ab9, 9ab9], [9ada, 9ada], [9adc, 9adc], [203d6, 203d6],
    [20fd5, 20fd5], [21314, 21314], [21a47, 21a47], [21c10, 21c11],
    [21e98, 21e98], [22139, 22139], [2241f, 2241f], [2261f, 2261f],
    [22a68, 22a68], [22b89, 22b89], [22da1, 22da1], [22ee4, 22ee4],
    [22fe3, 22fe3], [23081, 23081], [23087, 23087], [230a5, 230a5],
    [23486, 23486], [23584, 23584], [2373d, 2373d], [237fc, 237fc],
    [2399c, 2399c], [23bf9, 23bf9], [23e5d, 23e5d], [23eb0, 23eb0],
    [24d00, 24d00], [25023, 25023], [2527e, 2527e], [257c5, 257c5],
    [25aaf, 25aaf], [25e76, 25e76], [26143, 26143], [268ba, 268ba],
    [2710d, 2710d], [278cc, 278cc], [280e4, 280e4], [28163, 28163],
    [2870d, 2870d], [28711, 28711], [28771, 28771], [287b6, 287b6],
    [28e11, 28e11], [29587, 29587], [29a1f, 29a1f], [2a44a, 2a44a]**/


    namespace {
    const static UnicodeSet::run_t __qiao_Set_runs[] = {
    {Empty, 436}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 17},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 16},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 15}, {Mixed, 3}, {Empty, 9}, {Mixed, 3},
    {Empty, 26}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 4}, {Empty, 12},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 20}, {Mixed, 2},
    {Empty, 11}, {Mixed, 1}, {Empty, 25}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 18},
    {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2887}, {Mixed, 1},
    {Empty, 95}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 4}, {Mixed, 2}, {Empty, 30}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 114}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 66}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 59}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 81}, {Mixed, 1}, {Empty, 29405}};
    const static UnicodeSet::bitquad_t  __qiao_Set_quads[] = {
    0x00000002, 0x20000000, 0x00020000, 0x00800000, 0x00002000, 0x00000008,
    0x00040000, 0x00000200, 0x00002400, 0x20000000, 0x00001000, 0x00800000,
    0x00000200, 0x00040000, 0x00001000, 0x40000000, 0x00000100, 0x00000002,
    0x40000000, 0x00040000, 0x00000004, 0x00008000, 0x00000004, 0x00020000,
    0x04000000, 0x00000400, 0x00000002, 0x80001000, 0x04000000, 0x00002000,
    0x02000000, 0x20000000, 0x20000080, 0x00400000, 0x00002000, 0x00000400,
    0x00000001, 0x00000080, 0x00000200, 0x00080000, 0x00000080, 0x00000010,
    0x00000003, 0x00100000, 0x08000000, 0x00004000, 0x40000000, 0x00004000,
    0x20001000, 0x00040800, 0x00000002, 0x00200000, 0x00000880, 0x40000000,
    0x10000000, 0x00000008, 0x00080000, 0x00010000, 0x00000040, 0x00000840,
    0x00000010, 0x00000010, 0x00000080, 0x20000000, 0x08000000, 0x20000000,
    0x20000000, 0x00000210, 0x00008000, 0x00000020, 0x40000000, 0x00020000,
    0x00010000, 0x02000000, 0x00002000, 0x00002000, 0x00001000, 0x00004200,
    0x10000000, 0x04000000, 0x02020000, 0x00001800, 0x00000010, 0x00002008,
    0x0c000000, 0x00000100, 0x08000000, 0x00800000, 0x00000002, 0x00004000,
    0x00000020, 0x04000000, 0x00001000, 0x00040000, 0x00000100, 0x00010000,
    0x00800000, 0x00000001, 0x01000000, 0x20000000, 0x00040000, 0x20000000,
    0x00000050, 0x00200000, 0x02000000, 0x14000000, 0x00400000, 0x00200000,
    0x00100000, 0x00000080, 0x00030000, 0x01000000, 0x02000000, 0x80000000,
    0x80000000, 0x00000100, 0x00000200, 0x00000002, 0x00000010, 0x00000008,
    0x00000082, 0x00000020, 0x00000040, 0x00000010, 0x20000000, 0x10000000,
    0x10000000, 0x02000000, 0x20000000, 0x00010000, 0x00000001, 0x00000008,
    0x40000000, 0x00000020, 0x00008000, 0x00400000, 0x00000008, 0x04000000,
    0x00002000, 0x00001000, 0x00000010, 0x00000008, 0x00022000, 0x00020000,
    0x00400000, 0x00020000, 0x00000080, 0x80000000, 0x00000400};
    }

    const static UnicodeSet qiao_Set{const_cast<UnicodeSet::run_t *>(__qiao_Set_runs), 249, 0, const_cast<UnicodeSet::bitquad_t *>(__qiao_Set_quads), 149, 0};

    /** Code Point Ranges for nang
    [3682, 3682], [3d9e, 3d9e], [4078, 4078], [4e6a, 4e6a], [513e, 513e],
    [5665, 5665], [56ca, 56ca], [56d4, 56d4], [61b9, 61b9], [6411, 6411],
    [64c3, 64c3], [652e, 652e], [66e9, 66e9], [6b1c, 6b1c], [6db3, 6db3],
    [703c, 703c], [7062, 7062], [8618, 8618], [8830, 8830], [8b68, 8b68],
    [9962, 9962], [9b1e, 9b1e], [9f49, 9f49], [20dac, 20dac],
    [21fdd, 21fdd], [225a7, 225a7], [23c36, 23c36], [26203, 26203],
    [265f3, 265f3], [268d8, 268d8], [2717a, 2717a], [27592, 27592],
    [277d8, 277d8], [28cc6, 28cc6], [296e1, 296e1], [29712, 29712]**/


    namespace {
    const static UnicodeSet::run_t __nang_Set_runs[] = {
    {Empty, 436}, {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 111}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 86},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 172}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 111}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 2930}, {Mixed, 1},
    {Empty, 144}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 179},
    {Mixed, 1}, {Empty, 302}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 167}, {Mixed, 1},
    {Empty, 80}, {Mixed, 2}, {Empty, 29511}};
    const static UnicodeSet::bitquad_t  __nang_Set_quads[] = {
    0x00000004, 0x40000000, 0x01000000, 0x00000400, 0x40000000, 0x00000020,
    0x00100400, 0x02000000, 0x00020000, 0x00000008, 0x00004000, 0x00000200,
    0x10000000, 0x00080000, 0x10000000, 0x00000004, 0x01000000, 0x00010000,
    0x00000100, 0x00000004, 0x40000000, 0x00000200, 0x00001000, 0x20000000,
    0x00000080, 0x00400000, 0x00000008, 0x00080000, 0x01000000, 0x04000000,
    0x00040000, 0x01000000, 0x00000040, 0x00000002, 0x00040000};
    }

    const static UnicodeSet nang_Set{const_cast<UnicodeSet::run_t *>(__nang_Set_runs), 69, 0, const_cast<UnicodeSet::bitquad_t *>(__nang_Set_quads), 35, 0};

    /** Code Point Ranges for yun
    [3683, 3683], [3a48, 3a48], [41ac, 41ac], [41d6, 41d6], [4259, 4259],
    [468b, 468b], [47ab, 47ab], [485d, 485d], [48b5, 48b5], [4ab3, 4ab3],
    [4cb0, 4cb0], [4d74, 4d74], [4e91, 4e91], [508a, 508a], [5141, 5141],
    [5300, 5300], [54e1, 54e1], [5597, 5597], [56e9, 56e9], [5747, 5747],
    [593d, 593d], [596b, 596b], [5998, 5998], [5aaa, 5aaa], [5b55, 5b55],
    [5b9b, 5b9b], [5c09, 5c09], [5c39, 5c39], [6028, 6028], [60f2, 60f2],
    [6120, 6120], [612a, 612a], [628e, 628e], [6600, 6600], [6688, 6688],
    [679f, 679f], [6985, 6985], [6a52, 6a52], [6b9e, 6b9e], [6c32, 6c32],
    [6c84, 6c84], [6d92, 6d92], [6e29, 6e29], [6eb3, 6eb3], [6f90, 6f90],
    [7147, 7147], [7174, 7174], [717e, 717e], [7189, 7189], [71a8, 71a8],
    [72c1, 72c1], [73a7, 73a7], [7547, 7547], [761f, 761f], [76fe, 76fe],
    [7703, 7703], [78d2, 78d2], [7b4d, 7b4d], [7b60, 7b60], [7bd4, 7bd4],
    [7d1c, 7d1c], [7df7, 7df7], [7dfc, 7dfc], [7e1c, 7e1c], [8018, 8018],
    [803a, 803a], [816a, 816a], [82b8, 82b8], [82d1, 82d1], [837a, 837a],
    [83c0, 83c0], [8480, 8480], [84b7, 84b7], [8553, 8553], [8570, 8570],
    [85f4, 85f4], [8735, 8735], [8779, 8779], [891e, 891e], [8cf1, 8cf1],
    [8d07, 8d07], [8f3c, 8f3c], [8fd0, 8fd0], [904b, 904b], [9106, 9106],
    [9116, 9116], [9196, 9196], [9217, 9217], [92c6, 92c6], [962d, 962d],
    [9695, 9695], [96f2, 96f2], [9723, 9723], [97d7, 97d7], [97de, 97de],
    [97fb, 97fb], [9835, 9835], [992b, 992b], [99a7, 99a7], [99bb, 99bb],
    [9f73, 9f73], [20224, 20224], [20693, 20693], [208d0, 208d0],
    [20c73, 20c73], [21159, 21159], [21592, 21592], [21898, 21898],
    [21caa, 21caa], [21f45, 21f45], [2308a, 2308a], [23586, 23586],
    [24e2b, 24e2b], [25429, 25429], [2583a, 2583a], [2617f, 2617f],
    [27243, 27243], [27861, 27861], [2797a, 2797a], [2797c, 2797c],
    [27b1e, 27b1e], [27d8a, 27d8a], [27f10, 27f10], [28346, 28346],
    [286e1, 286e1], [28dd0, 28dd0], [28e2e, 28e2e], [29074, 29074],
    [290bf, 290bf], [292e2, 292e2], [293c5, 293c6], [29d09, 29d09],
    [2a35d, 2a35d], [2a3d4, 2a3d4], [2a3da, 2a3da], [2a629, 2a629]**/


    namespace {
    const static UnicodeSet::run_t __yun_Set_runs[] = {
    {Empty, 436}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 58},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 8}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 31}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 4}, {Empty, 8},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 13}, {Mixed, 1},
    {Empty, 19}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 15}, {Mixed, 2}, {Empty, 9}, {Mixed, 1},
    {Empty, 9}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 30}, {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 2837}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 137}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 196}, {Mixed, 1}, {Empty, 47},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 73}, {Mixed, 1},
    {Empty, 134}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 73}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 29390}};
    const static UnicodeSet::bitquad_t  __yun_Set_quads[] = {
    0x00000008, 0x00000100, 0x00001000, 0x00400000, 0x02000000, 0x00000800,
    0x00000800, 0x20000000, 0x00200000, 0x00080000, 0x00010000, 0x00100000,
    0x00020000, 0x00000400, 0x00000002, 0x00000001, 0x00000002, 0x00800000,
    0x00000200, 0x00000080, 0x20000000, 0x00000800, 0x01000000, 0x00000400,
    0x00200000, 0x08000000, 0x00000200, 0x02000000, 0x00000100, 0x00040000,
    0x00000401, 0x00004000, 0x00000001, 0x00000100, 0x80000000, 0x00000020,
    0x00040000, 0x40000000, 0x00040000, 0x00000010, 0x00040000, 0x00000200,
    0x00080000, 0x00010000, 0x00000080, 0x40100000, 0x00000200, 0x00000100,
    0x00000002, 0x00000080, 0x00000080, 0x80000000, 0x40000000, 0x00000008,
    0x00040000, 0x00002000, 0x00000001, 0x00100000, 0x10000000, 0x10800000,
    0x10000000, 0x01000000, 0x04000000, 0x00000400, 0x01000000, 0x00020000,
    0x04000000, 0x00000001, 0x00000001, 0x00800000, 0x00080000, 0x00010000,
    0x00100000, 0x00200000, 0x02000000, 0x40000000, 0x00020000, 0x00000080,
    0x10000000, 0x00010000, 0x00000800, 0x00400040, 0x00400000, 0x00800000,
    0x00000040, 0x00002000, 0x00200000, 0x00040000, 0x00000008, 0x40800000,
    0x08000000, 0x00200000, 0x00000800, 0x08000080, 0x00080000, 0x00000010,
    0x00080000, 0x00010000, 0x00080000, 0x02000000, 0x00040000, 0x01000000,
    0x00000400, 0x00000020, 0x00000400, 0x00000040, 0x00000800, 0x00000200,
    0x04000000, 0x80000000, 0x00000008, 0x00000002, 0x14000000, 0x40000000,
    0x00000400, 0x00010000, 0x00000040, 0x00000002, 0x00010000, 0x00004000,
    0x00100000, 0x80000000, 0x00000004, 0x00000060, 0x00000200, 0x20000000,
    0x04100000, 0x00000200};
    }

    const static UnicodeSet yun_Set{const_cast<UnicodeSet::run_t *>(__yun_Set_runs), 227, 0, const_cast<UnicodeSet::bitquad_t *>(__yun_Set_quads), 128, 0};

    /** Code Point Ranges for kai
    [368a, 368a], [3aa1, 3aa1], [3c7e, 3c7e], [4057, 4057], [4429, 4429],
    [4493, 4493], [483d, 483d], [4877, 4877], [4924, 4924], [4ae6, 4ae6],
    [51f1, 51f1], [5274, 5274], [52be, 52be], [52d3, 52d3], [559d, 559d],
    [55ab, 55ab], [5605, 5605], [584f, 584f], [5952, 5952], [5d66, 5d66],
    [5e46, 5e46], [5ffe, 5ffe], [6112, 6112], [6137, 6137], [613e, 613e],
    [6168, 6168], [63e9, 63e9], [669f, 669f], [6838, 6838], [6977, 6977],
    [6b2c, 6b2c], [6b2f, 6b2f], [6e34, 6e34], [6e98, 6e98], [6fed, 6fed],
    [708c, 708c], [708f, 708f], [70d7, 70d7], [8488, 8488], [8c48, 8c48],
    [8f06, 8f06], [9347, 9347], [938e, 938e], [93a7, 93a7], [9426, 9426],
    [958b, 958b], [95a1, 95a1], [95d3, 95d3], [96c9, 96c9], [98bd, 98bd],
    [208b2, 208b2], [21041, 21041], [21653, 21653], [21cc2, 21cc2],
    [222dd, 222dd], [22521, 22521], [2289a, 2289a], [22f86, 22f86],
    [2426b, 2426b], [24429, 24429], [24872, 24872], [24e31, 24e31],
    [24edc, 24edc], [250e3, 250e3], [25386, 25386], [253ea, 253ea],
    [25ec4, 25ec4], [26084, 26084], [26232, 26232], [28d06, 28d06],
    [292e7, 292e7], [29ac0, 29ac0]**/


    namespace {
    const static UnicodeSet::run_t __kai_Set_runs[] = {
    {Empty, 436}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 55},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 21},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 157}, {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 10}, {Mixed, 3}, {Empty, 7}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 2943}, {Mixed, 1}, {Empty, 60},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 150}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 86},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 342}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 29481}};
    const static UnicodeSet::bitquad_t  __kai_Set_quads[] = {
    0x00000400, 0x00000002, 0x40000000, 0x00800000, 0x00000200, 0x00080000,
    0x20000000, 0x00800000, 0x00000010, 0x00000040, 0x00020000, 0x00100000,
    0x40000000, 0x00080000, 0x20000000, 0x00000800, 0x00000020, 0x00008000,
    0x00040000, 0x00000040, 0x00000040, 0x40000000, 0x00040000, 0x40800000,
    0x00000100, 0x00000200, 0x80000000, 0x01000000, 0x00800000, 0x00009000,
    0x00100000, 0x01000000, 0x00002000, 0x00009000, 0x00800000, 0x00000100,
    0x00000100, 0x00000040, 0x00000080, 0x00004000, 0x00000080, 0x00000040,
    0x00000800, 0x00000002, 0x00080000, 0x00000200, 0x20000000, 0x00040000,
    0x00000002, 0x00080000, 0x00000004, 0x20000000, 0x00000002, 0x04000000,
    0x00000040, 0x00000800, 0x00000200, 0x00040000, 0x00020000, 0x10000000,
    0x00000008, 0x00000040, 0x00000400, 0x00000010, 0x00000010, 0x00040000,
    0x00000040, 0x00000080, 0x00000001};
    }

    const static UnicodeSet kai_Set{const_cast<UnicodeSet::run_t *>(__kai_Set_runs), 127, 0, const_cast<UnicodeSet::bitquad_t *>(__kai_Set_quads), 69, 0};

    /** Code Point Ranges for shan
    [3692, 3692], [38cc, 38cc], [38e3, 38e3], [3a1b, 3a1b], [3a3b, 3a3b],
    [3a8e, 3a8e], [3bc6, 3bc6], [3c11, 3c11], [3d38, 3d38], [3d92, 3d92],
    [3e91, 3e91], [4010, 4010], [4074, 4074], [4630, 4630], [483e, 483e],
    [486a, 486a], [4947, 4947], [4a54, 4a54], [4a8c, 4a8c], [4d2e, 4d2e],
    [5093, 5093], [50d0, 50d0], [50e4, 50e4], [5103, 5103], [510b, 510b],
    [5220, 5220], [5261, 5261], [527c, 527c], [5584, 5584], [55ae, 55ae],
    [5607, 5607], [57cf, 57cf], [58a0, 58a1], [58c7, 58c7], [59cd, 59cd],
    [5b17, 5b17], [5c71, 5c71], [5da6, 5da6], [5e53, 5e53], [5f61, 5f61],
    [6247, 6247], [633b, 633b], [639e, 639e], [6427, 6427], [647b, 647b],
    [64a3, 64a3], [64c5, 64c5], [64d4, 64d4], [6519, 6519], [6671, 6671],
    [6749, 6749], [67f5, 67f5], [6805, 6805], [6a3f, 6a3f], [6a80, 6a80],
    [6afc, 6afc], [6c55, 6c55], [6f6c, 6f6c], [6f78, 6f78], [6fb9, 6fb9],
    [7057, 7057], [70fb, 70fb], [7154, 7154], [717d, 717d], [718c, 718c],
    [72e6, 72e6], [732d, 732d], [73ca, 73ca], [759d, 759d], [75c1, 75c1],
    [7752, 7752], [79aa, 79aa], [7a47, 7a47], [7b18, 7b18], [7b27, 7b27],
    [7e3f, 7e3f], [7e55, 7e55], [7e94, 7e94], [7fb4, 7fb4], [7fb6, 7fb6],
    [8120, 8120], [81b3, 81b3], [81bb, 81bb], [8222, 8222], [829f, 829f],
    [82eb, 82eb], [8460, 8460], [852a, 852a], [87ec, 87ec], [87ee, 87ee],
    [87fa, 87fa], [886b, 886b], [8942, 8942], [8973, 8973], [89a2, 89a2],
    [8a15, 8a15], [8b06, 8b06], [8d0d, 8d0d], [8d78, 8d78], [8dda, 8dda],
    [8ed5, 8ed5], [9093, 9093], [9096, 9096], [912f, 912f], [91e4, 91e4],
    [928f, 928f], [9425, 9425], [9583, 9584], [965d, 965d], [9843, 9843],
    [986b, 986b], [9a38, 9a38], [9adf, 9adf], [9bc5, 9bc5], [9c53, 9c54],
    [9c63, 9c63], [9fc3, 9fc3], [206b9, 206b9], [20af9, 20af9],
    [20fde, 20fde], [217e8, 217e8], [22489, 22489], [2257b, 2257b],
    [22a62, 22a62], [22ad4, 22ad4], [22fc8, 22fc8], [231b4, 231b4],
    [234d2, 234d2], [23589, 23589], [239fa, 239fa], [23a67, 23a67],
    [23ab6, 23ab6], [23b1b, 23b1b], [23c80, 23c80], [24024, 24024],
    [242bc, 242bc], [24896, 24896], [24b9c, 24b9c], [24eaa, 24eaa],
    [25118, 25118], [2521a, 2521a], [25280, 25280], [25531, 25531],
    [25c22, 25c22], [25e23, 25e23], [26378, 26378], [2639e, 2639e],
    [263c2, 263c2], [26639, 26639], [26ceb, 26ceb], [26d8b, 26d8b],
    [26ead, 26ead], [27035, 27035], [273a5, 273a5], [276c4, 276c4],
    [276e1, 276e1], [279f5, 279f5], [27a3e, 27a3e], [27b7d, 27b7d],
    [27cbe, 27cbe], [27d2d, 27d2d], [27df6, 27df6], [28046, 28046],
    [283ea, 283ea], [28769, 28769], [28775, 28775], [28e48, 28e48],
    [28e4a, 28e4a], [2907a, 2907a], [291a4, 291a4], [291ab, 291ab],
    [29330, 29330], [297cb, 297cb], [29990, 29990], [2a376, 2a376],
    [2a443, 2a443]**/


    namespace {
    const static UnicodeSet::run_t __shan_Set_runs[] = {
    {Empty, 436}, {Mixed, 1}, {Empty, 17}, {Mixed, 2}, {Empty, 8},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 1}, {Mixed, 3}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 24}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 16},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 10},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
    {Empty, 23}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 13}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 26}, {Mixed, 1}, {Empty, 2870}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 64}, {Mixed, 1},
    {Empty, 100}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 46},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 41}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 24}, {Mixed, 2}, {Empty, 23},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 29405}};
    const static UnicodeSet::bitquad_t  __shan_Set_quads[] = {
    0x00040000, 0x00001000, 0x00000008, 0x08000000, 0x08000000, 0x00004000,
    0x00000040, 0x00020000, 0x01000000, 0x00040000, 0x00020000, 0x00010000,
    0x00100000, 0x00010000, 0x40000000, 0x00000400, 0x00000080, 0x00100000,
    0x00001000, 0x00004000, 0x00080000, 0x00010000, 0x00000010, 0x00000808,
    0x00000001, 0x10000002, 0x00000010, 0x00004000, 0x00000080, 0x00008000,
    0x00000003, 0x00000080, 0x00002000, 0x00800000, 0x00020000, 0x00000040,
    0x00080000, 0x00000002, 0x00000080, 0x08000000, 0x40000000, 0x00000080,
    0x08000000, 0x00000008, 0x00100020, 0x02000000, 0x00020000, 0x00000200,
    0x00200000, 0x00000020, 0x80000000, 0x00000001, 0x10000000, 0x00200000,
    0x01001000, 0x02000000, 0x00800000, 0x08000000, 0x00100000, 0x20000000,
    0x00001000, 0x00000040, 0x00002000, 0x00000400, 0x20000000, 0x00000002,
    0x00040000, 0x00000400, 0x00000080, 0x01000000, 0x00000080, 0x80000000,
    0x00200000, 0x00100000, 0x00500000, 0x00000001, 0x08080000, 0x00000004,
    0x80000000, 0x00000800, 0x00000001, 0x00000400, 0x04005000, 0x00000800,
    0x00000004, 0x00080000, 0x00000004, 0x00200000, 0x00000040, 0x00002000,
    0x01000000, 0x04000000, 0x00200000, 0x00480000, 0x00008000, 0x00000010,
    0x00008000, 0x00000020, 0x00000018, 0x20000000, 0x00000008, 0x00000800,
    0x01000000, 0x80000000, 0x00000020, 0x00180000, 0x00000008, 0x00000008,
    0x02000000, 0x02000000, 0x40000000, 0x00000100, 0x00000200, 0x08000000,
    0x00000004, 0x00100000, 0x00000100, 0x00100000, 0x00040000, 0x00000200,
    0x04000000, 0x00000080, 0x00400000, 0x08000000, 0x00000001, 0x00000010,
    0x10000000, 0x00400000, 0x10000000, 0x00000400, 0x01000000, 0x04000000,
    0x00000001, 0x00020000, 0x00000004, 0x00000008, 0x01000000, 0x40000000,
    0x00000004, 0x02000000, 0x00000800, 0x00000800, 0x00002000, 0x00200000,
    0x00000020, 0x00000010, 0x00000002, 0x00200000, 0x40000000, 0x20000000,
    0x40000000, 0x00002000, 0x00400000, 0x00000040, 0x00000400, 0x00200200,
    0x00000500, 0x04000000, 0x00000810, 0x00010000, 0x00000800, 0x00010000,
    0x00400000, 0x00000008};
    }

    const static UnicodeSet shan_Set{const_cast<UnicodeSet::run_t *>(__shan_Set_runs), 295, 0, const_cast<UnicodeSet::bitquad_t *>(__shan_Set_quads), 164, 0};

    /** Code Point Ranges for lai
    [3693, 3693], [3e0a, 3e0a], [40be, 40be], [4124, 4124], [4158, 4158],
    [42f1, 42f1], [4685, 4685], [49d2, 49d2], [4c9a, 4c9a], [4f86, 4f86],
    [5008, 5008], [52d1, 52d1], [53b2, 53b2], [553b, 553b], [5a15, 5a15],
    [5a61, 5a61], [5d0d, 5d0d], [5eb2, 5eb2], [5fa0, 5fa0], [61f6, 61f6],
    [650b, 650b], [68f6, 68f6], [6df6, 6df6], [7028, 7028], [730d, 730d],
    [7658, 7658], [7669, 7669], [775e, 775e], [7b82, 7b82], [7c5f, 7c5f],
    [840a, 840a], [85fe, 85fe], [8970, 8970], [8aba, 8aba], [8cda, 8cda],
    [8cf4, 8cf4], [9028, 9028], [90f2, 90f2], [91d0, 91d0], [9338, 9338],
    [9842, 9842], [9a0b, 9a0b], [9be0, 9be0], [9d63, 9d63], [9d86, 9d86],
    [9eb3, 9eb3], [9ee7, 9ee7], [20399, 20399], [2061d, 2061d],
    [21096, 21096], [210c4, 210c4], [214d2, 214d2], [2216d, 2216d],
    [2246c, 2246c], [235a4, 235a4], [24897, 24897], [248b5, 248b5],
    [24983, 24983], [24c93, 24c93], [2618b, 2618b], [264f9, 264f9],
    [27bf2, 27bf2], [27cdf, 27cdf], [27d6d, 27d6d], [28090, 28090],
    [281c6, 281c6], [28982, 28982], [29cc6, 29cc6], [2a208, 2a208],
    [2a45a, 2a45a]**/


    namespace {
    const static UnicodeSet::run_t __lai_Set_runs[] = {
    {Empty, 436}, {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 12}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 25}, {Mixed, 2},
    {Empty, 6}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 16}, {Mixed, 2},
    {Empty, 25}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 11}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2852},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 83}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 100},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 137}, {Mixed, 1},
    {Empty, 150}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 167}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 183}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 153}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 29405}};
    const static UnicodeSet::bitquad_t  __lai_Set_quads[] = {
    0x00080000, 0x00000400, 0x40000000, 0x00000010, 0x01000000, 0x00020000,
    0x00000020, 0x00040000, 0x04000000, 0x00000040, 0x00000100, 0x00020000,
    0x00040000, 0x08000000, 0x00200000, 0x00000002, 0x00002000, 0x00040000,
    0x00000001, 0x00400000, 0x00000800, 0x00400000, 0x00400000, 0x00000100,
    0x00002000, 0x01000000, 0x00000200, 0x40000000, 0x00000004, 0x80000000,
    0x00000400, 0x40000000, 0x00010000, 0x04000000, 0x04000000, 0x00100000,
    0x00000100, 0x00040000, 0x00010000, 0x01000000, 0x00000004, 0x00000800,
    0x00000001, 0x00000008, 0x00000040, 0x00080000, 0x00000080, 0x02000000,
    0x20000000, 0x00400000, 0x00000010, 0x00040000, 0x00002000, 0x00001000,
    0x00000010, 0x00800000, 0x00200000, 0x00000008, 0x00080000, 0x00000800,
    0x02000000, 0x00040000, 0x80000000, 0x00002000, 0x00010000, 0x00000040,
    0x00000004, 0x00000040, 0x00000100, 0x04000000};
    }

    const static UnicodeSet lai_Set{const_cast<UnicodeSet::run_t *>(__lai_Set_runs), 131, 0, const_cast<UnicodeSet::bitquad_t *>(__lai_Set_quads), 70, 0};

    /** Code Point Ranges for gao
    [3696, 3696], [3912, 3912], [3d46, 3d46], [3fb8, 3fb8], [4181, 4181],
    [44d8, 44d8], [52c2, 52c2], [544a, 544a], [548e, 548e], [5930, 5930],
    [641e, 641e], [66a0, 66a0], [6772, 6772], [69c0, 69c1], [69d4, 69d4],
    [6aba, 6aba], [6adc, 6adc], [6d69, 6d69], [734b, 734b], [768b, 768b],
    [776a, 776a], [777e, 777e], [7970, 7970], [7a3e, 7a3f], [7b76, 7b76],
    [7bd9, 7bd9], [7cd5, 7cd5], [7e1e, 7e1e], [7f94, 7f94], [7f99, 7f99],
    [818f, 818f], [83d2, 83d2], [84bf, 84bf], [85c1, 85c1], [8aa5, 8aa5],
    [90dc, 90dc], [92ef, 92ef], [93ac, 93ac], [993b, 993b], [9ad8, 9ad8],
    [9df1, 9df1], [9f1b, 9f1b], [20c1b, 20c1b], [212df, 212df],
    [21732, 21732], [21de5, 21de5], [21f17, 21f17], [2234e, 2234e],
    [2279f, 2279f], [234cc, 234cc], [2374f, 2374f], [23f4e, 23f4e],
    [24c5f, 24c5f], [254d6, 254d6], [25890, 25891], [26371, 26371],
    [263e6, 263e6], [2657a, 2657a], [26e86, 26e86], [276a1, 276a1],
    [27709, 27709], [2783c, 2783c], [2788c, 2788c], [28772, 28772],
    [292fa, 292fa], [293e4, 293e4], [294e2, 294e2], [29507, 29507],
    [2954d, 2954d], [2975d, 2975d], [29ad3, 29ad3], [2a518, 2a518]**/


    namespace {
    const static UnicodeSet::run_t __gao_Set_runs[] = {
    {Empty, 436}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 111}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 86}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 20}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2919},
    {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 105}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 63}, {Mixed, 1}, {Empty, 103},
    {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 86}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 64}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 118}, {Mixed, 1}, {Empty, 91}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 81}, {Mixed, 1},
    {Empty, 29399}};
    const static UnicodeSet::bitquad_t  __gao_Set_quads[] = {
    0x00400000, 0x00040000, 0x00000040, 0x01000000, 0x00000002, 0x01000000,
    0x00000004, 0x00000400, 0x00004000, 0x00010000, 0x40000000, 0x00000001,
    0x00040000, 0x00100003, 0x04000000, 0x10000000, 0x00000200, 0x00000800,
    0x00000800, 0x40000400, 0x00010000, 0xc0000000, 0x00400000, 0x02000000,
    0x00200000, 0x40000000, 0x02100000, 0x00008000, 0x00040000, 0x80000000,
    0x00000002, 0x00000020, 0x10000000, 0x00008000, 0x00001000, 0x08000000,
    0x01000000, 0x00020000, 0x08000000, 0x08000000, 0x80000000, 0x00040000,
    0x00000020, 0x00800000, 0x00004000, 0x80000000, 0x00001000, 0x00008000,
    0x00004000, 0x80000000, 0x00400000, 0x00030000, 0x00020000, 0x00000040,
    0x04000000, 0x00000040, 0x00000002, 0x00000200, 0x10000000, 0x00001000,
    0x00040000, 0x04000000, 0x00000010, 0x00000004, 0x00000080, 0x00002000,
    0x20000000, 0x00080000, 0x01000000};
    }

    const static UnicodeSet gao_Set{const_cast<UnicodeSet::run_t *>(__gao_Set_runs), 135, 0, const_cast<UnicodeSet::bitquad_t *>(__gao_Set_quads), 69, 0};

    /** Code Point Ranges for ze
    [3696, 3696], [37d9, 37d9], [38f1, 38f1], [391e, 391e], [397d, 397d],
    [3cc1, 3cc1], [3cfb, 3cfb], [3e93, 3e93], [453c, 453c], [4549, 4549],
    [456a, 456a], [47c4, 47c4], [4bd4, 4bd4], [4da1, 4da1], [4da6, 4da6],
    [4ec4, 4ec4], [5074, 5074], [5247, 5247], [548b, 548b], [5536, 5536],
    [5616, 5616], [5928, 5928], [5ae7, 5ae7], [5d31, 5d31], [5e58, 5e58],
    [5ec1, 5ec1], [6351, 6351], [63aa, 63aa], [64c7, 64c7], [6603, 6603],
    [67de, 67de], [6a0d, 6a0d], [6cce, 6cce], [6ead, 6ead], [6fa4, 6fa4],
    [7042, 7042], [769f, 769f], [776a, 776a], [7794, 7794], [77e0, 77e0],
    [790b, 790b], [7a04, 7a04], [7a37, 7a37], [7b2e, 7b2e], [7c00, 7c00],
    [802b, 802b], [8234, 8234], [8443, 8443], [8600, 8600], [880c, 880c],
    [8957, 8957], [8ace, 8ace], [8b2b, 8b2b], [8b2e, 8b2e], [8cac, 8cac],
    [8cfe, 8cfe], [8fee, 8fee], [98f5, 98f5], [9c02, 9c02], [9e05, 9e05],
    [9f5a, 9f5a], [9f70, 9f70], [207fb, 207fb], [20a3b, 20a3b],
    [20dcc, 20dcc], [21d57, 21d57], [21e08, 21e08], [21e26, 21e26],
    [21e68, 21e68], [22370, 22370], [229e0, 229e0], [22b9a, 22b9a],
    [22be9, 22be9], [231bd, 231bd], [236f8, 236f8], [23908, 23908],
    [23b3f, 23b3f], [23f26, 23f26], [23f4e, 23f4e], [23fd0, 23fd0],
    [24593, 24593], [2489f, 2489f], [25371, 25371], [2538d, 2538d],
    [257d4, 257d4], [25f03, 25f03], [26508, 26508], [267dc, 267dc],
    [27db7, 27db7], [28560, 28560], [2858a, 2858a], [29096, 29096],
    [2913e, 2913e], [2932a, 2932a], [29533, 29533], [29fb8, 29fb8],
    [2a31f, 2a31f]**/


    namespace {
    const static UnicodeSet::run_t __ze_Set_runs[] = {
    {Empty, 436}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 26}, {Mixed, 2},
    {Empty, 12}, {Mixed, 1}, {Empty, 52}, {Mixed, 3}, {Empty, 18},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 7}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 71}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 2883},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 123}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 31}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 86}, {Mixed, 2}, {Empty, 33}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 174}, {Mixed, 1}, {Empty, 61}, {Mixed, 2}, {Empty, 87},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 83}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 29415}};
    const static UnicodeSet::bitquad_t  __ze_Set_quads[] = {
    0x00400000, 0x02000000, 0x00020000, 0x40000000, 0x20000000, 0x00000002,
    0x08000000, 0x00080000, 0x10000000, 0x00000200, 0x00000400, 0x00000010,
    0x00100000, 0x00000042, 0x00000010, 0x00100000, 0x00000080, 0x00000800,
    0x00400000, 0x00400000, 0x00000100, 0x00000080, 0x00020000, 0x01000000,
    0x00000002, 0x00020000, 0x00000400, 0x00000080, 0x00000008, 0x40000000,
    0x00002000, 0x00004000, 0x00002000, 0x00000010, 0x00000004, 0x80000000,
    0x00000400, 0x00100000, 0x00000001, 0x00000800, 0x00000010, 0x00800000,
    0x00004000, 0x00000001, 0x00000800, 0x00100000, 0x00000008, 0x00000001,
    0x00001000, 0x00800000, 0x00004000, 0x00004800, 0x00001000, 0x40000000,
    0x00004000, 0x00200000, 0x00000004, 0x00000020, 0x04000000, 0x00010000,
    0x08000000, 0x08000000, 0x00001000, 0x00800000, 0x00000100, 0x00000040,
    0x00000100, 0x00010000, 0x00000001, 0x04000000, 0x00000200, 0x20000000,
    0x01000000, 0x00000100, 0x80000000, 0x00000040, 0x00004000, 0x00010000,
    0x00080000, 0x80000000, 0x00020000, 0x00002000, 0x00100000, 0x00000008,
    0x00000100, 0x10000000, 0x00800000, 0x00000001, 0x00000400, 0x00400000,
    0x40000000, 0x00000400, 0x00080000, 0x01000000, 0x80000000};
    }

    const static UnicodeSet ze_Set{const_cast<UnicodeSet::run_t *>(__ze_Set_runs), 169, 0, const_cast<UnicodeSet::bitquad_t *>(__ze_Set_quads), 95, 0};

    /** Code Point Ranges for ban
    [3698, 3698], [3896, 3896], [3ab5, 3ab5], [3ede, 3ede], [40d1, 40d1],
    [4232, 4232], [46c0, 46c0], [4b33, 4b33], [4c09, 4c09], [4e26, 4e26],
    [4f34, 4f34], [5206, 5206], [534a, 534a], [5351, 5351], [5762, 5762],
    [57ff, 57ff], [59c5, 59c5], [5f6c, 5f6c], [6011, 6011], [626e, 626e],
    [6273, 6273], [62cc, 62cc], [642b, 642c], [653d, 653d], [6591, 6592],
    [6604, 6604], [670c, 670c], [677f, 677f], [67c8, 67c8], [6e74, 6e74],
    [7248, 7248], [73ed, 73ed], [74e3, 74e3], [74ea, 74ea], [7622, 7622],
    [764d, 764d], [79da, 79da], [7c53, 7c53], [7c84, 7c84], [7d46, 7d46],
    [8228, 8228], [822c, 822c], [8742, 8742], [878c, 878c], [8929, 8929],
    [8982, 8982], [8c73, 8c73], [8cc1, 8cc1], [8dd8, 8dd8], [8fa6, 8fa6],
    [8fa8, 8fa8], [8fac, 8fac], [8faf, 8faf], [9211, 9211], [9261, 9261],
    [95c6, 95c6], [962a, 962a], [977d, 977d], [9812, 9812], [9b6c, 9b6c],
    [9cfb, 9cfb], [2052f, 2052f], [206bc, 206bc], [20992, 20992],
    [209eb, 209eb], [20bd8, 20bd8], [20e9a, 20e9a], [21bd8, 21bd8],
    [22c94, 22c94], [22d2c, 22d2c], [23a82, 23a82], [24870, 24870],
    [249a6, 249a6], [24aeb, 24aeb], [24cd6, 24cd6], [25dc1, 25dc1],
    [25e53, 25e53], [2638a, 2638a], [26679, 26679], [26764, 26764],
    [271e5, 271e5], [2733f, 2733f], [27fe8, 27fe8], [28426, 28426],
    [28431, 28431], [2843e, 2843e], [28b49, 28b49], [2952e, 2952e],
    [29894, 29894], [29b67, 29b67], [29fc9, 29fc9], [2a115, 2a115],
    [2a48b, 2a48b]**/


    namespace {
    const static UnicodeSet::run_t __ban_Set_runs[] = {
    {Empty, 436}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 2},
    {Empty, 27}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 2881}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 105}, {Mixed, 1}, {Empty, 133},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 106}, {Mixed, 1},
    {Empty, 110}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 135}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 83}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 101}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 29403}};
    const static UnicodeSet::bitquad_t  __ban_Set_quads[] = {
    0x01000000, 0x00400000, 0x00200000, 0x40000000, 0x00020000, 0x00040000,
    0x00000001, 0x00080000, 0x00000200, 0x00000040, 0x00100000, 0x00000040,
    0x00020400, 0x00000004, 0x80000000, 0x00000020, 0x00001000, 0x00020000,
    0x00084000, 0x00001000, 0x00001800, 0x20000000, 0x00060000, 0x00000010,
    0x00001000, 0x80000000, 0x00000100, 0x00100000, 0x00000100, 0x00002000,
    0x00000408, 0x00000004, 0x00002000, 0x04000000, 0x00080000, 0x00000010,
    0x00000040, 0x00001100, 0x00000004, 0x00001000, 0x00000200, 0x00000004,
    0x00080000, 0x00000002, 0x01000000, 0x00009140, 0x00020000, 0x00000002,
    0x00000040, 0x00000400, 0x20000000, 0x00040000, 0x00001000, 0x08000000,
    0x00008000, 0x10000000, 0x00040000, 0x00000800, 0x01000000, 0x04000000,
    0x01000000, 0x00100000, 0x00001000, 0x00000004, 0x00010000, 0x00000040,
    0x00000800, 0x00400000, 0x00000002, 0x00080000, 0x00000400, 0x02000000,
    0x00000010, 0x00000020, 0x80000000, 0x00000100, 0x40020040, 0x00000200,
    0x00004000, 0x00100000, 0x00000080, 0x00000200, 0x00200000, 0x00000800};
    }

    const static UnicodeSet ban_Set{const_cast<UnicodeSet::run_t *>(__ban_Set_runs), 167, 0, const_cast<UnicodeSet::bitquad_t *>(__ban_Set_quads), 84, 0};

    /** Code Point Ranges for kong
    [369a, 369a], [3c81, 3c81], [3e1c, 3e1c], [415d, 415d], [5025, 5025],
    [57ea, 57ea], [5b54, 5b54], [5d06, 5d06], [6050, 6050], [60be, 60be],
    [63a7, 63a7], [690c, 690c], [6db3, 6db3], [77fc, 77fc], [787f, 787f],
    [7a79, 7a7a], [7b9c, 7b9c], [8154, 8154], [9313, 9313], [979a, 979a],
    [9d7c, 9d7c], [2001d, 2001d], [2193f, 2193f], [220d0, 220d0],
    [22aac, 22aac], [22dd9, 22dd9], [22f66, 22f66], [233fa, 233fa],
    [245c7, 245c7], [24932, 24932], [25507, 25507], [25945, 25945],
    [26048, 26048], [26c47, 26c47], [26d90, 26d90], [27306, 27306],
    [276ac, 276ac], [29ca7, 29ca7], [2a523, 2a523]**/


    namespace {
    const static UnicodeSet::run_t __kong_Set_runs[] = {
    {Empty, 436}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 118}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 81}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 141}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 2836}, {Mixed, 1}, {Empty, 200},
    {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 78}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 142}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 94}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 55},
    {Mixed, 1}, {Empty, 95}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 303},
    {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 29398}};
    const static UnicodeSet::bitquad_t  __kong_Set_quads[] = {
    0x04000000, 0x00000002, 0x10000000, 0x20000000, 0x00000020, 0x00000400,
    0x00100000, 0x00000040, 0x00010000, 0x40000000, 0x00000080, 0x00001000,
    0x00080000, 0x10000000, 0x80000000, 0x06000000, 0x10000000, 0x00100000,
    0x00080000, 0x04000000, 0x10000000, 0x20000000, 0x80000000, 0x00010000,
    0x00001000, 0x02000000, 0x00000040, 0x04000000, 0x00000080, 0x00040000,
    0x00000080, 0x00000020, 0x00000100, 0x00000080, 0x00010000, 0x00000040,
    0x00001000, 0x00000080, 0x00000008};
    }

    const static UnicodeSet kong_Set{const_cast<UnicodeSet::run_t *>(__kong_Set_runs), 79, 0, const_cast<UnicodeSet::bitquad_t *>(__kong_Set_quads), 39, 0};

    /** Code Point Ranges for nu
    [36a2, 36a2], [38fd, 38fd], [4ec5, 4ec5], [4f2e, 4f2e], [5089, 5089],
    [52aa, 52aa], [5476, 5476], [5974, 5974], [5b65, 5b65], [5e11, 5e11],
    [5f29, 5f29], [6012, 6012], [6310, 6310], [6419, 6419], [64e9, 64e9],
    [782e, 782e], [7b2f, 7b2f], [80ad, 80ad], [8925, 8925], [8a49, 8a49],
    [99d1, 99d1], [20d02, 20d02], [22aa6, 22aa6], [22ad3, 22ad3],
    [22aed, 22aed], [25144, 25144], [256d1, 256d1], [25928, 25928],
    [25c42, 25c42], [2726d, 2726d], [275c8, 275c8], [27a85, 27a85],
    [27fd4, 27fd4]**/


    namespace {
    const static UnicodeSet::run_t __nu_Set_runs[] = {
    {Empty, 437}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 174},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 153},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 67}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 123},
    {Mixed, 1}, {Empty, 2969}, {Mixed, 1}, {Empty, 236}, {Mixed, 3},
    {Empty, 306}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 176}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 29697}};
    const static UnicodeSet::bitquad_t  __nu_Set_quads[] = {
    0x00000004, 0x20000000, 0x00000020, 0x00004000, 0x00000200, 0x00000400,
    0x00400000, 0x00100000, 0x00000020, 0x00020000, 0x00000200, 0x00040000,
    0x00010000, 0x02000000, 0x00000200, 0x00004000, 0x00008000, 0x00002000,
    0x00000020, 0x00000200, 0x00020000, 0x00000004, 0x00000040, 0x00080000,
    0x00002000, 0x00000010, 0x00020000, 0x00000100, 0x00000004, 0x00002000,
    0x00000100, 0x00000020, 0x00100000};
    }

    const static UnicodeSet nu_Set{const_cast<UnicodeSet::run_t *>(__nu_Set_runs), 63, 0, const_cast<UnicodeSet::bitquad_t *>(__nu_Set_quads), 33, 0};

    /** Code Point Ranges for pei
    [36b0, 36b0], [3904, 3904], [39e9, 39e9], [3bc1, 3bc1], [3fa6, 3fa6],
    [4283, 4283], [43fd, 43fd], [47fa, 47fa], [48d9, 48d9], [4a5b, 4a5b],
    [4ab9, 4ab9], [4aca, 4aca], [4bf1, 4bf1], [4f69, 4f69], [4fd6, 4fd6],
    [500d, 500d], [5478, 5478], [5561, 5561], [574f, 574f], [57ba, 57ba],
    [57f9, 57f9], [5983, 5983], [599a, 599a], [59f5, 59f5], [5a44, 5a44],
    [5d8f, 5d8f], [5e14, 5e14], [600c, 600c], [62b7, 62b7], [638a, 638a],
    [6508, 6508], [65c6, 65c6], [6622, 6622], [67ed, 67ed], [67f8, 67f8],
    [68d1, 68d1], [68d3, 68d3], [6bf0, 6bf0], [6c9b, 6c9b], [6d7f, 6d7f],
    [6de0, 6de0], [72bb, 72bb], [73ee, 73ee], [7423, 7423], [80ba, 80ba],
    [80da, 80da], [8274, 8274], [8307, 8307], [8337, 8337], [871a, 871a],
    [8843, 8843], [88f4, 88f4], [8ce0, 8ce0], [8f61, 8f61], [914d, 914d],
    [9185, 9185], [9307, 9307], [962b, 962b], [966a, 966b], [9708, 9708],
    [99b7, 99b7], [99cd, 99cd], [22056, 22056], [22600, 22600],
    [22950, 22950], [2337a, 2337a], [23b06, 23b06], [23bf1, 23bf1],
    [245cf, 245cf], [24732, 24732], [24b03, 24b03], [25114, 25114],
    [25e42, 25e42], [26642, 26642], [26e2a, 26e2a], [27ccf, 27ccf],
    [27d25, 27d25], [284ff, 284ff], [28676, 28676], [286ec, 286ec],
    [2939c, 2939c], [29462, 29462], [295ad, 295ad], [29d63, 29d63]**/


    namespace {
    const static UnicodeSet::run_t __pei_Set_runs[] = {
    {Empty, 437}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 99}, {Mixed, 2}, {Empty, 12},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 30}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 20}, {Mixed, 2},
    {Empty, 3123}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 80}, {Mixed, 1}, {Empty, 60}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 47}, {Mixed, 1},
    {Empty, 105}, {Mixed, 1}, {Empty, 63}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 116}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 100}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 29460}};
    const static UnicodeSet::bitquad_t  __pei_Set_quads[] = {
    0x00010000, 0x00000010, 0x00000200, 0x00000002, 0x00000040, 0x00000008,
    0x20000000, 0x04000000, 0x02000000, 0x08000000, 0x02000000, 0x00000400,
    0x00020000, 0x00000200, 0x00400000, 0x00002000, 0x01000000, 0x00000002,
    0x00008000, 0x04000000, 0x02000000, 0x04000008, 0x00200000, 0x00000010,
    0x00008000, 0x00100000, 0x00001000, 0x00800000, 0x00000400, 0x00000100,
    0x00000040, 0x00000004, 0x01002000, 0x000a0000, 0x00010000, 0x08000000,
    0x80000000, 0x00000001, 0x08000000, 0x00004000, 0x00000008, 0x04000000,
    0x04000000, 0x00100000, 0x00000080, 0x00800000, 0x04000000, 0x00000008,
    0x00100000, 0x00000001, 0x00000002, 0x00002000, 0x00000020, 0x00000080,
    0x00000800, 0x00000c00, 0x00000100, 0x00800000, 0x00002000, 0x00400000,
    0x00000001, 0x00010000, 0x04000000, 0x00000040, 0x00020000, 0x00008000,
    0x00040000, 0x00000008, 0x00100000, 0x00000004, 0x00000004, 0x00000400,
    0x00008000, 0x00000020, 0x80000000, 0x00400000, 0x00001000, 0x10000000,
    0x00000004, 0x00002000, 0x00000008};
    }

    const static UnicodeSet pei_Set{const_cast<UnicodeSet::run_t *>(__pei_Set_runs), 155, 0, const_cast<UnicodeSet::bitquad_t *>(__pei_Set_quads), 81, 0};

    /** Code Point Ranges for mao
    [36b9, 36b9], [39c7, 39c7], [39cc, 39cc], [3b98, 3b98], [3d18, 3d18],
    [4024, 4024], [4166, 4166], [42c3, 42c3], [44ee, 44ee], [485a, 485a],
    [4ac9, 4ac9], [4b77, 4b77], [4f94, 4f94], [5183, 5183], [5187, 5187],
    [5192, 5192], [52d6, 52d6], [52d9, 52d9], [536f, 536f], [5825, 5825],
    [5918, 5918], [5aa2, 5aa2], [5cc1, 5cc1], [5d4d, 5d4d], [5e3d, 5e3d],
    [6117, 6117], [61cb, 61cb], [63cf, 63cf], [65c4, 65c4], [6634, 6634],
    [6959, 6959], [6bdb, 6bdb], [6be3, 6be3], [6bf7, 6bf7], [6c02, 6c02],
    [6cd6, 6cd6], [6e35, 6e35], [725f, 725f], [7266, 7266], [729b, 729b],
    [732b, 732b], [7441, 7441], [770a, 770a], [7780, 7780], [77db, 77db],
    [79cf, 79cf], [7b37, 7b37], [7de2, 7de2], [7f5e, 7f5e], [8004, 8004],
    [8017, 8017], [82bc, 82bc], [8302, 8302], [8305, 8306], [843a, 843a],
    [84e9, 84e9], [86d1, 86d1], [8750, 8750], [8765, 8765], [87ca, 87ca],
    [88a4, 88a4], [8992, 8992], [8c87, 8c87], [8c8c, 8c8c], [8c93, 8c93],
    [8cbf, 8cbf], [8ede, 8ede], [911a, 911a], [912e, 912e], [9155, 9155],
    [925a, 925a], [927e, 927e], [9328, 9328], [973f, 973f], [9ae6, 9ae6],
    [9af3, 9af3], [9d9c, 9d9c], [2053c, 2053c], [2091d, 2091d],
    [21722, 21722], [21e70, 21e70], [220b9, 220b9], [22149, 22149],
    [22605, 22605], [2274c, 2274c], [22a2f, 22a2f], [22bfe, 22bfe],
    [22f62, 22f62], [23283, 23283], [2353a, 2353a], [23a07, 23a07],
    [23b35, 23b35], [23b6e, 23b6e], [23bc0, 23bc0], [23d1f, 23d1f],
    [23d3c, 23d3c], [23e6a, 23e6a], [2469c, 2469c], [246d6, 246d6],
    [24744, 24744], [24970, 24970], [24cb0, 24cb0], [25138, 25138],
    [25206, 25206], [2539f, 2539f], [257ea, 257ea], [26038, 26038],
    [26cc1, 26cc1], [26f2a, 26f2a], [2735f, 2735f], [2741f, 2741f],
    [2749a, 2749a], [274ff, 274ff], [27528, 27528], [2780a, 2780a],
    [28225, 28225], [28968, 28968], [2899c, 2899c], [28a69, 28a69],
    [28eb8, 28eb8], [296e8, 296e8], [29ac1, 29ac1], [29b1e, 29b1e],
    [29b7e, 29b7e], [29fc2, 29fc2], [2a0d1, 2a0d1]**/


    namespace {
    const static UnicodeSet::run_t __mao_Set_runs[] = {
    {Empty, 437}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 19}, {Mixed, 3}, {Empty, 5},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 32}, {Mixed, 3},
    {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 23}, {Mixed, 2},
    {Empty, 16}, {Mixed, 1}, {Empty, 17}, {Mixed, 3}, {Empty, 7},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 2876},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 112}, {Mixed, 1},
    {Empty, 57}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 9}, {Mixed, 1},
    {Empty, 64}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 100},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 80},
    {Mixed, 1}, {Empty, 57}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 29433}};
    const static UnicodeSet::bitquad_t  __mao_Set_quads[] = {
    0x02000000, 0x00001080, 0x01000000, 0x01000000, 0x00000010, 0x00000040,
    0x00000008, 0x00004000, 0x04000000, 0x00000200, 0x00800000, 0x00100000,
    0x00040088, 0x02400000, 0x00008000, 0x00000020, 0x01000000, 0x00000004,
    0x00000002, 0x00002000, 0x20000000, 0x00800000, 0x00000800, 0x00008000,
    0x00000010, 0x00100000, 0x02000000, 0x08000000, 0x00800008, 0x00000004,
    0x00400000, 0x00200000, 0x80000000, 0x00000040, 0x08000000, 0x00000800,
    0x00000002, 0x00000400, 0x00000001, 0x08000000, 0x00008000, 0x00800000,
    0x00000004, 0x40000000, 0x00800010, 0x10000000, 0x00000064, 0x04000000,
    0x00000200, 0x00020000, 0x00010000, 0x00000020, 0x00000400, 0x00000010,
    0x00040000, 0x00081080, 0x80000000, 0x40000000, 0x04000000, 0x00004000,
    0x00200000, 0x04000000, 0x40000000, 0x00000100, 0x80000000, 0x00080040,
    0x10000000, 0x10000000, 0x20000000, 0x00000004, 0x00010000, 0x02000000,
    0x00000200, 0x00000020, 0x00001000, 0x00008000, 0x40000000, 0x00000004,
    0x00000008, 0x04000000, 0x00000080, 0x00200000, 0x00004000, 0x00000001,
    0x80000000, 0x10000000, 0x00000400, 0x10000000, 0x00400000, 0x00000010,
    0x00010000, 0x00010000, 0x01000000, 0x00000040, 0x80000000, 0x00000400,
    0x01000000, 0x00000002, 0x00000400, 0x80000000, 0x80000000, 0x04000000,
    0x80000000, 0x00000100, 0x00000400, 0x00000020, 0x00000100, 0x10000000,
    0x00000200, 0x01000000, 0x00000100, 0x00000002, 0x40000000, 0x40000000,
    0x00000004, 0x00020000};
    }

    const static UnicodeSet mao_Set{const_cast<UnicodeSet::run_t *>(__mao_Set_runs), 211, 0, const_cast<UnicodeSet::bitquad_t *>(__mao_Set_quads), 116, 0};

    /** Code Point Ranges for xiong
    [36be, 36be], [4817, 4817], [5144, 5144], [5147, 5147], [51f6, 51f6],
    [5308, 5308], [54c5, 54c5], [5910, 5910], [5baa, 5baa], [605f, 605f],
    [662b, 662b], [6d36, 6d36], [7138, 7138], [718a, 718a], [80f8, 80f8],
    [80fd, 80fd], [828e, 828e], [8a29, 8a29], [8a57, 8a57], [8a7e, 8a7e],
    [8d68, 8d68], [96c4, 96c4], [204d9, 204d9], [21a33, 21a33],
    [21ab0, 21ab0], [21b01, 21b01], [228b9, 228b9], [22fcc, 22fcc],
    [23177, 23177], [2452b, 2452b], [246ea, 246ea], [250f4, 250f4],
    [25967, 25967], [259a5, 259a5], [26224, 26224], [264c8, 264c8],
    [26644, 26644], [26b3a, 26b3a], [26d61, 26d61], [2762e, 2762e],
    [2779e, 2779e], [27c2f, 27c2f], [27d63, 27d63], [27f52, 27f52],
    [27fd6, 27fd6], [2894d, 2894d], [29320, 29320], [299ca, 299ca],
    [29d02, 29d02]**/


    namespace {
    const static UnicodeSet::run_t __xiong_Set_runs[] = {
    {Empty, 437}, {Mixed, 1}, {Empty, 138}, {Mixed, 1}, {Empty, 73},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 55},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 122}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 60},
    {Mixed, 3}, {Empty, 23}, {Mixed, 1}, {Empty, 74}, {Mixed, 1},
    {Empty, 2927}, {Mixed, 1}, {Empty, 170}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 108}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 157},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 79}, {Mixed, 1},
    {Empty, 67}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 67},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 69},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 75}, {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 52},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 29463}};
    const static UnicodeSet::bitquad_t  __xiong_Set_quads[] = {
    0x40000000, 0x00800000, 0x00000090, 0x00400000, 0x00000100, 0x00000020,
    0x00010000, 0x00000400, 0x80000000, 0x00000800, 0x00400000, 0x01000000,
    0x00000400, 0x21000000, 0x00004000, 0x00000200, 0x00800000, 0x40000000,
    0x00000100, 0x00000010, 0x02000000, 0x00080000, 0x00010000, 0x00000002,
    0x02000000, 0x00001000, 0x00800000, 0x00000800, 0x00000400, 0x00100000,
    0x00000080, 0x00000020, 0x00000010, 0x00000100, 0x00000010, 0x04000000,
    0x00000002, 0x00004000, 0x40000000, 0x00008000, 0x00000008, 0x00040000,
    0x00400000, 0x00002000, 0x00000001, 0x00000400, 0x00000004};
    }

    const static UnicodeSet xiong_Set{const_cast<UnicodeSet::run_t *>(__xiong_Set_runs), 91, 0, const_cast<UnicodeSet::bitquad_t *>(__xiong_Set_quads), 47, 0};

    /** Code Point Ranges for peng
    [36c1, 36c1], [36d4, 36d4], [382e, 382e], [394a, 394a], [39f8, 39f8],
    [3c76, 3c76], [3f1e, 3f1e], [4118, 4118], [436c, 436c], [486b, 486b],
    [48d9, 48d9], [494b, 494b], [4995, 4995], [49db, 49db], [4c03, 4c03],
    [4d36, 4d36], [4ea8, 4ea8], [5017, 5017], [508d, 508d], [50b0, 50b0],
    [527b, 527b], [5309, 5309], [562d, 562d], [580b, 580b], [585c, 585c],
    [5873, 5873], [5e84, 5e84], [5f38, 5f38], [5f6d, 5f6d], [6026, 6026],
    [6072, 6072], [6189, 6189], [62a8, 62a8], [6367, 6367], [63bd, 63bd],
    [6412, 6412], [6453, 6453], [65c1, 65c1], [670b, 670b], [6888, 6888],
    [68da, 68da], [6916, 6916], [692a, 692a], [69f0, 69f0], [6a25, 6a25],
    [6cd9, 6cd9], [6d34, 6d34], [6dce, 6dce], [6ddc, 6ddc], [6ec2, 6ec2],
    [6f28, 6f28], [6f30, 6f30], [6f8e, 6f8e], [70f9, 70f9], [71a2, 71a2],
    [75ed, 75ed], [768f, 768f], [7830, 7830], [7851, 7851], [787c, 787c],
    [78b0, 78b0], [78de, 78de], [7a1d, 7a1d], [7be3, 7be3], [7bf7, 7bf7],
    [7d63, 7d63], [80d3, 80d3], [81a8, 81a8], [8283, 8283], [82f9, 82f9],
    [8353, 8353], [8391, 8391], [84ec, 84ec], [87da, 87db], [8e2b, 8e2b],
    [8eef, 8eef], [8f23, 8f23], [8f27, 8f27], [9022, 9022], [902c, 902c],
    [930b, 930b], [945d, 945d], [959b, 959b], [97f8, 97f8], [99cd, 99cd],
    [9a2f, 9a2f], [9afc, 9afc], [9b05, 9b05], [9b14, 9b14], [9d6c, 9d6c],
    [210ab, 210ab], [21f1c, 21f1c], [223f3, 223f3], [22a8b, 22a8b],
    [22f29, 22f29], [22f69, 22f69], [237c0, 237c0], [23a1e, 23a1e],
    [245b3, 245b3], [2463e, 2463e], [2486d, 2486d], [25571, 25571],
    [2557d, 2557d], [2669d, 2669d], [26aaa, 26aaa], [26bf0, 26bf0],
    [27307, 27307], [2768b, 2768b], [27d02, 27d02], [28083, 28083],
    [28158, 28158], [28369, 28369], [283a7, 283a7], [283b3, 283b3],
    [2844e, 2844e], [2881f, 2881f], [28cb0, 28cb0], [28e80, 28e80],
    [29126, 29126], [2941b, 2941b], [2959b, 2959b], [29855, 29855],
    [29b97, 29b97], [29c40, 29c40], [29c4b, 29c4b], [29e00, 29e00],
    [2a50d, 2a50d], [2a514, 2a514]**/


    namespace {
    const static UnicodeSet::run_t __peng_Set_runs[] = {
    {Empty, 438}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 13},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 48},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 12}, {Mixed, 3}, {Empty, 1}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 50},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 18}, {Mixed, 1},
    {Empty, 2969}, {Mixed, 1}, {Empty, 114}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 103}, {Mixed, 1}, {Empty, 136},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 51},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 29399}};
    const static UnicodeSet::bitquad_t  __peng_Set_quads[] = {
    0x00100002, 0x00004000, 0x00000400, 0x01000000, 0x00400000, 0x40000000,
    0x01000000, 0x00001000, 0x00000800, 0x02000000, 0x00000800, 0x00200000,
    0x08000000, 0x00000008, 0x00400000, 0x00000100, 0x00800000, 0x00002000,
    0x00010000, 0x08000000, 0x00000200, 0x00002000, 0x00000800, 0x10000000,
    0x00080000, 0x00000010, 0x01000000, 0x00002000, 0x00000040, 0x00040000,
    0x00000200, 0x00000100, 0x00000080, 0x20000000, 0x00040000, 0x00080000,
    0x00000002, 0x00000800, 0x00000100, 0x04000000, 0x00400000, 0x00000400,
    0x00010000, 0x00000020, 0x02000000, 0x00100000, 0x10004000, 0x00000004,
    0x00010100, 0x00004000, 0x02000000, 0x00000004, 0x00002000, 0x00008000,
    0x00010000, 0x00020000, 0x10000000, 0x00010000, 0x40000000, 0x20000000,
    0x00800008, 0x00000008, 0x00080000, 0x00000100, 0x00000008, 0x02000000,
    0x00080000, 0x00020000, 0x00001000, 0x0c000000, 0x00000800, 0x00008000,
    0x00000088, 0x00001004, 0x00000800, 0x20000000, 0x08000000, 0x01000000,
    0x00002000, 0x00008000, 0x10000000, 0x00100020, 0x00001000, 0x00000800,
    0x10000000, 0x00080000, 0x00000800, 0x00000200, 0x00000200, 0x00000001,
    0x40000000, 0x00080000, 0x40000000, 0x00002000, 0x20020000, 0x20000000,
    0x00000400, 0x00010000, 0x00000080, 0x00000800, 0x00000004, 0x00000008,
    0x01000000, 0x00000200, 0x00080080, 0x00004000, 0x80000000, 0x00010000,
    0x00000001, 0x00000040, 0x08000000, 0x08000000, 0x00200000, 0x00800000,
    0x00000801, 0x00000001, 0x00102000};
    }

    const static UnicodeSet peng_Set{const_cast<UnicodeSet::run_t *>(__peng_Set_runs), 221, 0, const_cast<UnicodeSet::bitquad_t *>(__peng_Set_quads), 117, 0};

    /** Code Point Ranges for lv
    [36ce, 36ce], [3825, 3825], [385e, 385e], [3b5a, 3b5a], [3ef2, 3ef2],
    [3f94, 3f94], [451e, 451e], [4561, 4561], [4896, 4896], [4968, 4968],
    [4bab, 4bab], [4fa3, 4fa3], [5122, 5122], [5415, 5415], [54f7, 54f7],
    [578f, 578f], [58d8, 58d8], [5a41, 5a41], [5be0, 5be0], [5bfd, 5bfd],
    [5c62, 5c62], [5c65, 5c65], [5d42, 5d42], [5eec, 5eec], [5f8b, 5f8b],
    [616e, 616e], [617a, 617a], [634b, 634b], [65c5, 65c5], [68a0, 68a0],
    [6a13, 6a13], [6ad6, 6ad6], [6ada, 6ada], [6ae8, 6ae8], [6c00, 6c00],
    [6c2f, 6c2f], [6f0a, 6f0a], [6ffe, 6ffe], [7208, 7208], [7387, 7387],
    [763b, 763b], [76e7, 76e7], [779c, 779c], [7963, 7963], [7a6d, 7a6d],
    [7c0d, 7c0d], [7d2f, 7d2f], [7d7d, 7d7d], [7dd1, 7dd1], [7e37, 7e37],
    [7e42, 7e42], [8182, 8182], [819f, 819f], [81a2, 81a2], [81da, 81da],
    [844e, 844e], [851e, 851e], [85d8, 85d8], [8651, 8651], [8938, 8938],
    [8b31, 8b31], [8ec1, 8ec1], [90d8, 90d8], [92c1, 92c1], [9332, 9332],
    [93e4, 93e4], [9462, 9462], [95ad, 95ad], [9a62, 9a62], [9b6f, 9b6f],
    [9ddc, 9ddc], [9e7f, 9e7f], [20708, 20708], [208ca, 208ca],
    [20dc8, 20dc8], [20edc, 20edc], [2103f, 2103f], [2184e, 2184e],
    [21f85, 21f85], [2215e, 2215e], [2221a, 2221a], [22672, 22672],
    [227f3, 227f3], [228fb, 228fb], [22bf0, 22bf0], [2301e, 2301e],
    [23950, 23950], [23b47, 23b47], [24075, 24075], [245ec, 245ec],
    [24fba, 24fba], [255bc, 255bc], [25862, 25862], [25b50, 25b50],
    [25c20, 25c20], [25d86, 25d86], [25d8c, 25d8c], [261be, 261be],
    [262bc, 262bc], [266d7, 266d7], [26b6f, 26b6f], [26ced, 26ced],
    [270d2, 270d2], [27214, 27214], [27376, 27376], [274fb, 274fb],
    [2770a, 2770a], [27b5c, 27b5c], [280a0, 280a0], [2913d, 2913d],
    [29946, 29946], [29ca6, 29ca6], [29ce1, 29ce1], [29d10, 29d10],
    [2a21c, 2a21c]**/


    namespace {
    const static UnicodeSet::run_t __lv_Set_runs[] = {
    {Empty, 438}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 23},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 8}, {Mixed, 2},
    {Empty, 22}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 25}, {Mixed, 3}, {Empty, 19}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2884},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 64},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 77}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 131}, {Mixed, 1}, {Empty, 64}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 39},
    {Mixed, 1}, {Empty, 29423}};
    const static UnicodeSet::bitquad_t  __lv_Set_quads[] = {
    0x00004000, 0x00000020, 0x40000000, 0x04000000, 0x00040000, 0x00100000,
    0x40000000, 0x00000002, 0x00400000, 0x00000100, 0x00000800, 0x00000008,
    0x00000004, 0x00200000, 0x00800000, 0x00008000, 0x01000000, 0x00000002,
    0x20000001, 0x00000024, 0x00000004, 0x00001000, 0x00000800, 0x04004000,
    0x00000800, 0x00000020, 0x00000001, 0x00080000, 0x04400000, 0x00000100,
    0x00000001, 0x00008000, 0x00000400, 0x40000000, 0x00000100, 0x00000080,
    0x08000000, 0x00000080, 0x10000000, 0x00000008, 0x00002000, 0x00002000,
    0x00008000, 0x20000000, 0x00020000, 0x00800000, 0x00000004, 0x80000004,
    0x00000004, 0x04000000, 0x00004000, 0x40000000, 0x01000000, 0x00020000,
    0x01000000, 0x00020000, 0x00000002, 0x01000000, 0x00000002, 0x00040000,
    0x00000010, 0x00000004, 0x00002000, 0x00000004, 0x00008000, 0x10000000,
    0x80000000, 0x00000100, 0x00000400, 0x00000100, 0x10000000, 0x80000000,
    0x00004000, 0x00000020, 0x40000000, 0x04000000, 0x00040000, 0x00080000,
    0x08000000, 0x00010000, 0x40000000, 0x00010000, 0x00000080, 0x00200000,
    0x00001000, 0x04000000, 0x10000000, 0x00000004, 0x00010000, 0x00000001,
    0x00001040, 0x40000000, 0x10000000, 0x00800000, 0x00008000, 0x00002000,
    0x00040000, 0x00100000, 0x00400000, 0x08000000, 0x00000400, 0x10000000,
    0x00000001, 0x20000000, 0x00000040, 0x00000040, 0x00000002, 0x00010000,
    0x10000000};
    }

    const static UnicodeSet lv_Set{const_cast<UnicodeSet::run_t *>(__lv_Set_runs), 205, 0, const_cast<UnicodeSet::bitquad_t *>(__lv_Set_quads), 109, 0};

    /** Code Point Ranges for suo
    [36d6, 36d7], [3abd, 3abd], [3ba6, 3ba6], [40b9, 40b9], [4174, 4174],
    [4217, 4217], [441d, 441d], [44fe, 44fe], [450b, 450b], [459b, 459b],
    [4786, 4786], [47bd, 47bd], [48d4, 48d4], [4bef, 4bef], [4c83, 4c83],
    [4d40, 4d40], [4e9b, 4e9b], [509e, 509e], [5506, 5506], [55e6, 55e6],
    [55e9, 55e9], [5a11, 5a11], [5ac5, 5ac5], [60e2, 60e2], [6232, 6232],
    [6240, 6240], [6284, 6284], [6332, 6332], [644d, 644d], [669b, 669b],
    [686b, 686b], [68ad, 68ad], [6b72, 6b72], [6c99, 6c99], [6e91, 6e91],
    [6eb9, 6eb9], [72a7, 72a7], [737b, 737b], [7463, 7463], [7485, 7485],
    [7743, 7743], [7d22, 7d22], [7e12, 7e12], [7e2e, 7e2e], [7fa7, 7fa7],
    [838e, 838f], [8470, 8470], [84d1, 84d1], [8736, 8736], [8870, 8870],
    [8928, 8928], [8d96, 8d96], [9021, 9021], [9024, 9024], [9388, 9388],
    [938d, 938d], [9396, 9396], [970d, 970d], [9743, 9743], [9aff, 9aff],
    [9b66, 9b66], [9bbb, 9bbb], [20231, 20231], [202f2, 202f2],
    [205fc, 205fc], [2063a, 2063a], [2077f, 2077f], [207af, 207af],
    [20c57, 20c57], [21a61, 21a61], [21c73, 21c73], [2263f, 2263f],
    [226ad, 226ad], [22c61, 22c62], [22dfe, 22dfe], [234b9, 234b9],
    [23bcc, 23bcc], [24024, 24024], [24e34, 24e34], [24eab, 24eab],
    [25072, 25072], [2519d, 2519d], [251c7, 251c7], [2552d, 2552d],
    [25558, 25558], [25c3c, 25c3c], [2614a, 2614a], [267f1, 267f1],
    [26d6b, 26d6b], [273ab, 273ab], [273b3, 273b3], [276fb, 276fb],
    [27a00, 27a00], [27d2a, 27d2a], [27d32, 27d32], [284bd, 284bd],
    [28ec8, 28ec8], [28ee8, 28ee8], [292ae, 292ae], [292dd, 292dd],
    [29306, 29306], [29308, 29308], [29322, 29322], [2961d, 2961d],
    [2987e, 2987e], [29a88, 29a88], [29b9b, 29b9b], [29e73, 29e73],
    [2a32e, 2a32e], [2a34c, 2a34c], [2a354, 2a354], [2a35f, 2a35f],
    [2a368, 2a368]**/


    namespace {
    const static UnicodeSet::run_t __suo_Set_runs[] = {
    {Empty, 438}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 8}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 15},
    {Mixed, 2}, {Empty, 31}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 21}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2867}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 112}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 111}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 26}, {Mixed, 2}, {Empty, 54}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 59}, {Mixed, 1},
    {Empty, 80}, {Mixed, 2}, {Empty, 29}, {Mixed, 2}, {Empty, 1},
    {Mixed, 2}, {Empty, 22}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 37}, {Mixed, 3}, {Empty, 29412}};
    const static UnicodeSet::bitquad_t  __suo_Set_quads[] = {
    0x00c00000, 0x20000000, 0x00000040, 0x02000000, 0x00100000, 0x00800000,
    0x20000000, 0x40000000, 0x00000800, 0x08000000, 0x00000040, 0x20000000,
    0x00100000, 0x00008000, 0x00000008, 0x00000001, 0x08000000, 0x40000000,
    0x00000040, 0x00000240, 0x00020000, 0x00000020, 0x00000004, 0x00040000,
    0x00000001, 0x00000010, 0x00040000, 0x00002000, 0x08000000, 0x00000800,
    0x00002000, 0x00040000, 0x02000000, 0x00020000, 0x02000000, 0x00000080,
    0x08000000, 0x00000008, 0x00000020, 0x00000008, 0x00000004, 0x00040000,
    0x00004000, 0x00000080, 0x0000c000, 0x00010000, 0x00020000, 0x00400000,
    0x00010000, 0x00000100, 0x00400000, 0x00000012, 0x00402100, 0x00002000,
    0x00000008, 0x80000000, 0x00000040, 0x08000000, 0x00020000, 0x00040000,
    0x10000000, 0x04000000, 0x80000000, 0x00008000, 0x00800000, 0x00000002,
    0x00080000, 0x80000000, 0x00002000, 0x00000006, 0x40000000, 0x02000000,
    0x00001000, 0x00000010, 0x00100000, 0x00000800, 0x00040000, 0x20000000,
    0x00000080, 0x00002000, 0x01000000, 0x10000000, 0x00000400, 0x00020000,
    0x00000800, 0x00080800, 0x08000000, 0x00000001, 0x00040400, 0x20000000,
    0x00000100, 0x00000100, 0x00004000, 0x20000000, 0x00000140, 0x00000004,
    0x20000000, 0x40000000, 0x00000100, 0x08000000, 0x00080000, 0x00004000,
    0x80101000, 0x00000100};
    }

    const static UnicodeSet suo_Set{const_cast<UnicodeSet::run_t *>(__suo_Set_runs), 185, 0, const_cast<UnicodeSet::bitquad_t *>(__suo_Set_quads), 104, 0};

    /** Code Point Ranges for tong
    [36da, 36da], [3809, 3809], [383d, 383d], [38da, 38da], [38e0, 38e0],
    [390f, 390f], [3b94, 3b94], [3e17, 3e17], [3f27, 3f27], [3f3f, 3f3f],
    [4088, 4088], [419a, 419a], [41b9, 41b9], [4bb5, 4bb5], [4ccb, 4ccb],
    [4d00, 4d00], [4db1, 4db1], [4edd, 4edd], [4f5f, 4f5f], [4f97, 4f97],
    [5045, 5045], [50ee, 50ee], [52ed, 52ed], [540c, 540c], [54c3, 54c3],
    [55f5, 55f5], [56f2, 56f2], [578c, 578c], [5cc2, 5cc2], [5cd2, 5cd2],
    [5e9d, 5e9d], [5f64, 5f64], [606b, 606b], [607f, 607f], [615f, 615f],
    [6345, 6345], [66c8, 66c8], [6723, 6723], [6850, 6850], [6876, 6876],
    [6a0b, 6a0b], [6a66, 6a66], [6c03, 6c03], [6d1e, 6d1e], [6d75, 6d75],
    [6e69, 6e69], [6f7c, 6f7c], [70b5, 70b5], [70d4, 70d4], [71a5, 71a5],
    [721e, 721e], [729d, 729d], [72ea, 72ea], [735e, 735e], [75cc, 75cc],
    [75db, 75db], [772e, 772e], [77b3, 77b3], [783c, 783c], [7850, 7850],
    [7867, 7867], [79f1, 79f1], [7a5c, 7a5c], [7ae5, 7ae5], [7b52, 7b52],
    [7b69, 7b69], [7ca1, 7ca1], [7d67, 7d67], [7d71, 7d71], [825f, 825f],
    [833c, 833c], [84ea, 84ea], [8692, 8692], [873c, 873c], [87f2, 87f2],
    [8855, 8855], [8a77, 8a77], [8d68, 8d68], [901a, 901a], [916e, 916e],
    [91cd, 91cd], [9256, 9256], [9275, 9275], [9285, 9285], [9907, 9907],
    [9ba6, 9ba6], [9f15, 9f15], [20584, 20584], [21819, 21819],
    [2199c, 2199c], [2211f, 2211f], [22209, 22209], [223d5, 223d5],
    [224d8, 224d8], [22cdf, 22cdf], [2333e, 2333e], [23478, 23478],
    [23aaf, 23aaf], [23ee2, 23ee2], [24c47, 24c47], [24e84, 24e84],
    [25981, 25981], [25a4c, 25a4c], [25ac2, 25ac2], [25c86, 25c86],
    [263c6, 263c6], [2648d, 2648d], [26a34, 26a34], [271cc, 271cc],
    [2729a, 2729a], [272d2, 272d2], [272da, 272da], [2731d, 2731d],
    [27665, 27665], [27cc6, 27cc6], [27cff, 27cff], [2801c, 2801c],
    [28239, 28239], [286af, 286af], [28733, 28733], [2876f, 2876f],
    [2880c, 2880c], [29345, 29345], [29a45, 29a45], [29ee1, 29ee1],
    [2a02d, 2a02d], [2a322, 2a322]**/


    namespace {
    const static UnicodeSet::run_t __tong_Set_runs[] = {
    {Empty, 438}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 4},
    {Mixed, 3}, {Empty, 19}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 7}, {Mixed, 2},
    {Empty, 79}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 2},
    {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 3},
    {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 51},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 2867}, {Mixed, 1}, {Empty, 147}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 63},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 106},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 87}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 57}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 50}, {Mixed, 2}, {Empty, 24}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 89}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 29414}};
    const static UnicodeSet::bitquad_t  __tong_Set_quads[] = {
    0x04000000, 0x00000200, 0x20000000, 0x04000000, 0x00000001, 0x00008000,
    0x00100000, 0x00800000, 0x80000080, 0x00000100, 0x04000000, 0x02000000,
    0x00200000, 0x00000800, 0x00000001, 0x00020000, 0x20000000, 0x80000000,
    0x00800000, 0x00000020, 0x00004000, 0x00002000, 0x00001000, 0x00000008,
    0x00200000, 0x00040000, 0x00001000, 0x00040004, 0x20000000, 0x00000010,
    0x80000800, 0x80000000, 0x00000020, 0x00000100, 0x00000008, 0x00010000,
    0x00400000, 0x00000800, 0x00000040, 0x00000008, 0x40000000, 0x00200000,
    0x00000200, 0x10000000, 0x00200000, 0x00100000, 0x00000020, 0x40000000,
    0x20000000, 0x00000400, 0x40000000, 0x08001000, 0x00004000, 0x00080000,
    0x10000000, 0x00010000, 0x00000080, 0x00020000, 0x10000000, 0x00000020,
    0x00040000, 0x00000200, 0x00000002, 0x00020080, 0x80000000, 0x10000000,
    0x00000400, 0x00040000, 0x10000000, 0x00040000, 0x00200000, 0x00800000,
    0x00000100, 0x04000000, 0x00004000, 0x00002000, 0x00400000, 0x00200000,
    0x00000020, 0x00000080, 0x00000040, 0x00200000, 0x00000010, 0x02000000,
    0x10000000, 0x80000000, 0x00000200, 0x00200000, 0x01000000, 0x80000000,
    0x40000000, 0x01000000, 0x00008000, 0x00000004, 0x00000080, 0x00000010,
    0x00000002, 0x00001000, 0x00000004, 0x00000040, 0x00000040, 0x00002000,
    0x00100000, 0x00001000, 0x04000000, 0x04040000, 0x20000000, 0x00000020,
    0x00000040, 0x80000000, 0x10000000, 0x02000000, 0x00008000, 0x00080000,
    0x00008000, 0x00001000, 0x00000020, 0x00000020, 0x00000002, 0x00002000,
    0x00000004};
    }

    const static UnicodeSet tong_Set{const_cast<UnicodeSet::run_t *>(__tong_Set_runs), 219, 0, const_cast<UnicodeSet::bitquad_t *>(__tong_Set_quads), 121, 0};

    /** Code Point Ranges for yong
    [36da, 36da], [3709, 3709], [3758, 3758], [37b2, 37b2], [37fe, 37fe],
    [39b6, 39b6], [3d04, 3d04], [3d29, 3d29], [3db2, 3db2], [3dcf, 3dcf],
    [3efe, 3efe], [3f6b, 3f6b], [45e4, 45e4], [45f8, 45f8], [47bb, 47bb],
    [4f63, 4f63], [4fd1, 4fd1], [509b, 509b], [50ad, 50ad], [52c7, 52c7],
    [5581, 5581], [55c8, 55c8], [5670, 5670], [57c7, 57c7], [584e, 584e],
    [5889, 5889], [58c5, 58c5], [5ade, 5ade], [5bb9, 5bb9], [5d71, 5d71],
    [5eb8, 5eb8], [5ef1, 5ef1], [5f6e, 5f6e], [607f, 6080], [6142, 6142],
    [6175, 6175], [63d8, 63d8], [64c1, 64c1], [6810, 6810], [69e6, 69e6],
    [6c38, 6c38], [6cf3, 6cf3], [6d8c, 6d8c], [6e67, 6e67], [6efd, 6efd],
    [6fad, 6fad], [7049, 7049], [7528, 7528], [752c, 752c], [7670, 7670],
    [7867, 7867], [799c, 799c], [7b69, 7b69], [81c3, 81c3], [81fe, 81fe],
    [82da, 82da], [8579, 8579], [86f9, 86f9], [8a60, 8a60], [8e0a, 8e0a],
    [9047, 9047], [9095, 9095], [90fa, 90fa], [9118, 9118], [919f, 919f],
    [92bf, 92bf], [93de, 93de], [96cd, 96cd], [9852, 9852], [98ec, 98ec],
    [9954, 9954], [9bd2, 9bd2], [9c2b, 9c2b], [9c45, 9c45], [9ddb, 9ddb],
    [20cc0, 20cc0], [20df8, 20df8], [20e4d, 20e4d], [21d5c, 21d5c],
    [21da4, 21da4], [2200d, 2200d], [22893, 22893], [229f3, 229f3],
    [232ff, 232ff], [233c0, 233c0], [246d1, 246d1], [2504e, 2504e],
    [2547f, 2547f], [2595d, 2595d], [259f1, 259f1], [260fd, 260fd],
    [26918, 26918], [26a24, 26a24], [26a2c, 26a2c], [27587, 27587],
    [275f4, 275f4], [27647, 27647], [27778, 27778], [27ca4, 27ca4],
    [27d04, 27d04], [27d17, 27d17], [27eb8, 27eb8], [27ef9, 27ef9],
    [284e8, 284e8], [28902, 28902], [289a1, 289a1], [28d2d, 28d2d],
    [28dbd, 28dbd], [29184, 29184], [29353, 29353], [29514, 29514],
    [29733, 29733], [297c0, 297c0], [297f7, 297f7], [2991b, 2991b],
    [29acf, 29acf], [29b2e, 29b2e], [2a109, 2a109], [2a15f, 2a15f],
    [2a1db, 2a1db]**/


    namespace {
    const static UnicodeSet::run_t __yong_Set_runs[] = {
    {Empty, 438}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 26}, {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 16}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 5}, {Mixed, 2},
    {Empty, 18}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 50}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 11},
    {Mixed, 1}, {Empty, 2935}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 119}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 67}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 71}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 151}, {Mixed, 1}, {Empty, 75}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 64}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 90}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 29425}};
    const static UnicodeSet::bitquad_t  __yong_Set_quads[] = {
    0x04000000, 0x00000200, 0x01000000, 0x00040000, 0x40000000, 0x00400000,
    0x00000010, 0x00000200, 0x00040000, 0x00008000, 0x40000000, 0x00000800,
    0x01000010, 0x08000000, 0x00000008, 0x00020000, 0x08000000, 0x00002000,
    0x00000080, 0x00000002, 0x00000100, 0x00010000, 0x00000080, 0x00004000,
    0x00000200, 0x00000020, 0x40000000, 0x02000000, 0x00020000, 0x01000000,
    0x00020000, 0x00004000, 0x80000000, 0x00000001, 0x00000004, 0x00200000,
    0x01000000, 0x00000002, 0x00010000, 0x00000040, 0x01000000, 0x00080000,
    0x00001000, 0x00000080, 0x20000000, 0x00002000, 0x00000200, 0x00001100,
    0x00010000, 0x00000080, 0x10000000, 0x00000200, 0x00000008, 0x40000000,
    0x04000000, 0x02000000, 0x02000000, 0x00000001, 0x00000400, 0x00000080,
    0x00200000, 0x04000000, 0x01000000, 0x80000000, 0x80000000, 0x40000000,
    0x00002000, 0x00040000, 0x00001000, 0x00100000, 0x00040000, 0x00000800,
    0x00000020, 0x08000000, 0x00000001, 0x01000000, 0x00002000, 0x10000000,
    0x00000010, 0x00002000, 0x00080000, 0x00080000, 0x80000000, 0x00000001,
    0x00020000, 0x00004000, 0x80000000, 0x20000000, 0x00020000, 0x20000000,
    0x01000000, 0x00001010, 0x00000080, 0x00100000, 0x00000080, 0x01000000,
    0x00000010, 0x00800010, 0x01000000, 0x02000000, 0x00000100, 0x00000004,
    0x00000002, 0x00002000, 0x20000000, 0x00000010, 0x00080000, 0x00100000,
    0x00080000, 0x00000001, 0x00800000, 0x08000000, 0x00008000, 0x00004000,
    0x00000200, 0x80000000, 0x08000000};
    }

    const static UnicodeSet yong_Set{const_cast<UnicodeSet::run_t *>(__yong_Set_runs), 217, 0, const_cast<UnicodeSet::bitquad_t *>(__yong_Set_quads), 117, 0};

    /** Code Point Ranges for qiang
    [36e8, 36e8], [3a56, 3a56], [3c7f, 3c7f], [3cfe, 3cfe], [3fa4, 3fa4],
    [490c, 490c], [4d41, 4d41], [5275, 5275], [52e5, 52e5], [54d0, 54d0],
    [5534, 5534], [554c, 554c], [55c6, 55c6], [588f, 588f], [5b19, 5b19],
    [5c07, 5c07], [5d88, 5d88], [5ee7, 5ee7], [5f3a, 5f3a], [5f4a, 5f4a],
    [6176, 6176], [6215, 6215], [6227, 6227], [63a7, 63a7], [6436, 6436],
    [646a, 646a], [65a8, 65a8], [690c, 690c], [69cd, 69cd], [6aa3, 6aa3],
    [6f12, 6f12], [7197, 7197], [723f, 723f], [7244, 7244], [7246, 7246],
    [7472, 7472], [77fc, 77fc], [7b90, 7b90], [7bec, 7bec], [7e66, 7e66],
    [7f8c, 7f8c], [7f97, 7f97], [7fa5, 7fa5], [7fab, 7fab], [7fbb, 7fbb],
    [8154, 8154], [8262, 8262], [8503, 8503], [8594, 8594], [8620, 8620],
    [8723, 8723], [8941, 8941], [8b12, 8b12], [8deb, 8deb], [8e4c, 8e4c],
    [8e61, 8e61], [9306, 9306], [9397, 9397], [93d8, 93d8], [93f9, 93f9],
    [9dac, 9dac], [20f22, 20f22], [21825, 21825], [21b0e, 21b0e],
    [21e24, 21e24], [21e9b, 21e9b], [22235, 22235], [223c4, 223c4],
    [22429, 22429], [229c5, 229c5], [23add, 23add], [2457d, 2457d],
    [251c9, 251c9], [254cc, 254cc], [25d3b, 25d3b], [25d91, 25d91],
    [26be4, 26be4], [26cdf, 26cdf], [26de6, 26de6], [271de, 271de],
    [27591, 27591], [27b5a, 27b5a], [27c61, 27c61], [27f69, 27f69],
    [2811a, 2811a], [28d86, 28d86], [29695, 29695], [298fc, 298fc],
    [29a5d, 29a5d], [29f12, 29f12], [29fc4, 29fc4], [2a078, 2a078],
    [2a39e, 2a39e], [2a64e, 2a64e]**/


    namespace {
    const static UnicodeSet::run_t __qiang_Set_runs[] = {
    {Empty, 439}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 74}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 16}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 4}, {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 12},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 36}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 77}, {Mixed, 1}, {Empty, 2955},
    {Mixed, 1}, {Empty, 71}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 135}, {Mixed, 1}, {Empty, 84},
    {Mixed, 1}, {Empty, 98}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 66}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 114},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 99}, {Mixed, 1}, {Empty, 71}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 29389}};
    const static UnicodeSet::bitquad_t  __qiang_Set_quads[] = {
    0x00000100, 0x00400000, 0x80000000, 0x40000000, 0x00000010, 0x00001000,
    0x00000002, 0x00200000, 0x00000020, 0x00010000, 0x00100000, 0x00001000,
    0x00000040, 0x00008000, 0x02000000, 0x00000080, 0x00000100, 0x00000080,
    0x04000000, 0x00000400, 0x00400000, 0x00200000, 0x00000080, 0x00000080,
    0x00400000, 0x00000400, 0x00000100, 0x00001000, 0x00002000, 0x00000008,
    0x00040000, 0x00800000, 0x80000000, 0x00000050, 0x00040000, 0x10000000,
    0x00010000, 0x00001000, 0x00000040, 0x00801000, 0x08000820, 0x00100000,
    0x00000004, 0x00000008, 0x00100000, 0x00000001, 0x00000008, 0x00000002,
    0x00040000, 0x00000800, 0x00001000, 0x00000002, 0x00000040, 0x00800000,
    0x01000000, 0x02000000, 0x00001000, 0x00000004, 0x00000020, 0x00004000,
    0x00000010, 0x08000000, 0x00200000, 0x00000010, 0x00000200, 0x00000020,
    0x20000000, 0x20000000, 0x00000200, 0x00001000, 0x08000000, 0x00020000,
    0x00000010, 0x80000000, 0x00000040, 0x40000000, 0x00020000, 0x04000000,
    0x00000002, 0x00000200, 0x04000000, 0x00000040, 0x00200000, 0x10000000,
    0x20000000, 0x00040000, 0x00000010, 0x01000000, 0x40000000, 0x00004000};
    }

    const static UnicodeSet qiang_Set{const_cast<UnicodeSet::run_t *>(__qiang_Set_runs), 167, 0, const_cast<UnicodeSet::bitquad_t *>(__qiang_Set_quads), 90, 0};

    /** Code Point Ranges for zhuan
    [36ef, 36ef], [3f37, 3f37], [43d9, 43d9], [4871, 4871], [49d8, 49d8],
    [50b3, 50b3], [50ce, 50ce], [50dd, 50dd], [5278, 5278], [53c0, 53c0],
    [56c0, 56c0], [581f, 581f], [587c, 587c], [5ae5, 5ae5], [5b68, 5b68],
    [5c08, 5c08], [5dfd, 5dfd], [606e, 606e], [6476, 6476], [64b0, 64b0],
    [6c8c, 6c8c], [6e4d, 6e4d], [6f19, 6f19], [7077, 7077], [7451, 7451],
    [747c, 747c], [750e, 750e], [78da, 78da], [7af1, 7af1], [7bc6, 7bc6],
    [7bf9, 7bf9], [7bff, 7bff], [7c28, 7c28], [7c51, 7c51], [7e33, 7e33],
    [8011, 8011], [815e, 815e], [819e, 819e], [87e4, 87e4], [8948, 8948],
    [8aef, 8aef], [8b54, 8b54], [8cfa, 8cfa], [8f49, 8f49], [911f, 911f],
    [9853, 9853], [994c, 994c], [9c44, 9c44], [202a9, 202a9],
    [20a0e, 20a0e], [211f0, 211f0], [21880, 21880], [2191b, 2191b],
    [21a5a, 21a5a], [21b47, 21b47], [21c1e, 21c1e], [22098, 22098],
    [2240e, 2240e], [227ac, 227ac], [230b5, 230b5], [2354f, 2354f],
    [236a2, 236a2], [240a4, 240a4], [24a44, 24a44], [24aaa, 24aaa],
    [24bb3, 24bb3], [256e5, 256e5], [25adb, 25adb], [26046, 26046],
    [2612f, 2612f], [264dd, 264dd], [2674f, 2674f], [26806, 26806],
    [269f8, 269f8], [2708d, 2708d], [27db2, 27db2], [27e16, 27e16],
    [28df1, 28df1], [2950a, 2950a], [299dc, 299dc], [29ccf, 29ccf],
    [29edd, 29edd]**/


    namespace {
    const static UnicodeSet::run_t __zhuan_Set_runs[] = {
    {Empty, 439}, {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 54}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 30}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 14}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 50}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 2866}, {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 71}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 79}, {Mixed, 1}, {Empty, 76}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 89}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 52},
    {Mixed, 1}, {Empty, 104}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 126}, {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 29449}};
    const static UnicodeSet::bitquad_t  __zhuan_Set_quads[] = {
    0x00008000, 0x00800000, 0x02000000, 0x00020000, 0x01000000, 0x00080000,
    0x20004000, 0x01000000, 0x00000001, 0x00000001, 0x80000000, 0x10000000,
    0x00000020, 0x00000100, 0x00000100, 0x20000000, 0x00004000, 0x00400000,
    0x00010000, 0x00001000, 0x00002000, 0x02000000, 0x00800000, 0x00020000,
    0x10000000, 0x00004000, 0x04000000, 0x00020000, 0x00000040, 0x82000000,
    0x00000100, 0x00020000, 0x00080000, 0x00020000, 0x40000000, 0x40000000,
    0x00000010, 0x00000100, 0x00008000, 0x00100000, 0x04000000, 0x00000200,
    0x80000000, 0x00080000, 0x00001000, 0x00000010, 0x00000200, 0x00004000,
    0x00010000, 0x00000001, 0x08000000, 0x04000000, 0x00000080, 0x40000000,
    0x01000000, 0x00004000, 0x00001000, 0x00200000, 0x00008000, 0x00000004,
    0x00000010, 0x00000010, 0x00000400, 0x00080000, 0x00000020, 0x08000000,
    0x00000040, 0x00008000, 0x20000000, 0x00008000, 0x00000040, 0x01000000,
    0x00002000, 0x00040000, 0x00400000, 0x00020000, 0x00000400, 0x10000000,
    0x00008000, 0x20000000};
    }

    const static UnicodeSet zhuan_Set{const_cast<UnicodeSet::run_t *>(__zhuan_Set_runs), 153, 0, const_cast<UnicodeSet::bitquad_t *>(__zhuan_Set_quads), 80, 0};

    /** Code Point Ranges for tan
    [36f6, 36f6], [3724, 3724], [393e, 393e], [3a0f, 3a0f], [3adc, 3adc],
    [3ce9, 3ce9], [3d02, 3d02], [3d45, 3d45], [3d92, 3d92], [3dcb, 3dcb],
    [3f4e, 3f4e], [3f51, 3f51], [4021, 4021], [41b1, 41b1], [4261, 4261],
    [42a4, 42a4], [43d9, 43d9], [443a, 443a], [4459, 4459], [454a, 454a],
    [45ca, 45ca], [47a1, 47a1], [4994, 4994], [4f46, 4f46], [5013, 5013],
    [509d, 509d], [50cb, 50cb], [5103, 5103], [53f9, 53f9], [55ae, 55ae],
    [55ff, 55ff], [5606, 5606], [563d, 563e], [574d, 574d], [5766, 5766],
    [57ee, 57ee], [58c7, 58c7], [58dc, 58dc], [5a52, 5a52], [5f48, 5f48],
    [5fd0, 5fd0], [6039, 6039], [60d4, 60d4], [619b, 619b], [61b3, 61b3],
    [63a2, 63a2], [64a2, 64a3], [64f9, 64f9], [6524, 6524], [6619, 6619],
    [66c7, 66c7], [6983, 6983], [6a5d, 6a5d], [6a80, 6a80], [6b4e, 6b4e],
    [6bef, 6bef], [6c88, 6c88], [6de1, 6de1], [6e5b, 6e5b], [6e60, 6e60],
    [6f22, 6f22], [6f6c, 6f6d], [6fb9, 6fb9], [7058, 7058], [708e, 708e],
    [70ad, 70ad], [74ae, 74ae], [75d1, 75d1], [75f0, 75f0], [7649, 7649],
    [7671, 7671], [78b3, 78b3], [79aa, 79aa], [7dc2, 7dc2], [7e75, 7e75],
    [80c6, 80c6], [8214, 8215], [83fc, 83fc], [8541, 8541], [8548, 8548],
    [85eb, 85eb], [8892, 8892], [88e7, 88e7], [8962, 8962], [8983, 8983],
    [8ac7, 8ac7], [8b5a, 8b5a], [8b60, 8b60], [8c9a, 8c9a], [8caa, 8caa],
    [8ce7, 8ce7], [90ef, 90ef], [9188, 9188], [9193, 9193], [91b0, 91b0],
    [926d, 926d], [931f, 931f], [9843, 9843], [9924, 9924], [9de4, 9de4],
    [9eee, 9eee], [20af6, 20af6], [20eea, 20eea], [21144, 21144],
    [212a8, 212a8], [22140, 22140], [221e7, 221e7], [221f0, 221f0],
    [23057, 23057], [23794, 23794], [2388c, 2388c], [23d3d, 23d3d],
    [23d62, 23d62], [23e19, 23e19], [23f1a, 23f1a], [23f6f, 23f6f],
    [243a5, 243a5], [24414, 24414], [24eba, 24eba], [25a52, 25a52],
    [25c28, 25c28], [25e60, 25e60], [25f1f, 25f1f], [25f2e, 25f2e],
    [260d6, 260d6], [2632a, 2632a], [265e1, 265e1], [26647, 26647],
    [269cf, 269cf], [269f4, 269f4], [26a38, 26a38], [26e01, 26e01],
    [26f0e, 26f0e], [27087, 27087], [278c1, 278c1], [278f9, 278f9],
    [2795e, 2795e], [27aff, 27aff], [27c18, 27c18], [27d4a, 27d4a],
    [27e9f, 27e9f], [27f7c, 27f7c], [2809e, 2809e], [2814d, 2814d],
    [28778, 28778], [2884d, 2884d], [288d5, 288d5], [29470, 29470],
    [294a2, 294a2], [2983d, 2983d], [29844, 29844], [2985d, 2985d],
    [2991e, 2991e], [29aba, 29aba], [2a267, 2a267], [2a287, 2a287],
    [2a375, 2a375]**/


    namespace {
    const static UnicodeSet::run_t __tan_Set_runs[] = {
    {Empty, 439}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 16},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 8},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 15},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 31}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 17}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 8}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 2911}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 116}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 114}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 84}, {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 12}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 27}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 65}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 27}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 61}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 29412}};
    const static UnicodeSet::bitquad_t  __tan_Set_quads[] = {
    0x00400000, 0x00000010, 0x40000000, 0x00008000, 0x10000000, 0x00000200,
    0x00000004, 0x00000020, 0x00040000, 0x00000800, 0x00024000, 0x00000002,
    0x00020000, 0x00000002, 0x00000010, 0x02000000, 0x04000000, 0x02000000,
    0x00000400, 0x00000400, 0x00000002, 0x00100000, 0x00000040, 0x00080000,
    0x20000000, 0x00000800, 0x00000008, 0x02000000, 0x00004000, 0x80000000,
    0x00000040, 0x60000000, 0x00002000, 0x00000040, 0x00004000, 0x10000080,
    0x00040000, 0x00000100, 0x00010000, 0x02000000, 0x00100000, 0x08000000,
    0x00080000, 0x00000004, 0x0000000c, 0x02000000, 0x00000010, 0x02000000,
    0x00000080, 0x00000008, 0x20000000, 0x00000001, 0x00004000, 0x00008000,
    0x00000100, 0x00000002, 0x08000000, 0x00000001, 0x00000004, 0x00003000,
    0x02000000, 0x01000000, 0x00004000, 0x00002000, 0x00004000, 0x00020000,
    0x00010000, 0x00000200, 0x00020000, 0x00080000, 0x00000400, 0x00000004,
    0x00200000, 0x00000040, 0x00300000, 0x10000000, 0x00000102, 0x00000800,
    0x00040000, 0x00000080, 0x00000004, 0x00000008, 0x00000080, 0x04000000,
    0x00000001, 0x04000000, 0x00000400, 0x00000080, 0x00008000, 0x00080100,
    0x00010000, 0x00002000, 0x80000000, 0x00000008, 0x00000010, 0x00000010,
    0x00004000, 0x00400000, 0x00000400, 0x00000010, 0x00000100, 0x00000001,
    0x00010080, 0x00800000, 0x00100000, 0x00001000, 0x20000000, 0x00000004,
    0x02000000, 0x04000000, 0x00008000, 0x00000020, 0x00100000, 0x04000000,
    0x00040000, 0x00000100, 0x00000001, 0x80000000, 0x00004000, 0x00400000,
    0x00000400, 0x00000002, 0x00000080, 0x00008000, 0x00100000, 0x01000000,
    0x00000002, 0x00004000, 0x00000080, 0x00000002, 0x02000000, 0x40000000,
    0x80000000, 0x01000000, 0x00000400, 0x80000000, 0x10000000, 0x40000000,
    0x00002000, 0x01000000, 0x00002000, 0x00200000, 0x00010000, 0x00000004,
    0x20000000, 0x20000010, 0x40000000, 0x04000000, 0x00000080, 0x00000080,
    0x00200000};
    }

    const static UnicodeSet tan_Set{const_cast<UnicodeSet::run_t *>(__tan_Set_runs), 265, 0, const_cast<UnicodeSet::bitquad_t *>(__tan_Set_quads), 151, 0};

    /** Code Point Ranges for an
    [36fa, 36fa], [371d, 371d], [3784, 3784], [384b, 384b], [3ae8, 3ae8],
    [3b7a, 3b7a], [3e29, 3e29], [3f62, 3f62], [4002, 4002], [4141, 4141],
    [4156, 4156], [43a8, 43a8], [4719, 4719], [48bf, 48bf], [4903, 4903],
    [4936, 4936], [4b13, 4b13], [4b97, 4b97], [4be5, 4be5], [4f92, 4f92],
    [4ffa, 4ffa], [5111, 5111], [533c, 533c], [5382, 5382], [5388, 5388],
    [54b9, 54b9], [5535, 5535], [557d, 557d], [57b5, 57b5], [57be, 57be],
    [57ef, 57ef], [5813, 5813], [5a69, 5a69], [5a95, 5a95], [5b89, 5b89],
    [5c7d, 5c7d], [5cb8, 5cb8], [5cd6, 5cd6], [5e72, 5e72], [5e7f, 5e7f],
    [5eb5, 5eb5], [6309, 6309], [63de, 63de], [667b, 667b], [6697, 6697],
    [6848, 6849], [6c28, 6c28], [6d1d, 6d1d], [72b4, 72b4], [73b5, 73b5],
    [75f7, 75f7], [76d2, 76d2], [76e6, 76e6], [78aa, 78aa], [7f6f, 7f6f],
    [80fa, 80fa], [8164, 8164], [834c, 834c], [83f4, 83f4], [843b, 843b],
    [84ed, 84ed], [88fa, 88fa], [8af3, 8af3], [8c7b, 8c7b], [9043, 9043],
    [9257, 9257], [92a8, 92a8], [930c, 930c], [95c7, 95c7], [9670, 9670],
    [968c, 968c], [96f8, 96f8], [978d, 978d], [97fd, 97fd], [9807, 9807],
    [981e, 981e], [99a3, 99a3], [9b9f, 9b9f], [9d33, 9d33], [9d6a, 9d6a],
    [9eef, 9eef], [2026c, 2026c], [20a9a, 20a9a], [20c11, 20c11],
    [20f6a, 20f6a], [20fd1, 20fd1], [21391, 21391], [21a81, 21a81],
    [21a99, 21a99], [21bcf, 21bcf], [21e7c, 21e7c], [21f5c, 21f5c],
    [22c0d, 22c0d], [2319b, 2319b], [23696, 23696], [238da, 238da],
    [23d71, 23d71], [23f65, 23f65], [240f7, 240f7], [24701, 24701],
    [247bf, 247bf], [247c9, 247c9], [253ee, 253ee], [2598d, 2598d],
    [25cec, 25cec], [26ebd, 26ebd], [275ae, 275ae], [27a78, 27a78],
    [27ae5, 27ae5], [27ae7, 27ae7], [27b8d, 27b8d], [28c8a, 28c8a],
    [2915d, 2915d], [29234, 29234], [294e4, 294e4], [29b62, 29b62],
    [29e4e, 29e4e], [2a05f, 2a05f], [2a4a0, 2a4a0], [2a612, 2a612]**/


    namespace {
    const static UnicodeSet::run_t __an_Set_runs[] = {
    {Empty, 439}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 14}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 18}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 12}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 20}, {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 13}, {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 2843}, {Mixed, 1}, {Empty, 64}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 55}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 101}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 96}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 141},
    {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 135},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 29391}};
    const static UnicodeSet::bitquad_t  __an_Set_quads[] = {
    0x04000000, 0x20000000, 0x00000010, 0x00000800, 0x00000100, 0x04000000,
    0x00000200, 0x00000004, 0x00000004, 0x00400002, 0x00000100, 0x02000000,
    0x80000000, 0x00000008, 0x00400000, 0x00080000, 0x00800000, 0x00000020,
    0x00040000, 0x04000000, 0x00020000, 0x10000000, 0x00000104, 0x02000000,
    0x00200000, 0x20000000, 0x40200000, 0x00008000, 0x00080000, 0x00000200,
    0x00200000, 0x00000200, 0x20000000, 0x01000000, 0x00400000, 0x80040000,
    0x00200000, 0x00000200, 0x40000000, 0x08000000, 0x00800000, 0x00000300,
    0x00000100, 0x20000000, 0x00100000, 0x00200000, 0x00800000, 0x00040000,
    0x00000040, 0x00000400, 0x00008000, 0x04000000, 0x00000010, 0x00001000,
    0x00100000, 0x08000000, 0x00002000, 0x04000000, 0x00080000, 0x08000000,
    0x00000008, 0x00800000, 0x00000100, 0x00001000, 0x00000080, 0x00010000,
    0x00001000, 0x01000000, 0x00002000, 0x20000000, 0x40000080, 0x00000008,
    0x80000000, 0x00080000, 0x00000400, 0x00008000, 0x00001000, 0x04000000,
    0x00020000, 0x00000400, 0x00020000, 0x00020000, 0x02000002, 0x00008000,
    0x10000000, 0x10000000, 0x00002000, 0x08000000, 0x00400000, 0x04000000,
    0x00020000, 0x00000020, 0x00800000, 0x00000002, 0x80000000, 0x00000200,
    0x00004000, 0x00002000, 0x00001000, 0x20000000, 0x00004000, 0x01000000,
    0x000000a0, 0x00002000, 0x00000400, 0x20000000, 0x00100000, 0x00000010,
    0x00000004, 0x00004000, 0x80000000, 0x00000001, 0x00040000};
    }

    const static UnicodeSet an_Set{const_cast<UnicodeSet::run_t *>(__an_Set_runs), 207, 0, const_cast<UnicodeSet::bitquad_t *>(__an_Set_quads), 113, 0};

    /** Code Point Ranges for kua
    [36fb, 36fb], [3841, 3841], [44d9, 44d9], [4838, 4838], [499a, 499a],
    [49b1, 49b1], [4bde, 4bde], [4f89, 4f89], [54b5, 54b5], [57ae, 57ae],
    [5938, 5938], [59f1, 59f1], [6057, 6057], [630e, 630e], [6647, 6647],
    [6947, 6947], [7d53, 7d53], [80ef, 80ef], [83ef, 83ef], [8894, 8894],
    [8a87, 8a87], [8de8, 8de8], [9299, 9299], [9301, 9301], [985d, 985d],
    [9abb, 9abb], [9ac1, 9ac1], [201d7, 201d7], [211da, 211da],
    [21552, 21552], [215e2, 215e2], [215f8, 215f8], [21c7c, 21c7c],
    [22133, 22133], [224e2, 224e2], [253e4, 253e4], [25479, 25479],
    [26b83, 26b83], [280d6, 280d6], [2857a, 2857a], [28d67, 28d67],
    [29293, 29293]**/


    namespace {
    const static UnicodeSet::run_t __kua_Set_runs[] = {
    {Empty, 439}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 99},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 10}, {Mixed, 2},
    {Empty, 16}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 159}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 18}, {Mixed, 2},
    {Empty, 2871}, {Mixed, 1}, {Empty, 127}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 375},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 184}, {Mixed, 1},
    {Empty, 169}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 63},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 29547}};
    const static UnicodeSet::bitquad_t  __kua_Set_quads[] = {
    0x08000000, 0x00000002, 0x02000000, 0x01000000, 0x04000000, 0x00020000,
    0x40000000, 0x00000200, 0x00200000, 0x00004000, 0x01000000, 0x00020000,
    0x00800000, 0x00004000, 0x00000080, 0x00000080, 0x00080000, 0x00008000,
    0x00008000, 0x00100000, 0x00000080, 0x00000100, 0x02000000, 0x00000002,
    0x20000000, 0x08000000, 0x00000002, 0x00800000, 0x04000000, 0x00040000,
    0x01000004, 0x10000000, 0x00080000, 0x00000004, 0x00000010, 0x02000000,
    0x00000008, 0x00400000, 0x04000000, 0x00000080, 0x00080000};
    }

    const static UnicodeSet kua_Set{const_cast<UnicodeSet::run_t *>(__kua_Set_runs), 79, 0, const_cast<UnicodeSet::bitquad_t *>(__kua_Set_quads), 41, 0};

    /** Code Point Ranges for cha
    [36fc, 36fc], [3718, 3718], [3878, 3878], [3889, 3889], [3892, 3892],
    [38fe, 38fe], [391e, 391e], [3b91, 3b91], [3cbc, 3cbc], [3cd7, 3cd7],
    [405f, 405f], [40b3, 40b3], [414a, 414a], [44b2, 44b2], [44ed, 44ed],
    [4553, 4553], [46fd, 46fd], [47d5, 47d5], [4821, 4821], [4929, 4929],
    [4daa, 4daa], [4edb, 4edb], [4f98, 4f98], [505b, 505b], [5239, 5239],
    [53c9, 53c9], [55cf, 55cf], [5693, 5693], [571f, 571f], [579e, 579e],
    [59f9, 59f9], [5bdf, 5bdf], [5c8e, 5c8e], [5c94, 5c94], [5d56, 5d56],
    [5dee, 5dee], [6260, 6260], [6271, 6271], [6348, 6348], [6377, 6377],
    [63a5, 63a5], [63d2, 63d2], [643d, 643d], [6456, 6456], [659c, 659c],
    [6748, 6748], [67e5, 67e5], [688c, 688c], [6942, 6942], [69ce, 69ce],
    [6aab, 6aab], [6c4a, 6c4a], [7339, 7339], [7580, 7580], [78b4, 78b4],
    [79c5, 79c5], [7d01, 7d01], [809e, 809e], [81ff, 81ff], [8256, 8256],
    [8286, 8286], [82f4, 82f4], [832c, 832c], [8336, 8336], [8356, 8356],
    [837c, 837c], [8869, 8869], [8928, 8928], [8a0d, 8a0d], [8a67, 8a67],
    [8a6b, 8a6b], [8e45, 8e45], [91f5, 91f5], [924f, 924f], [929f, 929f],
    [9364, 9364], [9388, 9388], [9454, 9454], [976b, 976b], [9937, 9937],
    [2075e, 2075e], [2078a, 2078a], [20f79, 20f79], [212e8, 212e8],
    [2131a, 2131a], [21750, 21750], [21759, 21759], [21a00, 21a00],
    [21d4c, 21d4c], [22523, 22523], [22639, 22639], [228fc, 228fc],
    [22b45, 22b45], [230cd, 230cd], [23197, 23197], [2334f, 2334f],
    [23624, 23624], [2363b, 2363b], [23c71, 23c71], [2472b, 2472b],
    [2472f, 2472f], [247a0, 247a0], [24cc5, 24cc5], [24cf5, 24cf5],
    [24d7e, 24d7e], [24da0, 24da0], [250c0, 250c0], [25300, 25300],
    [25465, 25465], [25978, 25978], [25ae2, 25ae2], [26448, 26448],
    [26463, 26463], [266dd, 266dd], [26765, 26765], [26998, 26998],
    [2699c, 2699c], [269b1, 269b1], [26cd8, 26cd8], [27808, 27808],
    [27a6b, 27a6b], [27ad7, 27ad7], [27db5, 27db5], [28038, 28038],
    [280d3, 280d3], [28187, 28187], [28673, 28673], [28a68, 28a68],
    [28aba, 28aba], [28f11, 28f11], [2975f, 2975f], [297d4, 297d4],
    [29d33, 29d33], [2a442, 2a442], [2a468, 2a468], [2a4bc, 2a4bc],
    [2a63e, 2a63e]**/


    namespace {
    const static UnicodeSet::run_t __cha_Set_runs[] = {
    {Empty, 439}, {Mixed, 2}, {Empty, 10}, {Mixed, 2}, {Empty, 2},
    {Mixed, 2}, {Empty, 19}, {Mixed, 1}, {Empty, 8}, {Mixed, 2},
    {Empty, 27}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 39}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 2928}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 27}, {Mixed, 2}, {Empty, 33}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 85}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 40}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 74}, {Mixed, 2}, {Empty, 18}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 16}, {Mixed, 2}, {Empty, 24},
    {Mixed, 1}, {Empty, 89}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 56}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 29390}};
    const static UnicodeSet::bitquad_t  __cha_Set_quads[] = {
    0x10000000, 0x01000000, 0x01000000, 0x00040200, 0x40000000, 0x40000000,
    0x00020000, 0x10000000, 0x00800000, 0x80000000, 0x00080000, 0x00000400,
    0x00040000, 0x00002000, 0x00080000, 0x20000000, 0x00200000, 0x00000002,
    0x00000200, 0x00000400, 0x08000000, 0x01000000, 0x08000000, 0x02000000,
    0x00000200, 0x00008000, 0x00080000, 0x80000000, 0x40000000, 0x02000000,
    0x80000000, 0x00104000, 0x00400000, 0x00004000, 0x00020001, 0x00000100,
    0x00800000, 0x00000020, 0x00040000, 0x20000000, 0x00400000, 0x10000000,
    0x00000100, 0x00000020, 0x00001000, 0x00000004, 0x00004000, 0x00000800,
    0x00000400, 0x02000000, 0x00000001, 0x00100000, 0x00000020, 0x00000002,
    0x40000000, 0x80000000, 0x00400000, 0x00000040, 0x00100000, 0x00401000,
    0x00400000, 0x10000000, 0x00000200, 0x00000100, 0x00002000, 0x00000880,
    0x00000020, 0x00200000, 0x00008000, 0x80000000, 0x00000010, 0x00000100,
    0x00100000, 0x00000800, 0x00800000, 0x40000000, 0x00000400, 0x02000000,
    0x00000100, 0x04000000, 0x02010000, 0x00000001, 0x00001000, 0x00000008,
    0x02000000, 0x10000000, 0x00000020, 0x00002000, 0x00800000, 0x00008000,
    0x08000010, 0x00020000, 0x00008800, 0x00000001, 0x00000020, 0x00200000,
    0x40000000, 0x00000001, 0x00000001, 0x00000001, 0x00000020, 0x01000000,
    0x00000004, 0x00000100, 0x00000008, 0x20000000, 0x00000020, 0x11000000,
    0x00020000, 0x01000000, 0x00000100, 0x00000800, 0x00800000, 0x00200000,
    0x01000000, 0x00080000, 0x00000080, 0x00080000, 0x00000100, 0x04000000,
    0x00020000, 0x80000000, 0x00100000, 0x00080000, 0x00000004, 0x00000100,
    0x10000000, 0x40000000};
    }

    const static UnicodeSet cha_Set{const_cast<UnicodeSet::run_t *>(__cha_Set_runs), 227, 0, const_cast<UnicodeSet::bitquad_t *>(__cha_Set_quads), 128, 0};

    /** Code Point Ranges for sha
    [36fc, 36fc], [383a, 383a], [3b20, 3b20], [3c3c, 3c3c], [3c9a, 3c9a],
    [3d64, 3d64], [3e3a, 3e3a], [4209, 4209], [492c, 492c], [4b0a, 4b0a],
    [503d, 503d], [50bb, 50bb], [5239, 5239], [54c8, 54c8], [5526, 5526],
    [553c, 553c], [5551, 5551], [5565, 5565], [55a2, 55a2], [55c4, 55c4],
    [564e, 564e], [5e39, 5e39], [5ec8, 5ec8], [6332, 6332], [63a5, 63a5],
    [644b, 644b], [651d, 651d], [6749, 6749], [686c, 686c], [699d, 699d],
    [6b43, 6b43], [6b70, 6b70], [6bba, 6bba], [6c99, 6c99], [6fc8, 6fc8],
    [715e, 715e], [7300, 7300], [75e7, 75e7], [7802, 7802], [7870, 7870],
    [7b91, 7b91], [7c86, 7c86], [7d17, 7d17], [7fdc, 7fdc], [7fe3, 7fe3],
    [838e, 838e], [83e8, 83e8], [8410, 8410], [8531, 8531], [88df, 88df],
    [8cd2, 8cd2], [93a9, 93a9], [95af, 95af], [95b7, 95b7], [9705, 9705],
    [970e, 970e], [9b66, 9b66], [9bca, 9bca], [20112, 20112],
    [2037d, 2037d], [206ba, 206ba], [21ea7, 21ea7], [22151, 22151],
    [221d7, 221d7], [22523, 22523], [22a56, 22a56], [22d8c, 22d8c],
    [22f35, 22f35], [2325c, 2325c], [234c9, 234c9], [236f6, 236f6],
    [2387d, 2387d], [238ee, 238ee], [238fa, 238fa], [23c93, 23c93],
    [23ca1, 23ca1], [23da4, 23da4], [23ed1, 23ed1], [24341, 24341],
    [24463, 24463], [247c3, 247c3], [2520a, 2520a], [25be6, 25be6],
    [2601b, 2601b], [2652f, 26530], [26549, 26549], [26a7f, 26a7f],
    [26b49, 26b49], [26c75, 26c75], [26f9a, 26f9a], [272ca, 272ca],
    [273eb, 273eb], [276a8, 276a8], [27701, 27701], [27add, 27add],
    [27c8c, 27c8c], [27cdb, 27cdb], [27ef5, 27ef5], [285b7, 285b7],
    [28609, 28609], [28a8d, 28a8d], [292ae, 292ae], [29bab, 29bab],
    [29d6e, 29d6e], [2a105, 2a105], [2a32e, 2a32e]**/


    namespace {
    const static UnicodeSet::run_t __sha_Set_runs[] = {
    {Empty, 439}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 1}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 21},
    {Mixed, 2}, {Empty, 28}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2857}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 191}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 28}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 81}, {Mixed, 1}, {Empty, 78}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 40}, {Mixed, 2}, {Empty, 40},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 64}, {Mixed, 1},
    {Empty, 71}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 29414}};
    const static UnicodeSet::bitquad_t  __sha_Set_quads[] = {
    0x10000000, 0x04000000, 0x00000001, 0x10000000, 0x04000000, 0x00000010,
    0x04000000, 0x00000200, 0x00001000, 0x00000400, 0x20000000, 0x08000000,
    0x02000000, 0x00000100, 0x10000040, 0x00020000, 0x00000020, 0x00000004,
    0x00000010, 0x00004000, 0x02000000, 0x00000100, 0x00040000, 0x00000020,
    0x00000800, 0x20000000, 0x00000200, 0x00001000, 0x20000000, 0x00000008,
    0x00010000, 0x04000000, 0x02000000, 0x00000100, 0x40000000, 0x00000001,
    0x00000080, 0x00000004, 0x00010000, 0x00020000, 0x00000040, 0x00800000,
    0x10000000, 0x00000008, 0x00004000, 0x00000100, 0x00010000, 0x00020000,
    0x80000000, 0x00040000, 0x00000200, 0x00808000, 0x00004020, 0x00000040,
    0x00000400, 0x00040000, 0x20000000, 0x04000000, 0x00000080, 0x00020000,
    0x00800000, 0x00000008, 0x00400000, 0x00001000, 0x00200000, 0x10000000,
    0x00000200, 0x00400000, 0x20000000, 0x04004000, 0x00080000, 0x00000002,
    0x00000010, 0x00020000, 0x00000002, 0x00000008, 0x00000008, 0x00000400,
    0x00000040, 0x08000000, 0x00018000, 0x00000200, 0x80000000, 0x00000200,
    0x00200000, 0x04000000, 0x00000400, 0x00000800, 0x00000100, 0x00000002,
    0x20000000, 0x00001000, 0x08000000, 0x00200000, 0x00800000, 0x00000200,
    0x00002000, 0x00004000, 0x00000800, 0x00004000, 0x00000020, 0x00004000};
    }

    const static UnicodeSet sha_Set{const_cast<UnicodeSet::run_t *>(__sha_Set_runs), 189, 0, const_cast<UnicodeSet::bitquad_t *>(__sha_Set_quads), 102, 0};

    /** Code Point Ranges for lian
    [3703, 3703], [3715, 3715], [377a, 377a], [37c0, 37c0], [3858, 3858],
    [3981, 3981], [3a9d, 3a9d], [3bec, 3bec], [3c08, 3c08], [3d8c, 3d8c],
    [3f11, 3f11], [3fbe, 3fbe], [4060, 4060], [40db, 40db], [4182, 4182],
    [431e, 431e], [43c8, 43c8], [4b51, 4b51], [4ee4, 4ee4], [50c6, 50c6],
    [5286, 5286], [55f9, 55f9], [5652, 5652], [581c, 581c], [5969, 5969],
    [5aa1, 5aa1], [5afe, 5afe], [5b1a, 5b1a], [5b4c, 5b4c], [5e18, 5e18],
    [5ec9, 5ec9], [601c, 601c], [6190, 6190], [6200, 6200], [641b, 641b],
    [6459, 6459], [64bf, 64bf], [6523, 6523], [6582, 6582], [695d, 695d],
    [69cf, 69cf], [69e4, 69e4], [6b04, 6b04], [6b5b, 6b5b], [6bae, 6bae],
    [6d70, 6d70], [6e45, 6e45], [6e93, 6e93], [6f23, 6f23], [6fb0, 6fb0],
    [6fc2, 6fc2], [7032, 7032], [7149, 7149], [7191, 7191], [7453, 7453],
    [7489, 7489], [77b5, 77b5], [78cf, 78cf], [7a34, 7a34], [7c3e, 7c3e],
    [7df4, 7df4], [7e3a, 7e3a], [7e9e, 7e9e], [7fb7, 7fb8], [7ff4, 7ff4],
    [806f, 806f], [81a6, 81a6], [81c1, 81c1], [81c9, 81c9], [82d3, 82d3],
    [8430, 8430], [84ee, 84ee], [8595, 8595], [859f, 859f], [861e, 861e],
    [878a, 878a], [880a, 880a], [8933, 8933], [895d, 895d], [899d, 899d],
    [8b30, 8b30], [8b67, 8b67], [8e65, 8e65], [8f26, 8f26], [9023, 9023],
    [913b, 913b], [91b6, 91b6], [934a, 934a], [93c8, 93c8], [942e, 942e],
    [96f6, 96f6], [9b11, 9b11], [9c0a, 9c0a], [9c31, 9c31], [9c44, 9c44],
    [202d6, 202d6], [204b5, 204b5], [20528, 20528], [205f3, 205f3],
    [21195, 21195], [217e4, 217e4], [22267, 22267], [23003, 23003],
    [23748, 23748], [237b0, 237b0], [237fa, 237fa], [23fca, 23fca],
    [2447f, 2447f], [244a6, 244a6], [245db, 245db], [248c6, 248c6],
    [24b13, 24b13], [24e68, 24e68], [24f0f, 24f0f], [24fb2, 24fb2],
    [2559d, 2559d], [25ca5, 25ca5], [25f78, 25f78], [26186, 26186],
    [26516, 26516], [265be, 265be], [268f8, 268f8], [27374, 27374],
    [27416, 27416], [27859, 27859], [27874, 27874], [27e16, 27e16],
    [27e18, 27e18], [27f6b, 27f6b], [283b7, 283b7], [283e9, 283e9],
    [283f6, 283f6], [28b01, 28b01], [28f77, 28f77], [29121, 29121],
    [29799, 29799], [297c5, 297c5], [2a366, 2a366], [2a374, 2a374],
    [2a40b, 2a40b], [2a40d, 2a40d], [2a5b3, 2a5b3], [2a681, 2a681],
    [2a6d2, 2a6d2]**/


    namespace {
    const static UnicodeSet::run_t __lian_Set_runs[] = {
    {Empty, 440}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 11}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 7}, {Mixed, 3}, {Empty, 2867},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 83}, {Mixed, 1}, {Empty, 108}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 83},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 33}, {Mixed, 2},
    {Empty, 44}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 56}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 50},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 29385}};
    const static UnicodeSet::bitquad_t  __lian_Set_quads[] = {
    0x00200008, 0x04000000, 0x00000001, 0x01000000, 0x00000002, 0x20000000,
    0x00001000, 0x00000100, 0x00001000, 0x00020000, 0x40000000, 0x00000001,
    0x08000000, 0x00000004, 0x40000000, 0x00000100, 0x00020000, 0x00000010,
    0x00000040, 0x00000040, 0x02000000, 0x00040000, 0x10000000, 0x00000200,
    0x00000002, 0x40000000, 0x04000000, 0x00001000, 0x01000000, 0x00000200,
    0x10000000, 0x00010000, 0x00000001, 0x08000000, 0x02000000, 0x80000000,
    0x00000008, 0x00000004, 0x20000000, 0x00008000, 0x00000010, 0x00000010,
    0x08000000, 0x00004000, 0x00010000, 0x00000020, 0x00080000, 0x00000008,
    0x00010000, 0x00000004, 0x00040000, 0x00000200, 0x00020000, 0x00080000,
    0x00000200, 0x00200000, 0x00008000, 0x00100000, 0x40000000, 0x00100000,
    0x04000000, 0x40000000, 0x01800000, 0x00100000, 0x00008000, 0x00000040,
    0x00000202, 0x00080000, 0x00010000, 0x00004000, 0x80200000, 0x40000000,
    0x00000400, 0x00000400, 0x00080000, 0x20000000, 0x20000000, 0x00010000,
    0x00000080, 0x00000020, 0x00000040, 0x00000008, 0x08000000, 0x00400000,
    0x00000400, 0x00000100, 0x00004000, 0x00400000, 0x00020000, 0x00000400,
    0x00020000, 0x00000010, 0x00400000, 0x00200000, 0x00000100, 0x00080000,
    0x00200000, 0x00000010, 0x00000080, 0x00000008, 0x00000100, 0x00010000,
    0x04000000, 0x00000400, 0x80000000, 0x00000040, 0x08000000, 0x00000040,
    0x00080000, 0x00000100, 0x00008000, 0x00040000, 0x20000000, 0x00000020,
    0x01000000, 0x00000040, 0x00400000, 0x40000000, 0x01000000, 0x00100000,
    0x00400000, 0x02000000, 0x00100000, 0x01400000, 0x00000800, 0x00800000,
    0x00400200, 0x00000002, 0x00800000, 0x00000002, 0x02000000, 0x00000020,
    0x00100040, 0x00002800, 0x00080000, 0x00000002, 0x00040000};
    }

    const static UnicodeSet lian_Set{const_cast<UnicodeSet::run_t *>(__lian_Set_runs), 257, 0, const_cast<UnicodeSet::bitquad_t *>(__lian_Set_quads), 137, 0};

    /** Code Point Ranges for xun
    [3704, 3704], [3844, 3844], [3a1a, 3a1a], [3c2c, 3c2c], [3d4c, 3d4c],
    [3f66, 3f66], [400f, 400f], [42f8, 42f8], [45b2, 45b2], [45fc, 45fc],
    [4629, 4629], [4649, 4649], [481d, 481d], [4845, 4845], [4b40, 4b40],
    [4d6b, 4d6b], [4f9a, 4f9a], [5071, 5071], [52f3, 52f3], [5342, 5342],
    [54b0, 54b0], [5640, 5640], [565a, 565a], [5864, 5864], [58ce, 58ce],
    [595e, 595e], [59f0, 59f0], [5b6b, 5b6b], [5c0b, 5c0b], [5ccb, 5ccb],
    [5de1, 5de1], [5dfd, 5dfd], [5f87, 5f87], [5faa, 5faa], [6042, 6042],
    [609b, 609b], [613b, 613b], [63d7, 63d7], [648f, 648f], [6533, 6533],
    [65ec, 65ec], [66db, 66db], [6812, 6812], [68ad, 68ad], [6a33, 6a33],
    [6b89, 6b89], [6bbe, 6bbe], [6be5, 6be5], [6c5b, 6c5b], [6d12, 6d12],
    [6d35, 6d35], [6d5a, 6d5a], [6f6d, 6f6d], [6f6f, 6f6f], [6fec, 6fec],
    [7065, 7065], [7104, 7104], [7147, 7147], [718f, 718f], [71c2, 71c2],
    [71d6, 71d6], [7213, 7213], [72fb, 72fb], [736f, 736f], [73e3, 73e3],
    [7495, 7495], [7543, 7543], [7734, 7734], [77c4, 77c4], [7a04, 7a04],
    [7aa8, 7aa8], [7b4d, 7b4d], [7bd4, 7bd4], [7d03, 7d03], [7d62, 7d62],
    [7e81, 7e81], [81d0, 81d0], [8340, 8340], [8477, 8477], [8541, 8541],
    [8548, 8548], [85b0, 85b0], [87eb, 87eb], [87f3, 87f3], [8a0a, 8a0a],
    [8a13, 8a13], [8a62, 8a62], [8fc5, 8fc5], [8fff, 8fff], [9021, 9021],
    [9041, 9041], [905c, 905c], [90c7, 90c7], [9129, 9129], [91ba, 91ba],
    [9442, 9442], [946b, 946b], [9868, 9868], [99b4, 99b4], [99e8, 99e8],
    [9c4f, 9c4f], [9c58, 9c58], [9dbd, 9dbd], [202ab, 202ab],
    [20e40, 20e40], [2144e, 2144e], [21e95, 21e95], [21ffc, 21ffc],
    [223e4, 223e4], [23328, 23328], [235bc, 235bc], [23e6f, 23e6f],
    [240fa, 240fa], [246e7, 246e7], [247e4, 247e4], [24fdf, 24fdf],
    [25498, 25498], [25663, 25663], [25ccd, 25ccd], [25fa1, 25fa1],
    [26140, 26140], [26151, 26151], [26636, 26636], [26805, 26805],
    [26aef, 26aef], [26ce3, 26ce3], [27087, 27087], [2797f, 2797f],
    [27c23, 27c23], [27e29, 27e29], [27f9d, 27f9d], [27fa0, 27fa0],
    [27fa9, 27fa9], [28034, 28034], [28eae, 28eae], [28f14, 28f14],
    [292bb, 292bb], [295b0, 295b0], [29ab1, 29ab1], [29df0, 29df0],
    [29fa7, 29fa7], [2a020, 2a020], [2a03d, 2a03d], [2a1d1, 2a1d1]**/


    namespace {
    const static UnicodeSet::run_t __xun_Set_runs[] = {
    {Empty, 440}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 10},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 3}, {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 42}, {Mixed, 2}, {Empty, 1},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 20}, {Mixed, 2}, {Empty, 31}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 2855}, {Mixed, 1}, {Empty, 92},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 81}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 121},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 69}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 70}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 10},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 115}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 29425}};
    const static UnicodeSet::bitquad_t  __xun_Set_quads[] = {
    0x00000010, 0x00000010, 0x04000000, 0x00001000, 0x00001000, 0x00000040,
    0x00008000, 0x01000000, 0x00040000, 0x10000000, 0x00000200, 0x00000200,
    0x20000000, 0x00000020, 0x00000001, 0x00000800, 0x04000000, 0x00020000,
    0x00080000, 0x00000004, 0x00010000, 0x04000001, 0x00000010, 0x00004000,
    0x40000000, 0x00010000, 0x00000800, 0x00000800, 0x00000800, 0x20000002,
    0x00000080, 0x00000400, 0x00000004, 0x08000000, 0x08000000, 0x00800000,
    0x00008000, 0x00080000, 0x00001000, 0x08000000, 0x00040000, 0x00002000,
    0x00080000, 0x00000200, 0x40000000, 0x00000020, 0x08000000, 0x00040000,
    0x00200000, 0x04000000, 0x0000a000, 0x00001000, 0x00000020, 0x00000010,
    0x00000080, 0x00008000, 0x00400004, 0x00080000, 0x08000000, 0x00008000,
    0x00000008, 0x00200000, 0x00000008, 0x00100000, 0x00000010, 0x00000010,
    0x00000100, 0x00002000, 0x00100000, 0x00000008, 0x00000004, 0x00000002,
    0x00010000, 0x00000001, 0x00800000, 0x00000102, 0x00010000, 0x00080800,
    0x00080400, 0x00000004, 0x00000020, 0x80000000, 0x00000002, 0x10000002,
    0x00000080, 0x00000200, 0x04000000, 0x00000004, 0x00000800, 0x00000100,
    0x00100000, 0x00000100, 0x01008000, 0x20000000, 0x00000800, 0x00000001,
    0x00004000, 0x00200000, 0x10000000, 0x00000010, 0x00000100, 0x10000000,
    0x00008000, 0x04000000, 0x00000080, 0x00000010, 0x80000000, 0x01000000,
    0x00000008, 0x00002000, 0x00000002, 0x00020001, 0x00400000, 0x00000020,
    0x00008000, 0x00000008, 0x00000080, 0x80000000, 0x00000008, 0x00000200,
    0x20000000, 0x00000201, 0x00100000, 0x00004000, 0x00100000, 0x08000000,
    0x00010000, 0x00020000, 0x00010000, 0x00000080, 0x20000001, 0x00020000};
    }

    const static UnicodeSet xun_Set{const_cast<UnicodeSet::run_t *>(__xun_Set_runs), 247, 0, const_cast<UnicodeSet::bitquad_t *>(__xun_Set_quads), 132, 0};

    /** Code Point Ranges for mi
    [3706, 3706], [3737, 3737], [3827, 3827], [38c6, 38c6], [395d, 395d],
    [3a62, 3a62], [3ad8, 3ad8], [3cf4, 3cf4], [3d35, 3d35], [4047, 4047],
    [423c, 423c], [423f, 423f], [42b3, 42b3], [42db, 42db], [430f, 4310],
    [4358, 4358], [4573, 4573], [4577, 4577], [4591, 4591], [45b9, 45b9],
    [4909, 4909], [490d, 490d], [4978, 4978], [4b67, 4b67], [4bad, 4bad],
    [4c4a, 4c4a], [5196, 5196], [519e, 519e], [51aa, 51aa], [5298, 5298],
    [54aa, 54aa], [5627, 5627], [5853, 5853], [5b4a, 5b4a], [5b93, 5b93],
    [5bc6, 5bc6], [5cda, 5cda], [5e4e, 5e4e], [5e66, 5e66], [5e7a, 5e7a],
    [5f2d, 5f2d], [5f4c, 5f4c], [6202, 6202], [6469, 6469], [6475, 6475],
    [64df, 64df], [6520, 6520], [6549, 6549], [6993, 6993], [6ab7, 6ab7],
    [6c68, 6c68], [6c95, 6c95], [6ccc, 6ccc], [6d23, 6d23], [6e33, 6e33],
    [6e9f, 6e9f], [6ef5, 6ef5], [6f1e, 6f1e], [6fd4, 6fd4], [6fd7, 6fd7],
    [7030, 7030], [7056, 7056], [7190, 7190], [7222, 7222], [723e, 723e],
    [736e, 736e], [737c, 737c], [74d5, 74d5], [772b, 772b], [772f, 772f],
    [773d, 773d], [7787, 7787], [77b4, 77b4], [7955, 7955], [79b0, 79b0],
    [79d8, 79d8], [7a48, 7a48], [7c1a, 7c1a], [7c4b, 7c4b], [7c73, 7c73],
    [7cdc, 7cdc], [7cf8, 7cf8], [7e3b, 7e3b], [7f8b, 7f8b], [8112, 8112],
    [82fe, 82fe], [845e, 845e], [84be, 84be], [84c2, 84c2], [851d, 851d],
    [8524, 8524], [863c, 863c], [871c, 871c], [8993, 8993], [899b, 899b],
    [8b0e, 8b0e], [8b10, 8b10], [8f9f, 8f9f], [8ff7, 8ff7], [919a, 919a],
    [91be, 91be], [92a4, 92a4], [9456, 9456], [9761, 9761], [9e0d, 9e0d],
    [9e8b, 9e8b], [9e9b, 9e9b], [9f0f, 9f0f], [207a7, 207a7],
    [20d78, 20d78], [21123, 21123], [211d2, 211d2], [212ad, 212ad],
    [214ed, 214ed], [21b0d, 21b0d], [21cbc, 21cbc], [21fb1, 21fb1],
    [221af, 221af], [221f2, 221f2], [2263a, 2263a], [2279e, 2279e],
    [22c6e, 22c6e], [234d4, 234d4], [239f2, 239f2], [246ec, 246ec],
    [25051, 25051], [25158, 25158], [251c6, 251c6], [251ce, 251ce],
    [25215, 25215], [25274, 25274], [2527f, 2527f], [25396, 25396],
    [257aa, 257aa], [25980, 25980], [259e7, 259e7], [25b6b, 25b6b],
    [25d68, 25d68], [25e44, 25e44], [25e6b, 25e6b], [25ed2, 25ed2],
    [25f70, 25f70], [25feb, 25feb], [26110, 26110], [265ac, 265ac],
    [265d5, 265d5], [2679f, 2679f], [267c2, 267c2], [268e5, 268e5],
    [26e21, 26e21], [2740e, 2740e], [27575, 27575], [2781f, 2781f],
    [27c7b, 27c7b], [27d6c, 27d6c], [27da1, 27da1], [27de6, 27de6],
    [27f0a, 27f0a], [27f68, 27f68], [281fb, 281fb], [284b2, 284b2],
    [2888e, 2888e], [288ef, 288ef], [288fe, 288fe], [28dec, 28dec],
    [29036, 29036], [29522, 29522], [29781, 29781], [29787, 29787],
    [29e39, 29e39], [2a03f, 2a03f], [2a16e, 2a16e], [2a2d7, 2a2d7],
    [2a2e2, 2a2e2], [2a394, 2a394], [2a397, 2a397], [2a478, 2a478],
    [2a484, 2a484], [2a4ec, 2a4ec], [2a548, 2a548]**/


    namespace {
    const static UnicodeSet::run_t __mi_Set_runs[] = {
    {Empty, 440}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16},
    {Mixed, 3}, {Empty, 26}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 41}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 5}, {Mixed, 2},
    {Empty, 21}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 33}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 9},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 2},
    {Empty, 9}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 52}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2884},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 103}, {Mixed, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 36}, {Mixed, 2}, {Empty, 13}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 29397}};
    const static UnicodeSet::bitquad_t  __mi_Set_quads[] = {
    0x00000040, 0x00800000, 0x00000080, 0x00000040, 0x20000000, 0x00000004,
    0x01000000, 0x00100000, 0x00200000, 0x00000080, 0x90000000, 0x00080000,
    0x08000000, 0x00018000, 0x01000000, 0x00880000, 0x00020000, 0x02000000,
    0x00002200, 0x01000000, 0x00000080, 0x00002000, 0x00000400, 0x40400000,
    0x00000400, 0x01000000, 0x00000400, 0x00000080, 0x00080000, 0x00000400,
    0x00080000, 0x00000040, 0x04000000, 0x00004000, 0x04000040, 0x00002000,
    0x00001000, 0x00000004, 0x00200200, 0x80000000, 0x00000001, 0x00000200,
    0x00080000, 0x00800000, 0x00000100, 0x00200000, 0x00001000, 0x00000008,
    0x00080000, 0x80000000, 0x00200000, 0x40000000, 0x00900000, 0x00010000,
    0x00400000, 0x00010000, 0x40000004, 0x10004000, 0x00200000, 0x20008800,
    0x00000080, 0x00100000, 0x00200000, 0x00010000, 0x01000000, 0x00000100,
    0x04000000, 0x00000800, 0x00080000, 0x10000000, 0x01000000, 0x08000000,
    0x00000800, 0x00040000, 0x40000000, 0x40000000, 0x40000000, 0x00000004,
    0x20000000, 0x00000010, 0x10000000, 0x10000000, 0x08080000, 0x00014000,
    0x80000000, 0x00800000, 0x04000000, 0x40000000, 0x00000010, 0x00400000,
    0x00000002, 0x00002000, 0x08000800, 0x00008000, 0x00000080, 0x01000000,
    0x00000008, 0x00040000, 0x00002000, 0x00002000, 0x00002000, 0x10000000,
    0x00020000, 0x00008000, 0x00040000, 0x04000000, 0x40000000, 0x00004000,
    0x00100000, 0x00040000, 0x00001000, 0x00020000, 0x01000000, 0x00004040,
    0x00200000, 0x80100000, 0x00400000, 0x00000400, 0x00000001, 0x00000080,
    0x00000800, 0x00000100, 0x00000010, 0x00000800, 0x00040000, 0x00010000,
    0x00000800, 0x00010000, 0x00001000, 0x00200000, 0x80000000, 0x00000004,
    0x00000020, 0x00000002, 0x00004000, 0x00200000, 0x80000000, 0x08000000,
    0x00001000, 0x00000002, 0x00000040, 0x00000400, 0x00000100, 0x08000000,
    0x00040000, 0x00004000, 0x40008000, 0x00001000, 0x00400000, 0x00000004,
    0x00000082, 0x02000000, 0x80000000, 0x00004000, 0x00800000, 0x00000004,
    0x00900000, 0x01000000, 0x00000010, 0x00001000, 0x00000100};
    }

    const static UnicodeSet mi_Set{const_cast<UnicodeSet::run_t *>(__mi_Set_runs), 279, 0, const_cast<UnicodeSet::bitquad_t *>(__mi_Set_quads), 161, 0};

    /** Code Point Ranges for nou
    [370c, 370c], [3cf6, 3cf6], [4a32, 4a32], [5542, 5542], [5b2c, 5b2c],
    [6419, 6419], [64e9, 64e9], [6abd, 6abd], [7373, 7373], [7fba, 7fba],
    [8028, 8028], [8b68, 8b68], [8b73, 8b73], [9392, 9392], [20cb4, 20cb4],
    [21766, 21766], [21a3b, 21a3b], [21b7e, 21b7e], [22255, 22255],
    [2225a, 2225a], [23ed6, 23ed6], [247e6, 247e6], [2502b, 2502b],
    [270a6, 270a6], [270e8, 270e8], [27158, 27158], [2919f, 2919f],
    [29494, 29494], [2a2fa, 2a2fa]**/


    namespace {
    const static UnicodeSet::run_t __nou_Set_runs[] = {
    {Empty, 440}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 105},
    {Mixed, 1}, {Empty, 88}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 70}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 97}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 89}, {Mixed, 1}, {Empty, 64},
    {Mixed, 1}, {Empty, 3016}, {Mixed, 1}, {Empty, 85}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 227}, {Mixed, 1}, {Empty, 72}, {Mixed, 1},
    {Empty, 65}, {Mixed, 1}, {Empty, 259}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 257}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 114}, {Mixed, 1}, {Empty, 29416}};
    const static UnicodeSet::bitquad_t  __nou_Set_quads[] = {
    0x00001000, 0x00400000, 0x00040000, 0x00000004, 0x00001000, 0x02000000,
    0x00000200, 0x20000000, 0x00080000, 0x04000000, 0x00000100, 0x00080100,
    0x00040000, 0x00100000, 0x00000040, 0x08000000, 0x40000000, 0x04200000,
    0x00400000, 0x00000040, 0x00000800, 0x00000040, 0x00000100, 0x01000000,
    0x80000000, 0x00100000, 0x04000000};
    }

    const static UnicodeSet nou_Set{const_cast<UnicodeSet::run_t *>(__nou_Set_runs), 55, 0, const_cast<UnicodeSet::bitquad_t *>(__nou_Set_quads), 27, 0};

    /** Code Point Ranges for kou
    [370c, 370c], [3e38, 3e38], [4071, 4071], [434d, 434d], [4f5d, 4f5d],
    [5233, 5233], [527e, 527e], [52b6, 52b6], [5340, 5340], [53e3, 53e3],
    [53e9, 53e9], [5ad7, 5ad7], [5bc7, 5bc7], [5f40, 5f40], [5f44, 5f44],
    [6010, 6010], [6263, 6263], [630e, 630e], [6473, 6473], [6542, 6542],
    [6bc6, 6bc6], [6e9d, 6e9d], [7717, 7717], [7789, 7789], [7798, 7798],
    [7ad8, 7ad8], [7b58, 7b58], [82a4, 82a4], [8320, 8320], [91e6, 91e6],
    [93c2, 93c2], [9dc7, 9dc7], [21806, 21806], [21bf7, 21bf7],
    [22081, 22081], [22120, 22120], [226ab, 226ab], [227ed, 227ed],
    [22f03, 22f03], [230bb, 230bb], [23ece, 23ece], [23fdf, 23fdf],
    [24618, 24618], [252a7, 252a7], [25c83, 25c83], [26b05, 26b05],
    [26d0e, 26d0e], [27963, 27963], [2866b, 2866b], [28974, 28974],
    [29020, 29020], [2a13a, 2a13a], [2a1c4, 2a1c4]**/


    namespace {
    const static UnicodeSet::run_t __kou_Set_runs[] = {
    {Empty, 440}, {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 95}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 58}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 117},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 79}, {Mixed, 1},
    {Empty, 3025}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 112}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 49},
    {Mixed, 1}, {Empty, 100}, {Mixed, 1}, {Empty, 78}, {Mixed, 1},
    {Empty, 115}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 98},
    {Mixed, 1}, {Empty, 103}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 135}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 29425}};
    const static UnicodeSet::bitquad_t  __kou_Set_quads[] = {
    0x00001000, 0x01000000, 0x00020000, 0x00002000, 0x20000000, 0x00080000,
    0x40000000, 0x00400000, 0x00000001, 0x00000208, 0x00800000, 0x00000080,
    0x00000011, 0x00010000, 0x00000008, 0x00004000, 0x00080000, 0x00000004,
    0x00000040, 0x20000000, 0x00800000, 0x01000200, 0x01000000, 0x01000000,
    0x00000010, 0x00000001, 0x00000040, 0x00000004, 0x00000080, 0x00000040,
    0x00800000, 0x00000002, 0x00000001, 0x00000800, 0x00002000, 0x00000008,
    0x08000000, 0x00004000, 0x80000000, 0x01000000, 0x00000080, 0x00000008,
    0x00000020, 0x00004000, 0x00000008, 0x00000800, 0x00100000, 0x00000001,
    0x04000000, 0x00000010};
    }

    const static UnicodeSet kou_Set{const_cast<UnicodeSet::run_t *>(__kou_Set_runs), 101, 0, const_cast<UnicodeSet::bitquad_t *>(__kou_Set_quads), 50, 0};

    /** Code Point Ranges for tang
    [370d, 370d], [3ca5, 3ca5], [3f12, 3f12], [3f3a, 3f3a], [3fe9, 3fe9],
    [416f, 416f], [424e, 424e], [4305, 4305], [454b, 454b], [47b6, 47b6],
    [4800, 4800], [48d8, 48d8], [49dc, 49dc], [5018, 5018], [5052, 5052],
    [508f, 508f], [513b, 513b], [528f, 528f], [5510, 5510], [5621, 5621],
    [5802, 5802], [5858, 5858], [5d63, 5d63], [5e11, 5e11], [60dd, 60dd],
    [6113, 6113], [6203, 6203], [642a, 642a], [6465, 6465], [64f4, 64f4],
    [6529, 6529], [66ed, 66ed], [68e0, 68e0], [69b6, 69b6], [6a18, 6a18],
    [6a56, 6a56], [6b13, 6b13], [6dcc, 6dcc], [6e6f, 6e6f], [6e8f, 6e8f],
    [6f1f, 6f1f], [6f21, 6f21], [717b, 717b], [71d9, 71d9], [7223, 7223],
    [746d, 746d], [77d8, 77d8], [78c4, 78c4], [799f, 799f], [7bd6, 7bd6],
    [7c1c, 7c1c], [7cc3, 7cc3], [7cd6, 7cd6], [7fb0, 7fb0], [8025, 8025],
    [8185, 8185], [819b, 819b], [84ce, 84ce], [8569, 8569], [859a, 859a],
    [876a, 876a], [8797, 8797], [87b3, 87b3], [8d6f, 8d6f], [8d9f, 8d9f],
    [8e3c, 8e3c], [8e5a, 8e5a], [8eba, 8eba], [903f, 903f], [910c, 910c],
    [91a3, 91a3], [9395, 9395], [93dc, 93dc], [940b, 940b], [943a, 943a],
    [9482, 9482], [95b6, 95b6], [95db, 95db], [95e3, 95e3], [969a, 969a],
    [97ba, 97ba], [9933, 9933], [9939, 9939], [9db6, 9db6], [9ee8, 9ee8],
    [9f1e, 9f1e], [205f6, 205f6], [20883, 20883], [20e54, 20e54],
    [21fd3, 21fd3], [22d33, 22d33], [22eff, 22eff], [233b2, 233b2],
    [2365f, 2365f], [246ab, 246ab], [2482f, 2482f], [24f89, 24f89],
    [252e1, 252e1], [26a80, 26a80], [26cdd, 26cdd], [27c75, 27c75],
    [28189, 28189], [28271, 28271], [28329, 28329], [28374, 28374],
    [2838b, 2838b], [28396, 28396], [28c97, 28c97], [28d88, 28d88],
    [2961c, 2961c], [29941, 29941], [29e76, 29e76], [2a579, 2a579]**/


    namespace {
    const static UnicodeSet::run_t __tang_Set_runs[] = {
    {Empty, 440}, {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 18},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 17}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 14}, {Mixed, 3}, {Empty, 45}, {Mixed, 2}, {Empty, 4},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 9}, {Mixed, 2},
    {Empty, 2870}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 139}, {Mixed, 1}, {Empty, 106}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 130}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 58}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 188},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 124}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 71}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 67}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 29396}};
    const static UnicodeSet::bitquad_t  __tang_Set_quads[] = {
    0x00002000, 0x00000020, 0x00040000, 0x04000000, 0x00000200, 0x00008000,
    0x00004000, 0x00000020, 0x00000800, 0x00400000, 0x00000001, 0x01000000,
    0x10000000, 0x01000000, 0x00040000, 0x00008000, 0x08000000, 0x00008000,
    0x00010000, 0x00000002, 0x00000004, 0x01000000, 0x00000008, 0x00020000,
    0x20000000, 0x00080000, 0x00000008, 0x00000400, 0x00000020, 0x00100000,
    0x00000200, 0x00002000, 0x00000001, 0x00400000, 0x01000000, 0x00400000,
    0x00080000, 0x00001000, 0x00008000, 0x00008000, 0x80000000, 0x00000002,
    0x08000000, 0x02000000, 0x00000008, 0x00002000, 0x01000000, 0x00000010,
    0x80000000, 0x00400000, 0x10000000, 0x00400008, 0x00010000, 0x00000020,
    0x08000020, 0x00004000, 0x00000200, 0x04000000, 0x00000400, 0x00800000,
    0x00080000, 0x00008000, 0x80000000, 0x10000000, 0x04000000, 0x04000000,
    0x80000000, 0x00001000, 0x00000008, 0x00200000, 0x10000000, 0x00000800,
    0x04000000, 0x00000004, 0x00400000, 0x08000000, 0x00000008, 0x04000000,
    0x04000000, 0x02080000, 0x00400000, 0x00000100, 0x40000000, 0x00400000,
    0x00000008, 0x00100000, 0x00080000, 0x00080000, 0x80000000, 0x00040000,
    0x80000000, 0x00000800, 0x00008000, 0x00000200, 0x00000002, 0x00000001,
    0x20000000, 0x00200000, 0x00000200, 0x00020000, 0x00000200, 0x00100000,
    0x00400800, 0x00800000, 0x00000100, 0x10000000, 0x00000002, 0x00400000,
    0x02000000};
    }

    const static UnicodeSet tang_Set{const_cast<UnicodeSet::run_t *>(__tang_Set_runs), 193, 0, const_cast<UnicodeSet::bitquad_t *>(__tang_Set_quads), 109, 0};

    /** Code Point Ranges for cao
    [3716, 3716], [3be5, 3be5], [3ff7, 3ff7], [411a, 411a], [43ad, 43ad],
    [43c6, 43c6], [442c, 442c], [50ae, 50ae], [5608, 5608], [5c6e, 5c6e],
    [5d86, 5d86], [613a, 613a], [6145, 6145], [6152, 6152], [6165, 6165],
    [61c6, 61c6], [64cd, 64cd], [66f9, 66f9], [69fd, 69fd], [6f15, 6f15],
    [6fa1, 6fa1], [7cd9, 7cd9], [808f, 808f], [825a, 825a], [8278, 8278],
    [8349, 8349], [84f8, 84f8], [87ac, 87ac], [893f, 893f], [8959, 8959],
    [9020, 9020], [9135, 9135], [93ea, 93ea], [9430, 9430], [9a32, 9a32],
    [9f1c, 9f1c], [2000a, 2000a], [20e4a, 20e4a], [21ba6, 21ba6],
    [23205, 23205], [2327f, 2327f], [24495, 24495], [24850, 24850],
    [24d65, 24d65], [25c8d, 25c8d], [262ff, 262ff], [2839d, 2839d],
    [29784, 29784], [29ae5, 29ae5]**/


    namespace {
    const static UnicodeSet::run_t __cao_Set_runs[] = {
    {Empty, 440}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 20}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 99}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 50}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 28},
    {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 104}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 11}, {Mixed, 2}, {Empty, 54}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 2823},
    {Mixed, 1}, {Empty, 113}, {Mixed, 1}, {Empty, 106}, {Mixed, 1},
    {Empty, 178}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 144},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 120}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 260},
    {Mixed, 1}, {Empty, 159}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 29480}};
    const static UnicodeSet::bitquad_t  __cao_Set_quads[] = {
    0x00400000, 0x00000020, 0x00800000, 0x04000000, 0x00002000, 0x00000040,
    0x00001000, 0x00004000, 0x00000100, 0x00004000, 0x00000040, 0x04000000,
    0x00040020, 0x00000020, 0x00000040, 0x00002000, 0x02000000, 0x20000000,
    0x00200000, 0x00000002, 0x02000000, 0x00008000, 0x04000000, 0x01000000,
    0x00000200, 0x01000000, 0x00001000, 0x80000000, 0x02000000, 0x00000001,
    0x00200000, 0x00000400, 0x00010000, 0x00040000, 0x10000000, 0x00000400,
    0x00000400, 0x00000040, 0x00000020, 0x80000000, 0x00200000, 0x00010000,
    0x00000020, 0x00002000, 0x80000000, 0x20000000, 0x00000010, 0x00000020};
    }

    const static UnicodeSet cao_Set{const_cast<UnicodeSet::run_t *>(__cao_Set_runs), 87, 0, const_cast<UnicodeSet::bitquad_t *>(__cao_Set_quads), 48, 0};

    /** Code Point Ranges for can
    [3717, 3717], [371e, 371e], [38d3, 38d3], [3947, 3947], [3a3b, 3a3b],
    [3f69, 3f69], [3fca, 3fca], [4254, 4254], [437c, 437c], [43fc, 43fc],
    [4641, 4641], [46f9, 46f9], [4773, 4773], [47c3, 47c3], [48df, 48df],
    [4c57, 4c57], [4cfb, 4cfb], [50aa, 50aa], [53c3, 53c3], [55b0, 55b0],
    [5607, 5607], [5646, 5646], [56cb, 56cb], [5b20, 5b20], [5b71, 5b71],
    [5d7e, 5d7e], [6158, 6159], [61af, 61af], [6214, 6214], [6472, 6472],
    [647b, 647b], [6701, 6701], [6b98, 6b98], [6dfa, 6dfa], [6faf, 6faf],
    [71e6, 71e6], [74a8, 74a8], [7a47, 7a47], [7bf8, 7bf8], [7cb2, 7cb2],
    [7e3f, 7e3f], [8592, 8592], [8695, 8695], [8836, 8836], [8b32, 8b32],
    [8e54, 8e54], [93d2, 93d2], [98e1, 98e1], [98f1, 98f1], [9910, 9910],
    [9a42, 9a42], [9c3a, 9c3a], [9ef2, 9ef2], [2080b, 2080b],
    [20861, 20861], [20aed, 20aed], [211ae, 211ae], [216dd, 216dd],
    [21856, 21856], [229b8, 229b8], [229ee, 229ee], [22f83, 22f83],
    [239bc, 239bc], [23da1, 23da1], [23eec, 23eec], [24152, 24152],
    [250a5, 250a5], [25829, 25829], [258bd, 258bd], [25e5b, 25e5b],
    [26a9c, 26a9c], [26aab, 26aab], [26e90, 26e90], [27140, 27140],
    [274e9, 274e9], [28154, 28154], [287b7, 287b7], [28cb1, 28cb1],
    [29027, 29027], [2923b, 2923c], [296f3, 296f3], [29756, 29756],
    [29780, 29780], [297d2, 297d2], [29bde, 29bde], [2a1b6, 2a1b6]**/


    namespace {
    const static UnicodeSet::run_t __can_Set_runs[] = {
    {Empty, 440}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 40},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 2888}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 138},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 80}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 122}, {Mixed, 1},
    {Empty, 59}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 97}, {Mixed, 2}, {Empty, 30}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 98},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 29426}};
    const static UnicodeSet::bitquad_t  __can_Set_quads[] = {
    0x40800000, 0x00080000, 0x00000080, 0x08000000, 0x00000200, 0x00000400,
    0x00100000, 0x10000000, 0x10000000, 0x00000002, 0x02000000, 0x00080000,
    0x00000008, 0x80000000, 0x00800000, 0x08000000, 0x00000400, 0x00000008,
    0x00010000, 0x00000080, 0x00000040, 0x00000800, 0x00000001, 0x00020000,
    0x40000000, 0x03000000, 0x00008000, 0x00100000, 0x08040000, 0x00000002,
    0x01000000, 0x04000000, 0x00008000, 0x00000040, 0x00000100, 0x00000080,
    0x01000000, 0x00040000, 0x80000000, 0x00040000, 0x00200000, 0x00400000,
    0x00040000, 0x00100000, 0x00040000, 0x00020002, 0x00010000, 0x00000004,
    0x04000000, 0x00040000, 0x00000800, 0x00000002, 0x00002000, 0x00004000,
    0x20000000, 0x00400000, 0x01000000, 0x00004000, 0x00000008, 0x10000000,
    0x00000002, 0x00001000, 0x00040000, 0x00000020, 0x00000200, 0x20000000,
    0x08000000, 0x10000000, 0x00000800, 0x00010000, 0x00000001, 0x00000200,
    0x00100000, 0x00800000, 0x00020000, 0x00000080, 0x18000000, 0x00080000,
    0x00400000, 0x00000001, 0x00040000, 0x40000000, 0x00400000};
    }

    const static UnicodeSet can_Set{const_cast<UnicodeSet::run_t *>(__can_Set_runs), 163, 0, const_cast<UnicodeSet::bitquad_t *>(__can_Set_quads), 83, 0};

    /** Code Point Ranges for sen
    [3717, 3717], [50aa, 50aa], [647b, 647b], [68ee, 68ee], [69ee, 69ee],
    [6d12, 6d12], [6ef2, 6ef2], [8942, 8942], [237f9, 237f9],
    [27085, 27085], [2954c, 2954c]**/


    namespace {
    const static UnicodeSet::run_t __sen_Set_runs[] = {
    {Empty, 440}, {Mixed, 1}, {Empty, 204}, {Mixed, 1}, {Empty, 157},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 210},
    {Mixed, 1}, {Empty, 3444}, {Mixed, 1}, {Empty, 452}, {Mixed, 1},
    {Empty, 293}, {Mixed, 1}, {Empty, 29525}};
    const static UnicodeSet::bitquad_t  __sen_Set_quads[] = {
    0x00800000, 0x00000400, 0x08000000, 0x00004000, 0x00004000, 0x00040000,
    0x00040000, 0x00000004, 0x02000000, 0x00000020, 0x00001000};
    }

    const static UnicodeSet sen_Set{const_cast<UnicodeSet::run_t *>(__sen_Set_runs), 23, 0, const_cast<UnicodeSet::bitquad_t *>(__sen_Set_quads), 11, 0};

    /** Code Point Ranges for nian
    [3724, 3724], [378b, 378b], [3b9f, 3b9f], [3cbd, 3cbd], [49d4, 49d4],
    [4b2f, 4b2f], [4d34, 4d34], [5538, 5538], [57dd, 57dd], [59e9, 59e9],
    [5e74, 5e74], [5eff, 5eff], [5ff5, 5ff5], [62c8, 62c8], [6375, 6375],
    [637b, 637b], [649a, 649a], [6506, 6506], [6990, 6990], [6d8a, 6d8a],
    [6df0, 6df0], [6e93, 6e93], [75c6, 75c6], [78be, 78be], [79e5, 79e5],
    [7c10, 7c10], [7c98, 7c98], [824c, 824c], [852b, 852b], [8d81, 8d81],
    [8dc8, 8dc8], [8e4d, 8e4d], [8e68, 8e68], [8e8e, 8e8e], [8f26, 8f26],
    [8f3e, 8f3e], [9b8e, 9b8e], [9ecf, 9ecf], [2055f, 2055f],
    [205cb, 205cb], [208c7, 208c7], [20afa, 20afa], [20b0b, 20b0b],
    [2175f, 2175f], [21c2b, 21c2b], [23394, 23394], [2340f, 2340f],
    [24065, 24065], [24f7f, 24f7f], [25b98, 25b98], [25eb4, 25eb4],
    [26047, 26047], [26b41, 26b41], [26dd9, 26dd9], [27e5e, 27e5e],
    [28000, 28000], [281cd, 281cd], [282da, 282da], [283db, 283db],
    [286b6, 286b6], [288af, 288af], [28d1e, 28d1e], [28e31, 28e31],
    [29244, 29244], [292ab, 292ab], [29f74, 29f74], [2a407, 2a407],
    [2a46e, 2a46e]**/


    namespace {
    const static UnicodeSet::run_t __nian_Set_runs[] = {
    {Empty, 441}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 104}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 63},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 66}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 4}, {Mixed, 1},
    {Empty, 98}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 2867},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 16}, {Mixed, 2}, {Empty, 97}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 186}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 98}, {Mixed, 1}, {Empty, 119}, {Mixed, 1}, {Empty, 96},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 87}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 131},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 101}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 29404}};
    const static UnicodeSet::bitquad_t  __nian_Set_quads[] = {
    0x00000010, 0x00000800, 0x80000000, 0x20000000, 0x00100000, 0x00008000,
    0x00100000, 0x01000000, 0x20000000, 0x00000200, 0x00100000, 0x80000000,
    0x00200000, 0x00000100, 0x08200000, 0x04000000, 0x00000040, 0x00010000,
    0x00000400, 0x00010000, 0x00080000, 0x00000040, 0x40000000, 0x00000020,
    0x00010000, 0x01000000, 0x00001000, 0x00000800, 0x00000002, 0x00000100,
    0x00002000, 0x00000100, 0x00004000, 0x40000040, 0x00004000, 0x00008000,
    0x80000000, 0x00000800, 0x00000080, 0x04000000, 0x00000800, 0x80000000,
    0x00000800, 0x00100000, 0x00008000, 0x00000020, 0x80000000, 0x01000000,
    0x00100000, 0x00000080, 0x00000002, 0x02000000, 0x40000000, 0x00000001,
    0x00002000, 0x04000000, 0x08000000, 0x00400000, 0x00008000, 0x40000000,
    0x00020000, 0x00000010, 0x00000800, 0x00100000, 0x00000080, 0x00004000};
    }

    const static UnicodeSet nian_Set{const_cast<UnicodeSet::run_t *>(__nian_Set_runs), 127, 0, const_cast<UnicodeSet::bitquad_t *>(__nian_Set_quads), 66, 0};

    /** Code Point Ranges for mai
    [3725, 3725], [399f, 399f], [4072, 4072], [4715, 4715], [4a2b, 4a2b],
    [4bae, 4bae], [4f45, 4f45], [52f1, 52f1], [54aa, 54aa], [54e9, 54e9],
    [562a, 562a], [57cb, 57cb], [6d3e, 6d3e], [8109, 8109], [8552, 8552],
    [85b6, 85b6], [8c8d, 8c8d], [8cb7, 8cb7], [8ce3, 8ce3], [9081, 9081],
    [9721, 9722], [973e, 973e], [9df6, 9df6], [9ea5, 9ea5], [20fc6, 20fc6],
    [2283c, 2283c], [251ef, 251ef], [2531a, 2531a], [263e2, 263e2],
    [2667b, 2667b], [266a1, 266a1], [27c58, 27c58], [28922, 28922],
    [29217, 29217], [2928d, 2928d], [29343, 29343], [2a133, 2a133],
    [2a347, 2a347], [2a4aa, 2a4aa]**/


    namespace {
    const static UnicodeSet::run_t __mai_Set_runs[] = {
    {Empty, 441}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 170}, {Mixed, 1},
    {Empty, 158}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 54}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 53},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2952}, {Mixed, 1},
    {Empty, 194}, {Mixed, 1}, {Empty, 333}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 134}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 172}, {Mixed, 1}, {Empty, 102},
    {Mixed, 1}, {Empty, 70}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 110}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 29402}};
    const static UnicodeSet::bitquad_t  __mai_Set_quads[] = {
    0x00000020, 0x80000000, 0x00040000, 0x00200000, 0x00000800, 0x00004000,
    0x00000020, 0x00020000, 0x00000400, 0x00000200, 0x00000400, 0x00000800,
    0x40000000, 0x00000200, 0x00040000, 0x00400000, 0x00002000, 0x00800000,
    0x00000008, 0x00000002, 0x40000006, 0x00400000, 0x00000020, 0x00000040,
    0x10000000, 0x00008000, 0x04000000, 0x00000004, 0x08000000, 0x00000002,
    0x01000000, 0x00000004, 0x00800000, 0x00002000, 0x00000008, 0x00080000,
    0x00000080, 0x00000400};
    }

    const static UnicodeSet mai_Set{const_cast<UnicodeSet::run_t *>(__mai_Set_runs), 75, 0, const_cast<UnicodeSet::bitquad_t *>(__mai_Set_quads), 38, 0};

    /** Code Point Ranges for nai
    [3728, 3728], [3b8f, 3b8f], [3ca1, 3ca1], [3d0e, 3d0e], [3f8d, 3f8d],
    [4372, 4372], [4bee, 4bee], [4e43, 4e43], [4f74, 4f74], [5037, 5037],
    [54ea, 54ea], [5948, 5948], [5976, 5976], [59b3, 59b3], [5b2d, 5b2d],
    [5b7b, 5b7b], [5efc, 5efc], [639c, 639c], [6431, 6431], [6468, 6468],
    [67f0, 67f0], [6c16, 6c16], [6e3f, 6e3f], [718b, 718b], [7593, 7593],
    [800f, 8010], [80fd, 80fd], [8149, 8149], [827f, 827f], [8418, 8418],
    [879a, 879a], [8926, 8926], [8ffa, 8ffa], [91e2, 91e2], [933c, 933c],
    [9f10, 9f10], [209df, 209df], [209e4, 209e4], [217ab, 217ab],
    [21a35, 21a35], [21b99, 21b99], [22253, 22253], [23258, 23258],
    [23ba6, 23ba6], [25117, 25117], [25243, 25243], [264ce, 264ce],
    [26539, 26539], [26838, 26838], [26cd0, 26cd0], [26d85, 26d85],
    [283a1, 283a1], [29e5f, 29e5f], [2a31e, 2a31e]**/


    namespace {
    const static UnicodeSet::run_t __nai_Set_runs[] = {
    {Empty, 441}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 34}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 83}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 53},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 94}, {Mixed, 1}, {Empty, 2901}, {Mixed, 2}, {Empty, 109},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 127}, {Mixed, 1}, {Empty, 74},
    {Mixed, 1}, {Empty, 170}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 147}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 176}, {Mixed, 1}, {Empty, 212}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 29415}};
    const static UnicodeSet::bitquad_t  __nai_Set_quads[] = {
    0x00000100, 0x00008000, 0x00000002, 0x00004000, 0x00002000, 0x00040000,
    0x00004000, 0x00000008, 0x00100000, 0x00800000, 0x00000400, 0x00000100,
    0x00400000, 0x00080000, 0x00002000, 0x08000000, 0x10000000, 0x10000000,
    0x00020000, 0x00000100, 0x00010000, 0x00400000, 0x80000000, 0x00000800,
    0x00080000, 0x00018000, 0x20000000, 0x00000200, 0x80000000, 0x01000000,
    0x04000000, 0x00000040, 0x04000000, 0x00000004, 0x10000000, 0x00010000,
    0x80000000, 0x00000010, 0x00000800, 0x00200000, 0x02000000, 0x00080000,
    0x01000000, 0x00000040, 0x00800000, 0x00000008, 0x00004000, 0x02000000,
    0x01000000, 0x00010000, 0x00000020, 0x00000002, 0x80000000, 0x40000000};
    }

    const static UnicodeSet nai_Set{const_cast<UnicodeSet::run_t *>(__nai_Set_runs), 105, 0, const_cast<UnicodeSet::bitquad_t *>(__nai_Set_quads), 54, 0};

    /** Code Point Ranges for yue
    [3730, 3730], [3b26, 3b26], [3c1b, 3c1b], [3e4a, 3e4a], [4195, 4195],
    [41a2, 41a2], [42d0, 42d0], [42e4, 42e4], [4583, 4583], [47d1, 47d1],
    [47e0, 47e0], [482f, 482f], [48b2, 48b2], [4943, 4943], [4db3, 4db3],
    [5216, 5216], [54fe, 54fe], [5666, 5666], [56dd, 56dd], [5757, 5757],
    [5981, 5981], [599c, 599c], [5b33, 5b33], [5c84, 5c84], [5cb3, 5cb3],
    [5dbd, 5dbd], [60a6, 60a6], [6209, 6209], [625a, 625a], [6288, 6288],
    [6373, 6373], [64fd, 64fd], [66f0, 66f1], [6708, 6708], [6782, 6782],
    [6a02, 6a02], [6a3e, 6a3e], [6adf, 6adf], [6c4b, 6c4b], [7039, 7039],
    [7106, 7106], [720d, 720d], [721a, 721a], [73a5, 73a5], [77c6, 77c6],
    [77f1, 77f1], [793f, 793f], [7bb9, 7bb9], [7c46, 7c46], [7c65, 7c65],
    [7c70, 7c70], [7ca4, 7ca4], [7d04, 7d04], [81d2, 81d2], [8625, 8625],
    [868e, 868f], [8715, 8715], [8816, 8816], [8aac, 8aac], [8d8a, 8d8a],
    [8daf, 8daf], [8dc0, 8dc0], [8e8d, 8e8d], [8e92, 8e92], [8ecf, 8ecf],
    [9205, 9205], [925e, 925e], [92ed, 92ed], [9460, 9460], [9470, 9470],
    [95b2, 95b2], [9afa, 9afa], [9e11, 9e11], [9e19, 9e19], [9ee6, 9ee6],
    [9fa0, 9fa0], [203c3, 203c3], [20520, 20520], [20a32, 20a32],
    [20a49, 20a49], [20ab6, 20ab6], [20bf2, 20bf2], [20fb2, 20fb2],
    [20fcb, 20fcb], [211a6, 211a6], [211bd, 211bd], [216df, 216df],
    [21855, 21855], [2205e, 2205e], [229b0, 229b0], [22bf5, 22bf5],
    [22f94, 22f94], [23317, 23317], [233b1, 233b1], [2340b, 2340b],
    [23930, 23930], [2398f, 2398f], [23a21, 23a21], [23eee, 23eee],
    [24453, 24453], [244dd, 244dd], [2519f, 2519f], [25a61, 25a61],
    [25e18, 25e18], [262e9, 262e9], [26639, 26639], [266a2, 266a2],
    [268dc, 268dc], [26915, 26915], [27032, 27032], [2715a, 2715a],
    [271d3, 271d3], [2754b, 2754b], [2792f, 2792f], [2793d, 2793d],
    [27a04, 27a04], [27be1, 27be1], [27e4a, 27e4a], [28051, 28051],
    [2820b, 2820b], [282b8, 282b8], [2848b, 2848b], [28644, 28644],
    [28cd5, 28cd5], [28d43, 28d43], [28df2, 28df2], [28fc1, 28fc1],
    [2906f, 2906f], [29399, 29399], [294e5, 294e5], [29688, 29688],
    [2970c, 2970c], [29c6a, 29c6a], [29c72, 29c72], [29fe0, 29fe0],
    [2a051, 2a051], [2a4a5, 2a4a5], [2a633, 2a633]**/


    namespace {
    const static UnicodeSet::run_t __yue_Set_runs[] = {
    {Empty, 441}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 25}, {Mixed, 2},
    {Empty, 8}, {Mixed, 2}, {Empty, 20}, {Mixed, 1}, {Empty, 17},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 7},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 32}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 22}, {Mixed, 3}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2848},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 39}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 29}, {Mixed, 2},
    {Empty, 14}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 63}, {Mixed, 1}, {Empty, 74}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 101}, {Mixed, 1}, {Empty, 70}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 51}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 29390}};
    const static UnicodeSet::bitquad_t  __yue_Set_quads[] = {
    0x00010000, 0x00000040, 0x08000000, 0x00000400, 0x00200000, 0x00000004,
    0x00010000, 0x00000010, 0x00000008, 0x00020000, 0x00000001, 0x00008000,
    0x00040000, 0x00000008, 0x00080000, 0x00400000, 0x40000000, 0x00000040,
    0x20000000, 0x00800000, 0x10000002, 0x00080000, 0x00000010, 0x00080000,
    0x20000000, 0x00000040, 0x00000200, 0x04000000, 0x00000100, 0x00080000,
    0x20000000, 0x00030000, 0x00000100, 0x00000004, 0x00000004, 0x40000000,
    0x80000000, 0x00000800, 0x02000000, 0x00000040, 0x04002000, 0x00000020,
    0x00000040, 0x00020000, 0x80000000, 0x02000000, 0x00000040, 0x00010020,
    0x00000010, 0x00000010, 0x00040000, 0x00000020, 0x0000c000, 0x00200000,
    0x00400000, 0x00001000, 0x00000400, 0x00008000, 0x00000001, 0x00042000,
    0x00008000, 0x00000020, 0x40000000, 0x00002000, 0x00010001, 0x00040000,
    0x04000000, 0x02020000, 0x00000040, 0x00000001, 0x00000008, 0x00000001,
    0x00040000, 0x00000200, 0x00400000, 0x00040000, 0x00040000, 0x00000800,
    0x20000040, 0x80000000, 0x00200000, 0x40000000, 0x00010000, 0x00200000,
    0x00100000, 0x00800000, 0x00020000, 0x00000800, 0x00010000, 0x00008000,
    0x00000002, 0x00004000, 0x00080000, 0x20000000, 0x80000000, 0x00000002,
    0x01000000, 0x00000200, 0x02000000, 0x00000004, 0x10000000, 0x00200000,
    0x00040000, 0x04000000, 0x00080000, 0x00000800, 0x20008000, 0x00000010,
    0x00000002, 0x00000400, 0x00020000, 0x00000800, 0x01000000, 0x00000800,
    0x00000010, 0x00200000, 0x00000008, 0x00040000, 0x00000002, 0x00008000,
    0x02000000, 0x00000020, 0x00000100, 0x00001000, 0x00040400, 0x00000001,
    0x00020000, 0x00000020, 0x00080000};
    }

    const static UnicodeSet yue_Set{const_cast<UnicodeSet::run_t *>(__yue_Set_runs), 235, 0, const_cast<UnicodeSet::bitquad_t *>(__yue_Set_quads), 129, 0};

    /** Code Point Ranges for huai
    [3733, 3733], [3822, 3822], [40f6, 40f6], [422d, 422d], [4f6a, 4f6a],
    [5283, 5283], [54b6, 54b6], [559f, 559f], [5733, 5733], [574f, 574f],
    [576f, 576f], [58de, 58de], [5f8a, 5f8a], [6000, 6000], [61f7, 61f7],
    [69d0, 69d0], [6af0, 6af0], [6dee, 6dee], [7024, 7024], [8032, 8032],
    [8639, 8639], [863e, 863e], [8922, 8922], [8931, 8931], [8e1d, 8e1d],
    [237c9, 237c9], [23a79, 23a79], [23e0e, 23e0e], [24704, 24704],
    [263e8, 263e8], [269ec, 269ec], [27c73, 27c73], [29303, 29303],
    [297ee, 297ee], [2a289, 2a289]**/


    namespace {
    const static UnicodeSet::run_t __huai_Set_runs[] = {
    {Empty, 441}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 69},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 105}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 12}, {Mixed, 3}, {Empty, 10}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 127},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 3405}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 71}, {Mixed, 1},
    {Empty, 230}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 147},
    {Mixed, 1}, {Empty, 180}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 84}, {Mixed, 1}, {Empty, 29419}};
    const static UnicodeSet::bitquad_t  __huai_Set_quads[] = {
    0x00080000, 0x00000004, 0x00400000, 0x00002000, 0x00000400, 0x00000008,
    0x00400000, 0x80000000, 0x00080000, 0x00008000, 0x00008000, 0x40000000,
    0x00000400, 0x00000001, 0x00800000, 0x00010000, 0x00010000, 0x00004000,
    0x00000010, 0x00040000, 0x42000000, 0x00020004, 0x20000000, 0x00000200,
    0x02000000, 0x00004000, 0x00000010, 0x00000100, 0x00001000, 0x00080000,
    0x00000008, 0x00004000, 0x00000200};
    }

    const static UnicodeSet huai_Set{const_cast<UnicodeSet::run_t *>(__huai_Set_runs), 63, 0, const_cast<UnicodeSet::bitquad_t *>(__huai_Set_quads), 33, 0};

    /** Code Point Ranges for kang
    [3769, 3769], [389c, 389c], [3c42, 3c42], [3f39, 3f39], [41b2, 41b2],
    [45e7, 45e7], [4849, 4849], [498e, 498e], [4ea2, 4ea2], [4f09, 4f09],
    [531f, 531f], [56e5, 56e5], [5751, 5751], [594b, 594b], [5add, 5add],
    [5d7b, 5d7b], [5eb7, 5eb7], [5ffc, 5ffc], [6177, 6177], [625b, 625b],
    [6297, 6297], [676d, 676d], [69fa, 69fa], [6c86, 6c86], [6f2e, 6f2e],
    [7095, 7095], [72ba, 72ba], [780a, 780a], [7a45, 7a45], [7c87, 7c87],
    [7ce0, 7ce0], [7fab, 7fab], [8352, 8352], [8ebf, 8ebf], [909f, 909f],
    [9227, 9227], [93ee, 93ee], [958c, 958c], [962c, 962c], [9aaf, 9aaf],
    [9c47, 9c47], [20ede, 20ede], [20fa8, 20fa8], [21413, 21413],
    [21d7b, 21d7b], [21eda, 21eda], [22d26, 22d26], [2351b, 2351b],
    [24b8a, 24b8a], [2527d, 2527d], [254b3, 254b3], [2554e, 2554e],
    [25e7a, 25e7a], [2802b, 2802b], [2809f, 2809f], [28117, 28117],
    [2838d, 2838d], [2874e, 2874e], [28ef7, 28ef7], [2a3b5, 2a3b5]**/


    namespace {
    const static UnicodeSet::run_t __kang_Set_runs[] = {
    {Empty, 443}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 90},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 2963}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 114}, {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 179},
    {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 269},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 60}, {Mixed, 1},
    {Empty, 165}, {Mixed, 1}, {Empty, 29410}};
    const static UnicodeSet::bitquad_t  __kang_Set_quads[] = {
    0x00000200, 0x10000000, 0x00000004, 0x02000000, 0x00040000, 0x00000080,
    0x00000200, 0x00004000, 0x00000004, 0x00000200, 0x80000000, 0x00000020,
    0x00020000, 0x00000800, 0x20000000, 0x08000000, 0x00800000, 0x10000000,
    0x00800000, 0x08000000, 0x00800000, 0x00002000, 0x04000000, 0x00000040,
    0x00004000, 0x00200000, 0x04000000, 0x00000400, 0x00000020, 0x00000080,
    0x00000001, 0x00000800, 0x00040000, 0x80000000, 0x80000000, 0x00000080,
    0x00004000, 0x00001000, 0x00001000, 0x00008000, 0x00000080, 0x40000000,
    0x00000100, 0x00080000, 0x08000000, 0x04000000, 0x00000040, 0x08000000,
    0x00000400, 0x20000000, 0x00080000, 0x00004000, 0x04000000, 0x00000800,
    0x80000000, 0x00800000, 0x00002000, 0x00004000, 0x00800000, 0x00200000};
    }

    const static UnicodeSet kang_Set{const_cast<UnicodeSet::run_t *>(__kang_Set_runs), 121, 0, const_cast<UnicodeSet::bitquad_t *>(__kang_Set_quads), 60, 0};

    /** Code Point Ranges for de
    [3775, 3775], [392b, 392b], [3940, 3940], [561a, 561a], [5730, 5730],
    [5e95, 5e95], [5f97, 5f97], [5fb7, 5fb7], [68cf, 68cf], [6dc2, 6dc2],
    [767b, 767b], [7684, 7684], [9340, 9340], [965f, 965f], [20b8a, 20b8a],
    [20d68, 20d68], [212e9, 212e9], [21b42, 21b42], [2330f, 2330f],
    [23b8a, 23b8a], [23bb0, 23bb0], [24dd9, 24dd9], [27287, 27287],
    [2807d, 2807d]**/


    namespace {
    const static UnicodeSet::run_t __de_Set_runs[] = {
    {Empty, 443}, {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 229},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 72}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 68}, {Mixed, 2}, {Empty, 229}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 2985}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 189},
    {Mixed, 1}, {Empty, 67}, {Mixed, 2}, {Empty, 144}, {Mixed, 1},
    {Empty, 293}, {Mixed, 1}, {Empty, 110}, {Mixed, 1}, {Empty, 29692}};
    const static UnicodeSet::bitquad_t  __de_Set_quads[] = {
    0x00200000, 0x00000800, 0x00000001, 0x04000000, 0x00010000, 0x00200000,
    0x00800000, 0x00800000, 0x00008000, 0x00000004, 0x08000000, 0x00000010,
    0x00000001, 0x80000000, 0x00000400, 0x00000100, 0x00000200, 0x00000004,
    0x00008000, 0x00000400, 0x00010000, 0x02000000, 0x00000080, 0x20000000};
    }

    const static UnicodeSet de_Set{const_cast<UnicodeSet::run_t *>(__de_Set_runs), 41, 0, const_cast<UnicodeSet::bitquad_t *>(__de_Set_quads), 24, 0};

    /** Code Point Ranges for bian
    [3778, 3778], [399a, 399a], [3b53, 3b53], [3ca2, 3ca2], [3cce, 3cce],
    [3d77, 3d77], [3e95, 3e95], [3eb9, 3eb9], [4075, 4075], [4278, 4278],
    [4414, 4414], [44aa, 44aa], [47cd, 47cd], [4862, 4862], [4abb, 4abb],
    [4fbf, 4fbf], [533e, 533e], [535e, 535e], [5c01, 5c01], [5f01, 5f01],
    [5fa7, 5fa7], [5fed, 5fed], [60fc, 60fc], [6241, 6241], [6283, 6283],
    [62da, 62da], [63d9, 63d9], [662a, 662a], [6c73, 6c74], [7178, 7178],
    [7251, 7251], [7335, 7335], [7502, 7502], [75ba, 75ba], [782d, 782d],
    [78a5, 78a5], [7a28, 7a28], [7a39, 7a39], [7a86, 7a86], [7baf, 7baf],
    [7c69, 7c69], [7cc4, 7cc4], [7de8, 7de8], [7df6, 7df6], [81f1, 81f1],
    [8251, 8251], [82c4, 82c4], [8439, 8439], [85ca, 85ca], [8759, 8759],
    [890a, 890a], [89b5, 89b5], [8b8a, 8b8a], [8c4d, 8c4d], [8cb6, 8cb6],
    [8fa1, 8fa1], [8fa8, 8fa8], [8fae, 8faf], [904d, 904d], [908a, 908a],
    [90b2, 90b2], [91c6, 91c6], [937d, 937d], [959e, 959e], [9795, 9795],
    [97ad, 97ad], [9828, 9828], [9bfe, 9bff], [9d18, 9d18], [9da3, 9da3],
    [20408, 20408], [2045f, 2045f], [204eb, 204eb], [20a82, 20a82],
    [20b79, 20b79], [20bf4, 20bf4], [20dd6, 20dd6], [2122f, 2122f],
    [21285, 21285], [21b2f, 21b2f], [21b32, 21b32], [21b38, 21b38],
    [22a5f, 22a5f], [22b35, 22b35], [22b65, 22b65], [22d02, 22d02],
    [22ef6, 22ef6], [23220, 23220], [2375c, 2375c], [23a40, 23a40],
    [23aad, 23aad], [23e07, 23e07], [2402b, 2402b], [24032, 24032],
    [2413a, 2413a], [24e87, 24e87], [24ef6, 24ef6], [2535a, 2535a],
    [258dd, 258dd], [258f0, 258f0], [25fcb, 25fcb], [261ed, 261ed],
    [26259, 26259], [267e3, 267e3], [26f5f, 26f5f], [27a70, 27a70],
    [27e18, 27e18], [2843e, 2843e], [285a0, 285a0], [285be, 285be],
    [28695, 28695], [28967, 28967], [289d5, 289d5], [28a6b, 28a6b],
    [28cf2, 28cf2], [29a6f, 29a6f], [29c0d, 29c0d], [2a271, 2a271],
    [2a3d7, 2a3d7], [2a4cd, 2a4cd], [2a5af, 2a5af]**/


    namespace {
    const static UnicodeSet::run_t __bian_Set_runs[] = {
    {Empty, 443}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 27}, {Mixed, 2}, {Empty, 69},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 8}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 2866}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 120},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 106}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 43}, {Mixed, 2},
    {Empty, 54}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 58}, {Mixed, 1},
    {Empty, 88}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 107}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 29394}};
    const static UnicodeSet::bitquad_t  __bian_Set_quads[] = {
    0x01000000, 0x04000000, 0x00080000, 0x00000004, 0x00004000, 0x00800000,
    0x00200000, 0x02000000, 0x00200000, 0x01000000, 0x00100000, 0x00000400,
    0x00002000, 0x00000004, 0x08000000, 0x80000000, 0x40000000, 0x40000000,
    0x00000002, 0x00000002, 0x00000080, 0x00002000, 0x10000000, 0x00000002,
    0x00000008, 0x04000000, 0x02000000, 0x00000400, 0x00180000, 0x01000000,
    0x00020000, 0x00200000, 0x00000004, 0x04000000, 0x00002000, 0x00000020,
    0x02000100, 0x00000040, 0x00008000, 0x00000200, 0x00000010, 0x00400100,
    0x00020000, 0x00020000, 0x00000010, 0x02000000, 0x00000400, 0x02000000,
    0x00000400, 0x00200000, 0x00000400, 0x00002000, 0x00400000, 0x0000c102,
    0x00002000, 0x00000400, 0x00040000, 0x00000040, 0x20000000, 0x40000000,
    0x00200000, 0x00002000, 0x00000100, 0xc0000000, 0x01000000, 0x00000008,
    0x00000100, 0x80000000, 0x00000800, 0x00000004, 0x02000000, 0x00100000,
    0x00400000, 0x00008000, 0x00000020, 0x01048000, 0x80000000, 0x00200000,
    0x00000020, 0x00000004, 0x00400000, 0x00000001, 0x10000000, 0x00000001,
    0x00002000, 0x00000080, 0x00040800, 0x04000000, 0x00000080, 0x00400000,
    0x04000000, 0x20000000, 0x00010000, 0x00000800, 0x00002000, 0x02000000,
    0x00000008, 0x80000000, 0x00010000, 0x01000000, 0x40000000, 0x40000001,
    0x00200000, 0x00000080, 0x00200000, 0x00000800, 0x00040000, 0x00008000,
    0x00002000, 0x00020000, 0x00800000, 0x00002000, 0x00008000};
    }

    const static UnicodeSet bian_Set{const_cast<UnicodeSet::run_t *>(__bian_Set_runs), 215, 0, const_cast<UnicodeSet::bitquad_t *>(__bian_Set_quads), 113, 0};

    /** Code Point Ranges for tui
    [3782, 3782], [379c, 379c], [37ce, 37ce], [3882, 3882], [3888, 3888],
    [3946, 3946], [3c63, 3c63], [3cf7, 3cf7], [3faf, 3faf], [3fbc, 3fbd],
    [3fc9, 3fc9], [4003, 4003], [4acb, 4acb], [4fbb, 4fbb], [4fc0, 4fc0],
    [50d3, 50d3], [554d, 554d], [58a4, 58a4], [5a27, 5a27], [5c35, 5c35],
    [5f1f, 5f1f], [5fd2, 5fd2], [6022, 6022], [63a8, 63a8], [6a54, 6a54],
    [711e, 711e], [717a, 717a], [7a0e, 7a0e], [7a68, 7a68], [8049, 8049],
    [812e, 812e], [8131, 8131], [817f, 817f], [84f7, 84f7], [85ec, 85ec],
    [8608, 8608], [8715, 8715], [892a, 892a], [8b09, 8b09], [8b89, 8b89],
    [8e6a, 8e6a], [8ffd, 8ffd], [9000, 9000], [96a4, 96a4], [983d, 983d],
    [994b, 994b], [99fe, 99fe], [9a29, 9a29], [9abd, 9abd], [9b4b, 9b4b],
    [20e99, 20e99], [21bf5, 21bf5], [21ddc, 21ddc], [22239, 22239],
    [2226d, 2226d], [222ae, 222ae], [224c7, 224c7], [227f4, 227f4],
    [2282e, 2282e], [245f4, 245f4], [24e09, 24e09], [25ca3, 25ca3],
    [25d90, 25d90], [265a6, 265a6], [26704, 26704], [271b8, 271b8],
    [2774b, 2774b], [27b93, 27b93], [281a8, 281a8], [28334, 28334],
    [285de, 285de], [28603, 28603], [28f5f, 28f5f], [294ec, 294ec],
    [2963a, 2963a], [29cd5, 29cd5]**/


    namespace {
    const static UnicodeSet::run_t __tui_Set_runs[] = {
    {Empty, 444}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 21}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 85}, {Mixed, 1}, {Empty, 38}, {Mixed, 2}, {Empty, 7},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 11}, {Mixed, 2},
    {Empty, 52}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2969}, {Mixed, 1},
    {Empty, 106}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 237}, {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 116},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 64}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 84}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 48}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 29465}};
    const static UnicodeSet::bitquad_t  __tui_Set_quads[] = {
    0x10000004, 0x00004000, 0x00000104, 0x00000040, 0x00000008, 0x00800000,
    0x30008000, 0x00000200, 0x00000008, 0x00000800, 0x08000000, 0x00000001,
    0x00080000, 0x00002000, 0x00000010, 0x00000080, 0x00200000, 0x80000000,
    0x00040000, 0x00000004, 0x00000100, 0x00100000, 0x40000000, 0x04000000,
    0x00004000, 0x00000100, 0x00000200, 0x00024000, 0x80000000, 0x00800000,
    0x00001000, 0x00000100, 0x00200000, 0x00000400, 0x00000200, 0x00000200,
    0x00000400, 0x20000000, 0x00000001, 0x00000010, 0x20000000, 0x00000800,
    0x40000000, 0x00000200, 0x20000000, 0x00000800, 0x02000000, 0x00200000,
    0x10000000, 0x02000000, 0x00002000, 0x00004000, 0x00000080, 0x00100000,
    0x00004000, 0x00100000, 0x00000200, 0x00000008, 0x00010000, 0x00000040,
    0x00000010, 0x01000000, 0x00000800, 0x00080000, 0x00000100, 0x00100000,
    0x40000000, 0x00000008, 0x80000000, 0x00001000, 0x04000000, 0x00200000};
    }

    const static UnicodeSet tui_Set{const_cast<UnicodeSet::run_t *>(__tui_Set_runs), 137, 0, const_cast<UnicodeSet::bitquad_t *>(__tui_Set_quads), 72, 0};

    /** Code Point Ranges for za
    [3789, 3789], [39ab, 39ab], [4198, 4198], [4799, 4799], [48e0, 48e0],
    [4a3f, 4a3f], [4a9e, 4a9e], [531d, 531d], [5482, 5482], [548b, 548b],
    [54b1, 54b1], [5548, 5548], [5550, 5551], [5592, 5592], [5601, 5601],
    [5648, 5648], [56c3, 56c3], [56cb, 56cb], [56d0, 56d0], [5e00, 5e00],
    [624e, 624e], [62f6, 62f6], [6742, 6742], [6c9e, 6c9e], [7052, 7052],
    [7838, 7838], [78fc, 78fc], [7c74, 7c74], [7d2e, 7d2e], [81e2, 81e2],
    [9254, 9254], [96dc, 96dc], [96e5, 96e5], [97f4, 97f4], [9b73, 9b73],
    [206f1, 206f1], [20bd7, 20bd7], [20c65, 20c65], [20dbf, 20dbf],
    [20dff, 20dff], [20f77, 20f77], [21055, 21055], [22d8d, 22d8d],
    [22e7c, 22e7c], [22f5c, 22f5c], [235c1, 235c1], [23936, 23937],
    [2393a, 2393a], [23d16, 23d16], [23e10, 23e10], [24114, 24114],
    [24116, 24116], [24800, 24800], [25de9, 25de9], [2681b, 2681b],
    [26fac, 26fac], [2713d, 2713d], [27303, 27303], [27b29, 27b29],
    [27f81, 27f81], [2883f, 2883f], [28903, 28903], [291fa, 291fa],
    [297b6, 297b6], [29bf3, 29bf3], [29d62, 29d62], [2a687, 2a687]**/


    namespace {
    const static UnicodeSet::run_t __za_Set_runs[] = {
    {Empty, 444}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 67}, {Mixed, 1},
    {Empty, 11}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 57}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 130}, {Mixed, 1}, {Empty, 35},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 2907}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 233}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 55}, {Mixed, 1},
    {Empty, 174}, {Mixed, 1}, {Empty, 80}, {Mixed, 1}, {Empty, 60},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 64}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 68},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 70}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 29387}};
    const static UnicodeSet::bitquad_t  __za_Set_quads[] = {
    0x00000200, 0x00000800, 0x01000000, 0x02000000, 0x00000001, 0x80000000,
    0x40000000, 0x20000000, 0x00000804, 0x00020000, 0x00030100, 0x00040000,
    0x00000002, 0x00000100, 0x00010808, 0x00000001, 0x00004000, 0x00400000,
    0x00000004, 0x40000000, 0x00040000, 0x01000000, 0x10000000, 0x00100000,
    0x00004000, 0x00000004, 0x00100000, 0x10000000, 0x00000020, 0x00100000,
    0x00080000, 0x00020000, 0x00800000, 0x00000020, 0x80000000, 0x80000000,
    0x00800000, 0x00200000, 0x00002000, 0x10000000, 0x10000000, 0x00000002,
    0x04c00000, 0x00400000, 0x00010000, 0x00500000, 0x00000001, 0x00000200,
    0x08000000, 0x00001000, 0x20000000, 0x00000008, 0x00000200, 0x00000002,
    0x80000000, 0x00000008, 0x04000000, 0x00400000, 0x00080000, 0x00000004,
    0x00000080};
    }

    const static UnicodeSet za_Set{const_cast<UnicodeSet::run_t *>(__za_Set_runs), 119, 0, const_cast<UnicodeSet::bitquad_t *>(__za_Set_quads), 61, 0};

    /** Code Point Ranges for ba
    [378e, 378e], [39ca, 39ca], [3b5b, 3b5b], [3b6d, 3b6d], [3e2d, 3e2d],
    [3eb4, 3eb4], [3fec, 3fec], [4189, 4189], [41d1, 41d1], [4208, 4208],
    [43b1, 43b1], [496f, 496f], [4a57, 4a57], [4b82, 4b82], [4bf2, 4bf2],
    [4c3e, 4c3e], [4d95, 4d95], [4ec8, 4ec8], [4f2f, 4f2f], [516b, 516b],
    [53ed, 53ed], [5427, 5427], [54f1, 54f1], [54f5, 54f5], [577a, 577a],
    [57bb, 57bb], [58a2, 58a2], [58e9, 58e9], [593f, 593f], [59ad, 59ad],
    [5c9c, 5c9c], [5cc7, 5cc7], [5df4, 5df4], [5f1d, 5f1d], [6252, 6252],
    [628a, 628a], [62aa, 62aa], [62d4, 62d4], [634c, 634c], [636d, 636d],
    [6733, 6733], [6777, 6777], [67ed, 67ed], [6b1b, 6b1b], [6e43, 6e43],
    [705e, 705e], [70a6, 70a6], [7238, 7238], [72ae, 72ae], [7390, 7390],
    [75a4, 75a4], [7679, 7679], [7685, 7685], [77f2, 77f2], [7b06, 7b06],
    [7c91, 7c91], [7f77, 7f77], [7f93, 7f93], [8019, 8019], [80c8, 80c8],
    [82ad, 82ad], [8307, 8307], [8337, 8337], [83dd, 83dd], [8406, 8406],
    [8686, 8686], [8a59, 8a59], [8c5d, 8c5d], [8dc1, 8dc1], [8dcb, 8dcb],
    [8ef7, 8ef7], [91db, 91db], [91df, 91df], [9200, 9200], [9738, 9738],
    [9776, 9776], [98b0, 98b0], [9b43, 9b43], [9b81, 9b81], [9b8a, 9b8a],
    [9f25, 9f25], [2040c, 2040c], [206cb, 206cb], [20d7a, 20d7a],
    [216ad, 216ad], [220f3, 220f3], [221f7, 221f7], [2282d, 2282d],
    [22e9e, 22e9e], [22ef7, 22ef7], [23b36, 23b37], [24715, 24715],
    [24731, 24731], [248f8, 248f8], [24912, 24912], [253b1, 253b1],
    [25419, 25419], [25767, 25767], [2595b, 2595b], [264e7, 264e7],
    [26ad9, 26ad9], [26cfa, 26cfa], [273b1, 273b1], [27ca7, 27ca7],
    [27ea1, 27ea1], [27eba, 27eba], [27fcf, 27fcf], [282b9, 282b9],
    [290f4, 290f4], [292a4, 292a4], [295a3, 295a3], [295bd, 295bd],
    [296a5, 296a5], [29869, 29869], [29a1c, 29a1c], [29e4f, 29e4f],
    [29f77, 29f77]**/


    namespace {
    const static UnicodeSet::run_t __ba_Set_runs[] = {
    {Empty, 444}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 11},
    {Mixed, 2}, {Empty, 21}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 3},
    {Mixed, 2}, {Empty, 29}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 10}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 22},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 2854}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 81},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 50}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 97},
    {Mixed, 1}, {Empty, 94}, {Mixed, 2}, {Empty, 13}, {Mixed, 2},
    {Empty, 84}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 92}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 53},
    {Mixed, 1}, {Empty, 71}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 113},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 29444}};
    const static UnicodeSet::bitquad_t  __ba_Set_quads[] = {
    0x00004000, 0x00000400, 0x08000000, 0x00002000, 0x00002000, 0x00100000,
    0x00001000, 0x00000200, 0x00020000, 0x00000100, 0x00020000, 0x00008000,
    0x00800000, 0x00000004, 0x00040000, 0x40000000, 0x00200000, 0x00000100,
    0x00008000, 0x00000800, 0x00002000, 0x00000080, 0x00220000, 0x04000000,
    0x08000000, 0x00000004, 0x00000200, 0x80000000, 0x00002000, 0x10000000,
    0x00000080, 0x00100000, 0x20000000, 0x00040000, 0x00000400, 0x00000400,
    0x00100000, 0x00001000, 0x00002000, 0x00080000, 0x00800000, 0x00002000,
    0x08000000, 0x00000008, 0x40000000, 0x00000040, 0x01000000, 0x00004000,
    0x00010000, 0x00000010, 0x02000000, 0x00000020, 0x00040000, 0x00000040,
    0x00020000, 0x00800000, 0x00080000, 0x02000000, 0x00000100, 0x00002000,
    0x00000080, 0x00800000, 0x20000000, 0x00000040, 0x00000040, 0x02000000,
    0x20000000, 0x00000802, 0x00800000, 0x88000000, 0x00000001, 0x01000000,
    0x00400000, 0x00010000, 0x00000008, 0x00000402, 0x00000020, 0x00001000,
    0x00000800, 0x04000000, 0x00002000, 0x00080000, 0x00800000, 0x00002000,
    0x40000000, 0x00800000, 0x00c00000, 0x00200000, 0x00020000, 0x01000000,
    0x00040000, 0x00020000, 0x02000000, 0x00000080, 0x08000000, 0x00000080,
    0x02000000, 0x04000000, 0x00020000, 0x00000080, 0x04000002, 0x00008000,
    0x02000000, 0x00100000, 0x00000010, 0x20000008, 0x00000020, 0x00000200,
    0x10000000, 0x00008000, 0x00800000};
    }

    const static UnicodeSet ba_Set{const_cast<UnicodeSet::run_t *>(__ba_Set_runs), 205, 0, const_cast<UnicodeSet::bitquad_t *>(__ba_Set_quads), 111, 0};

    /** Code Point Ranges for ding
    [379f, 379f], [38d4, 38d4], [3d3f, 3d3f], [47d3, 47d3], [49ba, 49ba],
    [4d7a, 4d7a], [4e01, 4e01], [4ec3, 4ec3], [53ee, 53ee], [5576, 5576],
    [5960, 5960], [5975, 5975], [5b9a, 5b9a], [5d7f, 5d7f], [5e04, 5e04],
    [5fca, 5fca], [639f, 639f], [6c40, 6c40], [6fce, 6fce], [706f, 706f],
    [738e, 738e], [753a, 753a], [7594, 7594], [76ef, 76ef], [77f4, 77f4],
    [7887, 7887], [78a0, 78a0], [8035, 8035], [815a, 815a], [827c, 827c],
    [8476, 8476], [85a1, 85a1], [8670, 8670], [8a02, 8a02], [914a, 914a],
    [91d8, 91d8], [92cc, 92cc], [9320, 9320], [976a, 976a], [9802, 9802],
    [9841, 9841], [98e3, 98e3], [9f0e, 9f0e], [22445, 22445],
    [2318d, 2318d], [238b3, 238b3], [24423, 24423], [246d9, 246d9],
    [251d3, 251d3], [25be2, 25be2], [25cf0, 25cf0], [25e27, 25e27],
    [26a0d, 26a0d], [26a58, 26a58], [271f7, 271f7], [2733e, 2733e],
    [27cc9, 27cc9], [28871, 28871], [29726, 29726], [2986f, 2986f],
    [29e0e, 29e0e], [29f9a, 29f9a]**/


    namespace {
    const static UnicodeSet::run_t __ding_Set_runs[] = {
    {Empty, 444}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 84}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 59}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 57}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 48}, {Mixed, 1},
    {Empty, 3113}, {Mixed, 1}, {Empty, 105}, {Mixed, 1}, {Empty, 56},
    {Mixed, 1}, {Empty, 91}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 87}, {Mixed, 1}, {Empty, 80}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 94}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 76}, {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 117},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 29443}};
    const static UnicodeSet::bitquad_t  __ding_Set_quads[] = {
    0x80000000, 0x00100000, 0x80000000, 0x00080000, 0x04000000, 0x04000000,
    0x00000002, 0x00000008, 0x00004000, 0x00400000, 0x00200001, 0x04000000,
    0x80000000, 0x00000010, 0x00000400, 0x80000000, 0x00000001, 0x00004000,
    0x00008000, 0x00004000, 0x04000000, 0x00100000, 0x00008000, 0x00100000,
    0x00000080, 0x00000001, 0x00200000, 0x04000000, 0x10000000, 0x00400000,
    0x00000002, 0x00010000, 0x00000004, 0x00000400, 0x01000000, 0x00001000,
    0x00000001, 0x00000400, 0x00000004, 0x00000002, 0x00000008, 0x00004000,
    0x00000020, 0x00002000, 0x00080000, 0x00000008, 0x02000000, 0x00080000,
    0x00000004, 0x00010000, 0x00000080, 0x00002000, 0x01000000, 0x00800000,
    0x40000000, 0x00000200, 0x00020000, 0x00000040, 0x00008000, 0x00004000,
    0x04000000};
    }

    const static UnicodeSet ding_Set{const_cast<UnicodeSet::run_t *>(__ding_Set_runs), 121, 0, const_cast<UnicodeSet::bitquad_t *>(__ding_Set_quads), 61, 0};

    /** Code Point Ranges for cen
    [37a4, 37a5], [417e, 417e], [4901, 4901], [4ac8, 4ac8], [53c3, 53c3],
    [5c91, 5c91], [5d7e, 5d7e], [68a3, 68a3], [6c75, 6c75], [6d94, 6d94],
    [7876, 7876], [7a47, 7a47], [7b12, 7b12], [7bf8, 7bf8], [2384e, 2384e],
    [26283, 26283], [2804a, 2804a], [28963, 28963], [28c7c, 28c7c],
    [29168, 29168], [2916e, 2916e], [29edb, 29edb]**/


    namespace {
    const static UnicodeSet::run_t __cen_Set_runs[] = {
    {Empty, 445}, {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 60},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 71}, {Mixed, 1},
    {Empty, 69}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 89},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 86}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3554}, {Mixed, 1},
    {Empty, 337}, {Mixed, 1}, {Empty, 237}, {Mixed, 1}, {Empty, 72},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 106}, {Mixed, 1}, {Empty, 29449}};
    const static UnicodeSet::bitquad_t  __cen_Set_quads[] = {
    0x00000030, 0x40000000, 0x00000002, 0x00000100, 0x00000008, 0x00020000,
    0x40000000, 0x00000008, 0x00200000, 0x00100000, 0x00400000, 0x00000080,
    0x00040000, 0x01000000, 0x00004000, 0x00000008, 0x00000400, 0x00000008,
    0x10000000, 0x00004100, 0x08000000};
    }

    const static UnicodeSet cen_Set{const_cast<UnicodeSet::run_t *>(__cen_Set_runs), 43, 0, const_cast<UnicodeSet::bitquad_t *>(__cen_Set_quads), 21, 0};

    /** Code Point Ranges for zi
    [37a8, 37a8], [383f, 383f], [39d7, 39d8], [3b10, 3b10], [3c23, 3c23],
    [3c74, 3c74], [3ead, 3ead], [3f67, 3f67], [3f85, 3f85], [3ff3, 3ff3],
    [4052, 4052], [4146, 4146], [4154, 4154], [4185, 4185], [43a9, 43a9],
    [4409, 4409], [4502, 4502], [45aa, 45aa], [4623, 4623], [48ce, 48ce],
    [49bb, 49bb], [4c35, 4c35], [4e8b, 4e8b], [4ed4, 4ed4], [5033, 5033],
    [525a, 525a], [5407, 5407], [5431, 5431], [5470, 5470], [5472, 5472],
    [54a8, 54a8], [5559, 5559], [55de, 55de], [59ca, 59ca], [59d5, 59d5],
    [59ff, 59ff], [5b50, 5b50], [5b56, 5b57], [5b5c, 5b5c], [5b73, 5b73],
    [5d6b, 5d6b], [6063, 6063], [674d, 674d], [67f4, 67f4], [6825, 6825],
    [6893, 6893], [6914, 6914], [6b21, 6b21], [6c9d, 6c9d], [6cda, 6cda],
    [6d13, 6d13], [6dc4, 6dc4], [6ecb, 6ecb], [6ed3, 6ed3], [6f2c, 6f2c],
    [6fac, 6fac], [7278, 7278], [7386, 7386], [74be, 74be], [753e, 753e],
    [75b5, 75b5], [7725, 7726], [77f7, 77f7], [798c, 798c], [79c4, 79c4],
    [79ed, 79ed], [7a35, 7a35], [7a67, 7a67], [7b2b, 7b2b], [7c7d, 7c7d],
    [7ca2, 7ca2], [7d0e, 7d0e], [7d14, 7d14], [7d2b, 7d2b], [7dc7, 7dc7],
    [8014, 8014], [80cf, 80cf], [80d4, 80d4], [80fe, 80fe], [81ea, 81ea],
    [8293, 8293], [8308, 8308], [8321, 8321], [8332, 8332], [83d1, 83d1],
    [84fb, 84fb], [858b, 858b], [8678, 8678], [89dc, 89dc], [8a3e, 8a3e],
    [8aee, 8aee], [8cb2, 8cb2], [8cc7, 8cc7], [8d91, 8d91], [8da6, 8da6],
    [8dd0, 8dd0], [8f09, 8f09], [8f1c, 8f1c], [9111, 9111], [91e8, 91e8],
    [922d, 922d], [92c5, 92c5], [9319, 9319], [93a1, 93a1], [983f, 983f],
    [9aed, 9aed], [9bd4, 9bd4], [9c26, 9c26], [9d85, 9d85], [9f12, 9f12],
    [9f4a, 9f4a], [9f4d, 9f4d], [9f5c, 9f5c], [20022, 20022],
    [20094, 20094], [20878, 20878], [21257, 21257], [215c8, 215c8],
    [2165b, 2165b], [2194e, 2194e], [21a92, 21a92], [21e1f, 21e1f],
    [21e2a, 21e2a], [221b6, 221b6], [22c46, 22c46], [22f31, 22f31],
    [2312e, 2312e], [234ca, 234ca], [235a8, 235a8], [23680, 23681],
    [238ca, 238ca], [238cc, 238cc], [23968, 23968], [23bc3, 23bc3],
    [23ce9, 23ce9], [23e06, 23e06], [24cb8, 24cb8], [25016, 25016],
    [25541, 25541], [25689, 25689], [2578e, 2578e], [25ade, 25ade],
    [25b33, 25b33], [25c95, 25c95], [25ecd, 25ecd], [25f29, 25f29],
    [25f3b, 25f3b], [25fe9, 25fe9], [2637a, 2637a], [263b8, 263b8],
    [265ba, 265ba], [267a4, 267a4], [268f9, 268f9], [26eb1, 26eb1],
    [27017, 27017], [27090, 27090], [271b0, 271b0], [27553, 27553],
    [27641, 27641], [276cf, 276cf], [278e4, 278e4], [27955, 27955],
    [279d5, 279d5], [27a34, 27a34], [27e4c, 27e4c], [27fde, 27fde],
    [28025, 28025], [28362, 28362], [28696, 28696], [28773, 28773],
    [289eb, 289eb], [28a72, 28a72], [28e40, 28e40], [2911a, 2911a],
    [2940d, 2940d], [2970a, 2970a], [2a175, 2a175], [2a47f, 2a47f],
    [2a54a, 2a54a], [2a5c9, 2a5c9], [2a5cb, 2a5cb], [2a5d0, 2a5d0]**/


    namespace {
    const static UnicodeSet::run_t __zi_Set_runs[] = {
    {Empty, 445}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 13}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 31}, {Mixed, 2}, {Empty, 10},
    {Mixed, 2}, {Empty, 15}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 13},
    {Mixed, 2}, {Empty, 5}, {Mixed, 3}, {Empty, 9}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2822}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 78}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 27}, {Mixed, 2},
    {Empty, 27}, {Mixed, 1}, {Empty, 84}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 116}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 82},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 29393}};
    const static UnicodeSet::bitquad_t  __zi_Set_quads[] = {
    0x00000100, 0x80000000, 0x01800000, 0x00010000, 0x00000008, 0x00100000,
    0x00002000, 0x00000080, 0x00000020, 0x00080000, 0x00040000, 0x00100040,
    0x00000020, 0x00000200, 0x00000200, 0x00000004, 0x00000400, 0x00000008,
    0x00004000, 0x08000000, 0x00200000, 0x00000800, 0x00100000, 0x00080000,
    0x04000000, 0x00000080, 0x00020000, 0x00050000, 0x00000100, 0x02000000,
    0x40000000, 0x00200400, 0x80000000, 0x10c10000, 0x00080000, 0x00000800,
    0x00000008, 0x00002000, 0x00100000, 0x00000020, 0x00080000, 0x00100000,
    0x00000002, 0x20000000, 0x04000000, 0x00080000, 0x00000010, 0x00080800,
    0x00001000, 0x00001000, 0x01000000, 0x00000040, 0x40000000, 0x40000000,
    0x00200000, 0x00000060, 0x00800000, 0x00001000, 0x00000010, 0x00002000,
    0x00200000, 0x00000080, 0x00000800, 0x20000000, 0x00000004, 0x00104000,
    0x00000800, 0x00000080, 0x00100000, 0x00108000, 0x40000000, 0x00000400,
    0x00080000, 0x00000100, 0x00040002, 0x00020000, 0x08000000, 0x00000800,
    0x01000000, 0x10000000, 0x40000000, 0x00004000, 0x00040000, 0x00000080,
    0x00020000, 0x00000040, 0x00010000, 0x10000200, 0x00020000, 0x00000100,
    0x00002000, 0x00000020, 0x02000000, 0x00000002, 0x80000000, 0x00002000,
    0x00100000, 0x00000040, 0x00000020, 0x00040000, 0x10002400, 0x00000004,
    0x00100000, 0x01000000, 0x00800000, 0x00000100, 0x08000000, 0x00004000,
    0x00040000, 0x80000000, 0x00000400, 0x00400000, 0x00000040, 0x00020000,
    0x00004000, 0x00000400, 0x00000100, 0x00000003, 0x00001400, 0x00000100,
    0x00000008, 0x00000200, 0x00000040, 0x01000000, 0x00400000, 0x00000002,
    0x00000200, 0x00004000, 0x40000000, 0x00080000, 0x00200000, 0x00002000,
    0x08000200, 0x00000200, 0x04000000, 0x01000000, 0x04000000, 0x00000010,
    0x02000000, 0x00020000, 0x00800000, 0x00010000, 0x00010000, 0x00080000,
    0x00000002, 0x00008000, 0x00000010, 0x00200000, 0x00200000, 0x00100000,
    0x00001000, 0x40000000, 0x00000020, 0x00000004, 0x00400000, 0x00080000,
    0x00000800, 0x00040000, 0x00000001, 0x04000000, 0x00002000, 0x00000400,
    0x00200000, 0x80000000, 0x00000400, 0x00010a00};
    }

    const static UnicodeSet zi_Set{const_cast<UnicodeSet::run_t *>(__zi_Set_runs), 309, 0, const_cast<UnicodeSet::bitquad_t *>(__zi_Set_quads), 166, 0};

    /** Code Point Ranges for min
    [37b4, 37b4], [38af, 38af], [3a09, 3a09], [3b06, 3b06], [3cf7, 3cf7],
    [4055, 4055], [4767, 4767], [47e8, 47e8], [4851, 4851], [4ab8, 4ab8],
    [50f6, 50f6], [51ba, 51ba], [5221, 5221], [53b8, 53b8], [5461, 5461],
    [59c4, 59c4], [5cb7, 5cb7], [5fde, 5fde], [600b, 600b], [610d, 610d],
    [615c, 615c], [61ab, 61ab], [62bf, 62bf], [636a, 636a], [6543, 6543],
    [654f, 654f], [65fb, 65fc], [668b, 668b], [6c11, 6c11], [6c76, 6c76],
    [6cef, 6cef], [6e02, 6e02], [6e4f, 6e4f], [6e63, 6e63], [6f63, 6f63],
    [739f, 739f], [73c9, 73c9], [76bf, 76bf], [76f7, 76f7], [76ff, 76ff],
    [7720, 7720], [7b22, 7b22], [7c22, 7c22], [7de1, 7de1], [7e69, 7e69],
    [7f60, 7f60], [82e0, 82e0], [8820, 8820], [9231, 9231], [9309, 9309],
    [9372, 9372], [9594, 9594], [95a9, 95a9], [9c35, 9c35], [9d16, 9d16],
    [9efd, 9efd], [22f16, 22f16], [22f79, 22f79], [23c48, 23c49],
    [23de0, 23de0], [23e52, 23e52], [241dc, 241dc], [246ce, 246ce],
    [24e05, 24e05], [24e96, 24e96], [24fd5, 24fd5], [25710, 25710],
    [26321, 26321], [26aee, 26aee], [26cdc, 26cdc], [2704b, 2704b],
    [27319, 27319], [27c83, 27c83], [27d63, 27d63], [283f5, 283f5],
    [29509, 29509], [29b77, 29b77], [2a086, 2a086], [2a134, 2a134]**/


    namespace {
    const static UnicodeSet::run_t __min_Set_runs[] = {
    {Empty, 445}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 79}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 16}, {Mixed, 2},
    {Empty, 51}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 3200}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 102}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 57}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 57}, {Mixed, 1}, {Empty, 96}, {Mixed, 1}, {Empty, 61},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 75}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 136}, {Mixed, 1},
    {Empty, 50}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 29430}};
    const static UnicodeSet::bitquad_t  __min_Set_quads[] = {
    0x00100000, 0x00008000, 0x00000200, 0x00000040, 0x00800000, 0x00200000,
    0x00000080, 0x00000100, 0x00020000, 0x01000000, 0x00400000, 0x04000000,
    0x00000002, 0x01000000, 0x00000002, 0x00000010, 0x00800000, 0x40000000,
    0x00000800, 0x00002000, 0x10000000, 0x00000800, 0x80000000, 0x00000400,
    0x00008008, 0x18000000, 0x00000800, 0x00020000, 0x00400000, 0x00008000,
    0x00000004, 0x00008000, 0x00000008, 0x00000008, 0x80000000, 0x00000200,
    0x80000000, 0x80800000, 0x00000001, 0x00000004, 0x00000004, 0x00000002,
    0x00000200, 0x00000001, 0x00000001, 0x00000001, 0x00020000, 0x00000200,
    0x00040000, 0x00100000, 0x00000200, 0x00200000, 0x00400000, 0x20000000,
    0x00400000, 0x02000000, 0x00000300, 0x00000001, 0x00040000, 0x10000000,
    0x00004000, 0x00000020, 0x00400000, 0x00200000, 0x00010000, 0x00000002,
    0x00004000, 0x10000000, 0x00000800, 0x02000000, 0x00000008, 0x00000008,
    0x00200000, 0x00000200, 0x00800000, 0x00000040, 0x00100000};
    }

    const static UnicodeSet min_Set{const_cast<UnicodeSet::run_t *>(__min_Set_runs), 151, 0, const_cast<UnicodeSet::bitquad_t *>(__min_Set_quads), 77, 0};

    /** Code Point Ranges for huang
    [37b7, 37b7], [3835, 3835], [3843, 3843], [393a, 393a], [3a2a, 3a2a],
    [3b3b, 3b3b], [3f39, 3f39], [3fae, 3fae], [3fe0, 3fe0], [402e, 402e],
    [405c, 405c], [4113, 4113], [4163, 4163], [4297, 4297], [42a3, 42a3],
    [4319, 4319], [437f, 437f], [4435, 4435], [47b9, 47b9], [4d43, 4d43],
    [505f, 505f], [51f0, 51f0], [55a4, 55a4], [582d, 582d], [5843, 5843],
    [595b, 595b], [5a93, 5a93], [5bba, 5bba], [5d32, 5d32], [5ddf, 5ddf],
    [5e4c, 5e4c], [5fa8, 5fa8], [6033, 6033], [604d, 604d], [60f6, 60f6],
    [6130, 6130], [614c, 614c], [63d8, 63d8], [6643, 6644], [66c2, 66c2],
    [671a, 671a], [697b, 697b], [69a5, 69a5], [6a2a, 6a2a], [6ace, 6ace],
    [6c7b, 6c7b], [6d38, 6d38], [6e5f, 6e5f], [6ec9, 6ec9], [6f62, 6f62],
    [70be, 70be], [714c, 714c], [7180, 7180], [71bf, 71bf], [720c, 720c],
    [735a, 735a], [745d, 745d], [749c, 749c], [7640, 7640], [7687, 7687],
    [769d, 769d], [78fa, 78fa], [7a54, 7a54], [7bc1, 7bc1], [7c27, 7c27],
    [8093, 8093], [824e, 824e], [8292, 8292], [832b, 832b], [8352, 8352],
    [845f, 845f], [8757, 8757], [87e5, 87e5], [8841, 8841], [8a64, 8a64],
    [8afb, 8afb], [8b0a, 8b0a], [8daa, 8daa], [9051, 9051], [9360, 9360],
    [93a4, 93a4], [9404, 9404], [968d, 968d], [97f9, 97f9], [992d, 992d],
    [9a1c, 9a1c], [9c09, 9c09], [9dec, 9dec], [9ec4, 9ec4], [200b8, 200b8],
    [2125a, 2125a], [2170b, 2170b], [21844, 21844], [219fd, 219fd],
    [21ff0, 21ff0], [22079, 22079], [221df, 221df], [23119, 23119],
    [23196, 23196], [2326a, 2326a], [23eac, 23eac], [241b4, 241b4],
    [2469d, 2469d], [246e5, 246e5], [2481b, 2481b], [24b49, 24b49],
    [24bf7, 24bf7], [24f91, 24f91], [25afc, 25afc], [25fea, 25fea],
    [267ee, 267ee], [2687d, 2687d], [26a97, 26a97], [26b3a, 26b3a],
    [26d7d, 26d7d], [27578, 27578], [275ac, 275ac], [2782c, 2782c],
    [27a06, 27a06], [28241, 28241], [28264, 28264], [28367, 28367],
    [286b3, 286b3], [28714, 28714], [28774, 28774], [28fa1, 28fa1],
    [297a9, 297a9], [298af, 298af], [2a01e, 2a01e], [2a3cd, 2a3cd],
    [2a3d2, 2a3d2], [2a3d9, 2a3d9]**/


    namespace {
    const static UnicodeSet::run_t __huang_Set_runs[] = {
    {Empty, 445}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 19},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 20}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2830},
    {Mixed, 1}, {Empty, 140}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 47},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 121}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 97}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 90}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 63}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 63}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 65}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 63},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 58}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 29409}};
    const static UnicodeSet::bitquad_t  __huang_Set_quads[] = {
    0x00800000, 0x00200000, 0x00000008, 0x04000000, 0x00000400, 0x08000000,
    0x02000000, 0x00004000, 0x00000001, 0x00004000, 0x10000000, 0x00080000,
    0x00000008, 0x00800000, 0x00000008, 0x02000000, 0x80000000, 0x00200000,
    0x02000000, 0x00000008, 0x80000000, 0x00010000, 0x00000010, 0x00002000,
    0x00000008, 0x08000000, 0x00080000, 0x04000000, 0x00040000, 0x80000000,
    0x00001000, 0x00000100, 0x00080000, 0x00002000, 0x00400000, 0x00010000,
    0x00001000, 0x01000000, 0x00000018, 0x00000004, 0x04000000, 0x08000000,
    0x00000020, 0x00000400, 0x00004000, 0x08000000, 0x01000000, 0x80000000,
    0x00000200, 0x00000004, 0x40000000, 0x00001000, 0x00000001, 0x80000000,
    0x00001000, 0x04000000, 0x20000000, 0x10000000, 0x00000001, 0x20000080,
    0x04000000, 0x00100000, 0x00000002, 0x00000080, 0x00080000, 0x00004000,
    0x00040000, 0x00000800, 0x00040000, 0x80000000, 0x00800000, 0x00000020,
    0x00000002, 0x00000010, 0x08000000, 0x00000400, 0x00000400, 0x00020000,
    0x00000001, 0x00000010, 0x00000010, 0x00002000, 0x02000000, 0x00002000,
    0x10000000, 0x00000200, 0x00001000, 0x00000010, 0x01000000, 0x04000000,
    0x00000800, 0x00000010, 0x20000000, 0x00010000, 0x02000000, 0x80000000,
    0x02000000, 0x00400000, 0x00000400, 0x00001000, 0x00100000, 0x20000000,
    0x00000020, 0x08000000, 0x00000200, 0x00800000, 0x00020000, 0x10000000,
    0x00000400, 0x00004000, 0x20000000, 0x00800000, 0x04000000, 0x20000000,
    0x01000000, 0x00001000, 0x00001000, 0x00000040, 0x00000002, 0x00000010,
    0x00000080, 0x00080000, 0x00100000, 0x00100000, 0x00000002, 0x00000200,
    0x00008000, 0x40000000, 0x02042000};
    }

    const static UnicodeSet huang_Set{const_cast<UnicodeSet::run_t *>(__huang_Set_runs), 239, 0, const_cast<UnicodeSet::bitquad_t *>(__huang_Set_quads), 129, 0};

    /** Code Point Ranges for cuo
    [37c7, 37c7], [3b6b, 3b6b], [3f68, 3f68], [3ff7, 3ff7], [40b3, 40b3],
    [4424, 4424], [4458, 4458], [47f6, 47f6], [4821, 4821], [48dc, 48dc],
    [4c08, 4c08], [4c5c, 4c5c], [4d3e, 4d3e], [5249, 5249], [5252, 5252],
    [539d, 539d], [590e, 590e], [5d6f, 5d6f], [5dee, 5dee], [632b, 632b],
    [63aa, 63aa], [6413, 6413], [6467, 6467], [64ae, 64ae], [6614, 6614],
    [6700, 6700], [68e4, 68e4], [6fa8, 6fa8], [71df, 71df], [73bc, 73bc],
    [7473, 7473], [75e4, 75e4], [7625, 7625], [7749, 7749], [77ec, 77ec],
    [78cb, 78cb], [7e12, 7e12], [811e, 811e], [839d, 839d], [83a1, 83a1],
    [84ab, 84ab], [84cc, 84cc], [8516, 8516], [8658, 8658], [894a, 894a],
    [8ace, 8ace], [8e49, 8e49], [8ea6, 8ea6], [902a, 902a], [9073, 9073],
    [9147, 9147], [919d, 919d], [92bc, 92bc], [932f, 932f], [9aca, 9aca],
    [9e7a, 9e7a], [9f79, 9f79], [2098f, 2098f], [22490, 22490],
    [22682, 22682], [2290e, 2290e], [22aec, 22aec], [22bfd, 22bfd],
    [235b5, 235b5], [23a0e, 23a0e], [23a48, 23a48], [2481d, 2481d],
    [25549, 25549], [25b6d, 25b6d], [25c2d, 25c2d], [2768f, 2768f],
    [27a98, 27a98], [281c3, 281c3], [286cf, 286cf], [2911d, 2911d],
    [29bc9, 29bc9], [2a499, 2a499], [2a613, 2a613]**/


    namespace {
    const static UnicodeSet::run_t __cuo_Set_runs[] = {
    {Empty, 446}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 27},
    {Mixed, 2}, {Empty, 28}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 19}, {Mixed, 2}, {Empty, 7}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 60}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2896}, {Mixed, 1}, {Empty, 215}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 77}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 109},
    {Mixed, 1}, {Empty, 105}, {Mixed, 1}, {Empty, 48}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 210}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 81}, {Mixed, 1}, {Empty, 85}, {Mixed, 1}, {Empty, 69},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 29391}};
    const static UnicodeSet::bitquad_t  __cuo_Set_quads[] = {
    0x00000080, 0x00000800, 0x00000100, 0x00800000, 0x00080000, 0x00000010,
    0x01000000, 0x00400000, 0x00000002, 0x10000000, 0x00000100, 0x10000000,
    0x40000000, 0x00040200, 0x20000000, 0x00004000, 0x00008000, 0x00004000,
    0x00000800, 0x00000400, 0x00080000, 0x00000080, 0x00004000, 0x00100000,
    0x00000001, 0x00000010, 0x00000100, 0x80000000, 0x10000000, 0x00080000,
    0x00000010, 0x00000020, 0x00000200, 0x00001000, 0x00000800, 0x00040000,
    0x40000000, 0x20000000, 0x00000002, 0x00000800, 0x00001000, 0x00400000,
    0x01000000, 0x00000400, 0x00004000, 0x00000200, 0x00000040, 0x00000400,
    0x00080000, 0x00000080, 0x20000000, 0x10000000, 0x00008000, 0x00000400,
    0x04000000, 0x02000000, 0x00008000, 0x00010000, 0x00000004, 0x00004000,
    0x00001000, 0x20000000, 0x00200000, 0x00004000, 0x00000100, 0x20000000,
    0x00000200, 0x00002000, 0x00002000, 0x00008000, 0x01000000, 0x00000008,
    0x00008000, 0x20000000, 0x00000200, 0x02000000, 0x00080000};
    }

    const static UnicodeSet cuo_Set{const_cast<UnicodeSet::run_t *>(__cuo_Set_runs), 149, 0, const_cast<UnicodeSet::bitquad_t *>(__cuo_Set_quads), 77, 0};

    /** Code Point Ranges for mang
    [37cc, 37cc], [37d0, 37d0], [37ff, 37ff], [3936, 3936], [3b12, 3b12],
    [3d07, 3d07], [4073, 4073], [43f5, 43f5], [448e, 448e], [44fc, 44fc],
    [4d68, 4d68], [5396, 5396], [5402, 5402], [54e4, 54e4], [58fe, 58fe],
    [5a0f, 5a0f], [5c28, 5c28], [5eac, 5eac], [5fd9, 5fd9], [607e, 607e],
    [671a, 671a], [6726, 6726], [6757, 6757], [6767, 6767], [6c13, 6c13],
    [6c52, 6c52], [6d5d, 6d5d], [6f2d, 6f2d], [7264, 7264], [727b, 727b],
    [72f5, 72f5], [753f, 753f], [75dd, 75dd], [76f2, 76f3], [77a2, 77a2],
    [7865, 7865], [786d, 786d], [7b00, 7b00], [8292, 8292], [832b, 832b],
    [833b, 833b], [83bd, 83bd], [8609, 8609], [86d6, 86d6], [87d2, 87d2],
    [9099, 9099], [92e9, 92e9], [99f9, 99f9], [9e0f, 9e0f], [9f8d, 9f8d],
    [20235, 20235], [20bb5, 20bb5], [21156, 21156], [2162a, 2162a],
    [21a69, 21a69], [21a7d, 21a7d], [21d40, 21d40], [23677, 23677],
    [23bec, 23bec], [23d88, 23d88], [24c21, 24c21], [25043, 25043],
    [25199, 25199], [2541e, 2541e], [25755, 25755], [25929, 25929],
    [25b5a, 25b5a], [25b8e, 25b8e], [263a8, 263a8], [2672d, 2672d],
    [286cc, 286cc], [29141, 29141], [294bf, 294bf], [29678, 29678],
    [296f2, 296f2], [29a8e, 29a8e], [29b52, 29b52], [29df6, 29df6],
    [2a06a, 2a06a], [2a6a2, 2a6a2]**/


    namespace {
    const static UnicodeSet::run_t __mang_Set_runs[] = {
    {Empty, 446}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 67}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 52}, {Mixed, 4},
    {Empty, 36}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 2836}, {Mixed, 1}, {Empty, 75}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 200}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 116},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 64}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 252},
    {Mixed, 1}, {Empty, 83}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 29386}};
    const static UnicodeSet::bitquad_t  __mang_Set_quads[] = {
    0x00011000, 0x80000000, 0x00400000, 0x00040000, 0x00000080, 0x00080000,
    0x00200000, 0x00004000, 0x10000000, 0x00000100, 0x00400000, 0x00000004,
    0x00000010, 0x40000000, 0x00008000, 0x00000100, 0x00001000, 0x02000000,
    0x40000000, 0x04000000, 0x00000040, 0x00800000, 0x00000080, 0x00080000,
    0x00040000, 0x20000000, 0x00002000, 0x08000010, 0x00200000, 0x80000000,
    0x20000000, 0x000c0000, 0x00000004, 0x00002020, 0x00000001, 0x00040000,
    0x08000800, 0x20000000, 0x00000200, 0x00400000, 0x00040000, 0x02000000,
    0x00000200, 0x02000000, 0x00008000, 0x00002000, 0x00200000, 0x00200000,
    0x00400000, 0x00000400, 0x20000200, 0x00000001, 0x00800000, 0x00001000,
    0x00000100, 0x00000002, 0x00000008, 0x02000000, 0x40000000, 0x00200000,
    0x00000200, 0x04000000, 0x00004000, 0x00000100, 0x00002000, 0x00001000,
    0x00000002, 0x80000000, 0x01000000, 0x00040000, 0x00004000, 0x00040000,
    0x00400000, 0x00000400, 0x00000004};
    }

    const static UnicodeSet mang_Set{const_cast<UnicodeSet::run_t *>(__mang_Set_runs), 143, 0, const_cast<UnicodeSet::bitquad_t *>(__mang_Set_quads), 75, 0};

    /** Code Point Ranges for tuo
    [37ce, 37ce], [3a0a, 3a0a], [3f20, 3f20], [3f83, 3f83], [415c, 415c],
    [436b, 436b], [470f, 470f], [4850, 4850], [4c8a, 4c8a], [4d31, 4d31],
    [4e47, 4e47], [4ed6, 4ed6], [4edb, 4edb], [4f57, 4f57], [4f82, 4f82],
    [4fbb, 4fbb], [5483, 5483], [553e, 553e], [563d, 563d], [5768, 5768],
    [5836, 5836], [59a5, 59a5], [5aa0, 5aa0], [5b83, 5b83], [5cae, 5cae],
    [5eb9, 5eb9], [5f75, 5f75], [60f0, 60f0], [6258, 6258], [6261, 6261],
    [62d3, 62d3], [62d6, 62d6], [635d, 635d], [64b1, 64b1], [6754, 6754],
    [675d, 675d], [67c1, 67c1], [67dd, 67dd], [68c1, 68c1], [6a50, 6a50],
    [6a62, 6a62], [6bfb, 6bfb], [6c51, 6c51], [6c60, 6c60], [6cb0, 6cb1],
    [6db6, 6db6], [7260, 7260], [72cf, 72cf], [7823, 7823], [78da, 78da],
    [7a0e, 7a0e], [7c5c, 7c5c], [7d3d, 7d3d], [7d8f, 7d8f], [8131, 8131],
    [8204, 8204], [838c, 838c], [8600, 8600], [86c7, 86c7], [87fa, 87fa],
    [8889, 8889], [8898, 8898], [88a5, 88a5], [8a11, 8a11], [8a17, 8a17],
    [8a51, 8a51], [8aac, 8aac], [8dc5, 8dc5], [8dce, 8dce], [8e3b, 8e3b],
    [8ec3, 8ec3], [8fc6, 8fc6], [8fe4, 8fe4], [8ff1, 8ff1], [9161, 9161],
    [9248, 9248], [92d6, 92d6], [9624, 9624], [9640, 9641], [968b, 968b],
    [98e5, 98e5], [99b1, 99b2], [99dd, 99de], [9a52, 9a52], [9b44, 9b44],
    [9b60, 9b60], [9b80, 9b80], [9c16, 9c16], [9c53, 9c53], [9d15, 9d15],
    [9d4e, 9d4e], [9f09, 9f09], [9f27, 9f27], [20c39, 20c39],
    [20d3b, 20d3b], [211c8, 211c8], [2140f, 2140f], [216f5, 216f5],
    [21a46, 21a46], [21e6c, 21e6c], [2213f, 2213f], [223dc, 223dc],
    [22460, 22460], [224f0, 224f0], [22a77, 22a77], [22a7b, 22a7b],
    [22e28, 22e28], [22f0a, 22f0a], [235f8, 235f8], [237c1, 237c1],
    [23b86, 23b86], [23d7a, 23d7b], [23da6, 23da6], [23dff, 23dff],
    [245d9, 245d9], [2475b, 2475b], [248ef, 248ef], [24929, 24929],
    [24b3e, 24b3e], [24c61, 24c61], [24c67, 24c67], [24e62, 24e62],
    [254ff, 254ff], [25792, 25792], [25a40, 25a40], [26451, 26451],
    [26688, 26688], [26690, 26690], [26766, 26766], [27533, 27533],
    [27566, 27566], [27732, 27732], [278d6, 278d6], [27913, 27913],
    [279a7, 279a7], [279ad, 279ad], [279c9, 279c9], [27fe7, 27fe7],
    [27ff6, 27ff6], [28061, 28061], [280ab, 280ab], [28237, 28237],
    [2824b, 2824b], [28499, 28499], [2878c, 2878c], [28811, 28811],
    [28c89, 28c89], [28e54, 28e54], [28e96, 28e96], [290f0, 290f1],
    [29161, 29161], [2927a, 2927a], [293bc, 293bc], [297f0, 297f0],
    [2988a, 2988a], [298b5, 298b5], [299d0, 299d0], [29c7e, 29c7e],
    [29ffd, 29ffd], [2a302, 2a302], [2a615, 2a615], [2a617, 2a617]**/


    namespace {
    const static UnicodeSet::run_t __tuo_Set_runs[] = {
    {Empty, 446}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 38}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 11}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 7}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 26}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
    {Empty, 7}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 2},
    {Empty, 2919}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 62}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 79}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 109},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 48}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 11}, {Mixed, 2}, {Empty, 17}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 29391}};
    const static UnicodeSet::bitquad_t  __tuo_Set_quads[] = {
    0x00004000, 0x00000400, 0x00000001, 0x00000008, 0x10000000, 0x00000800,
    0x00008000, 0x00010000, 0x00000400, 0x00020000, 0x00000080, 0x08400000,
    0x00800000, 0x00000004, 0x08000000, 0x00000008, 0x40000000, 0x20000000,
    0x00000100, 0x00400000, 0x00000020, 0x00000001, 0x00000008, 0x00004000,
    0x02000000, 0x00200000, 0x00010000, 0x01000000, 0x00000002, 0x00480000,
    0x20000000, 0x00020000, 0x20100000, 0x20000002, 0x00000002, 0x00010000,
    0x00000004, 0x08000000, 0x00020000, 0x00000001, 0x00030000, 0x00400000,
    0x00000001, 0x00008000, 0x00000008, 0x04000000, 0x00004000, 0x10000000,
    0x20000000, 0x00008000, 0x00020000, 0x00000010, 0x00001000, 0x00000001,
    0x00000080, 0x04000000, 0x01000200, 0x00000020, 0x00820000, 0x00020000,
    0x00001000, 0x00004020, 0x08000000, 0x00000008, 0x00000040, 0x00020010,
    0x00000002, 0x00000100, 0x00400000, 0x00000010, 0x00000003, 0x00000800,
    0x00000020, 0x00060000, 0x60000000, 0x00040000, 0x00000010, 0x00000001,
    0x00000001, 0x00400000, 0x00080000, 0x00200000, 0x00004000, 0x00000200,
    0x00000080, 0x02000000, 0x08000000, 0x00000100, 0x00008000, 0x00200000,
    0x00000040, 0x00001000, 0x80000000, 0x10000000, 0x00000001, 0x00010000,
    0x08800000, 0x00000100, 0x00000400, 0x01000000, 0x00000002, 0x00000040,
    0x0c000000, 0x00000040, 0x80000000, 0x02000000, 0x08000000, 0x00008000,
    0x00000200, 0x40000000, 0x00000082, 0x00000004, 0x80000000, 0x00040000,
    0x00000001, 0x00020000, 0x00010100, 0x00000040, 0x00080000, 0x00000040,
    0x00040000, 0x00400000, 0x00080000, 0x00002080, 0x00000200, 0x00400080,
    0x00000002, 0x00000800, 0x00800000, 0x00000800, 0x02000000, 0x00001000,
    0x00020000, 0x00000200, 0x00100000, 0x00400000, 0x00030000, 0x00000002,
    0x04000000, 0x10000000, 0x00010000, 0x00000400, 0x00200000, 0x00010000,
    0x40000000, 0x20000000, 0x00000004, 0x00a00000};
    }

    const static UnicodeSet tuo_Set{const_cast<UnicodeSet::run_t *>(__tuo_Set_runs), 269, 0, const_cast<UnicodeSet::bitquad_t *>(__tuo_Set_quads), 148, 0};

    /** Code Point Ranges for qun
    [37d2, 37d2], [428e, 428e], [56f7, 56f7], [590b, 590b], [5bad, 5bad],
    [5cee, 5cee], [6b4f, 6b4f], [7b98, 7b98], [7fa3, 7fa3], [88d9, 88d9],
    [8e06, 8e06], [8e72, 8e72], [8f11, 8f11], [9021, 9021], [9041, 9041],
    [9e87, 9e87], [21200, 21200], [226d5, 226d5], [23004, 23004],
    [246ed, 246ed], [24e37, 24e37], [260e2, 260e2], [26f56, 26f56],
    [27f10, 27f10], [28797, 28797], [29397, 29397], [29901, 29901]**/


    namespace {
    const static UnicodeSet::run_t __qun_Set_runs[] = {
    {Empty, 446}, {Mixed, 1}, {Empty, 85}, {Mixed, 1}, {Empty, 162},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 114}, {Mixed, 1}, {Empty, 129},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 72}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 8}, {Mixed, 2}, {Empty, 113}, {Mixed, 1}, {Empty, 2971},
    {Mixed, 1}, {Empty, 165}, {Mixed, 1}, {Empty, 73}, {Mixed, 1},
    {Empty, 182}, {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 149},
    {Mixed, 1}, {Empty, 114}, {Mixed, 1}, {Empty, 125}, {Mixed, 1},
    {Empty, 67}, {Mixed, 1}, {Empty, 95}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 29495}};
    const static UnicodeSet::bitquad_t  __qun_Set_quads[] = {
    0x00040000, 0x00004000, 0x00800000, 0x00000800, 0x00002000, 0x00004000,
    0x00008000, 0x01000000, 0x00000008, 0x02000000, 0x00000040, 0x00040000,
    0x00020000, 0x00000002, 0x00000002, 0x00000080, 0x00000001, 0x00200000,
    0x00000010, 0x00002000, 0x00800000, 0x00000004, 0x00400000, 0x00010000,
    0x00800000, 0x00800000, 0x00000002};
    }

    const static UnicodeSet qun_Set{const_cast<UnicodeSet::run_t *>(__qun_Set_runs), 53, 0, const_cast<UnicodeSet::bitquad_t *>(__qun_Set_quads), 27, 0};

    /** Code Point Ranges for tiao
    [37d8, 37d8], [3a04, 3a04], [3b38, 3b38], [413b, 413b], [4384, 4384],
    [446c, 446c], [45ba, 45ba], [47ed, 47ed], [4837, 4837], [4a66, 4a66],
    [4bfe, 4bfe], [4c54, 4c54], [4cc2, 4cc2], [4f7b, 4f7b], [5135, 5135],
    [54b7, 54b7], [5541, 5541], [59da, 59da], [5b25, 5b25], [5ba8, 5ba8],
    [5ca7, 5ca7], [5ea3, 5ea3], [604c, 604c], [6311, 6311], [65a2, 65a2],
    [65eb, 65eb], [6640, 6640], [6713, 6713], [6737, 6737], [6843, 6843],
    [689d, 689d], [6a24, 6a24], [773a, 773a], [7952, 7952], [7967, 7967],
    [7a20, 7a20], [7a95, 7a95], [7ab1, 7ab1], [7b24, 7b24], [7cf6, 7cf6],
    [7d69, 7d69], [804e, 804e], [8129, 8129], [825e, 825e], [8280, 8280],
    [82d5, 82d5], [84e7, 84e8], [8729, 8729], [899c, 899c], [8a82, 8a82],
    [8abf, 8abf], [8d85, 8d85], [8d92, 8d92], [8da0, 8da0], [8df3, 8df3],
    [8e14, 8e14], [8fe2, 8fe2], [929a, 929a], [92da, 92da], [93a5, 93a5],
    [982b, 982b], [9aeb, 9aeb], [9bc8, 9bc8], [9c37, 9c37], [9f60, 9f60],
    [206ea, 206ea], [2093a, 2093a], [209ea, 209ea], [2180a, 2180a],
    [21bff, 21bff], [21ccf, 21ccf], [22204, 22204], [224dd, 224dd],
    [22588, 22588], [22cd9, 22cd9], [22eab, 22eab], [23081, 23081],
    [230a5, 230a5], [234bc, 234bc], [237d0, 237d0], [23b38, 23b38],
    [253ba, 253ba], [25d8f, 25d8f], [26a44, 26a44], [26d1a, 26d1a],
    [26eb0, 26eb0], [27301, 27301], [282eb, 282eb], [28fbe, 28fbe],
    [29ca4, 29ca4], [2a32a, 2a32a]**/


    namespace {
    const static UnicodeSet::run_t __tiao_Set_runs[] = {
    {Empty, 446}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 103}, {Mixed, 1}, {Empty, 16},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 22}, {Mixed, 2}, {Empty, 1}, {Mixed, 2},
    {Empty, 14}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 2875}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 112}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 57}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 14},
    {Mixed, 2}, {Empty, 31}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 195}, {Mixed, 1}, {Empty, 78},
    {Mixed, 1}, {Empty, 101}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 126},
    {Mixed, 1}, {Empty, 101}, {Mixed, 1}, {Empty, 103}, {Mixed, 1},
    {Empty, 51}, {Mixed, 1}, {Empty, 29414}};
    const static UnicodeSet::bitquad_t  __tiao_Set_quads[] = {
    0x01000000, 0x00000010, 0x01000000, 0x08000000, 0x00000010, 0x00001000,
    0x04000000, 0x00002000, 0x00800000, 0x00000040, 0x40000000, 0x00100000,
    0x00000004, 0x08000000, 0x00200000, 0x00800000, 0x00000002, 0x04000000,
    0x00000020, 0x00000100, 0x00000080, 0x00000008, 0x00001000, 0x00020000,
    0x00000004, 0x00000800, 0x00000001, 0x00080000, 0x00800000, 0x00000008,
    0x20000000, 0x00000010, 0x04000000, 0x00040000, 0x00000080, 0x00000001,
    0x00200000, 0x00020000, 0x00000010, 0x00400000, 0x00000200, 0x00004000,
    0x00000200, 0x40000000, 0x00000001, 0x00200000, 0x00000180, 0x00000200,
    0x10000000, 0x00000004, 0x80000000, 0x00040020, 0x00000001, 0x00080000,
    0x00100000, 0x00000004, 0x04000000, 0x04000000, 0x00000020, 0x00000800,
    0x00000800, 0x00000100, 0x00800000, 0x00000001, 0x00000400, 0x04000000,
    0x00000400, 0x00000400, 0x80000000, 0x00008000, 0x00000010, 0x20000000,
    0x00000100, 0x02000000, 0x00000800, 0x00000002, 0x00000020, 0x10000000,
    0x00010000, 0x01000000, 0x04000000, 0x00008000, 0x00000010, 0x04000000,
    0x00010000, 0x00000002, 0x00000800, 0x40000000, 0x00000010, 0x00000400};
    }

    const static UnicodeSet tiao_Set{const_cast<UnicodeSet::run_t *>(__tiao_Set_runs), 167, 0, const_cast<UnicodeSet::bitquad_t *>(__tiao_Set_quads), 90, 0};

    /** Code Point Ranges for duan
    [37e8, 37e8], [482a, 482a], [5073, 5073], [526c, 526c], [5845, 5845],
    [5a8f, 5a8f], [65b7, 65b7], [6934, 6934], [6bb5, 6bb5], [6bc8, 6bc8],
    [7145, 7145], [7456, 7456], [77ed, 77ed], [78ab, 78ab], [7aef, 7aef],
    [7bc5, 7bc5], [7c6a, 7c6a], [7dde, 7dde], [8011, 8011], [8176, 8176],
    [846e, 846e], [890d, 890d], [8e39, 8e39], [935b, 935b], [9374, 9374],
    [20871, 20871], [22b43, 22b43], [22beb, 22beb], [22dd6, 22dd6],
    [2382d, 2382d], [25804, 25804], [25d63, 25d63], [26fb8, 26fb8],
    [27917, 27917], [27db2, 27db2], [28c5a, 28c5a], [28ea3, 28ea3],
    [293c7, 293c7], [2991a, 2991a], [29923, 29923]**/


    namespace {
    const static UnicodeSet::run_t __duan_Set_runs[] = {
    {Empty, 447}, {Mixed, 1}, {Empty, 129}, {Mixed, 1}, {Empty, 65},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 88}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 43}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 40}, {Mixed, 2},
    {Empty, 2983}, {Mixed, 1}, {Empty, 278}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 82}, {Mixed, 1},
    {Empty, 254}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 145},
    {Mixed, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 116}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 41}, {Mixed, 2}, {Empty, 29494}};
    const static UnicodeSet::bitquad_t  __duan_Set_quads[] = {
    0x00000100, 0x00000400, 0x00080000, 0x00001000, 0x00000020, 0x00008000,
    0x00800000, 0x00100000, 0x00200000, 0x00000100, 0x00000020, 0x00400000,
    0x00002000, 0x00000800, 0x00008000, 0x00000020, 0x00000400, 0x40000000,
    0x00020000, 0x00400000, 0x00004000, 0x00002000, 0x02000000, 0x08000000,
    0x00100000, 0x00020000, 0x00000008, 0x00000800, 0x00400000, 0x00002000,
    0x00000010, 0x00000008, 0x01000000, 0x00800000, 0x00040000, 0x04000000,
    0x00000008, 0x00000080, 0x04000000, 0x00000008};
    }

    const static UnicodeSet duan_Set{const_cast<UnicodeSet::run_t *>(__duan_Set_runs), 75, 0, const_cast<UnicodeSet::bitquad_t *>(__duan_Set_quads), 40, 0};

    /** Code Point Ranges for ming
    [37f0, 37f0], [3ae5, 3ae5], [4119, 4119], [4285, 4285], [43c3, 43c3],
    [448c, 448c], [4ae4, 4ae4], [4cdf, 4cdf], [4f72, 4f72], [51a5, 51a5],
    [51d5, 51d5], [540d, 540d], [547d, 547d], [59f3, 59f3], [5ac7, 5ac7],
    [614f, 614f], [660e, 660e], [669d, 669d], [69a0, 69a0], [6d3a, 6d3a],
    [6e9f, 6e9f], [76bf, 76bf], [7700, 7700], [7733, 7733], [7791, 7791],
    [8317, 8317], [840c, 840c], [84c2, 84c2], [879f, 879f], [89ad, 89ad],
    [8a7a, 8a7a], [910d, 910d], [9169, 9169], [9298, 9298], [9cf4, 9cf4],
    [202f6, 202f6], [21978, 21978], [2530f, 2530f], [2594a, 2594a],
    [25e46, 25e46], [25fe8, 25fe8], [26849, 26849], [26aed, 26aed],
    [277e0, 277e0], [27c74, 27c74], [298f6, 298f6], [2a0a4, 2a0a4],
    [2a5f8, 2a5f8]**/


    namespace {
    const static UnicodeSet::run_t __ming_Set_runs[] = {
    {Empty, 447}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 17}, {Mixed, 2}, {Empty, 17},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 64}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 91}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 52},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 82},
    {Mixed, 1}, {Empty, 2863}, {Mixed, 1}, {Empty, 179}, {Mixed, 1},
    {Empty, 460}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 66}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 103}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 227}, {Mixed, 1}, {Empty, 61}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 29392}};
    const static UnicodeSet::bitquad_t  __ming_Set_quads[] = {
    0x00010000, 0x00000020, 0x02000000, 0x00000020, 0x00000008, 0x00001000,
    0x00000010, 0x80000000, 0x00040000, 0x00000020, 0x00200000, 0x00002000,
    0x20000000, 0x00080000, 0x00000080, 0x00008000, 0x00004000, 0x20000000,
    0x00000001, 0x04000000, 0x80000000, 0x80000000, 0x00000001, 0x00080000,
    0x00020000, 0x00800000, 0x00001000, 0x00000004, 0x80000000, 0x00002000,
    0x04000000, 0x00002000, 0x00000200, 0x01000000, 0x00100000, 0x00400000,
    0x01000000, 0x00008000, 0x00000400, 0x00000040, 0x00000100, 0x00000200,
    0x00002000, 0x00000001, 0x00100000, 0x00400000, 0x00000010, 0x01000000};
    }

    const static UnicodeSet ming_Set{const_cast<UnicodeSet::run_t *>(__ming_Set_runs), 93, 0, const_cast<UnicodeSet::bitquad_t *>(__ming_Set_quads), 48, 0};

    /** Code Point Ranges for biao
    [37fd, 37fd], [3dbe, 3dbe], [4043, 4043], [406d, 406d], [417a, 417a],
    [4538, 4538], [4673, 4673], [4784, 4784], [4bbd, 4bbd], [4ff5, 4ff5],
    [50c4, 50c4], [5126, 5126], [527d, 527d], [5882, 5882], [5a4a, 5a4a],
    [5ad6, 5ad6], [5e56, 5e56], [5f6a, 5f6a], [647d, 647d], [6753, 6753],
    [6a19, 6a19], [6aa6, 6aa6], [6df2, 6df2], [6eee, 6eee], [6f02, 6f02],
    [700c, 700c], [706c, 706c], [719b, 719b], [7202, 7202], [730b, 730b],
    [762d, 762d], [78e6, 78e6], [7a6e, 7a6e], [7bfb, 7bfb], [813f, 813f],
    [8194, 8194], [8198, 8198], [81d5, 81d5], [82de, 82de], [8508, 8508],
    [85e8, 85e8], [8868, 8868], [88f1, 88f1], [893e, 893e], [8ad8, 8ad8],
    [8b24, 8b24], [8d06, 8d06], [9336, 9336], [93d6, 93d6], [93e2, 93e2],
    [9463, 9463], [98a9, 98a9], [98ae, 98ae], [98b7, 98b7], [98c6, 98c6],
    [9a43, 9a43], [9a6b, 9a6b], [9adf, 9adf], [9c3e, 9c3e], [9e83, 9e83],
    [20502, 20502], [206a0, 206a0], [20b2a, 20b2a], [2215a, 2215a],
    [224af, 224af], [22fcf, 22fcf], [23120, 23120], [24086, 24086],
    [24180, 24180], [2442b, 2442b], [25624, 25624], [25ca6, 25ca6],
    [26517, 26517], [26529, 26529], [2680e, 2680e], [26f91, 26f91],
    [2776a, 2776a], [2794d, 2794d], [27cc0, 27cc0], [27d0e, 27d0e],
    [27d15, 27d15], [28b5a, 28b5a], [29a8a, 29a8a], [29d29, 29d29],
    [29f41, 29f41]**/


    namespace {
    const static UnicodeSet::run_t __biao_Set_runs[] = {
    {Empty, 447}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 20},
    {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 33}, {Mixed, 2}, {Empty, 11}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 2867}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 176}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 88}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 122}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 143}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 66}, {Mixed, 2}, {Empty, 22}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 113},
    {Mixed, 1}, {Empty, 121}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 29445}};
    const static UnicodeSet::bitquad_t  __biao_Set_quads[] = {
    0x20000000, 0x40000000, 0x00000008, 0x00002000, 0x04000000, 0x01000000,
    0x00080000, 0x00000010, 0x20000000, 0x00200000, 0x00000010, 0x00000040,
    0x20000000, 0x00000004, 0x00000400, 0x00400000, 0x00400000, 0x00000400,
    0x20000000, 0x00080000, 0x02000000, 0x00000040, 0x00040000, 0x00004000,
    0x00000004, 0x00001000, 0x00001000, 0x08000000, 0x00000004, 0x00000800,
    0x00002000, 0x00000040, 0x00004000, 0x08000000, 0x80000000, 0x01100000,
    0x00200000, 0x40000000, 0x00000100, 0x00000100, 0x00000100, 0x00020000,
    0x40000000, 0x01000000, 0x00000010, 0x00000040, 0x00400000, 0x00400000,
    0x00000004, 0x00000008, 0x00804200, 0x00000040, 0x00000008, 0x00000800,
    0x80000000, 0x40000000, 0x00000008, 0x00000004, 0x00000001, 0x00000400,
    0x04000000, 0x00008000, 0x00008000, 0x00000001, 0x00000040, 0x00000001,
    0x00000800, 0x00000010, 0x00000040, 0x00800000, 0x00000200, 0x00004000,
    0x00020000, 0x00000400, 0x00002000, 0x00000001, 0x00204000, 0x04000000,
    0x00000400, 0x00000200, 0x00000002};
    }

    const static UnicodeSet biao_Set{const_cast<UnicodeSet::run_t *>(__biao_Set_runs), 151, 0, const_cast<UnicodeSet::bitquad_t *>(__biao_Set_quads), 81, 0};

    /** Code Point Ranges for run
    [3808, 3808], [43f0, 43f0], [648b, 648b], [6a4d, 6a4d], [6f64, 6f64],
    [958f, 958f], [20dc0, 20dc0], [28cdd, 28cdd], [28dce, 28dce],
    [2900b, 2900b]**/


    namespace {
    const static UnicodeSet::run_t __run_Set_runs[] = {
    {Empty, 448}, {Mixed, 1}, {Empty, 94}, {Mixed, 1}, {Empty, 260},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 304}, {Mixed, 1}, {Empty, 3009}, {Mixed, 1}, {Empty, 1015},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 29567}};
    const static UnicodeSet::bitquad_t  __run_Set_quads[] = {
    0x00000100, 0x00010000, 0x00000800, 0x00002000, 0x00000010, 0x00008000,
    0x00000001, 0x20000000, 0x00004000, 0x00000800};
    }

    const static UnicodeSet run_Set{const_cast<UnicodeSet::run_t *>(__run_Set_runs), 21, 0, const_cast<UnicodeSet::bitquad_t *>(__run_Set_quads), 10, 0};

    /** Code Point Ranges for zui
    [3811, 3811], [3b70, 3b70], [44f1, 44f1], [4612, 4612], [4639, 4639],
    [4b94, 4b94], [4bff, 4bff], [539c, 539c], [55fa, 55fa], [5634, 5634],
    [567f, 567f], [5ae2, 5ae2], [5d89, 5d8a], [5db5, 5db5], [6467, 6467],
    [64ae, 64ae], [666c, 666c], [6700, 6700], [6718, 6718], [682c, 682c],
    [69ef, 69ef], [6a36, 6a36], [6a87, 6a87], [6a8c, 6a8c], [6b08, 6b08],
    [6fe2, 6fe2], [74bb, 74bb], [775f, 775f], [797d, 797d], [7a21, 7a21],
    [7d4a, 7d4a], [7e97, 7e97], [7f6a, 7f6a], [7fa7, 7fa7], [855d, 855e],
    [87d5, 87d5], [89dc, 89dc], [8fa0, 8fa0], [9168, 9168], [917b, 917b],
    [9189, 9189], [92f7, 92f7], [930a, 930a], [96cb, 96cb], [20c8b, 20c8b],
    [20f8b, 20f8b], [20fd8, 20fd8], [2166d, 2166d], [21854, 21854],
    [21f41, 21f41], [21f5b, 21f5b], [22221, 22221], [2229b, 2229b],
    [235b1, 235b1], [23a51, 23a51], [2534b, 2534b], [25ce3, 25ce3],
    [25cf5, 25cf5], [26188, 26188], [2622c, 2622c], [263f3, 263f3],
    [26648, 26648], [26e3a, 26e3a], [273b9, 273b9], [27edd, 27edd],
    [28885, 28885], [28ef5, 28ef5], [28fc7, 28fc7], [296bb, 296bb],
    [298f7, 298f7], [29ca8, 29ca8], [2a2cc, 2a2cc], [2a4cc, 2a4cc]**/


    namespace {
    const static UnicodeSet::run_t __zui_Set_runs[] = {
    {Empty, 448}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 75},
    {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 42}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 20}, {Mixed, 2}, {Empty, 53}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 13}, {Mixed, 2}, {Empty, 10},
    {Mixed, 2}, {Empty, 29}, {Mixed, 1}, {Empty, 2989}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 52},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 55}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 152},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 199}, {Mixed, 1},
    {Empty, 76}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 62}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 88},
    {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 48}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 29401}};
    const static UnicodeSet::bitquad_t  __zui_Set_quads[] = {
    0x00020000, 0x00010000, 0x00020000, 0x00040000, 0x02000000, 0x00100000,
    0x80000000, 0x10000000, 0x04000000, 0x00100000, 0x80000000, 0x00000004,
    0x00000600, 0x00200000, 0x00000080, 0x00004000, 0x00001000, 0x01000001,
    0x00001000, 0x00008000, 0x00400000, 0x00001080, 0x00000100, 0x00000004,
    0x08000000, 0x80000000, 0x20000000, 0x00000002, 0x00000400, 0x00800000,
    0x00000400, 0x00000080, 0x60000000, 0x00200000, 0x10000000, 0x00000001,
    0x08000100, 0x00000200, 0x00800000, 0x00000400, 0x00000800, 0x00000800,
    0x00000800, 0x01000000, 0x00002000, 0x00100000, 0x08000002, 0x00000002,
    0x08000000, 0x00020000, 0x00020000, 0x00000800, 0x00200008, 0x00000100,
    0x00001000, 0x00080000, 0x00000100, 0x04000000, 0x02000000, 0x20000000,
    0x00000020, 0x00200000, 0x00000080, 0x08000000, 0x00800000, 0x00000100,
    0x00001000, 0x00001000};
    }

    const static UnicodeSet zui_Set{const_cast<UnicodeSet::run_t *>(__zui_Set_runs), 129, 0, const_cast<UnicodeSet::bitquad_t *>(__zui_Set_quads), 68, 0};

    /** Code Point Ranges for wo
    [381b, 381b], [39b1, 39b1], [39f4, 39f4], [3c67, 3c67], [3e7b, 3e7b],
    [4011, 4011], [404a, 404a], [40ba, 40ba], [41f6, 41f6], [480e, 480e],
    [4a4a, 4a4a], [4bb8, 4bb8], [4c00, 4c00], [4ef4, 4ef4], [502d, 502d],
    [5053, 5053], [54bc, 54bc], [5529, 5529], [5594, 5594], [55cc, 55cc],
    [5641, 5641], [5684, 5684], [581d, 581d], [592d, 592d], [5a50, 5a51],
    [5a89, 5a89], [5aaa, 5aaa], [5e44, 5e44], [6211, 6211], [6370, 6370],
    [637c, 637c], [637e, 637e], [63e1, 63e1], [64be, 64be], [64ed, 64ed],
    [65a1, 65a1], [674c, 674c], [6782, 6782], [6943, 6943], [6c83, 6c83],
    [6db4, 6db4], [6db9, 6db9], [6e25, 6e26], [6fc4, 6fc4], [6fe3, 6fe3],
    [7125, 7125], [7327, 7327], [74c1, 74c1], [761f, 761f], [7783, 7783],
    [77c6, 77c6], [786a, 786a], [7aa9, 7aa9], [809f, 809f], [815b, 815b],
    [81d2, 81d2], [81e5, 81e5], [8267, 8267], [8435, 8435], [84a6, 84a6],
    [85b6, 85b6], [8778, 8778], [8e12, 8e12], [8e20, 8e20], [96d8, 96d8],
    [99a7, 99a7], [9f77, 9f77], [9f8f, 9f8f], [20aa7, 20aa7],
    [20dcf, 20dcf], [20fdf, 20fdf], [2106e, 2106e], [21394, 21394],
    [2145f, 2145f], [215b2, 215b2], [229b4, 229b4], [22af7, 22af7],
    [23073, 23073], [230bd, 230bd], [231eb, 231eb], [2369d, 2369d],
    [2418f, 2418f], [24266, 24266], [24853, 24853], [24ecc, 24ecc],
    [25117, 25117], [25463, 25463], [257ff, 257ff], [25a8d, 25a8d],
    [26928, 26928], [26bcf, 26bcf], [26c16, 26c16], [26cf9, 26cf9],
    [26df5, 26df5], [27912, 27912], [2794b, 2794b], [27d95, 27d95],
    [2805f, 2805f], [2831d, 2831d], [29231, 29231], [29426, 29426],
    [297d3, 297d3], [298f5, 298f5], [29b4f, 29b4f], [29b5d, 29b5d],
    [29b91, 29b91], [29def, 29def], [2a055, 2a055], [2a07e, 2a07e],
    [2a3a4, 2a3a4], [2a471, 2a471]**/


    namespace {
    const static UnicodeSet::run_t __wo_Set_runs[] = {
    {Empty, 448}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 34},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 28}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 52}, {Mixed, 2}, {Empty, 68}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 45}, {Mixed, 2}, {Empty, 2904}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 159}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 87}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 51},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 116},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 88}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 120}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 18}, {Mixed, 2}, {Empty, 25}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 29404}};
    const static UnicodeSet::bitquad_t  __wo_Set_quads[] = {
    0x08000000, 0x00020000, 0x00100000, 0x00000080, 0x08000000, 0x00020000,
    0x00000400, 0x04000000, 0x00400000, 0x00004000, 0x00000400, 0x01000000,
    0x00000001, 0x00100000, 0x00002000, 0x00080000, 0x10000000, 0x00000200,
    0x00100000, 0x00001000, 0x00000002, 0x00000010, 0x20000000, 0x00002000,
    0x00030000, 0x00000200, 0x00000400, 0x00000010, 0x00020000, 0x50010000,
    0x00000002, 0x40000000, 0x00002000, 0x00000002, 0x00001000, 0x00000004,
    0x00000008, 0x00000008, 0x02100000, 0x00000060, 0x00000010, 0x00000008,
    0x00000020, 0x00000080, 0x00000002, 0x80000000, 0x00000008, 0x00000040,
    0x00000400, 0x00000200, 0x80000000, 0x08000000, 0x00040000, 0x00000020,
    0x00000080, 0x00200000, 0x00000040, 0x00400000, 0x01000000, 0x00040000,
    0x00000001, 0x01000000, 0x00000080, 0x00800000, 0x00008000, 0x00000080,
    0x00008000, 0x80000000, 0x00004000, 0x00100000, 0x80000000, 0x00040000,
    0x00100000, 0x00800000, 0x00080000, 0x20000000, 0x00000800, 0x20000000,
    0x00008000, 0x00000040, 0x00080000, 0x00001000, 0x00800000, 0x00000008,
    0x80000000, 0x00002000, 0x00000100, 0x00008000, 0x00400000, 0x02000000,
    0x00200000, 0x00040000, 0x00000800, 0x00200000, 0x80000000, 0x20000000,
    0x00020000, 0x00000040, 0x00080000, 0x00200000, 0x20008000, 0x00020000,
    0x00008000, 0x00200000, 0x40000000, 0x00000010, 0x00020000};
    }

    const static UnicodeSet wo_Set{const_cast<UnicodeSet::run_t *>(__wo_Set_runs), 201, 0, const_cast<UnicodeSet::bitquad_t *>(__wo_Set_quads), 107, 0};

    /** Code Point Ranges for gang
    [382e, 382e], [3f1a, 3f1a], [3f58, 3f58], [4697, 4697], [4d1a, 4d1a],
    [4ea2, 4ea2], [4f09, 4f09], [51ae, 51ae], [525b, 525b], [5808, 5808],
    [583d, 583d], [5ca1, 5ca1], [5d17, 5d17], [6207, 6207], [625b, 625b],
    [6297, 6297], [6386, 6386], [6760, 6760], [68e1, 68e1], [6e2f, 6e2f],
    [6e9d, 6e9d], [7135, 7135], [7268, 7268], [7285, 7285], [72ba, 72ba],
    [7598, 7598], [77fc, 77fc], [7899, 7899], [7b7b, 7b7b], [7db1, 7db1],
    [7f38, 7f38], [7f41, 7f41], [7f61, 7f61], [809b, 809b], [80ae, 80ae],
    [91ed, 91ed], [92fc, 92fc], [962c, 962c], [980f, 980f], [20d79, 20d79],
    [211ec, 211ec], [22b48, 22b48], [22c0c, 22c0c], [235f5, 235f5],
    [23990, 23990], [262f3, 262f3], [26c4c, 26c4c], [287fc, 287fc]**/


    namespace {
    const static UnicodeSet::run_t __gang_Set_runs[] = {
    {Empty, 449}, {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 45}, {Mixed, 2},
    {Empty, 35}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 9}, {Mixed, 3}, {Empty, 22}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 11}, {Mixed, 3},
    {Empty, 8}, {Mixed, 2}, {Empty, 137}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 2986}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 202},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 78}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 330}, {Mixed, 1}, {Empty, 74},
    {Mixed, 1}, {Empty, 220}, {Mixed, 1}, {Empty, 29632}};
    const static UnicodeSet::bitquad_t  __gang_Set_quads[] = {
    0x00004000, 0x04000000, 0x01000000, 0x00800000, 0x04000000, 0x00000004,
    0x00000200, 0x00004000, 0x08000000, 0x00000100, 0x20000000, 0x00000002,
    0x00800000, 0x00000080, 0x08000000, 0x00800000, 0x00000040, 0x00000001,
    0x00000002, 0x00008000, 0x20000000, 0x00200000, 0x00000100, 0x00000020,
    0x04000000, 0x01000000, 0x10000000, 0x02000000, 0x08000000, 0x00020000,
    0x01000000, 0x00000002, 0x00000002, 0x08000000, 0x00004000, 0x00002000,
    0x10000000, 0x00001000, 0x00008000, 0x02000000, 0x00001000, 0x00000100,
    0x00001000, 0x00200000, 0x00010000, 0x00080000, 0x00001000, 0x10000000};
    }

    const static UnicodeSet gang_Set{const_cast<UnicodeSet::run_t *>(__gang_Set_runs), 85, 0, const_cast<UnicodeSet::bitquad_t *>(__gang_Set_quads), 48, 0};

    /** Code Point Ranges for ren
    [3834, 3834], [3cbd, 3cbd], [4014, 4014], [403c, 403c], [41ee, 41ee],
    [43d5, 43d5], [46be, 46be], [46d8, 46d8], [4b43, 4b43], [4eba, 4eba],
    [4ec1, 4ec1], [4ede, 4ede], [4efb, 4efb], [513f, 513f], [5203, 5203],
    [58ec, 58ec], [598a, 598a], [5c7b, 5c7b], [5fc8, 5fc8], [5fcd, 5fcd],
    [6041, 6041], [6268, 6268], [6732, 6732], [6752, 6752], [6820, 6820],
    [6823, 6823], [68ef, 68ef], [6d8a, 6d8a], [7263, 7263], [79c2, 79c2],
    [79f9, 79f9], [7a14, 7a14], [7d09, 7d09], [7d1d, 7d1d], [8095, 8095],
    [814d, 814d], [82a2, 82a2], [834f, 834f], [8375, 8375], [83cd, 83cd],
    [845a, 845a], [887d, 887d], [8a12, 8a12], [8a8d, 8a8d], [8ed4, 8ed4],
    [91f0, 91f0], [928b, 928b], [97cc, 97cc], [98ea, 98ea], [9b5c, 9b5c],
    [9d40, 9d40], [20bc4, 20bc4], [20c8f, 20c8f], [21c25, 21c25],
    [22189, 22189], [221e6, 221e6], [23149, 23149], [2634c, 2634c],
    [263c0, 263c0], [26b04, 26b04], [27d2c, 27d2c], [28243, 28243],
    [29449, 29449], [29d55, 29d55], [2a53a, 2a53a]**/


    namespace {
    const static UnicodeSet::run_t __ren_Set_runs[] = {
    {Empty, 449}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 26},
    {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 22}, {Mixed, 2}, {Empty, 35}, {Mixed, 1}, {Empty, 26},
    {Mixed, 3}, {Empty, 17}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 37}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 58}, {Mixed, 3}, {Empty, 23},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 2931}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 124}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 122}, {Mixed, 1}, {Empty, 399},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 57}, {Mixed, 1},
    {Empty, 144}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 143},
    {Mixed, 1}, {Empty, 71}, {Mixed, 1}, {Empty, 62}, {Mixed, 1},
    {Empty, 29398}};
    const static UnicodeSet::bitquad_t  __ren_Set_quads[] = {
    0x00100000, 0x20000000, 0x00100000, 0x10000000, 0x00004000, 0x00200000,
    0x40000000, 0x01000000, 0x00000008, 0x04000000, 0x40000002, 0x08000000,
    0x80000000, 0x00000008, 0x00001000, 0x00000400, 0x08000000, 0x00002100,
    0x00000002, 0x00000100, 0x00040000, 0x00040000, 0x00000009, 0x00008000,
    0x00000400, 0x00000008, 0x00000004, 0x02000000, 0x00100000, 0x20000200,
    0x00200000, 0x00002000, 0x00000004, 0x00008000, 0x00200000, 0x00002000,
    0x04000000, 0x20000000, 0x00040000, 0x00002000, 0x00100000, 0x00010000,
    0x00000800, 0x00001000, 0x00000400, 0x10000000, 0x00000001, 0x00000010,
    0x00008000, 0x00000020, 0x00000200, 0x00000040, 0x00000200, 0x00001000,
    0x00000001, 0x00000010, 0x00001000, 0x00000008, 0x00000200, 0x00200000,
    0x04000000};
    }

    const static UnicodeSet ren_Set{const_cast<UnicodeSet::run_t *>(__ren_Set_runs), 107, 0, const_cast<UnicodeSet::bitquad_t *>(__ren_Set_quads), 61, 0};

    /** Code Point Ranges for miao
    [383a, 383a], [4067, 4067], [417a, 417a], [43da, 43da], [45a2, 45a2],
    [4eef, 4eef], [5435, 5435], [55b5, 55b5], [5999, 5999], [5a8c, 5a8c],
    [5edf, 5edf], [5f6f, 5f6f], [63cf, 63cf], [676a, 676a], [6dfc, 6dfc],
    [6e3a, 6e3a], [732b, 732b], [7385, 7385], [7707, 7707], [7784, 7784],
    [79d2, 79d2], [7bce, 7bce], [7d17, 7d17], [7de2, 7de2], [7df2, 7df2],
    [7e46, 7e46], [82d7, 82d7], [85d0, 85d0], [8731, 8731], [8a2c, 8a2c],
    [9088, 9088], [9c59, 9c59], [9d93, 9d93], [202dd, 202dd],
    [2164e, 2164e], [2187a, 2187a], [221b7, 221b7], [2268b, 2268b],
    [22927, 22927], [22dd5, 22dd5], [24f9b, 24f9b], [25b5d, 25b5d],
    [26ce5, 26ce5], [29cf8, 29cf8], [2a0d0, 2a0d0], [2a0e6, 2a0e6]**/


    namespace {
    const static UnicodeSet::run_t __miao_Set_runs[] = {
    {Empty, 449}, {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 73}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 93}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 2857}, {Mixed, 1}, {Empty, 155},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 73}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 269}, {Mixed, 1}, {Empty, 93}, {Mixed, 1},
    {Empty, 140}, {Mixed, 1}, {Empty, 383}, {Mixed, 1}, {Empty, 30},
    {Mixed, 2}, {Empty, 29432}};
    const static UnicodeSet::bitquad_t  __miao_Set_quads[] = {
    0x04000000, 0x00000080, 0x04000000, 0x04000000, 0x00000004, 0x00008000,
    0x00200000, 0x00200000, 0x02000000, 0x00001000, 0x80000000, 0x00008000,
    0x00008000, 0x00000400, 0x10000000, 0x04000000, 0x00000800, 0x00000020,
    0x00000080, 0x00000010, 0x00040000, 0x00004000, 0x00800000, 0x00040004,
    0x00000040, 0x00800000, 0x00010000, 0x00020000, 0x00001000, 0x00000100,
    0x02000000, 0x00080000, 0x20000000, 0x00004000, 0x04000000, 0x00800000,
    0x00000800, 0x00000080, 0x00200000, 0x08000000, 0x20000000, 0x00000020,
    0x01000000, 0x00010000, 0x00000040};
    }

    const static UnicodeSet miao_Set{const_cast<UnicodeSet::run_t *>(__miao_Set_runs), 89, 0, const_cast<UnicodeSet::bitquad_t *>(__miao_Set_quads), 45, 0};

    /** Code Point Ranges for men
    [3848, 3848], [3a3a, 3a3a], [3d4d, 3d4d], [429f, 429f], [4ab8, 4ab8],
    [4ad2, 4ad2], [4eb9, 4eb9], [5011, 5011], [600b, 600b], [6097, 6097],
    [60b6, 60b6], [60db, 60db], [61e3, 61e3], [636b, 636b], [66aa, 66aa],
    [6b99, 6b99], [6c76, 6c76], [6eff, 6eff], [71dc, 71dc], [73a7, 73a7],
    [748a, 748a], [779e, 779e], [7a48, 7a48], [83db, 83db], [864b, 864b],
    [9346, 9346], [9580, 9580], [9794, 9794], [23be9, 23be9],
    [24163, 24163], [27138, 27138], [27d3a, 27d3a], [28cd4, 28cd4],
    [28d3a, 28d3a], [29465, 29465], [29509, 29509]**/


    namespace {
    const static UnicodeSet::run_t __men_Set_runs[] = {
    {Empty, 450}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 64}, {Mixed, 2},
    {Empty, 30}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 127},
    {Mixed, 1}, {Empty, 3}, {Mixed, 3}, {Empty, 8}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 75},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 103}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 3362},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 381}, {Mixed, 1},
    {Empty, 95}, {Mixed, 1}, {Empty, 124}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 29527}};
    const static UnicodeSet::bitquad_t  __men_Set_quads[] = {
    0x00000100, 0x04000000, 0x00002000, 0x80000000, 0x01000000, 0x00040000,
    0x02000000, 0x00020000, 0x00000800, 0x00800000, 0x00400000, 0x08000000,
    0x00000008, 0x00000800, 0x00000400, 0x02000000, 0x00400000, 0x80000000,
    0x10000000, 0x00000080, 0x00000400, 0x40000000, 0x00000100, 0x08000000,
    0x00000800, 0x00000040, 0x00000001, 0x00100000, 0x00000200, 0x00000008,
    0x01000000, 0x04000000, 0x00100000, 0x04000000, 0x00000020, 0x00000200};
    }

    const static UnicodeSet men_Set{const_cast<UnicodeSet::run_t *>(__men_Set_runs), 67, 0, const_cast<UnicodeSet::bitquad_t *>(__men_Set_quads), 36, 0};

    /** Code Point Ranges for jiao
    [3851, 3851], [3a70, 3a70], [3b2d, 3b2d], [3b42, 3b42], [3c3e, 3c3e],
    [3cac, 3cac], [3d80, 3d80], [3e7e, 3e7e], [3f71, 3f72], [400a, 400a],
    [4076, 4076], [4083, 4083], [4270, 4270], [432d, 432d], [434a, 434a],
    [4567, 4567], [4628, 4628], [467c, 467c], [46a9, 46a9], [4848, 4848],
    [4892, 4892], [495e, 495e], [4c18, 4c18], [4db0, 4db0], [4ea4, 4ea4],
    [4f7c, 4f7c], [50d1, 50d1], [50e5, 50e5], [50ec, 50ec], [510c, 510c],
    [528b, 528b], [52e6, 52e6], [537b, 537b], [53eb, 53eb], [53fd, 53fd],
    [54ac, 54ac], [55ac, 55ac], [5602, 5602], [5604, 5604], [5610, 5610],
    [5626, 5626], [564d, 564d], [566d, 566d], [56bc, 56bc], [5996, 5996],
    [59e3, 59e3], [5af6, 5af6], [5b0c, 5b0c], [5b13, 5b13], [5b42, 5b42],
    [5b78, 5b78], [5ce7, 5ce7], [5d7a, 5d7a], [5d95, 5d95], [5da0, 5da0],
    [5da3, 5da3], [5fbc, 5fbc], [6054, 6054], [608e, 608e], [618d, 618d],
    [61a2, 61a2], [61bf, 61bf], [630d, 630d], [6341, 6341], [644e, 644e],
    [6477, 6477], [649f, 649f], [652a, 652a], [6559, 6559], [6565, 6565],
    [656b, 656b], [657d, 657d], [65a0, 65a0], [66d2, 66d2], [6821, 6821],
    [6912, 6912], [6a14, 6a14], [6a4b, 6a4b], [6e6b, 6e6b], [6ed8, 6ed8],
    [6f16, 6f16], [6f50, 6f50], [6f86, 6f86], [6fc0, 6fc0], [7042, 7042],
    [705a, 705a], [70c4, 70c4], [7126, 7126], [714d, 714d], [71cb, 71cb],
    [721d, 721d], [72e1, 72e1], [7365, 7365], [73d3, 73d3], [74ac, 74ac],
    [768e, 768e], [769b, 769b], [76a6, 76a6], [76ad, 76ad], [77ef, 77ef],
    [7901, 7901], [7a3e, 7a3e], [7a5a, 7a5a], [7a8c, 7a8c], [7a96, 7a96],
    [7b4a, 7b4a], [7c25, 7c25], [7cfe, 7cfe], [7d5e, 7d5e], [7e73, 7e73],
    [80f6, 80f6], [811a, 811a], [81a0, 81a0], [81b2, 81b2], [81eb, 81eb],
    [827d, 827d], [832d, 832e], [83fd, 83fd], [8429, 8429], [8549, 8549],
    [854e, 854e], [85e0, 85e0], [8660, 8660], [86df, 86df], [87dc, 87dc],
    [87ed, 87ed], [89ba, 89ba], [89d2, 89d2], [8a06, 8a06], [8b51, 8b51],
    [8b65, 8b65], [8dab, 8dab], [8dad, 8dad], [8de4, 8de4], [8e7b, 8e7b],
    [8f03, 8f03], [8f47, 8f47], [8f4e, 8f4e], [90ca, 90ca], [9117, 9117],
    [9175, 9175], [91ae, 91ae], [91c2, 91c2], [91e5, 91e5], [9278, 9278],
    [940e, 940e], [9903, 9903], [9a55, 9a55], [9ab9, 9ab9], [9bab, 9bab],
    [9c4e, 9c4e], [9d41, 9d41], [9de6, 9de6], [9dee, 9dee], [20567, 20567],
    [20623, 20623], [20705, 20705], [20751, 20751], [20a4f, 20a4f],
    [213ed, 213ed], [214d6, 214d6], [2164e, 2164e], [217e0, 217e0],
    [21948, 21948], [21b0b, 21b0b], [2200c, 2200c], [2213a, 2213a],
    [2214e, 2214e], [224be, 224be], [2256a, 2256a], [2295a, 2295a],
    [229f1, 229f1], [22bf4, 22bf4], [22da1, 22da1], [22ebd, 22ebd],
    [22edf, 22edf], [22f2b, 22f2b], [23079, 23079], [233d1, 233d1],
    [2375e, 2375e], [239e6, 239e6], [23a53, 23a53], [23eb3, 23eb3],
    [240ed, 240ed], [24267, 24267], [2455d, 2455d], [24af7, 24af7],
    [24d80, 24d80], [24db3, 24db3], [24e83, 24e83], [250a8, 250a8],
    [250e4, 250e4], [250e7, 250e7], [250ea, 250ea], [25109, 25109],
    [2515f, 2515f], [251df, 251df], [25252, 25252], [2527c, 2527c],
    [253f9, 253f9], [2560a, 2560a], [25864, 25864], [259a2, 259a2],
    [25cf4, 25cf4], [25e5c, 25e5c], [26143, 26143], [26306, 26306],
    [265f5, 265f5], [26af6, 26af6], [26b81, 26b81], [27088, 27088],
    [27399, 27399], [273b8, 273b8], [278e6, 278e6], [27e9c, 27e9c],
    [27f90, 27f90], [281d5, 281d5], [283a6, 283a6], [283ac, 283ac],
    [284e9, 284e9], [285b5, 285b5], [28770, 28770], [28843, 28843],
    [28a34, 28a34], [28cad, 28cad], [28d9f, 28d9f], [28daa, 28daa],
    [28db2, 28db2], [28eb9, 28eb9], [29294, 29294], [29394, 29394],
    [293f7, 293f7], [2994a, 2994a], [29bd8, 29bd8], [29c5e, 29c5e],
    [29d27, 29d27], [29d70, 29d70], [29f97, 29f97], [29fbe, 29fbe],
    [29fd1, 29fd1], [2a049, 2a049], [2a584, 2a584], [2a6b0, 2a6b0]**/


    namespace {
    const static UnicodeSet::run_t __jiao_Set_runs[] = {
    {Empty, 450}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 5},
    {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 10}, {Mixed, 3}, {Empty, 11}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 4}, {Empty, 1},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 3},
    {Mixed, 3}, {Empty, 15}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 7}, {Mixed, 3}, {Empty, 4}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 14},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 2}, {Empty, 13}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 17}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 2875}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 8}, {Mixed, 2}, {Empty, 26}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 20}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 11}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 23}, {Mixed, 2}, {Empty, 41},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 3}, {Empty, 3}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 29386}};
    const static UnicodeSet::bitquad_t  __jiao_Set_quads[] = {
    0x00020000, 0x00010000, 0x00002000, 0x00000004, 0x40000000, 0x00001000,
    0x00000001, 0x40000000, 0x00060000, 0x00000400, 0x00400000, 0x00000008,
    0x00010000, 0x00002000, 0x00000400, 0x00000080, 0x00000100, 0x10000000,
    0x00000200, 0x00000100, 0x00040000, 0x40000000, 0x01000000, 0x00010000,
    0x00000010, 0x10000000, 0x00020000, 0x00001020, 0x00001000, 0x00000800,
    0x00000040, 0x08000000, 0x20000800, 0x00001000, 0x00001000, 0x00010014,
    0x00000040, 0x00002000, 0x00002000, 0x10000000, 0x00400000, 0x00000008,
    0x00400000, 0x00081000, 0x00000004, 0x01000000, 0x00000080, 0x04000000,
    0x00200000, 0x00000009, 0x10000000, 0x00100000, 0x00004000, 0x00002000,
    0x80000004, 0x00002000, 0x00000002, 0x00004000, 0x00800000, 0x80000000,
    0x00000400, 0x02000000, 0x20000820, 0x00000001, 0x00040000, 0x00000002,
    0x00040000, 0x00100000, 0x00000800, 0x00000800, 0x01000000, 0x00400000,
    0x00010000, 0x00000040, 0x00000001, 0x04000004, 0x00000010, 0x00000040,
    0x00002000, 0x00000800, 0x20000000, 0x00000002, 0x00000020, 0x00080000,
    0x00001000, 0x08004000, 0x00002040, 0x00008000, 0x00000002, 0x40000000,
    0x04000000, 0x00401000, 0x00000400, 0x00000020, 0x40000000, 0x40000000,
    0x00080000, 0x00400000, 0x04000000, 0x00040001, 0x00000800, 0x20000000,
    0x00006000, 0x20000000, 0x00000200, 0x00004200, 0x00000001, 0x00000001,
    0x80000000, 0x10000000, 0x00002000, 0x04000000, 0x00040000, 0x00000040,
    0x00020000, 0x00000020, 0x00002800, 0x00000010, 0x08000000, 0x00000008,
    0x00004080, 0x00000400, 0x00800000, 0x00200000, 0x00004000, 0x00000004,
    0x00000020, 0x01000000, 0x00004000, 0x00000008, 0x00200000, 0x02000000,
    0x00000800, 0x00004000, 0x00000002, 0x00004040, 0x00000080, 0x00000008,
    0x00000020, 0x00020000, 0x00008000, 0x00002000, 0x00400000, 0x00004000,
    0x00000001, 0x00000100, 0x00000800, 0x00001000, 0x04000000, 0x00004000,
    0x40000000, 0x00000400, 0x04000000, 0x00020000, 0x00100000, 0x00000002,
    0x20000000, 0x80000000, 0x00000800, 0x02000000, 0x00020000, 0x40000000,
    0x00000040, 0x00080000, 0x00080000, 0x00002000, 0x00000080, 0x20000000,
    0x00800000, 0x00000001, 0x00080000, 0x00000008, 0x00000100, 0x00000490,
    0x00000200, 0x80000000, 0x80000000, 0x00040000, 0x10000000, 0x02000000,
    0x00000400, 0x00000010, 0x00000004, 0x00100000, 0x10000000, 0x00000008,
    0x00000040, 0x00200000, 0x00400000, 0x00000002, 0x00000100, 0x02000000,
    0x01000000, 0x00000040, 0x10000000, 0x00010000, 0x00200000, 0x00001040,
    0x00000200, 0x00200000, 0x00010000, 0x00000008, 0x00100000, 0x00002000,
    0x80000000, 0x00040400, 0x02000000, 0x00100000, 0x00100000, 0x00800000,
    0x00000400, 0x01000000, 0x40000000, 0x00000080, 0x00010000, 0x00800000,
    0x40000000, 0x00020000, 0x00000200, 0x00000010, 0x00010000};
    }

    const static UnicodeSet jiao_Set{const_cast<UnicodeSet::run_t *>(__jiao_Set_runs), 373, 0, const_cast<UnicodeSet::bitquad_t *>(__jiao_Set_quads), 221, 0};

    /** Code Point Ranges for zhun
    [3852, 3852], [4403, 4403], [51c6, 51c6], [554d, 554d], [572b, 572b],
    [57fb, 57fb], [5b92, 5b92], [5c6f, 5c6f], [5ff3, 5ff3], [6566, 6566],
    [65fd, 65fd], [6df3, 6df3], [6e96, 6e96], [753d, 753d], [76f9, 76f9],
    [7a15, 7a15], [7a80, 7a80], [7d14, 7d14], [7da7, 7da7], [80ab, 80ab],
    [80d7, 80d7], [8860, 8860], [8a30, 8a30], [8ac4, 8ac4], [8e06, 8e06],
    [8fcd, 8fcd], [98e9, 98e9], [251dc, 251dc], [256a0, 256a0]**/


    namespace {
    const static UnicodeSet::run_t __zhun_Set_runs[] = {
    {Empty, 450}, {Mixed, 1}, {Empty, 93}, {Mixed, 1}, {Empty, 109},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 63}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 23}, {Mixed, 2}, {Empty, 60}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 72}, {Mixed, 1},
    {Empty, 3526}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 30026}};
    const static UnicodeSet::bitquad_t  __zhun_Set_quads[] = {
    0x00040000, 0x00000008, 0x00000040, 0x00002000, 0x00000800, 0x08000000,
    0x00040000, 0x00008000, 0x00080000, 0x00000040, 0x20000000, 0x00080000,
    0x00400000, 0x20000000, 0x02000000, 0x00200000, 0x00000001, 0x00100000,
    0x00000080, 0x00000800, 0x00800000, 0x00000001, 0x00010000, 0x00000010,
    0x00000040, 0x00002000, 0x00000200, 0x10000000, 0x00000001};
    }

    const static UnicodeSet zhun_Set{const_cast<UnicodeSet::run_t *>(__zhun_Set_runs), 57, 0, const_cast<UnicodeSet::bitquad_t *>(__zhun_Set_quads), 29, 0};

    /** Code Point Ranges for kun
    [3853, 3853], [3afb, 3afb], [3c4e, 3c4e], [440a, 440a], [45b5, 45b5],
    [4805, 4805], [4ab2, 4ab2], [5375, 5375], [56f0, 56f0], [5764, 5764],
    [58fc, 58fc], [5a6b, 5a6b], [5d10, 5d11], [6083, 6083], [6346, 6346],
    [6606, 6606], [665c, 665c], [68b1, 68b1], [6d83, 6d83], [6df7, 6df7],
    [711c, 711c], [7311, 7311], [7428, 7428], [774f, 774f], [7871, 7871],
    [7a1b, 7a1b], [7d91, 7d91], [7f64, 7f64], [83ce, 83ce], [88cd, 88cd],
    [8c64, 8c64], [8c87, 8c87], [918c, 918c], [9315, 9315], [95ab, 95ab],
    [95b8, 95b8], [9811, 9811], [991b, 991b], [9a09, 9a09], [9ae1, 9ae1],
    [9be4, 9be4], [9c25, 9c25], [9d7e, 9d7e], [9da4, 9da4], [9f66, 9f66],
    [206af, 206af], [21589, 21589], [2221b, 2221b], [233d4, 233d4],
    [23c18, 23c18], [23c42, 23c42], [252bd, 252bd], [2569b, 2569b],
    [26110, 26110], [26338, 26338], [264fe, 264fe], [272d5, 272d5],
    [2794a, 2794a], [28049, 28049], [28c59, 28c59], [294fd, 294fd],
    [2990b, 2990b], [29a2b, 29a2b], [29b4b, 29b4b], [29ecb, 29ecb],
    [29f5e, 29f5e], [2a2c6, 2a2c6], [2a629, 2a629]**/


    namespace {
    const static UnicodeSet::run_t __kun_Set_runs[] = {
    {Empty, 450}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 69},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 28}, {Mixed, 2}, {Empty, 39}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2873},
    {Mixed, 1}, {Empty, 118}, {Mixed, 1}, {Empty, 99}, {Mixed, 1},
    {Empty, 141}, {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 178}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 83}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 110}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 95}, {Mixed, 1}, {Empty, 68},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 29390}};
    const static UnicodeSet::bitquad_t  __kun_Set_quads[] = {
    0x00080000, 0x08000000, 0x00004000, 0x00000400, 0x00200000, 0x00000020,
    0x00040000, 0x00200000, 0x00010000, 0x00000010, 0x10000000, 0x00000800,
    0x00030000, 0x00000008, 0x00000040, 0x00000040, 0x10000000, 0x00020000,
    0x00000008, 0x00800000, 0x10000000, 0x00020000, 0x00000100, 0x00008000,
    0x00020000, 0x08000000, 0x00020000, 0x00000010, 0x00004000, 0x00002000,
    0x00000010, 0x00000080, 0x00001000, 0x00200000, 0x01000800, 0x00020000,
    0x08000000, 0x00000200, 0x00000002, 0x00000010, 0x00000020, 0x40000000,
    0x00000010, 0x00000040, 0x00008000, 0x00000200, 0x08000000, 0x00100000,
    0x01000000, 0x00000004, 0x20000000, 0x08000000, 0x00010000, 0x01000000,
    0x40000000, 0x00200000, 0x00000400, 0x00000200, 0x02000000, 0x20000000,
    0x00000800, 0x00000800, 0x00000800, 0x00000800, 0x40000000, 0x00000040,
    0x00000200};
    }

    const static UnicodeSet kun_Set{const_cast<UnicodeSet::run_t *>(__kun_Set_runs), 133, 0, const_cast<UnicodeSet::bitquad_t *>(__kun_Set_quads), 67, 0};

    /** Code Point Ranges for chuang
    [3856, 3856], [3f3d, 3f3d], [40e5, 40e5], [411d, 411d], [41ec, 41ec],
    [43ab, 43ab], [4692, 4692], [5009, 5009], [50b8, 50b8], [5205, 5205],
    [5275, 5275], [5647, 5647], [56f1, 56f1], [5e62, 5e62], [6134, 6134],
    [6227, 6227], [6450, 6450], [6723, 6723], [6a66, 6a66], [6f34, 6f34],
    [6f3a, 6f3a], [7240, 7240], [724e, 724e], [7255, 7255], [7621, 7621],
    [78e2, 78e2], [7a97, 7a97], [8202, 8202], [8471, 8471], [95d6, 95d6],
    [203e8, 203e8], [207ae, 207ae], [20cf9, 20cf9], [211aa, 211aa],
    [21eef, 21eef], [230d8, 230d8], [25204, 25204], [25392, 25392],
    [2585f, 2585f], [25ca1, 25ca1], [2651b, 2651b], [27727, 27727],
    [2774e, 2774e], [27886, 27886], [27b27, 27b27], [2873e, 2873e],
    [289d6, 289d6], [290d5, 290d5], [29786, 29786], [29a98, 29a98],
    [2a071, 2a071]**/


    namespace {
    const static UnicodeSet::run_t __chuang_Set_runs[] = {
    {Empty, 450}, {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 13},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 75}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 138}, {Mixed, 1}, {Empty, 2928}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 105}, {Mixed, 1}, {Empty, 142}, {Mixed, 1}, {Empty, 265},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 144},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 95}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 55},
    {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 29436}};
    const static UnicodeSet::bitquad_t  __chuang_Set_quads[] = {
    0x00400000, 0x20000000, 0x00000020, 0x20000000, 0x00001000, 0x00000800,
    0x00040000, 0x00000200, 0x01000000, 0x00000020, 0x00200000, 0x00000080,
    0x00020000, 0x00000004, 0x00100000, 0x00000080, 0x00010000, 0x00000008,
    0x00000040, 0x04100000, 0x00204001, 0x00000002, 0x00000004, 0x00800000,
    0x00000004, 0x00020000, 0x00400000, 0x00000100, 0x00004000, 0x02000000,
    0x00000400, 0x00008000, 0x01000000, 0x00000010, 0x00040000, 0x80000000,
    0x00000002, 0x08000000, 0x00000080, 0x00004000, 0x00000040, 0x00000080,
    0x40000000, 0x00400000, 0x00200000, 0x00000040, 0x01000000, 0x00020000};
    }

    const static UnicodeSet chuang_Set{const_cast<UnicodeSet::run_t *>(__chuang_Set_runs), 93, 0, const_cast<UnicodeSet::bitquad_t *>(__chuang_Set_quads), 48, 0};

    /** Code Point Ranges for zao
    [385f, 385f], [3be5, 3be5], [3bfe, 3bfe], [3dee, 3dee], [45a3, 45a3],
    [45e2, 45e2], [470a, 470a], [4c83, 4c83], [50ae, 50ae], [5515, 5515],
    [5523, 5523], [55bf, 55bf], [566a, 566a], [6165, 6165], [65e9, 65e9],
    [688d, 688d], [68d7, 68d7], [69fd, 69fd], [6fa1, 6fa1], [71e5, 71e5],
    [7485, 7485], [74aa, 74aa], [7681, 7681], [7a96, 7a96], [7ac8, 7ac8],
    [7c09, 7c09], [7cdf, 7cdf], [7e45, 7e45], [7e70, 7e70], [8349, 8349],
    [85fb, 85fb], [86a4, 86a4], [8b32, 8b32], [8b5f, 8b5f], [8dae, 8dae],
    [8e67, 8e67], [8e81, 8e81], [9020, 9020], [906d, 906d], [91a9, 91a9],
    [947f, 947f], [2066c, 2066c], [20d35, 20d35], [2140b, 2140b],
    [21a17, 21a17], [22100, 22100], [22456, 22456], [22cb5, 22cb5],
    [22d65, 22d65], [23356, 23356], [23a52, 23a52], [23d22, 23d22],
    [2435c, 2435c], [2478b, 2478b], [247c0, 247c0], [24a68, 24a68],
    [2501b, 2501b], [255a8, 255a8], [26bd1, 26bd1], [26d69, 26d69],
    [27239, 27239], [273ae, 273ae], [27ef0, 27ef0], [283ae, 283ae],
    [284bd, 284bd], [286b0, 286b0], [28837, 28837], [28907, 28907],
    [2a661, 2a661]**/


    namespace {
    const static UnicodeSet::run_t __zao_Set_runs[] = {
    {Empty, 450}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 34}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 87}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 20}, {Mixed, 2},
    {Empty, 14}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 11},
    {Mixed, 2}, {Empty, 38}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 35}, {Mixed, 2}, {Empty, 18},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 2959}, {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 55}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 55}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 176},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 89}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 234},
    {Mixed, 1}, {Empty, 29388}};
    const static UnicodeSet::bitquad_t  __zao_Set_quads[] = {
    0x80000000, 0x40000020, 0x00004000, 0x00000008, 0x00000004, 0x00000400,
    0x00000008, 0x00004000, 0x00200000, 0x00000008, 0x80000000, 0x00000400,
    0x00000020, 0x00000200, 0x00002000, 0x00800000, 0x20000000, 0x00000002,
    0x00000020, 0x00000020, 0x00000400, 0x00000002, 0x00400000, 0x00000100,
    0x00000200, 0x80000000, 0x00000020, 0x00010000, 0x00000200, 0x08000000,
    0x00000010, 0x00040000, 0x80000000, 0x00004000, 0x00000080, 0x00000002,
    0x00000001, 0x00002000, 0x00000200, 0x80000000, 0x00001000, 0x00200000,
    0x00000800, 0x00800000, 0x00000001, 0x00400000, 0x00200000, 0x00000020,
    0x00400000, 0x00040000, 0x00000004, 0x10000000, 0x00000800, 0x00000001,
    0x00000100, 0x08000000, 0x00000100, 0x00020000, 0x00000200, 0x02000000,
    0x00004000, 0x00010000, 0x00004000, 0x20000000, 0x00010000, 0x00800000,
    0x00000080, 0x00000002};
    }

    const static UnicodeSet zao_Set{const_cast<UnicodeSet::run_t *>(__zao_Set_runs), 127, 0, const_cast<UnicodeSet::bitquad_t *>(__zao_Set_quads), 68, 0};

    /** Code Point Ranges for pin
    [3866, 3866], [3c0b, 3c0b], [4399, 4399], [5315, 5315], [54c1, 54c1],
    [56ac, 56ac], [59d8, 59d8], [5a09, 5a09], [5b2a, 5b2a], [62da, 62da],
    [62fc, 62fc], [6980, 6980], [6c56, 6c56], [6cf5, 6cf5], [725d, 725d],
    [73ad, 73ad], [7415, 7415], [77c9, 77c9], [780f, 780f], [7a66, 7a66],
    [8058, 8058], [85b2, 85b2], [860b, 860b], [8ca7, 8ca7], [983b, 983b],
    [9870, 9870], [99aa, 99aa], [9a5e, 9a5e], [2043a, 2043a],
    [20bb0, 20bb0], [216de, 216de], [228d0, 228d0], [22b35, 22b35],
    [22db3, 22db3], [233b3, 233b3], [25453, 25453], [255b6, 255b6],
    [261d6, 261d6], [2752a, 2752a], [27b79, 27b79], [27b9d, 27b9d],
    [283de, 283de], [28f57, 28f57], [29575, 29575], [29c17, 29c17]**/


    namespace {
    const static UnicodeSet::run_t __pin_Set_runs[] = {
    {Empty, 451}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 123}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 60}, {Mixed, 2},
    {Empty, 52}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 52}, {Mixed, 1},
    {Empty, 91}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 2894}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 88}, {Mixed, 1}, {Empty, 143}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 47},
    {Mixed, 1}, {Empty, 260}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 96}, {Mixed, 1}, {Empty, 154}, {Mixed, 1}, {Empty, 49},
    {Mixed, 2}, {Empty, 65}, {Mixed, 1}, {Empty, 91}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 29471}};
    const static UnicodeSet::bitquad_t  __pin_Set_quads[] = {
    0x00000040, 0x00000800, 0x02000000, 0x00200000, 0x00000002, 0x00001000,
    0x01000000, 0x00000200, 0x00000400, 0x04000000, 0x10000000, 0x00000001,
    0x00400000, 0x00200000, 0x20000000, 0x00002000, 0x00200000, 0x00000200,
    0x00008000, 0x00000040, 0x01000000, 0x00040000, 0x00000800, 0x00000080,
    0x08000000, 0x00010000, 0x00000400, 0x40000000, 0x04000000, 0x00010000,
    0x40000000, 0x00010000, 0x00200000, 0x00080000, 0x00080000, 0x00080000,
    0x00400000, 0x00400000, 0x00000400, 0x02000000, 0x20000000, 0x40000000,
    0x00800000, 0x00200000, 0x00800000};
    }

    const static UnicodeSet pin_Set{const_cast<UnicodeSet::run_t *>(__pin_Set_runs), 87, 0, const_cast<UnicodeSet::bitquad_t *>(__pin_Set_quads), 45, 0};

    /** Code Point Ranges for luan
    [3869, 3869], [3c4d, 3c4d], [43c8, 43c8], [4582, 4582], [470c, 470c],
    [4e7f, 4e7f], [4e82, 4e82], [5375, 5375], [571d, 571d], [5971, 5971],
    [5b4c, 5b4c], [5b7f, 5b7f], [5dd2, 5dd2], [6523, 6523], [66eb, 66eb],
    [6b12, 6b12], [7053, 7053], [7064, 7064], [7674, 7674], [7f89, 7f89],
    [8114, 8114], [811f, 811f], [81e0, 81e1], [858d, 858d], [89b6, 89b6],
    [947e, 947e], [9e1e, 9e1e], [209a8, 209a8], [21139, 21139],
    [21857, 21857], [21b78, 21b78], [21c20, 21c20], [22315, 22315],
    [22e88, 22e88], [22fe2, 22fe2], [23a00, 23a00], [24cb6, 24cb6],
    [24f19, 24f19], [268cb, 268cb], [268cf, 268cf], [27598, 27598],
    [281fc, 281fc], [2820c, 2820c], [2820e, 2820e], [2829f, 2829f],
    [29abe, 29abe]**/


    namespace {
    const static UnicodeSet::run_t __luan_Set_runs[] = {
    {Empty, 451}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 58}, {Mixed, 2}, {Empty, 38}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 14}, {Mixed, 2},
    {Empty, 18}, {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 41}, {Mixed, 2},
    {Empty, 47}, {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 85}, {Mixed, 1}, {Empty, 76},
    {Mixed, 1}, {Empty, 2908}, {Mixed, 1}, {Empty, 59}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 91}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 80}, {Mixed, 1}, {Empty, 148},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 205}, {Mixed, 1},
    {Empty, 101}, {Mixed, 1}, {Empty, 98}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 192}, {Mixed, 1}, {Empty, 29482}};
    const static UnicodeSet::bitquad_t  __luan_Set_quads[] = {
    0x00000200, 0x00002000, 0x00000100, 0x00000004, 0x00001000, 0x80000000,
    0x00000004, 0x00200000, 0x20000000, 0x00020000, 0x00001000, 0x80000000,
    0x00040000, 0x00000008, 0x00000800, 0x00040000, 0x00080000, 0x00000010,
    0x00100000, 0x00000200, 0x80100000, 0x00000003, 0x00002000, 0x00400000,
    0x40000000, 0x40000000, 0x00000100, 0x02000000, 0x00800000, 0x01000000,
    0x00000001, 0x00200000, 0x00000100, 0x00000004, 0x00000001, 0x00400000,
    0x02000000, 0x00008800, 0x01000000, 0x10000000, 0x00005000, 0x80000000,
    0x40000000};
    }

    const static UnicodeSet luan_Set{const_cast<UnicodeSet::run_t *>(__luan_Set_runs), 79, 0, const_cast<UnicodeSet::bitquad_t *>(__luan_Set_quads), 43, 0};

    /** Code Point Ranges for huan
    [3872, 3872], [38ea, 38ea], [3ab1, 3ab1], [3b07, 3b07], [3b0a, 3b0a],
    [3d79, 3d79], [3e55, 3e55], [3f2b, 3f2b], [3fea, 3fea], [4013, 4013],
    [4075, 4075], [4106, 4106], [4220, 4220], [437a, 437a], [444f, 444f],
    [449b, 449b], [4809, 4809], [49a1, 49a1], [4bd8, 4bd8], [4d09, 4d09],
    [4d0b, 4d0b], [4d1f, 4d1f], [4d37, 4d37], [5524, 5524], [559b, 559b],
    [56be, 56be], [5702, 5702], [571c, 571c], [57b8, 57b8], [5942, 5942],
    [5b1b, 5b1b], [5b49, 5b49], [5ba6, 5ba6], [5bcf, 5bcf], [5bf0, 5bf0],
    [5cd8, 5cd8], [5d48, 5d48], [5ddc, 5ddc], [5e7b, 5e7b], [60a3, 60a3],
    [610c, 610c], [61c1, 61c1], [61fd, 61fd], [6362, 6362], [63f4, 63f4],
    [64d0, 64d0], [650c, 650c], [6853, 6853], [69f5, 69f5], [6b25, 6b25],
    [6b61, 6b61], [6c4d, 6c4d], [6d39, 6d39], [6d63, 6d63], [6da3, 6da3],
    [6f36, 6f36], [6fa3, 6fa3], [6fb4, 6fb4], [704c, 704c], [7115, 7115],
    [72bf, 72bf], [72df, 72df], [737e, 737e], [744d, 744d], [7457, 7457],
    [74b0, 74b0], [74db, 74db], [75ea, 75ea], [7696, 7696], [7729, 7729],
    [7746, 7746], [7754, 7754], [778f, 778f], [7ceb, 7ceb], [7d59, 7d59],
    [7d84, 7d84], [7de9, 7de9], [7e6f, 7e6f], [7fa6, 7fa6], [8092, 8092],
    [8118, 8118], [8341, 8341], [8408, 8408], [8411, 8411], [849d, 849d],
    [85e7, 85e7], [878c, 878c], [8838, 8838], [8b99, 8b99], [8c62, 8c62],
    [8c69, 8c69], [8c72, 8c72], [8c86, 8c86], [8c9b, 8c9b], [8f58, 8f58],
    [8fd8, 8fd8], [902d, 902d], [9084, 9084], [90c7, 90c7], [9144, 9144],
    [926e, 926e], [9370, 9370], [9436, 9436], [95e4, 95e4], [96c8, 96c8],
    [96da, 96da], [9a69, 9a69], [9b1f, 9b1f], [9bc7, 9bc7], [9d05, 9d05],
    [9d4d, 9d4d], [9e1b, 9e1b], [20084, 20084], [207fc, 207fc],
    [20e90, 20e90], [20ecd, 20ecd], [21124, 21124], [21171, 21171],
    [2117b, 2117b], [21366, 21366], [2160d, 2160d], [2168a, 2168a],
    [2169c, 2169c], [21a42, 21a42], [21c4c, 21c4c], [21dd7, 21dd7],
    [227ff, 227ff], [23313, 23313], [23385, 23385], [23d1f, 23d1f],
    [24023, 24023], [246da, 246da], [2485f, 2485f], [24881, 24881],
    [24d2f, 24d2f], [24f10, 24f10], [24f22, 24f22], [24f45, 24f45],
    [24f55, 24f55], [25209, 25209], [253c7, 253c7], [25413, 25413],
    [25805, 25805], [25d8d, 25d8d], [25e5a, 25e5a], [25e73, 25e73],
    [26326, 26326], [2645b, 2645b], [2675d, 2675d], [268f4, 268f4],
    [26ec3, 26ec3], [26f09, 26f09], [27681, 27681], [27869, 27869],
    [27d0a, 27d0a], [28579, 28579], [2870c, 2870c], [28f67, 28f67],
    [29361, 29361], [29456, 29456], [2967d, 2967d], [29867, 29867],
    [29998, 29998], [29d44, 29d44], [29fca, 29fca], [2a229, 2a229],
    [2a2a5, 2a2a5], [2a37a, 2a37a]**/


    namespace {
    const static UnicodeSet::run_t __huan_Set_runs[] = {
    {Empty, 451}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 9}, {Mixed, 2}, {Empty, 63}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 6}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 8}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 21}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2835}, {Mixed, 1}, {Empty, 58}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 80}, {Mixed, 1}, {Empty, 88}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 75}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 14}, {Mixed, 3},
    {Empty, 21}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 37}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 46},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 59}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 66},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 66}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 29412}};
    const static UnicodeSet::bitquad_t  __huan_Set_quads[] = {
    0x00040000, 0x00000400, 0x00020000, 0x00000480, 0x02000000, 0x00200000,
    0x00000800, 0x00000400, 0x00080000, 0x00200000, 0x00000040, 0x00000001,
    0x04000000, 0x00008000, 0x08000000, 0x00000200, 0x00000002, 0x01000000,
    0x80000a00, 0x00800000, 0x00000010, 0x08000000, 0x40000000, 0x10000004,
    0x01000000, 0x00000004, 0x08000000, 0x00000200, 0x00000040, 0x00008000,
    0x00010000, 0x01000000, 0x00000100, 0x10000000, 0x08000000, 0x00000008,
    0x00001000, 0x00000002, 0x20000000, 0x00000004, 0x00100000, 0x00010000,
    0x00001000, 0x00080000, 0x00200000, 0x00000020, 0x00000002, 0x00002000,
    0x02000000, 0x00000008, 0x00000008, 0x00400000, 0x00100008, 0x00001000,
    0x00200000, 0x80000000, 0x80000000, 0x40000000, 0x00802000, 0x00010000,
    0x08000000, 0x00000400, 0x00400000, 0x00000200, 0x00100040, 0x00008000,
    0x00000800, 0x02000000, 0x00000010, 0x00000200, 0x00008000, 0x00000040,
    0x00040000, 0x01000000, 0x00000002, 0x00020100, 0x20000000, 0x00000080,
    0x00001000, 0x01000000, 0x02000000, 0x00040204, 0x08000040, 0x01000000,
    0x01000000, 0x00002000, 0x00000010, 0x00000080, 0x00000010, 0x00004000,
    0x00010000, 0x00400000, 0x00000010, 0x04000100, 0x00000200, 0x80000000,
    0x00000080, 0x00000020, 0x00002000, 0x08000000, 0x00000010, 0x10000000,
    0x00010000, 0x00002000, 0x00000010, 0x08020000, 0x00000040, 0x00002000,
    0x10000400, 0x00000004, 0x00001000, 0x00800000, 0x80000000, 0x00080000,
    0x00000020, 0x80000000, 0x00000008, 0x04000000, 0x80000000, 0x00000002,
    0x00008000, 0x00010000, 0x00000004, 0x00200020, 0x00000200, 0x00000080,
    0x00080000, 0x00000020, 0x00002000, 0x04000000, 0x00080000, 0x00000040,
    0x08000000, 0x20000000, 0x00100000, 0x00000008, 0x00000200, 0x00000002,
    0x00000200, 0x00000400, 0x02000000, 0x00001000, 0x00000080, 0x00000002,
    0x00400000, 0x20000000, 0x00000080, 0x01000000, 0x00000010, 0x00000400,
    0x00000200, 0x00000020, 0x04000000};
    }

    const static UnicodeSet huan_Set{const_cast<UnicodeSet::run_t *>(__huan_Set_runs), 283, 0, const_cast<UnicodeSet::bitquad_t *>(__huan_Set_quads), 153, 0};

    /** Code Point Ranges for ben
    [3877, 3877], [3913, 3913], [3a27, 3a27], [3ba5, 3ba5], [4b31, 4b31],
    [4f53, 4f53], [5034, 5034], [55af, 55af], [574c, 574c], [592f, 592f],
    [5932, 5932], [5954, 5954], [6379, 6379], [64aa, 64aa], [672c, 672c],
    [681f, 681f], [6873, 6873], [6ccd, 6ccd], [6e00, 6e00], [7083, 7083],
    [71cc, 71cc], [7287, 7287], [7356, 7356], [755a, 755a], [7b28, 7b28],
    [7fc9, 7fc9], [82ef, 82ef], [87e6, 87e6], [8cc1, 8cc1], [8eec, 8eec],
    [8f3d, 8f3d], [9029, 9029], [931b, 931b], [943c, 943c], [215e2, 215e2],
    [215f2, 215f2], [2310f, 2310f], [23cf0, 23cf0], [23d1e, 23d1e],
    [2588a, 2588a], [26bc0, 26bc0], [282d2, 282d2], [298fa, 298fa],
    [29c36, 29c36], [2a29c, 2a29c], [2a39d, 2a39d], [2a456, 2a456]**/


    namespace {
    const static UnicodeSet::run_t __ben_Set_runs[] = {
    {Empty, 451}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 123}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 14}, {Mixed, 2},
    {Empty, 80}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 3085}, {Mixed, 1}, {Empty, 216}, {Mixed, 1}, {Empty, 94},
    {Mixed, 2}, {Empty, 219}, {Mixed, 1}, {Empty, 153}, {Mixed, 1},
    {Empty, 183}, {Mixed, 1}, {Empty, 176}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 29405}};
    const static UnicodeSet::bitquad_t  __ben_Set_quads[] = {
    0x00800000, 0x00080000, 0x00000080, 0x00000020, 0x00020000, 0x00080000,
    0x00100000, 0x00008000, 0x00001000, 0x00048000, 0x00100000, 0x02000000,
    0x00000400, 0x00001000, 0x80000000, 0x00080000, 0x00002000, 0x00000001,
    0x00000008, 0x00001000, 0x00000080, 0x00400000, 0x04000000, 0x00000100,
    0x00000200, 0x00008000, 0x00000040, 0x00000002, 0x00001000, 0x20000000,
    0x00000200, 0x08000000, 0x10000000, 0x00040004, 0x00008000, 0x00010000,
    0x40000000, 0x00000400, 0x00000001, 0x00040000, 0x04000000, 0x00400000,
    0x10000000, 0x20000000, 0x00400000};
    }

    const static UnicodeSet ben_Set{const_cast<UnicodeSet::run_t *>(__ben_Set_runs), 87, 0, const_cast<UnicodeSet::bitquad_t *>(__ben_Set_quads), 45, 0};

    /** Code Point Ranges for pan
    [3896, 3896], [3f43, 3f43], [40d1, 40d1], [41ba, 41ba], [4232, 4232],
    [43d2, 43d2], [4a54, 4a54], [4c09, 4c09], [4e51, 4e51], [4f34, 4f34],
    [5224, 5224], [534a, 534a], [535e, 535e], [53db, 53db], [5762, 5762],
    [59cd, 59cd], [5abb, 5abb], [5be9, 5be9], [5e4b, 5e4b], [5f01, 5f01],
    [5f66, 5f66], [6273, 6273], [62cc, 62cc], [62da, 62da], [642b, 642b],
    [6500, 6500], [67c8, 67c8], [69c3, 69c3], [6c9c, 6c9c], [6cee, 6cee],
    [6d00, 6d00], [6e74, 6e74], [6f58, 6f58], [700a, 700b], [708d, 708d],
    [723f, 723f], [7247, 7247], [7249, 7249], [7554, 7554], [7568, 7568],
    [756a, 756a], [76a4, 76a4], [76e4, 76e4], [76fb, 76fc], [7705, 7705],
    [772b, 772b], [78d0, 78d0], [78fb, 78fb], [7c53, 7c53], [7e0f, 7e0f],
    [7e41, 7e41], [80d6, 80d6], [81b0, 81b0], [822c, 822c], [84b0, 84b0],
    [878c, 878c], [87e0, 87e0], [88a2, 88a2], [8929, 8929], [897b, 897b],
    [8a4a, 8a4a], [8cc1, 8cc1], [8dd8, 8dd8], [8e2b, 8e2b], [8e63, 8e63],
    [9131, 9131], [92ec, 92ec], [939c, 939c], [95c6, 95c6], [97b6, 97b6],
    [9816, 9816], [20f72, 20f72], [2179f, 2179f], [22b35, 22b35],
    [22c3f, 22c3f], [22c94, 22c94], [23066, 23066], [2351a, 2351a],
    [2411c, 2411c], [24127, 24127], [245ad, 245ad], [2480d, 2480d],
    [24e8f, 24e8f], [24ef7, 24ef7], [2523c, 2523c], [2525f, 2525f],
    [2530a, 2530a], [2557f, 2557f], [26640, 26640], [26ab9, 26ab9],
    [27ebe, 27ebe], [2809d, 2809d], [280de, 280df], [28483, 28483],
    [2a100, 2a100], [2a480, 2a480], [2a48b, 2a48b]**/


    namespace {
    const static UnicodeSet::run_t __pan_Set_runs[] = {
    {Empty, 452}, {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 2},
    {Empty, 23}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 3},
    {Empty, 12}, {Mixed, 2}, {Empty, 26}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3002},
    {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 156}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 95}, {Mixed, 2}, {Empty, 35},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 25}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 134}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 159}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 227},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 29403}};
    const static UnicodeSet::bitquad_t  __pan_Set_quads[] = {
    0x00400000, 0x00000008, 0x00020000, 0x04000000, 0x00040000, 0x00040000,
    0x00100000, 0x00000200, 0x00020000, 0x00100000, 0x00000010, 0x40000400,
    0x08000000, 0x00000004, 0x00002000, 0x08000000, 0x00000200, 0x00000800,
    0x00000002, 0x00000040, 0x00080000, 0x04001000, 0x00000800, 0x00000001,
    0x00000100, 0x00000008, 0x10000000, 0x00004000, 0x00000001, 0x00100000,
    0x01000000, 0x00000c00, 0x00002000, 0x80000000, 0x00000280, 0x00100000,
    0x00000500, 0x00000010, 0x18000010, 0x00000020, 0x00000800, 0x00010000,
    0x08000000, 0x00080000, 0x00008000, 0x00000002, 0x00400000, 0x00010000,
    0x00001000, 0x00010000, 0x00001000, 0x00000001, 0x00000004, 0x00000200,
    0x08000000, 0x00000400, 0x00000002, 0x01000000, 0x00000800, 0x00000008,
    0x00020000, 0x00001000, 0x10000000, 0x00000040, 0x00400000, 0x00400000,
    0x00040000, 0x80000000, 0x00200000, 0x80000000, 0x00100000, 0x00000040,
    0x04000000, 0x10000000, 0x00000080, 0x00002000, 0x00002000, 0x00008000,
    0x00800000, 0x10000000, 0x80000000, 0x00000400, 0x80000000, 0x00000001,
    0x02000000, 0x40000000, 0x20000000, 0xc0000000, 0x00000008, 0x00000001,
    0x00000801};
    }

    const static UnicodeSet pan_Set{const_cast<UnicodeSet::run_t *>(__pan_Set_runs), 167, 0, const_cast<UnicodeSet::bitquad_t *>(__pan_Set_quads), 91, 0};

    /** Code Point Ranges for juan
    [38a7, 38a7], [38be, 38be], [3abb, 3abb], [414c, 414c], [45ad, 45ad],
    [4688, 4688], [4853, 4853], [48fa, 48fa], [5026, 5026], [52b5, 52b5],
    [52cc, 52cc], [52ec, 52ec], [5377, 5377], [545f, 545f], [5708, 5708],
    [57cd, 57cd], [57e2, 57e2], [5946, 5946], [5a1f, 5a1f], [5a58, 5a58],
    [5dc2, 5dc2], [5e23, 5e23], [5f2e, 5f2e], [6081, 6081], [60d3, 60d3],
    [617b, 617b], [6350, 6350], [6372, 6372], [64d0, 64d0], [6718, 6718],
    [684a, 684a], [688b, 688b], [68ec, 68ec], [6ceb, 6ceb], [6d93, 6d93],
    [6dc3, 6dc3], [7106, 7106], [72f7, 72f7], [7367, 7367], [74f9, 74f9],
    [7504, 7504], [7729, 7729], [7737, 7737], [7743, 7743], [774a, 774a],
    [7d6d, 7d6d], [7d79, 7d79], [7e33, 7e33], [7f65, 7f65], [7f82, 7f82],
    [8143, 8143], [81c7, 81c7], [83e4, 83e4], [8412, 8412], [8528, 8528],
    [854a, 854a], [8737, 8737], [8832, 8832], [88d0, 88d0], [8948, 8948],
    [8e21, 8e21], [8eab, 8eab], [9104, 9104], [92d1, 92d1], [92d7, 92d7],
    [9308, 9308], [942b, 942b], [95c2, 95c2], [96bd, 96bd], [96cb, 96cb],
    [9799, 9799], [97cf, 97cf], [98ec, 98ec], [990b, 990b], [9d4d, 9d4d],
    [9d51, 9d51], [20876, 20876], [2089a, 2089a], [21630, 21630],
    [21840, 21840], [21ac2, 21ac2], [21c51, 21c51], [220e9, 220e9],
    [222c4, 222c4], [2234f, 2234f], [223a0, 223a0], [223a5, 223a5],
    [22753, 22753], [23662, 23662], [23693, 23693], [23728, 23728],
    [23b0b, 23b0b], [23b0f, 23b0f], [243b1, 243b1], [24ca8, 24ca8],
    [24ebb, 24ebb], [25060, 25060], [2516c, 2516c], [2519e, 2519e],
    [25c7d, 25c7d], [26046, 26046], [2628c, 2628c], [268bf, 268bf],
    [269bd, 269bd], [26b3e, 26b3e], [26bbb, 26bbb], [26cfd, 26cfd],
    [26f31, 26f31], [27396, 27396], [27572, 27572], [27b66, 27b66],
    [27be6, 27be6], [28188, 28188], [2832b, 2832b], [28911, 28911],
    [28a78, 28a78], [28e75, 28e75], [293b3, 293b3], [293d7, 293d7],
    [293f9, 293f9], [29531, 29531], [29612, 29612], [29707, 29707],
    [297e5, 297e5]**/


    namespace {
    const static UnicodeSet::run_t __juan_Set_runs[] = {
    {Empty, 453}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 52},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 19}, {Mixed, 3}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 14}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 2}, {Empty, 16},
    {Mixed, 2}, {Empty, 48}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 16}, {Mixed, 2}, {Empty, 8}, {Mixed, 2}, {Empty, 14},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8},
    {Mixed, 2}, {Empty, 33}, {Mixed, 1}, {Empty, 2904}, {Mixed, 2},
    {Empty, 108}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 120}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 68}, {Mixed, 1},
    {Empty, 71}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 86}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 47},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 41}, {Mixed, 3},
    {Empty, 9}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 29504}};
    const static UnicodeSet::bitquad_t  __juan_Set_quads[] = {
    0x40000080, 0x08000000, 0x00001000, 0x00002000, 0x00000100, 0x00080000,
    0x04000000, 0x00000040, 0x00200000, 0x00001000, 0x00001000, 0x00800000,
    0x80000000, 0x00000100, 0x00002000, 0x00000004, 0x00000040, 0x80000000,
    0x01000000, 0x00000004, 0x00000008, 0x00004000, 0x00000002, 0x00080000,
    0x08000000, 0x00010000, 0x00040000, 0x00010000, 0x01000000, 0x00000400,
    0x00000800, 0x00001000, 0x00000800, 0x00080000, 0x00000008, 0x00000040,
    0x00800000, 0x00000080, 0x02000000, 0x00000010, 0x00800200, 0x00000408,
    0x02002000, 0x00080000, 0x00000020, 0x00000004, 0x00000008, 0x00000080,
    0x00000010, 0x00040000, 0x00000100, 0x00000400, 0x00800000, 0x00040000,
    0x00010000, 0x00000100, 0x00000002, 0x00000800, 0x00000010, 0x00820000,
    0x00000100, 0x00000800, 0x00000004, 0x20000000, 0x00000800, 0x02000000,
    0x00008000, 0x00001000, 0x00000800, 0x00022000, 0x00400000, 0x04000000,
    0x00010000, 0x00000001, 0x00000004, 0x00020000, 0x00000200, 0x00000010,
    0x00008000, 0x00000021, 0x00080000, 0x00000004, 0x00080000, 0x00000100,
    0x00008800, 0x00020000, 0x00000100, 0x08000000, 0x00000001, 0x00001000,
    0x40000000, 0x20000000, 0x00000040, 0x00001000, 0x80000000, 0x20000000,
    0x40000000, 0x08000000, 0x20000000, 0x00020000, 0x00400000, 0x00040000,
    0x00000040, 0x00000040, 0x00000100, 0x00000800, 0x00020000, 0x01000000,
    0x00200000, 0x00080000, 0x00800000, 0x02000000, 0x00020000, 0x00040000,
    0x00000080, 0x00000020};
    }

    const static UnicodeSet juan_Set{const_cast<UnicodeSet::run_t *>(__juan_Set_runs), 201, 0, const_cast<UnicodeSet::bitquad_t *>(__juan_Set_quads), 116, 0};

    /** Code Point Ranges for ceng
    [38d2, 38d2], [3b1d, 3b1d], [406c, 406c], [4255, 4255], [50e7, 50e7],
    [564c, 564c], [589e, 589e], [5c64, 5c64], [5d92, 5d92], [66fe, 66fe],
    [6a67, 6a67], [7af2, 7af2], [7e52, 7e52], [8e6d, 8e6d], [912b, 912b],
    [9a53, 9a53], [207c2, 207c2], [210c6, 210c6], [21aa0, 21aa0],
    [21f93, 21f93], [2214b, 2214b], [246e2, 246e2], [26807, 26807],
    [27c85, 27c85]**/


    namespace {
    const static UnicodeSet::run_t __ceng_Set_runs[] = {
    {Empty, 454}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 116}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 74}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 131}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 128}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 72}, {Mixed, 1}, {Empty, 2923}, {Mixed, 1}, {Empty, 71},
    {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 300}, {Mixed, 1}, {Empty, 264},
    {Mixed, 1}, {Empty, 163}, {Mixed, 1}, {Empty, 29723}};
    const static UnicodeSet::bitquad_t  __ceng_Set_quads[] = {
    0x00040000, 0x20000000, 0x00001000, 0x00200000, 0x00000080, 0x00001000,
    0x40000000, 0x00000010, 0x00040000, 0x40000000, 0x00000080, 0x00040000,
    0x00040000, 0x00002000, 0x00000800, 0x00080000, 0x00000004, 0x00000040,
    0x00000001, 0x00080000, 0x00000800, 0x00000004, 0x00000080, 0x00000020};
    }

    const static UnicodeSet ceng_Set{const_cast<UnicodeSet::run_t *>(__ceng_Set_runs), 49, 0, const_cast<UnicodeSet::bitquad_t *>(__ceng_Set_quads), 24, 0};

    /** Code Point Ranges for tao
    [38e0, 38e0], [3ae6, 3ae6], [3c88, 3c88], [3e57, 3e57], [401e, 401e],
    [403a, 403a], [413b, 413b], [4231, 4231], [446c, 446c], [46af, 46af],
    [46cc, 46cc], [46ec, 46ec], [493e, 493e], [4b1e, 4b1e], [4d5a, 4d5a],
    [530b, 530b], [53e8, 53e8], [54b7, 54b7], [5555, 5555], [5932, 5932],
    [5935, 5935], [5957, 5957], [59da, 59da], [5acd, 5acd], [5e4d, 5e4d],
    [5f22, 5f22], [6146, 6146], [62ad, 62ad], [6311, 6311], [638f, 638f],
    [642f, 642f], [6843, 6843], [69c4, 69c4], [6aae, 6aae], [6d2e, 6d2e],
    [6dad, 6dad], [6dd8, 6dd8], [6ed4, 6ed4], [6fe4, 6fe4], [71fe, 71fe],
    [746b, 746b], [7979, 7979], [7c4c, 7c4c], [7d5b, 7d5b], [7da2, 7da2],
    [7daf, 7daf], [7e1a, 7e1a], [8404, 8404], [872a, 872a], [88ea, 88ea],
    [8a0e, 8a0e], [8a5c, 8a5c], [8b1f, 8b1f], [8df3, 8df3], [8f41, 8f41],
    [9003, 9003], [92fe, 92fe], [932d, 932d], [9676, 9676], [97dc, 97dc],
    [982b, 982b], [9940, 9940], [9955, 9955], [99e3, 99e3], [9a0a, 9a0a],
    [9f17, 9f17], [201cf, 201cf], [2032a, 2032a], [204dd, 204dd],
    [205c6, 205c6], [2069c, 2069c], [2079e, 2079e], [20b22, 20b22],
    [21352, 21352], [21eab, 21eab], [224d8, 224d8], [22507, 22507],
    [23a14, 23a14], [23c3a, 23c3a], [23eae, 23eae], [24638, 24638],
    [2464e, 2464e], [2469f, 2469f], [24a10, 24a10], [24d3b, 24d3b],
    [24d5f, 24d5f], [25c1c, 25c1c], [260e1, 260e1], [26377, 26377],
    [26eb0, 26eb0], [28328, 28328], [28852, 28852], [292c3, 292c3],
    [293a2, 293a2], [2963f, 2963f], [296fd, 296fd], [29909, 29909],
    [29945, 29945], [29e74, 29e74], [2a1d8, 2a1d8], [2a33c, 2a33c]**/


    namespace {
    const static UnicodeSet::run_t __tao_Set_runs[] = {
    {Empty, 455}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 13}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 17}, {Mixed, 3}, {Empty, 17}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 30}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 47},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 39},
    {Mixed, 1}, {Empty, 2837}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 64},
    {Mixed, 1}, {Empty, 90}, {Mixed, 1}, {Empty, 48}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 167}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 59}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 24},
    {Mixed, 2}, {Empty, 117}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 89}, {Mixed, 1}, {Empty, 163},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 83}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 29414}};
    const static UnicodeSet::bitquad_t  __tao_Set_quads[] = {
    0x00000001, 0x00000040, 0x00000100, 0x00800000, 0x40000000, 0x04000000,
    0x08000000, 0x00020000, 0x00001000, 0x00008000, 0x00001000, 0x00001000,
    0x40000000, 0x40000000, 0x04000000, 0x00000800, 0x00000100, 0x00800000,
    0x00200000, 0x00240000, 0x00800000, 0x04000000, 0x00002000, 0x00002000,
    0x00000004, 0x00000040, 0x00002000, 0x00020000, 0x00008000, 0x00008000,
    0x00000008, 0x00000010, 0x00004000, 0x00004000, 0x00002000, 0x01000000,
    0x00100000, 0x00000010, 0x40000000, 0x00000800, 0x02000000, 0x00001000,
    0x08000000, 0x00008004, 0x04000000, 0x00000010, 0x00000400, 0x00000400,
    0x00004000, 0x10000000, 0x80000000, 0x00080000, 0x00000002, 0x00000008,
    0x40000000, 0x00002000, 0x00400000, 0x10000000, 0x00000800, 0x00200001,
    0x00000008, 0x00000400, 0x00800000, 0x00008000, 0x00000400, 0x20000000,
    0x00000040, 0x10000000, 0x40000000, 0x00000004, 0x00040000, 0x00000800,
    0x01000000, 0x00000080, 0x00100000, 0x04000000, 0x00004000, 0x01000000,
    0x00004000, 0x80000000, 0x00010000, 0x08000000, 0x80000000, 0x10000000,
    0x00000002, 0x00800000, 0x00010000, 0x00000100, 0x00040000, 0x00000008,
    0x00000004, 0x80000000, 0x20000000, 0x00000200, 0x00000020, 0x00100000,
    0x01000000, 0x10000000};
    }

    const static UnicodeSet tao_Set{const_cast<UnicodeSet::run_t *>(__tao_Set_runs), 181, 0, const_cast<UnicodeSet::bitquad_t *>(__tao_Set_quads), 98, 0};

    /** Code Point Ranges for ning
    [38f7, 38f7], [3cb0, 3cb0], [3fe6, 3fe6], [41a8, 41a8], [452d, 452d],
    [45ff, 45ff], [4b62, 4b62], [4f5e, 4f5e], [511c, 511c], [51b0, 51b0],
    [51dd, 51dd], [5680, 5680], [5b23, 5b23], [5b81, 5b81], [5be7, 5be7],
    [5e74, 5e74], [64f0, 64f0], [6518, 6518], [67e0, 67e0], [6a63, 6a63],
    [6ab8, 6ab8], [6cde, 6cde], [6ce5, 6ce5], [6fd8, 6fd8], [7370, 7370],
    [752f, 752f], [7591, 7591], [77c3, 77c3], [8079, 8079], [82e7, 82e7],
    [85b4, 85b4], [944f, 944f], [9b21, 9b21], [9b24, 9b24], [9e0b, 9e0b],
    [21ac3, 21ac3], [21dea, 21dea], [23346, 23346], [24566, 24566],
    [24e67, 24e67], [24edd, 24edd], [258d7, 258d7], [259e4, 259e4],
    [25ce5, 25ce5], [26872, 26872], [2687c, 2687c], [270f1, 270f1],
    [27356, 27356], [27457, 27457], [2755d, 2755d], [27b48, 27b48],
    [29573, 29573]**/


    namespace {
    const static UnicodeSet::run_t __ning_Set_runs[] = {
    {Empty, 455}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 2},
    {Empty, 37}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 51}, {Mixed, 2}, {Empty, 22}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 2},
    {Empty, 22}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 68}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 116}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 3045}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 170}, {Mixed, 1}, {Empty, 144}, {Mixed, 1},
    {Empty, 71}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 79},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 91}, {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 47},
    {Mixed, 1}, {Empty, 208}, {Mixed, 1}, {Empty, 29524}};
    const static UnicodeSet::bitquad_t  __ning_Set_quads[] = {
    0x00800000, 0x00010000, 0x00000040, 0x00000100, 0x00002000, 0x80000000,
    0x00000004, 0x40000000, 0x10000000, 0x00010000, 0x20000000, 0x00000001,
    0x00000008, 0x00000002, 0x00000080, 0x00100000, 0x00010000, 0x01000000,
    0x00000001, 0x00000008, 0x01000000, 0x40000000, 0x00000020, 0x01000000,
    0x00010000, 0x00008000, 0x00020000, 0x00000008, 0x02000000, 0x00000080,
    0x00100000, 0x00008000, 0x00000012, 0x00000800, 0x00000008, 0x00000400,
    0x00000040, 0x00000040, 0x00000080, 0x20000000, 0x00800000, 0x00000010,
    0x00000020, 0x10040000, 0x00020000, 0x00400000, 0x00800000, 0x20000000,
    0x00000100, 0x00080000};
    }

    const static UnicodeSet ning_Set{const_cast<UnicodeSet::run_t *>(__ning_Set_runs), 95, 0, const_cast<UnicodeSet::bitquad_t *>(__ning_Set_quads), 50, 0};

    /** Code Point Ranges for hang
    [391a, 391a], [3b3b, 3b3b], [3c20, 3c20], [402a, 402a], [4615, 4615],
    [47d8, 47d8], [489a, 489a], [49ad, 49ad], [4cb3, 4cb3], [542d, 542d],
    [592f, 592f], [5994, 5994], [5df7, 5df7], [5ffc, 5ffc], [65bb, 65bb],
    [676d, 676d], [6841, 6841], [6c86, 6c86], [7095, 7095], [72e0, 72e0],
    [72fc, 72fc], [7b10, 7b10], [7b55, 7b55], [7d4e, 7d4e], [80ae, 80ae],
    [822a, 822a], [82c0, 82c0], [86a2, 86a2], [884c, 884c], [8ca5, 8ca5],
    [8fd2, 8fd2], [909f, 909f], [9150, 9150], [980f, 980f], [9b67, 9b67],
    [2084a, 2084a], [21567, 21567], [24c1f, 24c1f], [24d7b, 24d7b],
    [24f0d, 24f0d], [25b95, 25b95], [26404, 26404], [26a35, 26a35],
    [27603, 27603], [27991, 27991], [28048, 28048], [28f92, 28f92],
    [2925c, 2925c], [2950b, 2950b], [2983e, 2983e], [29c8b, 29c8b],
    [29d9e, 29d9e], [2a426, 2a426], [2a547, 2a547], [2a5dc, 2a5dc]**/


    namespace {
    const static UnicodeSet::run_t __hang_Set_runs[] = {
    {Empty, 456}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 64},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 2918}, {Mixed, 1}, {Empty, 104},
    {Mixed, 1}, {Empty, 436}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 99}, {Mixed, 1}, {Empty, 67},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 94}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 121},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 29393}};
    const static UnicodeSet::bitquad_t  __hang_Set_quads[] = {
    0x04000000, 0x08000000, 0x00000001, 0x00000400, 0x00200000, 0x01000000,
    0x04000000, 0x00002000, 0x00080000, 0x00002000, 0x00008000, 0x00100000,
    0x00800000, 0x10000000, 0x08000000, 0x00002000, 0x00000002, 0x00000040,
    0x00200000, 0x10000001, 0x00010000, 0x00200000, 0x00004000, 0x00004000,
    0x00000400, 0x00000001, 0x00000004, 0x00001000, 0x00000020, 0x00040000,
    0x80000000, 0x00010000, 0x00008000, 0x00000080, 0x00000400, 0x00000080,
    0x80000000, 0x08000000, 0x00002000, 0x00200000, 0x00000010, 0x00200000,
    0x00000008, 0x00020000, 0x00000100, 0x00040000, 0x10000000, 0x00000800,
    0x40000000, 0x00000800, 0x40000000, 0x00000040, 0x00000080, 0x10000000};
    }

    const static UnicodeSet hang_Set{const_cast<UnicodeSet::run_t *>(__hang_Set_runs), 109, 0, const_cast<UnicodeSet::bitquad_t *>(__hang_Set_quads), 54, 0};

    /** Code Point Ranges for lie
    [3920, 3921], [3b2f, 3b2f], [3b5e, 3b5e], [3b69, 3b69], [3bff, 3bff],
    [3e39, 3e39], [3f32, 3f32], [3f5f, 3f5f], [407d, 407d], [40f3, 40f3],
    [4140, 4140], [426d, 426d], [42d1, 42d1], [44df, 44df], [4732, 4732],
    [4753, 4753], [47e9, 47e9], [47f9, 47f9], [4a89, 4a89], [4b05, 4b05],
    [4f8b, 4f8b], [5008, 5008], [5120, 5120], [51bd, 51bd], [5217, 5217],
    [52a3, 52a3], [52a6, 52a6], [52bd, 52bd], [54a7, 54a7], [54f7, 54f7],
    [57d2, 57d2], [594a, 594a], [59f4, 59f4], [5dc1, 5dc1], [5de4, 5de4],
    [5fda, 5fda], [6312, 6312], [6369, 6369], [64d6, 64d6], [64f8, 64f8],
    [6817, 6817], [6835, 6835], [68d9, 68d9], [6d0c, 6d0c], [6d56, 6d56],
    [70c8, 70c8], [71e4, 71e4], [7204, 7204], [7209, 7209], [72a3, 72a3],
    [730e, 730e], [7366, 7366], [7375, 7375], [7759, 7759], [7d2f, 7d2f],
    [7d9f, 7d9f], [8057, 8057], [811f, 811f], [818a, 818a], [81d8, 81d8],
    [8322, 8322], [86da, 86da], [88c2, 88c2], [8d94, 8d94], [8e90, 8e90],
    [8ffe, 8ffe], [908b, 908b], [98b2, 98b2], [9b23, 9b23], [9ba4, 9ba4],
    [9c72, 9c72], [9d37, 9d37], [206f1, 206f1], [20817, 20817],
    [20dc8, 20dc8], [21053, 21053], [2108f, 2108f], [210a9, 210a9],
    [212bb, 212bb], [213f5, 213f5], [2148f, 2148f], [214cd, 214cd],
    [21b63, 21b63], [21fe9, 21fe9], [228d3, 228d3], [23077, 23077],
    [2307b, 2307b], [232f2, 232f2], [2358a, 2358a], [2375a, 2375a],
    [23c0c, 23c0c], [2406f, 2406f], [24431, 24431], [244ff, 244ff],
    [245ba, 245ba], [24713, 24713], [2478a, 2478a], [24855, 24855],
    [24c43, 24c43], [24c5b, 24c5b], [25a82, 25a82], [25b2d, 25b2d],
    [25c81, 25c81], [25da2, 25da2], [25de8, 25de8], [25e38, 25e38],
    [26176, 26176], [264d3, 264d3], [264e4, 264e4], [265a9, 265a9],
    [26fb3, 26fb3], [27028, 27028], [274d0, 274d0], [27795, 27795],
    [277aa, 277aa], [27b4c, 27b4c], [27b5e, 27b5e], [27c20, 27c20],
    [2818d, 2818d], [2855c, 2855c], [28924, 28924], [291a3, 291a3],
    [29651, 29651], [298be, 298be], [299c6, 299c6], [29b4c, 29b4c],
    [29f2d, 29f2d]**/


    namespace {
    const static UnicodeSet::run_t __lie_Set_runs[] = {
    {Empty, 457}, {Mixed, 1}, {Empty, 15}, {Mixed, 3}, {Empty, 3},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 18}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 30}, {Mixed, 2}, {Empty, 14},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 2}, {Empty, 24}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 64}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2893}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 15}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 70}, {Mixed, 1}, {Empty, 60}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 113}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 26}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 79},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 21}, {Mixed, 2}, {Empty, 28}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 29446}};
    const static UnicodeSet::bitquad_t  __lie_Set_quads[] = {
    0x00000003, 0x00008000, 0x40000000, 0x00000200, 0x80000000, 0x02000000,
    0x00040000, 0x80000000, 0x20000000, 0x00080000, 0x00000001, 0x00002000,
    0x00020000, 0x80000000, 0x00040000, 0x00080000, 0x02000200, 0x00000200,
    0x00000020, 0x00000800, 0x00000100, 0x00000001, 0x20000000, 0x00800000,
    0x20000048, 0x00000080, 0x00800000, 0x00040000, 0x00000400, 0x00100000,
    0x00000002, 0x00000010, 0x04000000, 0x00040000, 0x00000200, 0x00400000,
    0x01000000, 0x00800000, 0x00200000, 0x02000000, 0x00001000, 0x00400000,
    0x00000100, 0x00000010, 0x00000210, 0x00000008, 0x00004000, 0x00200040,
    0x02000000, 0x00008000, 0x80000000, 0x00800000, 0x80000000, 0x00000400,
    0x01000000, 0x00000004, 0x04000000, 0x00000004, 0x00100000, 0x00010000,
    0x40000000, 0x00000800, 0x00040000, 0x00000008, 0x00000010, 0x00040000,
    0x00800000, 0x00020000, 0x00800000, 0x00000100, 0x00080000, 0x00008000,
    0x00000200, 0x08000000, 0x00200000, 0x00008000, 0x00002000, 0x00000008,
    0x00000200, 0x00080000, 0x08800000, 0x00040000, 0x00000400, 0x04000000,
    0x00001000, 0x00008000, 0x00020000, 0x80000000, 0x04000000, 0x00080000,
    0x00000400, 0x00200000, 0x08000008, 0x00000004, 0x00002000, 0x00000002,
    0x00000004, 0x00000100, 0x01000000, 0x00400000, 0x00080000, 0x00000010,
    0x00000200, 0x00080000, 0x00000100, 0x00010000, 0x00200000, 0x00000400,
    0x40001000, 0x00000001, 0x00002000, 0x10000000, 0x00000010, 0x00000008,
    0x00020000, 0x40000000, 0x00000040, 0x00001000, 0x00002000};
    }

    const static UnicodeSet lie_Set{const_cast<UnicodeSet::run_t *>(__lie_Set_runs), 217, 0, const_cast<UnicodeSet::bitquad_t *>(__lie_Set_quads), 119, 0};

    /** Code Point Ranges for guang
    [392e, 392e], [3adb, 3adb], [4f8a, 4f8a], [4fc7, 4fc7], [50d9, 50d9],
    [5149, 5149], [54a3, 54a3], [5799, 5799], [59ef, 59ef], [5e7f, 5e7f],
    [5ee3, 5ee3], [604d, 604d], [6304, 6304], [6497, 6497], [64f4, 64f4],
    [6844, 6844], [6a2a, 6a2a], [6ace, 6ace], [6d38, 6d38], [6f62, 6f62],
    [7377, 7377], [73d6, 73d6], [7844, 7844], [80f1, 80f1], [81e6, 81e6],
    [81e9, 81e9], [832a, 832a], [8daa, 8daa], [8fcb, 8fcb], [901b, 901b],
    [92a7, 92a7], [9ec6, 9ec6], [203e4, 203e4], [224ef, 224ef],
    [24596, 24596], [24ced, 24ced], [24d00, 24d00], [25031, 25031],
    [2688e, 2688e], [27efa, 27efa], [283a9, 283a9], [28921, 28921],
    [28db0, 28db0], [29448, 29448], [2949a, 2949a], [299c9, 299c9],
    [2a1f5, 2a1f5], [2a553, 2a553]**/


    namespace {
    const static UnicodeSet::run_t __guang_Set_runs[] = {
    {Empty, 457}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 165},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 68}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 83}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 96}, {Mixed, 1},
    {Empty, 2856}, {Mixed, 1}, {Empty, 263}, {Mixed, 1}, {Empty, 260},
    {Mixed, 1}, {Empty, 58}, {Mixed, 2}, {Empty, 24}, {Mixed, 1},
    {Empty, 194}, {Mixed, 1}, {Empty, 178}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 64}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 29397}};
    const static UnicodeSet::bitquad_t  __guang_Set_quads[] = {
    0x00004000, 0x08000000, 0x00000400, 0x00000080, 0x02000000, 0x00000200,
    0x00000008, 0x02000000, 0x00008000, 0x80000000, 0x00000008, 0x00002000,
    0x00000010, 0x00800000, 0x00100000, 0x00000010, 0x00000400, 0x00004000,
    0x01000000, 0x00000004, 0x00800000, 0x00400000, 0x00000010, 0x00020000,
    0x00000240, 0x00000400, 0x00000400, 0x00000800, 0x08000000, 0x00000080,
    0x00000040, 0x00000010, 0x00008000, 0x00400000, 0x00002000, 0x00000001,
    0x00020000, 0x00004000, 0x04000000, 0x00000200, 0x00000002, 0x00010000,
    0x00000100, 0x04000000, 0x00000200, 0x00200000, 0x00080000};
    }

    const static UnicodeSet guang_Set{const_cast<UnicodeSet::run_t *>(__guang_Set_runs), 93, 0, const_cast<UnicodeSet::bitquad_t *>(__guang_Set_quads), 47, 0};

    /** Code Point Ranges for san
    [393e, 393e], [39f2, 39f2], [4200, 4200], [4248, 4248], [4289, 4289],
    [4ac5, 4ac5], [4ae9, 4ae9], [4e09, 4e09], [4fd5, 4fd5], [5098, 5098],
    [50aa, 50aa], [53c3, 53c3], [5e34, 5e34], [6563, 6563], [6bff, 6bff],
    [6f75, 6f75], [7299, 7299], [7cdd, 7cdd], [7e56, 7e56], [8518, 8518],
    [8b32, 8b32], [93d2, 93d2], [93fe, 93fe], [9590, 9590], [994a, 994a],
    [9b16, 9b16], [20bbf, 20bbf], [21658, 21658], [22058, 22058],
    [22555, 22555], [23027, 23027], [2302b, 2302b], [23b1b, 23b1b],
    [23ba0, 23ba0], [25280, 25280], [254ac, 254ac], [26671, 26671],
    [26678, 26678], [26868, 26868], [26dfb, 26dfb], [26ebb, 26ebb],
    [275cb, 275cb], [27c46, 27c46], [27f7e, 27f7e], [29032, 29032],
    [2903c, 2903c], [29731, 29731], [29780, 29780], [29a21, 29a21],
    [29bd1, 29bd1]**/


    namespace {
    const static UnicodeSet::run_t __san_Set_runs[] = {
    {Empty, 457}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 64},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 65},
    {Mixed, 2}, {Empty, 24}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 24}, {Mixed, 1}, {Empty, 82},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 81},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 68}, {Mixed, 2}, {Empty, 12},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 2948}, {Mixed, 1}, {Empty, 84}, {Mixed, 1}, {Empty, 79},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 86}, {Mixed, 1},
    {Empty, 86}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 182},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 141}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 51}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 133}, {Mixed, 1}, {Empty, 55},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 29473}};
    const static UnicodeSet::bitquad_t  __san_Set_quads[] = {
    0x40000000, 0x00040000, 0x00000001, 0x00000100, 0x00000200, 0x00000020,
    0x00000200, 0x00000200, 0x00200000, 0x01000000, 0x00000400, 0x00000008,
    0x00100000, 0x00000008, 0x80000000, 0x00200000, 0x02000000, 0x20000000,
    0x00400000, 0x01000000, 0x00040000, 0x00040000, 0x40000000, 0x00010000,
    0x00000400, 0x00400000, 0x80000000, 0x01000000, 0x01000000, 0x00200000,
    0x00000880, 0x08000000, 0x00000001, 0x00000001, 0x00001000, 0x01020000,
    0x00000100, 0x08000000, 0x08000000, 0x00000800, 0x00000040, 0x40000000,
    0x10040000, 0x00020000, 0x00000001, 0x00000002, 0x00020000};
    }

    const static UnicodeSet san_Set{const_cast<UnicodeSet::run_t *>(__san_Set_runs), 89, 0, const_cast<UnicodeSet::bitquad_t *>(__san_Set_quads), 47, 0};

    /** Code Point Ranges for te
    [3942, 3942], [39f9, 39f9], [533f, 533f], [5f0f, 5f0f], [5fd1, 5fd2],
    [615d, 615d], [7279, 7279], [7286, 7286], [8077, 8077], [8126, 8126],
    [87a3, 87a3], [87d8, 87d8], [8ca3, 8ca3], [8cb8, 8cb8], [92f1, 92f1],
    [20238, 20238], [2260b, 2260b], [23631, 23631], [24670, 24670],
    [252b8, 252b8], [25329, 25329], [265df, 265df]**/


    namespace {
    const static UnicodeSet::run_t __te_Set_runs[] = {
    {Empty, 458}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 201},
    {Mixed, 1}, {Empty, 94}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 136}, {Mixed, 2}, {Empty, 110},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 51}, {Mixed, 2},
    {Empty, 38}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 2937},
    {Mixed, 1}, {Empty, 286}, {Mixed, 1}, {Empty, 128}, {Mixed, 1},
    {Empty, 129}, {Mixed, 1}, {Empty, 97}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 148}, {Mixed, 1}, {Empty, 29905}};
    const static UnicodeSet::bitquad_t  __te_Set_quads[] = {
    0x00000004, 0x02000000, 0x80000000, 0x00008000, 0x00060000, 0x20000000,
    0x02000000, 0x00000040, 0x00800000, 0x00000040, 0x00000008, 0x01000000,
    0x01000008, 0x00020000, 0x01000000, 0x00000800, 0x00020000, 0x00010000,
    0x01000000, 0x00000200, 0x80000000};
    }

    const static UnicodeSet te_Set{const_cast<UnicodeSet::run_t *>(__te_Set_runs), 39, 0, const_cast<UnicodeSet::bitquad_t *>(__te_Set_quads), 21, 0};

    /** Code Point Ranges for cai
    [3952, 3952], [4328, 4328], [4406, 4406], [4797, 4797], [47c0, 47c0],
    [4815, 4815], [48cb, 48cb], [4c02, 4c02], [4d2d, 4d2d], [5072, 5072],
    [554b, 554b], [57f0, 57f0], [5a47, 5a47], [5f69, 5f69], [624d, 624d],
    [6250, 6250], [63a1, 63a1], [63cc, 63cc], [6750, 6750], [68cc, 68cc],
    [731c, 731c], [776c, 776c], [7db5, 7db5], [7e29, 7e29], [7e94, 7e94],
    [83dc, 83dc], [8521, 8521], [88c1, 88c1], [8ca1, 8ca1], [8df4, 8df4],
    [8e29, 8e29], [91c7, 91c7], [218ee, 218ee], [22382, 22382],
    [24071, 24071], [24680, 24680], [2476d, 2476d], [247d6, 247d6],
    [24dd5, 24dd5], [26b01, 26b01], [2700a, 2700a], [27d64, 27d64],
    [28674, 28674], [28bd3, 28bd3], [2905e, 2905e], [299c7, 299c7],
    [2a1ed, 2a1ed]**/


    namespace {
    const static UnicodeSet::run_t __cai_Set_runs[] = {
    {Empty, 458}, {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 10}, {Mixed, 2},
    {Empty, 27}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 81},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 3128}, {Mixed, 1}, {Empty, 84}, {Mixed, 1},
    {Empty, 230}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 47}, {Mixed, 1},
    {Empty, 233}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 106},
    {Mixed, 1}, {Empty, 71}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 75}, {Mixed, 1}, {Empty, 64},
    {Mixed, 1}, {Empty, 29424}};
    const static UnicodeSet::bitquad_t  __cai_Set_quads[] = {
    0x00040000, 0x00000100, 0x00000040, 0x00800000, 0x00000001, 0x00200000,
    0x00000800, 0x00000004, 0x00002000, 0x00040000, 0x00000800, 0x00010000,
    0x00000080, 0x00000200, 0x00012000, 0x00000002, 0x00001000, 0x00010000,
    0x00001000, 0x10000000, 0x00001000, 0x00200000, 0x00000200, 0x00100000,
    0x10000000, 0x00000002, 0x00000002, 0x00000002, 0x00100000, 0x00000200,
    0x00000080, 0x00004000, 0x00000004, 0x00020000, 0x00000001, 0x00002000,
    0x00400000, 0x00200000, 0x00000002, 0x00000400, 0x00000010, 0x00100000,
    0x00080000, 0x40000000, 0x00000080, 0x00002000};
    }

    const static UnicodeSet cai_Set{const_cast<UnicodeSet::run_t *>(__cai_Set_runs), 91, 0, const_cast<UnicodeSet::bitquad_t *>(__cai_Set_quads), 46, 0};

    /** Code Point Ranges for shui
    [3968, 3968], [3f77, 3f77], [4b3d, 4b3d], [4b68, 4b68], [4ce0, 4ce0],
    [5a37, 5a37], [5e28, 5e28], [635d, 635d], [6c34, 6c34], [6d9a, 6d9a],
    [7761, 7761], [7971, 7971], [7a0e, 7a0e], [813d, 813d], [88de, 88de],
    [8aac, 8aac], [8ab0, 8ab0], [20edc, 20edc], [21bd1, 21bd1],
    [21c4a, 21c4a], [221e4, 221e4], [223c5, 223c5], [24199, 24199],
    [25318, 25318], [25af8, 25af8], [26659, 26659], [268e2, 268e2],
    [27023, 27023], [284da, 284da], [28fe0, 28fe0], [297e5, 297e5],
    [29a5e, 29a5e]**/


    namespace {
    const static UnicodeSet::run_t __shui_Set_runs[] = {
    {Empty, 459}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 93},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 105}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 70}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 78}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 60}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 3104}, {Mixed, 1}, {Empty, 103},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 237}, {Mixed, 1}, {Empty, 139},
    {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 90}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 164},
    {Mixed, 1}, {Empty, 88}, {Mixed, 1}, {Empty, 63}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 29485}};
    const static UnicodeSet::bitquad_t  __shui_Set_quads[] = {
    0x00000100, 0x00800000, 0x20000000, 0x00000100, 0x00000001, 0x00800000,
    0x00000100, 0x20000000, 0x00100000, 0x04000000, 0x00000002, 0x00020000,
    0x00004000, 0x20000000, 0x40000000, 0x00011000, 0x10000000, 0x00020000,
    0x00000400, 0x00000010, 0x00000020, 0x02000000, 0x01000000, 0x01000000,
    0x02000000, 0x00000004, 0x00000008, 0x04000000, 0x00000001, 0x00000020,
    0x40000000};
    }

    const static UnicodeSet shui_Set{const_cast<UnicodeSet::run_t *>(__shui_Set_runs), 63, 0, const_cast<UnicodeSet::bitquad_t *>(__shui_Set_quads), 31, 0};

    /** Code Point Ranges for chao
    [396e, 396e], [413b, 413b], [4390, 4390], [43da, 43da], [4708, 4708],
    [47c1, 47c1], [4af8, 4af8], [4aff, 4aff], [4b93, 4b93], [4c2b, 4c2b],
    [4c83, 4c83], [4cc2, 4cc2], [4eef, 4eef], [528b, 528b], [52e6, 52e6],
    [5435, 5435], [562e, 562e], [5632, 5632], [5dd0, 5dd0], [5de2, 5de2],
    [5f28, 5f28], [600a, 600a], [6284, 6284], [6477, 6477], [6641, 6641],
    [671d, 671d], [69f1, 69f1], [6a14, 6a14], [6b29, 6b29], [6f05, 6f05],
    [6f6e, 6f6e], [6fe4, 6fe4], [7092, 7092], [7123, 7123], [712f, 712f],
    [717c, 717c], [724a, 724a], [7727, 7727], [7ab2, 7ab2], [7c86, 7c86],
    [7d39, 7d39], [7dbd, 7dbd], [7e10, 7e10], [7f7a, 7f7a], [8016, 8016],
    [89d8, 89d8], [8a2c, 8a2c], [8b05, 8b05], [8d85, 8d85], [8da0, 8da0],
    [8dab, 8dab], [8f48, 8f48], [911b, 911b], [9214, 9214], [9ea8, 9ea8],
    [9f02, 9f02], [20c09, 20c09], [213ee, 213ee], [2184a, 2184a],
    [21bf4, 21bf4], [21edd, 21edd], [21f3c, 21f3c], [2207e, 2207e],
    [23c29, 23c29], [24674, 24674], [24c2c, 24c2c], [25558, 25558],
    [259c7, 259c7], [25c80, 25c80], [25ff7, 25ff7], [26667, 26667],
    [26a16, 26a16], [26e1b, 26e1b], [26fb1, 26fb1], [279e0, 279e0],
    [28113, 28113], [2832c, 2832c], [285e1, 285e1], [288aa, 288aa],
    [28a1a, 28a1a], [28d21, 28d21], [2920e, 2920e], [295a5, 295a5],
    [29c48, 29c48], [29c66, 29c66], [2a32c, 2a32c], [2a347, 2a348],
    [2a351, 2a351]**/


    namespace {
    const static UnicodeSet::run_t __chao_Set_runs[] = {
    {Empty, 459}, {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 60}, {Mixed, 2},
    {Empty, 9}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 8}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 12}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 100},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2919}, {Mixed, 1},
    {Empty, 62}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 221}, {Mixed, 1}, {Empty, 81}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 51}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 81}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 52}, {Mixed, 2}, {Empty, 53}, {Mixed, 2},
    {Empty, 29413}};
    const static UnicodeSet::bitquad_t  __chao_Set_quads[] = {
    0x00004000, 0x08000000, 0x00010000, 0x04000000, 0x00000100, 0x00000002,
    0x81000000, 0x00080000, 0x00000800, 0x00000008, 0x00000004, 0x00008000,
    0x00000800, 0x00000040, 0x00200000, 0x00044000, 0x00010000, 0x00000004,
    0x00000100, 0x00000400, 0x00000010, 0x00800000, 0x00000002, 0x20000000,
    0x00020000, 0x00100000, 0x00000200, 0x00000020, 0x00004000, 0x00000010,
    0x00040000, 0x00008008, 0x10000000, 0x00000400, 0x00000080, 0x00040000,
    0x00000040, 0x02000000, 0x20000000, 0x00010000, 0x04000000, 0x00400000,
    0x01000000, 0x00001000, 0x00000020, 0x00000020, 0x00000801, 0x00000100,
    0x08000000, 0x00100000, 0x00000100, 0x00000004, 0x00000200, 0x00004000,
    0x00000400, 0x00100000, 0x20000000, 0x10000000, 0x40000000, 0x00000200,
    0x00100000, 0x00001000, 0x01000000, 0x00000080, 0x00000001, 0x00800000,
    0x00000080, 0x00400000, 0x08000000, 0x00020000, 0x00000001, 0x00080000,
    0x00001000, 0x00000002, 0x00000400, 0x04000000, 0x00000002, 0x00004000,
    0x00000020, 0x00000100, 0x00000040, 0x00001000, 0x00020180};
    }

    const static UnicodeSet chao_Set{const_cast<UnicodeSet::run_t *>(__chao_Set_runs), 157, 0, const_cast<UnicodeSet::bitquad_t *>(__chao_Set_quads), 83, 0};

    /** Code Point Ranges for sao
    [3970, 3970], [3ca7, 3ca7], [3e90, 3e91], [4439, 4439], [4479, 4479],
    [54e8, 54e8], [57fd, 57fd], [5ac2, 5ac2], [6145, 6145], [61c6, 61c6],
    [6383, 6383], [6414, 6414], [6a7e, 6a7e], [6c09, 6c09], [6e9e, 6e9e],
    [71e5, 71e5], [7619, 7619], [77c2, 77c2], [7e3f, 7e3f], [7e45, 7e45],
    [7e70, 7e70], [81ca, 81ca], [9135, 9135], [9430, 9430], [98be, 98be],
    [9a37, 9a37], [9ade, 9ade], [9c20, 9c20], [9c3a, 9c3a], [9c62, 9c62],
    [202fa, 202fa], [22533, 22533], [22736, 22736], [22821, 22821],
    [22901, 22901], [22b9e, 22b9e], [23254, 23254], [23531, 23531],
    [23c15, 23c15], [24818, 24818], [24896, 24896], [25c31, 25c31],
    [263db, 263db], [2654f, 2654f], [267c4, 267c4], [26e8b, 26e8b],
    [26f98, 26f98], [270a9, 270a9], [2746b, 2746b], [275a0, 275a0],
    [280e3, 280e3], [289ea, 289ea], [28a8a, 28a8a], [29648, 29648],
    [29ae6, 29ae6], [29b9a, 29b9a], [2a37b, 2a37b]**/


    namespace {
    const static UnicodeSet::run_t __sao_Set_runs[] = {
    {Empty, 459}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 131}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 50},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 50}, {Mixed, 3}, {Empty, 26}, {Mixed, 1},
    {Empty, 122}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2867},
    {Mixed, 1}, {Empty, 273}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 95}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 156}, {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 89}, {Mixed, 1}, {Empty, 71},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 93}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 29412}};
    const static UnicodeSet::bitquad_t  __sao_Set_quads[] = {
    0x00010000, 0x00000080, 0x00030000, 0x02000000, 0x02000000, 0x00000100,
    0x20000000, 0x00000004, 0x00000020, 0x00000040, 0x00000008, 0x00100000,
    0x40000000, 0x00000200, 0x40000000, 0x00000020, 0x02000000, 0x00000004,
    0x80000000, 0x00000020, 0x00010000, 0x00000400, 0x00200000, 0x00010000,
    0x40000000, 0x00800000, 0x40000000, 0x04000001, 0x00000004, 0x04000000,
    0x00080000, 0x00400000, 0x00000002, 0x00000002, 0x40000000, 0x00100000,
    0x00020000, 0x00200000, 0x01000000, 0x00400000, 0x00020000, 0x08000000,
    0x00008000, 0x00000010, 0x00000800, 0x01000000, 0x00000200, 0x00000800,
    0x00000001, 0x00000008, 0x00000400, 0x00000400, 0x00000100, 0x00000040,
    0x04000000, 0x08000000};
    }

    const static UnicodeSet sao_Set{const_cast<UnicodeSet::run_t *>(__sao_Set_runs), 109, 0, const_cast<UnicodeSet::bitquad_t *>(__sao_Set_quads), 56, 0};

    /** Code Point Ranges for ce
    [397d, 397d], [3a4d, 3a4d], [421f, 421f], [4282, 4282], [4534, 4534],
    [473a, 473a], [5074, 5074], [518c, 518c], [5884, 5884], [5ae7, 5ae7],
    [5e58, 5e58], [5ec1, 5ec1], [60fb, 60fb], [61a1, 61a1], [62fa, 62fa],
    [6547, 6547], [6805, 6805], [6e2c, 6e2c], [755f, 755f], [7b27, 7b27],
    [7b56, 7b56], [7b74, 7b74], [7ba3, 7ba3], [7c0e, 7c0e], [7ca3, 7ca3],
    [8434, 8434], [8d66, 8d66], [9f70, 9f70], [2136b, 2136b],
    [22dfe, 22dfe], [22ff8, 22ff8], [23327, 23327], [25809, 25809],
    [25b30, 25b30], [25c21, 25c21], [25cef, 25cef], [2650e, 2650e],
    [268e7, 268e7], [26d6a, 26d6a], [27d61, 27d61], [28da8, 28da8],
    [29484, 29484]**/


    namespace {
    const static UnicodeSet::run_t __ce_Set_runs[] = {
    {Empty, 459}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 61},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 48}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 46}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 143}, {Mixed, 1},
    {Empty, 2975}, {Mixed, 1}, {Empty, 211}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 294}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 64}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 127}, {Mixed, 1}, {Empty, 129}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 29531}};
    const static UnicodeSet::bitquad_t  __ce_Set_quads[] = {
    0x20000000, 0x00002000, 0x80000000, 0x00000004, 0x00100000, 0x04000000,
    0x00100000, 0x00001000, 0x00000010, 0x00000080, 0x01000000, 0x00000002,
    0x08000000, 0x00000002, 0x04000000, 0x00000080, 0x00000020, 0x00001000,
    0x80000000, 0x00000080, 0x00400000, 0x00100000, 0x00000008, 0x00004000,
    0x00000008, 0x00100000, 0x00000040, 0x00010000, 0x00000800, 0x40000000,
    0x01000000, 0x00000080, 0x00000200, 0x00010000, 0x00000002, 0x00008000,
    0x00004000, 0x00000080, 0x00000400, 0x00000002, 0x00000100, 0x00000010};
    }

    const static UnicodeSet ce_Set{const_cast<UnicodeSet::run_t *>(__ce_Set_runs), 81, 0, const_cast<UnicodeSet::bitquad_t *>(__ce_Set_quads), 42, 0};

    /** Code Point Ranges for chai
    [3985, 3985], [3cd7, 3cd7], [3f2e, 3f2e], [3fb9, 3fb9], [4424, 4424],
    [44f1, 44f1], [4797, 4797], [5115, 5115], [558d, 558d], [56c6, 56c6],
    [5dee, 5dee], [6260, 6260], [62c6, 62c6], [6413, 6413], [67e5, 67e5],
    [67f4, 67f4], [7625, 7625], [7961, 7961], [8286, 8286], [8308, 8308],
    [831d, 831d], [8515, 8515], [8806, 8806], [8883, 8883], [8a0d, 8a0d],
    [8c7a, 8c7a], [91f5, 91f5], [9f5c, 9f5c], [2078a, 2078a],
    [217ed, 217ed], [21eb5, 21eb5], [22e53, 22e53], [24754, 24754],
    [24797, 24797], [2480c, 2480c], [2541f, 2541f], [263f1, 263f1],
    [26430, 26430], [2644f, 2644f], [27031, 27031], [274a8, 274a8],
    [274fd, 274fd], [27534, 27534], [27567, 27567], [27a98, 27a98],
    [27e3f, 27e3f], [28305, 28305], [29450, 29450]**/


    namespace {
    const static UnicodeSet::run_t __chai_Set_runs[] = {
    {Empty, 460}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 75}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 56},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 113}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 106}, {Mixed, 1},
    {Empty, 2881}, {Mixed, 1}, {Empty, 130}, {Mixed, 1}, {Empty, 53},
    {Mixed, 1}, {Empty, 124}, {Mixed, 1}, {Empty, 199}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 95}, {Mixed, 1},
    {Empty, 126}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 94},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 137},
    {Mixed, 1}, {Empty, 29533}};
    const static UnicodeSet::bitquad_t  __chai_Set_quads[] = {
    0x00000020, 0x00800000, 0x00004000, 0x02000000, 0x00000010, 0x00020000,
    0x00800000, 0x00200000, 0x00002000, 0x00000040, 0x00004000, 0x00000001,
    0x00000040, 0x00080000, 0x00100020, 0x00000020, 0x00000002, 0x00000040,
    0x20000100, 0x00200000, 0x00000040, 0x00000008, 0x00002000, 0x04000000,
    0x00200000, 0x10000000, 0x00000400, 0x00002000, 0x00200000, 0x00080000,
    0x00100000, 0x00800000, 0x00001000, 0x80000000, 0x00020000, 0x00010000,
    0x00008000, 0x00020000, 0x00000100, 0x20000000, 0x00100000, 0x00000080,
    0x01000000, 0x80000000, 0x00000020, 0x00010000};
    }

    const static UnicodeSet chai_Set{const_cast<UnicodeSet::run_t *>(__chai_Set_runs), 91, 0, const_cast<UnicodeSet::bitquad_t *>(__chai_Set_quads), 46, 0};

    /** Code Point Ranges for sun
    [398f, 398f], [3a1a, 3a1a], [405a, 405a], [4423, 4423], [55b0, 55b0],
    [5b6b, 5b6b], [627b, 627b], [640d, 640e], [644c, 644c], [6812, 6812],
    [69ab, 69ab], [69c2, 69c2], [6f60, 6f60], [733b, 733b], [7b0b, 7b0b],
    [7b4d, 7b4d], [7bb0, 7bb0], [7c28, 7c28], [84c0, 84c0], [859e, 859e],
    [8de3, 8de3], [93a8, 93a8], [96bc, 96bc], [98e7, 98e7], [98f1, 98f1],
    [9910, 9910], [9dbd, 9dbd], [208ec, 208ec], [2354d, 2354d],
    [26806, 26806], [2708d, 2708d], [273a4, 273a4]**/


    namespace {
    const static UnicodeSet::run_t __sun_Set_runs[] = {
    {Empty, 460}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 49},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 139}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 12}, {Mixed, 2}, {Empty, 44}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 17}, {Mixed, 2}, {Empty, 36},
    {Mixed, 1}, {Empty, 2905}, {Mixed, 1}, {Empty, 354}, {Mixed, 1},
    {Empty, 405}, {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 29794}};
    const static UnicodeSet::bitquad_t  __sun_Set_quads[] = {
    0x00008000, 0x04000000, 0x04000000, 0x00000008, 0x00010000, 0x00000800,
    0x08000000, 0x00006000, 0x00001000, 0x00040000, 0x00000800, 0x00000004,
    0x00000001, 0x08000000, 0x00000800, 0x00002000, 0x00010000, 0x00000100,
    0x00000001, 0x40000000, 0x00000008, 0x00000100, 0x10000000, 0x00020080,
    0x00010000, 0x20000000, 0x00001000, 0x00002000, 0x00000040, 0x00002000,
    0x00000010};
    }

    const static UnicodeSet sun_Set{const_cast<UnicodeSet::run_t *>(__sun_Set_runs), 59, 0, const_cast<UnicodeSet::bitquad_t *>(__sun_Set_quads), 31, 0};

    /** Code Point Ranges for jin
    [3997, 3997], [39c6, 39c6], [3a37, 3a37], [3b10, 3b10], [3bf2, 3bf2],
    [3bf8, 3bf8], [3c48, 3c48], [3da6, 3da6], [3e4f, 3e4f], [3ef1, 3ef1],
    [40e1, 40e1], [40f8, 40f8], [4225, 4225], [423d, 423d], [430d, 430d],
    [431d, 431d], [4436, 4436], [4464, 4464], [45ef, 45ef], [4633, 4633],
    [4910, 4910], [493a, 493a], [4af4, 4af4], [4b59, 4b59], [4ec5, 4ec5],
    [4eca, 4eca], [4f12, 4f12], [50c5, 50c5], [50f8, 50f8], [5118, 5118],
    [5153, 5153], [51da, 51da], [52c1, 52c1], [537a, 537a], [541f, 541f],
    [552b, 552b], [5664, 5664], [568d, 568d], [57d0, 57d0], [5807, 5807],
    [583b, 583b], [5890, 5890], [5997, 5997], [5a5c, 5a5c], [5ae4, 5ae4],
    [5b10, 5b10], [5b27, 5b27], [5bd6, 5bd6], [5c3d, 5c3d], [5d9c, 5d9c],
    [5df9, 5df9], [5dfe, 5dfe], [5ed1, 5ed1], [60cd, 60cd], [616c, 616c],
    [6422, 6422], [65a4, 65a4], [65b3, 65b3], [6649, 6649], [6783, 6783],
    [6997, 6997], [69ff, 69ff], [6b4f, 6b4f], [6ba3, 6ba3], [6d25, 6d25],
    [6d78, 6d78], [6e5b, 6e5b], [6e8d, 6e8d], [6f0c, 6f0c], [6fdc, 6fdc],
    [71fc, 71fc], [73d2, 73d2], [7468, 7468], [747e, 747e], [74a1, 74a1],
    [74b6, 74b6], [76e1, 76e1], [77dc, 77dc], [7972, 7972], [7981, 7981],
    [7afb, 7afb], [7b12, 7b12], [7b4b, 7b4b], [7d1f, 7d1f], [7d3e, 7d3e],
    [7dca, 7dca], [7e09, 7e09], [808b, 808b], [81f8, 81f8], [83f3, 83f3],
    [84f3, 84f3], [85ce, 85ce], [887f, 887f], [895f, 895f], [89b2, 89b2],
    [89d4, 89d4], [8b39, 8b39], [8cee, 8cee], [8fd1, 8fd1], [9032, 9032],
    [91d1, 91d1], [91ff, 91ff], [92df, 92df], [9326, 9326], [9773, 9773],
    [9949, 9949], [99b8, 99b8], [9e76, 9e76], [9ec5, 9ec5], [9f7d, 9f7d],
    [2009f, 2009f], [207b1, 207b1], [207be, 207be], [208b1, 208b1],
    [208b5, 208b5], [20c07, 20c07], [20fa4, 20fa4], [20fac, 20fac],
    [218b3, 218b3], [21966, 21966], [21968, 21968], [21ebd, 21ebd],
    [22245, 22245], [223ad, 223ad], [2267f, 2267f], [2298a, 2298a],
    [22b2c, 22b2c], [22b36, 22b36], [22c77, 22c77], [22f56, 22f56],
    [234cf, 234cf], [2374c, 2374c], [2413c, 2413c], [24621, 24621],
    [248f6, 248f6], [249eb, 249eb], [24d5e, 24d5e], [250b5, 250b5],
    [2559c, 2559c], [259f2, 259f2], [25bd1, 25bd1], [263b7, 263b7],
    [26614, 26614], [267ac, 267ac], [269c8, 269c8], [26a4f, 26a4f],
    [26f54, 26f54], [27537, 27537], [275c1, 275c1], [278b9, 278b9],
    [28183, 28183], [28525, 28525], [286a1, 286a1], [28b7a, 28b7a],
    [2903f, 2903f], [2993f, 2993f], [29edb, 29edb], [2a262, 2a262],
    [2a3f4, 2a3f4], [2a459, 2a459], [2a5bc, 2a5bc]**/


    namespace {
    const static UnicodeSet::run_t __jin_Set_runs[] = {
    {Empty, 460}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 22}, {Mixed, 2},
    {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13}, {Mixed, 3}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12},
    {Mixed, 2}, {Empty, 10}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 13}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 10},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 2}, {Empty, 6}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2824}, {Mixed, 1},
    {Empty, 56}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 71}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 62}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 70}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 71}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 29394}};
    const static UnicodeSet::bitquad_t  __jin_Set_quads[] = {
    0x00800000, 0x00000040, 0x00800000, 0x00010000, 0x01040000, 0x00000100,
    0x00000040, 0x00008000, 0x00020000, 0x01000002, 0x20000020, 0x20002000,
    0x00400000, 0x00000010, 0x00008000, 0x00080000, 0x00010000, 0x04000000,
    0x00100000, 0x02000000, 0x00000420, 0x00040000, 0x00000020, 0x01000000,
    0x01000000, 0x00080000, 0x04000000, 0x00000002, 0x04000000, 0x80000000,
    0x00000800, 0x00000010, 0x00002000, 0x00010000, 0x00000080, 0x08000000,
    0x00010000, 0x00800000, 0x10000000, 0x00000010, 0x00010000, 0x00000080,
    0x00400000, 0x20000000, 0x10000000, 0x42000000, 0x00020000, 0x00002000,
    0x00001000, 0x00000004, 0x00080010, 0x00000200, 0x00000008, 0x00800000,
    0x80000000, 0x00008000, 0x00000008, 0x00000020, 0x01000000, 0x08000000,
    0x00002000, 0x00001000, 0x10000000, 0x10000000, 0x00040000, 0x40000100,
    0x00400002, 0x00000002, 0x10000000, 0x00040000, 0x00000002, 0x08000000,
    0x00040000, 0x00000800, 0x80000000, 0x40000000, 0x00000400, 0x00000200,
    0x00000800, 0x01000000, 0x00080000, 0x00080000, 0x00004000, 0x80000000,
    0x80000000, 0x00040000, 0x00100000, 0x02000000, 0x00004000, 0x00020000,
    0x00040000, 0x00020000, 0x80000000, 0x80000000, 0x00000040, 0x00080000,
    0x00000200, 0x01000000, 0x00400000, 0x00000020, 0x20000000, 0x80000000,
    0x40020000, 0x00220000, 0x00000080, 0x00001010, 0x00080000, 0x00000140,
    0x20000000, 0x00000020, 0x00002000, 0x80000000, 0x00000400, 0x00401000,
    0x00800000, 0x00400000, 0x00008000, 0x00001000, 0x10000000, 0x00000002,
    0x00400000, 0x00000800, 0x40000000, 0x00200000, 0x10000000, 0x00040000,
    0x00020000, 0x00800000, 0x00100000, 0x00001000, 0x00000100, 0x00008000,
    0x00100000, 0x00800000, 0x00000002, 0x02000000, 0x00000008, 0x00000020,
    0x00000002, 0x04000000, 0x80000000, 0x80000000, 0x08000000, 0x00000004,
    0x00100000, 0x02000000, 0x10000000};
    }

    const static UnicodeSet jin_Set{const_cast<UnicodeSet::run_t *>(__jin_Set_runs), 271, 0, const_cast<UnicodeSet::bitquad_t *>(__jin_Set_quads), 147, 0};

    /** Code Point Ranges for ru
    [39ba, 39ba], [3cf6, 3cf6], [3e58, 3e58], [3f0b, 3f0b], [3f92, 3f92],
    [413e, 413e], [42c8, 42c8], [4795, 4795], [4c30, 4c30], [4e73, 4e73],
    [4f9e, 4f9e], [5044, 5044], [5112, 5112], [5165, 5165], [543a, 543a],
    [54ae, 54ae], [55d5, 55d5], [5685, 5685], [5973, 5973], [5982, 5982],
    [5ab7, 5ab7], [5b2c, 5b2c], [5b7a, 5b7a], [5e24, 5e24], [6310, 6310],
    [64e9, 64e9], [66d8, 66d8], [6708, 6708], [6847, 6847], [6abd, 6abd],
    [6c5d, 6c5d], [6d33, 6d33], [6ebd, 6ebd], [6fe1, 6fe1], [71f8, 71f8],
    [7373, 7373], [7b4e, 7b4e], [7e1f, 7e1f], [7e7b, 7e7b], [8089, 8089],
    [8097, 8097], [81d1, 81d1], [8339, 8339], [8498, 8498], [84d0, 84d0],
    [8560, 8560], [85b7, 85b7], [8815, 8815], [88bd, 88bd], [8925, 8925],
    [8966, 8966], [8fb1, 8fb1], [909a, 909a], [910f, 910f], [91b9, 91b9],
    [92a3, 92a3], [9450, 9450], [9700, 9700], [986c, 986c], [9c6c, 9c6c],
    [9d11, 9d11], [9d3d, 9d3d], [207fa, 207fa], [20926, 20926],
    [21132, 21132], [21234, 21234], [21703, 21703], [2171a, 2171a],
    [21976, 21976], [21afd, 21afd], [21b9a, 21b9a], [225b5, 225b5],
    [226da, 226da], [235b9, 235b9], [23690, 23690], [23b60, 23b60],
    [23bcb, 23bcb], [23f48, 23f49], [24864, 24864], [25666, 25666],
    [2579a, 2579a], [2690a, 2690a], [26b70, 26b70], [26cfe, 26cfe],
    [26df8, 26df8], [2729f, 2729f], [286b4, 286b4], [28a1c, 28a1c],
    [2910b, 2910b], [29365, 29365], [29c68, 29c68], [29dab, 29dab],
    [29daf, 29daf], [29e10, 29e10], [2a3ee, 2a3ee], [2a47e, 2a47e]**/


    namespace {
    const static UnicodeSet::run_t __ru_Set_runs[] = {
    {Empty, 461}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 49},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 2901}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 63}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 80}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 118}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 111}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 139}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 160}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 71}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 29404}};
    const static UnicodeSet::bitquad_t  __ru_Set_quads[] = {
    0x04000000, 0x00400000, 0x01000000, 0x00000800, 0x00040000, 0x40000000,
    0x00000100, 0x00200000, 0x00010000, 0x00080000, 0x40000000, 0x00000010,
    0x00040000, 0x00000020, 0x04000000, 0x00004000, 0x00200000, 0x00000020,
    0x00080000, 0x00000004, 0x00800000, 0x00001000, 0x04000000, 0x00000010,
    0x00010000, 0x00000200, 0x01000000, 0x00000100, 0x00000080, 0x20000000,
    0x20000000, 0x00080000, 0x20000000, 0x00000002, 0x01000000, 0x00080000,
    0x00004000, 0x80000000, 0x08000000, 0x00800200, 0x00020000, 0x02000000,
    0x01000000, 0x00010000, 0x00000001, 0x00800000, 0x00200000, 0x20000000,
    0x00000020, 0x00000040, 0x00020000, 0x04000000, 0x00008000, 0x02000000,
    0x00000008, 0x00010000, 0x00000001, 0x00001000, 0x00001000, 0x00020000,
    0x20000000, 0x04000000, 0x00000040, 0x00040000, 0x00100000, 0x04000008,
    0x00400000, 0x20000000, 0x04000000, 0x00200000, 0x04000000, 0x02000000,
    0x00010000, 0x00000001, 0x00000800, 0x00000300, 0x00000010, 0x00000040,
    0x04000000, 0x00000400, 0x00010000, 0x40000000, 0x01000000, 0x80000000,
    0x00100000, 0x10000000, 0x00000800, 0x00000020, 0x00000100, 0x00008800,
    0x00010000, 0x00004000, 0x40000000};
    }

    const static UnicodeSet ru_Set{const_cast<UnicodeSet::run_t *>(__ru_Set_runs), 183, 0, const_cast<UnicodeSet::bitquad_t *>(__ru_Set_quads), 93, 0};

    /** Code Point Ranges for shuang
    [39bc, 39bc], [3f3d, 3f3d], [4276, 4276], [432e, 432e], [452a, 452a],
    [45ee, 45ee], [4744, 4744], [4a25, 4a25], [4aea, 4aea], [50b1, 50b1],
    [587d, 587d], [5b40, 5b40], [5b47, 5b47], [6161, 6161], [6a09, 6a09],
    [6b06, 6b06], [6dd9, 6dd9], [6f3a, 6f3a], [7027, 7027], [7040, 7040],
    [723d, 723d], [7935, 7935], [7e14, 7e14], [826d, 826d], [96d9, 96d9],
    [971c, 971c], [9a66, 9a66], [9dde, 9dde], [9e18, 9e18], [205fe, 205fe],
    [2147d, 2147d], [25860, 25860], [25c76, 25c76], [25c9a, 25c9a],
    [2610d, 2610d], [2618c, 2618c], [27110, 27110], [2755f, 2755f],
    [2757a, 2757a], [27d05, 27d05], [281ef, 281ef], [2916a, 2916a],
    [291bf, 291bf], [2998c, 2998c], [29f67, 29f67]**/


    namespace {
    const static UnicodeSet::run_t __shuang_Set_runs[] = {
    {Empty, 461}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 61},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 48}, {Mixed, 1},
    {Empty, 68}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 7}, {Mixed, 2},
    {Empty, 14}, {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 162}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2878}, {Mixed, 1},
    {Empty, 115}, {Mixed, 1}, {Empty, 543}, {Mixed, 1}, {Empty, 31},
    {Mixed, 2}, {Empty, 35}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 123}, {Mixed, 1}, {Empty, 33}, {Mixed, 2}, {Empty, 60},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 123}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 46},
    {Mixed, 1}, {Empty, 29444}};
    const static UnicodeSet::bitquad_t  __shuang_Set_quads[] = {
    0x10000000, 0x20000000, 0x00400000, 0x00004000, 0x00000400, 0x00004000,
    0x00000010, 0x00000020, 0x00000400, 0x00020000, 0x20000000, 0x00000081,
    0x00000002, 0x00000200, 0x00000040, 0x02000000, 0x04000000, 0x00000080,
    0x00000001, 0x20000000, 0x00200000, 0x00100000, 0x00002000, 0x02000000,
    0x10000000, 0x00000040, 0x40000000, 0x01000000, 0x40000000, 0x20000000,
    0x00000001, 0x00400000, 0x04000000, 0x00002000, 0x00001000, 0x00010000,
    0x80000000, 0x04000000, 0x00000020, 0x00008000, 0x00000400, 0x80000000,
    0x00001000, 0x00000080};
    }

    const static UnicodeSet shuang_Set{const_cast<UnicodeSet::run_t *>(__shuang_Set_runs), 83, 0, const_cast<UnicodeSet::bitquad_t *>(__shuang_Set_quads), 44, 0};

    /** Code Point Ranges for dao
    [39c5, 39c5], [3a36, 3a36], [3fd2, 3fd2], [4183, 4183], [42ad, 42ad],
    [4326, 4326], [4f7b, 4f7b], [5012, 5012], [5114, 5114], [5200, 5200],
    [5230, 5230], [53d7, 53d7], [53e8, 53e8], [5541, 5541], [5604, 5604],
    [5675, 5675], [58d4, 58d4], [5c0e, 5c0e], [5cf6, 5cf6], [5e6c, 5e6c],
    [5fc9, 5fc9], [5fd1, 5fd1], [60bc, 60bc], [60c6, 60c6], [636f, 636f],
    [6417, 6417], [64e3, 64e3], [6566, 6566], [6737, 6737], [6aa4, 6aa4],
    [6aae, 6aae], [6c18, 6c18], [6d2e, 6d2e], [6fe4, 6fe4], [71fe, 71fe],
    [74d9, 74d9], [76dc, 76dc], [7982, 7982], [79b1, 79b1], [7a3b, 7a3b],
    [7b8c, 7b8c], [7d69, 7d69], [7e9b, 7e9b], [7fe2, 7fe2], [7fff, 7fff],
    [8220, 8220], [83ff, 83ff], [85b5, 85b5], [866d, 866d], [88ef, 88ef],
    [8e48, 8e48], [8ec7, 8ec7], [9053, 9053], [91bb, 91bb], [91d6, 91d6],
    [9676, 9676], [9b5b, 9b5b], [9ce5, 9ce5], [20435, 20435],
    [20d3c, 20d3c], [21112, 21112], [23013, 23013], [2304d, 2304d],
    [23adc, 23adc], [23c7c, 23c7c], [244fe, 244fe], [24600, 24600],
    [24dd8, 24dd8], [24e77, 24e77], [254ec, 254ec], [255da, 255da],
    [264ba, 264ba], [269ba, 269ba], [269be, 269be], [26a4d, 26a4d],
    [27f24, 27f24], [285d3, 285d3], [28c66, 28c66], [2921e, 2921e],
    [2956f, 2956f], [29b31, 29b31], [29b5f, 29b5f], [29d55, 29d55]**/


    namespace {
    const static UnicodeSet::run_t __dao_Set_runs[] = {
    {Empty, 462}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 97}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 12}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 20}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 21},
    {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 36},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 2873}, {Mixed, 1}, {Empty, 71}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 247}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 83}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 67},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 118}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 166}, {Mixed, 1}, {Empty, 52}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 45}, {Mixed, 2}, {Empty, 15}, {Mixed, 1},
    {Empty, 29461}};
    const static UnicodeSet::bitquad_t  __dao_Set_quads[] = {
    0x00000020, 0x00400000, 0x00040000, 0x00000008, 0x00002000, 0x00000040,
    0x08000000, 0x00040000, 0x00100000, 0x00000001, 0x00010000, 0x00800000,
    0x00000100, 0x00000002, 0x00000010, 0x00200000, 0x00100000, 0x00004000,
    0x00400000, 0x00001000, 0x00020200, 0x10000000, 0x00000040, 0x00008000,
    0x00800000, 0x00000008, 0x00000040, 0x00800000, 0x00004010, 0x01000000,
    0x00004000, 0x00000010, 0x40000000, 0x02000000, 0x10000000, 0x00000004,
    0x00020000, 0x08000000, 0x00001000, 0x00000200, 0x08000000, 0x80000004,
    0x00000001, 0x80000000, 0x00200000, 0x00002000, 0x00008000, 0x00000100,
    0x00000080, 0x00080000, 0x08000000, 0x00400000, 0x00400000, 0x08000000,
    0x00000020, 0x00200000, 0x10000000, 0x00040000, 0x00080000, 0x00002000,
    0x10000000, 0x10000000, 0x40000000, 0x00000001, 0x01000000, 0x00800000,
    0x00001000, 0x04000000, 0x04000000, 0x44000000, 0x00002000, 0x00000010,
    0x00080000, 0x00000040, 0x40000000, 0x00008000, 0x00020000, 0x80000000,
    0x00200000};
    }

    const static UnicodeSet dao_Set{const_cast<UnicodeSet::run_t *>(__dao_Set_runs), 147, 0, const_cast<UnicodeSet::bitquad_t *>(__dao_Set_quads), 79, 0};

    /** Code Point Ranges for guai
    [39d4, 39d4], [3dc7, 3dc7], [3fa9, 3fa9], [40b7, 40b7], [40f6, 40f6],
    [42bd, 42bd], [44d9, 44d9], [4e56, 4e56], [5672, 5672], [592c, 592c],
    [602a, 602a], [62d0, 62d0], [67fa, 67fa], [7b89, 7b89], [7f6b, 7f6b],
    [206d5, 206d5], [209ac, 209ac], [211f8, 211f8], [2132a, 2132a],
    [215aa, 215aa], [219e9, 219e9], [22d92, 22d92], [23cbe, 23cbe],
    [2544b, 2544b], [25470, 25470], [26af3, 26af3], [26b83, 26b83],
    [27285, 27285], [27c7e, 27c7e], [27d1a, 27d1a], [29da6, 29da6]**/


    namespace {
    const static UnicodeSet::run_t __guai_Set_runs[] = {
    {Empty, 462}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 75}, {Mixed, 1},
    {Empty, 64}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 55},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 156}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 3130},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 65}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 156}, {Mixed, 1}, {Empty, 120}, {Mixed, 1},
    {Empty, 188}, {Mixed, 2}, {Empty, 179}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 78}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 260}, {Mixed, 1}, {Empty, 29458}};
    const static UnicodeSet::bitquad_t  __guai_Set_quads[] = {
    0x00100000, 0x00000080, 0x00000200, 0x00800000, 0x00400000, 0x20000000,
    0x02000000, 0x00400000, 0x00040000, 0x00001000, 0x00000400, 0x00010000,
    0x04000000, 0x00000200, 0x00000800, 0x00200000, 0x00001000, 0x01000000,
    0x00000400, 0x00000400, 0x00000200, 0x00040000, 0x40000000, 0x00000800,
    0x00010000, 0x00080000, 0x00000008, 0x00000020, 0x40000000, 0x04000000,
    0x00000040};
    }

    const static UnicodeSet guai_Set{const_cast<UnicodeSet::run_t *>(__guai_Set_runs), 61, 0, const_cast<UnicodeSet::bitquad_t *>(__guai_Set_quads), 31, 0};

    /** Code Point Ranges for keng
    [39f6, 39f6], [3c22, 3c22], [4034, 4034], [40d8, 40d8], [4869, 4869],
    [4870, 4870], [52a5, 52a5], [542d, 542d], [5748, 5748], [5751, 5751],
    [595f, 595f], [5994, 5994], [5fd0, 5fd0], [63c1, 63c1], [647c, 647c],
    [6bb8, 6bb8], [727c, 727c], [784d, 784e], [785c, 785c], [787b, 787b],
    [811b, 811b], [8a99, 8a99], [8e01, 8e01], [927a, 927a], [92b5, 92b5],
    [935e, 935e], [93d7, 93d7], [962c, 962c], [20837, 20837],
    [2086e, 2086e], [2179a, 2179a], [21de8, 21de8], [23890, 23890],
    [238b4, 238b4], [23ad2, 23ad2], [25278, 25278], [25445, 25445],
    [25452, 25452], [25481, 25481], [254b1, 254b1], [25973, 25973],
    [27018, 27018], [282d4, 282d4], [28333, 28333], [28336, 28336],
    [28351, 28351]**/


    namespace {
    const static UnicodeSet::run_t __keng_Set_runs[] = {
    {Empty, 463}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 60}, {Mixed, 1},
    {Empty, 81}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 46}, {Mixed, 2}, {Empty, 68}, {Mixed, 1}, {Empty, 75},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 2959}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 120}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 212}, {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 188},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 37}, {Mixed, 1}, {Empty, 180}, {Mixed, 1}, {Empty, 149},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 29669}};
    const static UnicodeSet::bitquad_t  __keng_Set_quads[] = {
    0x00400000, 0x00000004, 0x00100000, 0x01000000, 0x00010200, 0x00000020,
    0x00002000, 0x00020100, 0x80000000, 0x00100000, 0x00010000, 0x00000002,
    0x10000000, 0x01000000, 0x10000000, 0x10006000, 0x08000000, 0x08000000,
    0x02000000, 0x00000002, 0x04000000, 0x00200000, 0x40000000, 0x00800000,
    0x00001000, 0x00800000, 0x00004000, 0x04000000, 0x00000100, 0x00010000,
    0x00100000, 0x00040000, 0x01000000, 0x00040020, 0x00000002, 0x00020000,
    0x00080000, 0x01000000, 0x00100000, 0x00480000, 0x00020000};
    }

    const static UnicodeSet keng_Set{const_cast<UnicodeSet::run_t *>(__keng_Set_runs), 75, 0, const_cast<UnicodeSet::bitquad_t *>(__keng_Set_quads), 41, 0};

    /** Code Point Ranges for zu
    [39fb, 39fb], [3a46, 3a46], [3c35, 3c35], [3c9e, 3c9e], [3d40, 3d40],
    [40da, 40da], [4178, 4178], [4503, 4503], [4595, 4595], [4658, 4658],
    [469d, 469d], [4bff, 4bff], [4c63, 4c63], [4f39, 4f39], [4fce, 4fce],
    [5005, 5005], [50b6, 50b6], [5352, 5352], [54eb, 54eb], [5550, 5550],
    [5601, 5601], [59d0, 59d0], [5ca8, 5ca8], [5d12, 5d12], [601a, 601a],
    [65cf, 65cf], [67e4, 67e4], [69ed, 69ed], [6cae, 6cae], [6dec, 6dec],
    [73c7, 73c7], [7820, 7820], [7956, 7956], [79df, 79df], [7a21, 7a21],
    [7ba4, 7ba4], [7d44, 7d44], [7db7, 7db7], [82f4, 82f4], [83f9, 83f9],
    [84a9, 84a9], [8a5b, 8a5b], [8b2f, 8b2f], [8db2, 8db3], [8e24, 8e24],
    [8e3f, 8e3f], [8e74, 8e74], [9243, 9243], [924f, 9250], [930a, 930a],
    [9390, 9390], [93c3, 93c3], [947f, 947f], [963b, 963b], [977b, 977b],
    [9847, 9847], [99d4, 99d4], [20ecf, 20ecf], [21eec, 21eec],
    [2216a, 2216a], [2227a, 2227a], [22af5, 22af5], [22cc7, 22cc8],
    [231d9, 231d9], [238b0, 238b0], [23936, 23936], [23a1b, 23a1b],
    [244f5, 244f5], [24b27, 24b27], [24c4c, 24c4c], [24f71, 24f71],
    [256dc, 256dc], [257af, 257af], [258c6, 258c6], [25f00, 25f00],
    [25f2a, 25f2a], [2644b, 2644b], [26d6c, 26d6c], [271c8, 271c8],
    [271ff, 271ff], [273b2, 273b2], [27408, 27408], [27459, 27459],
    [275ce, 275ce], [277b0, 277b0], [27e92, 27e92], [28080, 28080],
    [280ed, 280ed], [28115, 28115], [289f0, 289f0], [28a33, 28a33],
    [28a70, 28a70], [29421, 29421], [2997f, 2997f], [29a60, 29a60],
    [29cb2, 29cb2], [29eaf, 29eaf], [2a2cd, 2a2cd], [2a627, 2a627],
    [2a673, 2a673]**/


    namespace {
    const static UnicodeSet::run_t __zu_Set_runs[] = {
    {Empty, 463}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 45},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 46},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 2983}, {Mixed, 1},
    {Empty, 128}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 86}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 49}, {Mixed, 2}, {Empty, 40}, {Mixed, 1},
    {Empty, 72}, {Mixed, 1}, {Empty, 34}, {Mixed, 2}, {Empty, 13},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 70},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 77},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 29388}};
    const static UnicodeSet::bitquad_t  __zu_Set_quads[] = {
    0x08000000, 0x00000040, 0x00200000, 0x40000000, 0x00000001, 0x04000000,
    0x01000000, 0x00000008, 0x00200000, 0x01000000, 0x20000000, 0x80000000,
    0x00000008, 0x02000000, 0x00004000, 0x00000020, 0x00400000, 0x00040000,
    0x00000800, 0x00010000, 0x00000002, 0x00010000, 0x00000100, 0x00040000,
    0x04000000, 0x00008000, 0x00000010, 0x00002000, 0x00004000, 0x00001000,
    0x00000080, 0x00000001, 0x00400000, 0x80000000, 0x00000002, 0x00000010,
    0x00000010, 0x00800000, 0x00100000, 0x02000000, 0x00000200, 0x08000000,
    0x00008000, 0x000c0000, 0x80000010, 0x00100000, 0x00018008, 0x00000400,
    0x00010000, 0x00000008, 0x80000000, 0x08000000, 0x08000000, 0x00000080,
    0x00100000, 0x00008000, 0x00001000, 0x00000400, 0x04000000, 0x00200000,
    0x00000180, 0x02000000, 0x00010000, 0x00400000, 0x08000000, 0x00200000,
    0x00000080, 0x00001000, 0x00020000, 0x10000000, 0x00008000, 0x00000040,
    0x00000001, 0x00000400, 0x00000800, 0x00001000, 0x00000100, 0x80000000,
    0x00040000, 0x00000100, 0x02000000, 0x00004000, 0x00010000, 0x00040000,
    0x00000001, 0x00002000, 0x00200000, 0x00010000, 0x00080000, 0x00010000,
    0x00000002, 0x80000000, 0x00000001, 0x00040000, 0x00008000, 0x00002000,
    0x00000080, 0x00080000};
    }

    const static UnicodeSet zu_Set{const_cast<UnicodeSet::run_t *>(__zu_Set_runs), 191, 0, const_cast<UnicodeSet::bitquad_t *>(__zu_Set_quads), 98, 0};

    /** Code Point Ranges for chou
    [3a28, 3a28], [3bb2, 3bb2], [3d5e, 3d5e], [3f84, 3f84], [3fd2, 3fd2],
    [3fe7, 3fe7], [403a, 403a], [42ad, 42ad], [450f, 450f], [46e3, 46e3],
    [4aae, 4aae], [4c54, 4c54], [4c96, 4c96], [4e11, 4e11], [4ec7, 4ec7],
    [4fb4, 4fb4], [5062, 5062], [5114, 5114], [541c, 541c], [568b, 568b],
    [5733, 5733], [59af, 59af], [5a64, 5a64], [5abf, 5abf], [5b26, 5b26],
    [5e6c, 5e6c], [601e, 601e], [60c6, 60c6], [6101, 6101], [61e4, 61e4],
    [626d, 626d], [62bd, 62bd], [63ab, 63ab], [63c4, 63c4], [640a, 640a],
    [64e3, 64e3], [677b, 677b], [677d, 677d], [6826, 6826], [6906, 6906],
    [6aae, 6aae], [6ba0, 6ba0], [6eb4, 6eb4], [71fd, 71fd], [7270, 7270],
    [72a8, 72a8], [7564, 7564], [7587, 7587], [7633, 7633], [7697, 7697],
    [76e9, 76e9], [7723, 7723], [7785, 7785], [7a20, 7a20], [7bd8, 7bd8],
    [7c09, 7c09], [7c4c, 7c4c], [7d2c, 7d2c], [7d52, 7d52], [7da2, 7da2],
    [81ed, 81ed], [83d7, 83d7], [85b5, 85b5], [88ef, 88ef], [8a76, 8a76],
    [8b05, 8b05], [8b78, 8b78], [8b8e, 8b8e], [8dfe, 8dfe], [8e8a, 8e8a],
    [905a, 905a], [916c, 916c], [9194, 9194], [919c, 919c], [91bb, 91bb],
    [9215, 9215], [96d4, 96d4], [9b57, 9b57], [9b8b, 9b8b], [9bc8, 9bc8],
    [2032a, 2032a], [2070b, 2070b], [2077d, 2077d], [20dce, 20dce],
    [20e5d, 20e5d], [20f21, 20f21], [20f89, 20f89], [21550, 21550],
    [2156a, 2156a], [228ca, 228ca], [23013, 23013], [2357e, 2357e],
    [23a90, 23a90], [23ad0, 23ad0], [24636, 24636], [24cdd, 24cdd],
    [24ce0, 24ce0], [24f8a, 24f8a], [24fa6, 24fa6], [250e7, 250e7],
    [253c8, 253c8], [25840, 25840], [25985, 25985], [25c1e, 25c1e],
    [25c85, 25c85], [25d6c, 25d6c], [25ea3, 25ea3], [25ee4, 25ee4],
    [26874, 26874], [26b78, 26b78], [270dd, 270dd], [27bbb, 27bbb],
    [28014, 28014], [28040, 28040], [285ac, 285ac], [287aa, 287aa],
    [28851, 28851], [28872, 28872], [28937, 28937], [292c4, 292c4],
    [29304, 29304], [29f40, 29f40], [2a1d8, 2a1d8]**/


    namespace {
    const static UnicodeSet::run_t __chou_Set_runs[] = {
    {Empty, 465}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 7}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 21}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
    {Empty, 18}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 8}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2874}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 45}, {Mixed, 2},
    {Empty, 154}, {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 90}, {Mixed, 1}, {Empty, 52}, {Mixed, 2}, {Empty, 20},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 75}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 86},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 4},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 97}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 29425}};
    const static UnicodeSet::bitquad_t  __chou_Set_quads[] = {
    0x00000100, 0x00040000, 0x40000000, 0x00000010, 0x00040000, 0x00000080,
    0x04000000, 0x00002000, 0x00008000, 0x00000008, 0x00004000, 0x00100000,
    0x00400000, 0x00020000, 0x00000080, 0x00100000, 0x00000004, 0x00100000,
    0x10000000, 0x00000800, 0x00080000, 0x00008000, 0x00000010, 0x80000000,
    0x00000040, 0x00001000, 0x40000000, 0x00000040, 0x00000002, 0x00000010,
    0x00002000, 0x20000000, 0x00000800, 0x00000010, 0x00000400, 0x00000008,
    0x28000000, 0x00000040, 0x00000040, 0x00004000, 0x00000001, 0x00100000,
    0x20000000, 0x00010000, 0x00000100, 0x00000010, 0x00000080, 0x00080000,
    0x00800000, 0x00000200, 0x00000008, 0x00000020, 0x00000001, 0x01000000,
    0x00000200, 0x00001000, 0x00001000, 0x00040000, 0x00000004, 0x00002000,
    0x00800000, 0x00200000, 0x00008000, 0x00400000, 0x00000020, 0x01000000,
    0x00004000, 0x40000000, 0x00000400, 0x04000000, 0x00001000, 0x10100000,
    0x08000000, 0x00200000, 0x00100000, 0x00800000, 0x00000800, 0x00000100,
    0x00000400, 0x00000800, 0x20000000, 0x00004000, 0x20000000, 0x00000002,
    0x00000200, 0x00010000, 0x00000400, 0x00000400, 0x00080000, 0x40000000,
    0x00010000, 0x00010000, 0x00400000, 0x20000000, 0x00000001, 0x00000400,
    0x00000040, 0x00000080, 0x00000100, 0x00000001, 0x00000020, 0x40000000,
    0x00000020, 0x00001000, 0x00000008, 0x00000010, 0x00100000, 0x01000000,
    0x20000000, 0x08000000, 0x00100000, 0x00000001, 0x00001000, 0x00000400,
    0x00020000, 0x00040000, 0x00800000, 0x00000010, 0x00000010, 0x00000001,
    0x01000000};
    }

    const static UnicodeSet chou_Set{const_cast<UnicodeSet::run_t *>(__chou_Set_runs), 221, 0, const_cast<UnicodeSet::bitquad_t *>(__chou_Set_quads), 121, 0};

    /** Code Point Ranges for shai
    [3a44, 3a44], [3b20, 3b20], [3d13, 3d13], [4d58, 4d58], [644b, 644b],
    [6526, 6526], [66ec, 66ec], [6bba, 6bba], [7be9, 7be9], [7c01, 7c01],
    [7c1b, 7c1b], [8272, 8272], [8af0, 8af0], [91c3, 91c3], [95b7, 95b7],
    [20c61, 20c61], [2210c, 2210c], [23ed1, 23ed1], [27701, 27701],
    [288a6, 288a6], [29083, 29083], [2909d, 2909d], [29d07, 29d07]**/


    namespace {
    const static UnicodeSet::run_t __shai_Set_runs[] = {
    {Empty, 466}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 129}, {Mixed, 1}, {Empty, 183}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 129}, {Mixed, 2}, {Empty, 50}, {Mixed, 1},
    {Empty, 67}, {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 2997}, {Mixed, 1}, {Empty, 164}, {Mixed, 1},
    {Empty, 237}, {Mixed, 1}, {Empty, 449}, {Mixed, 1}, {Empty, 140},
    {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 99}, {Mixed, 1},
    {Empty, 29463}};
    const static UnicodeSet::bitquad_t  __shai_Set_quads[] = {
    0x00000010, 0x00000001, 0x00080000, 0x01000000, 0x00000800, 0x00000040,
    0x00001000, 0x04000000, 0x00000200, 0x08000002, 0x00040000, 0x00010000,
    0x00000008, 0x00800000, 0x00000002, 0x00001000, 0x00020000, 0x00000002,
    0x00000040, 0x20000008, 0x00000080};
    }

    const static UnicodeSet shai_Set{const_cast<UnicodeSet::run_t *>(__shai_Set_runs), 41, 0, const_cast<UnicodeSet::bitquad_t *>(__shai_Set_quads), 21, 0};

    /** Code Point Ranges for piao
    [3a60, 3a60], [3b13, 3b13], [3d71, 3d71], [3e7e, 3e7e], [43c7, 43c7],
    [4d29, 4d29], [50c4, 50c4], [527d, 527d], [52e1, 52e1], [560c, 560c],
    [5ad6, 5ad6], [5f6f, 5f6f], [6153, 6153], [647d, 647d], [65da, 65da],
    [6734, 6734], [6b8d, 6b8d], [6f02, 6f02], [6f4e, 6f4e], [72a5, 72a5],
    [74e2, 74e2], [76ab, 76ab], [779f, 779f], [7968, 7968], [7bfb, 7bfb],
    [7e39, 7e39], [7ff2, 7ff2], [8198, 8198], [83a9, 83a9], [8508, 8508],
    [85b8, 85b8], [87b5, 87b5], [8b24, 8b24], [91a5, 91a5], [95dd, 95dd],
    [9860, 9860], [98c3, 98c4], [9a43, 9a43], [9a6b, 9a6b], [9adf, 9adf],
    [9b52, 9b52], [9e83, 9e83], [20dfb, 20dfb], [218b1, 218b1],
    [218cb, 218cb], [232f3, 232f3], [23750, 23750], [23ced, 23ced],
    [26b7c, 26b7c], [27320, 27320], [27f64, 27f64], [28753, 28753],
    [28bac, 28bac], [29137, 29137], [295cf, 295cf], [29652, 29652],
    [296de, 296de], [29866, 29866], [29bb3, 29bb3], [2a143, 2a143],
    [2a2d6, 2a2d6], [2a3eb, 2a3eb]**/


    namespace {
    const static UnicodeSet::run_t __piao_Set_runs[] = {
    {Empty, 467}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 74}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 2938}, {Mixed, 1}, {Empty, 85}, {Mixed, 2},
    {Empty, 208}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 371}, {Mixed, 1}, {Empty, 61}, {Mixed, 1},
    {Empty, 97}, {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 29408}};
    const static UnicodeSet::bitquad_t  __piao_Set_quads[] = {
    0x00000001, 0x00080000, 0x00020000, 0x40000000, 0x00000080, 0x00000200,
    0x00000010, 0x20000000, 0x00000002, 0x00001000, 0x00400000, 0x00008000,
    0x00080000, 0x20000000, 0x04000000, 0x00100000, 0x00002000, 0x00000004,
    0x00004000, 0x00000020, 0x00000004, 0x00000800, 0x80000000, 0x00000100,
    0x08000000, 0x02000000, 0x00040000, 0x01000000, 0x00000200, 0x00000100,
    0x01000000, 0x00200000, 0x00000010, 0x00000020, 0x20000000, 0x00000001,
    0x00000018, 0x00000008, 0x00000800, 0x80000000, 0x00040000, 0x00000008,
    0x08000000, 0x00020000, 0x00000800, 0x00080000, 0x00010000, 0x00002000,
    0x10000000, 0x00000001, 0x00000010, 0x00080000, 0x00001000, 0x00800000,
    0x00008000, 0x00040000, 0x40000000, 0x00000040, 0x00080000, 0x00000008,
    0x00400000, 0x00000800};
    }

    const static UnicodeSet piao_Set{const_cast<UnicodeSet::run_t *>(__piao_Set_runs), 121, 0, const_cast<UnicodeSet::bitquad_t *>(__piao_Set_quads), 62, 0};

    /** Code Point Ranges for pou
    [3a60, 3a60], [3c34, 3c34], [43a7, 43a7], [4b0c, 4b0c], [4bfd, 4bfd],
    [4cdd, 4cdd], [5256, 5256], [5425, 5425], [5485, 5485], [57ba, 57ba],
    [57f9, 57f9], [5837, 5837], [5a1d, 5a1d], [5a44, 5a44], [6294, 6294],
    [62b1, 62b1], [634a, 634a], [638a, 638a], [68d3, 68d3], [6daa, 6daa],
    [7283, 7283], [74ff, 74ff], [7b81, 7b81], [88d2, 88d2], [8943, 8943],
    [8e23, 8e23], [90e8, 90e8], [9307, 9307], [207cc, 207cc],
    [224b7, 224b7], [26951, 26951], [26d7f, 26d7f], [26e8e, 26e8e],
    [2783e, 2783e], [2953b, 2953b], [296ad, 296ad]**/


    namespace {
    const static UnicodeSet::run_t __pou_Set_runs[] = {
    {Empty, 467}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 65}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 52}, {Mixed, 1},
    {Empty, 105}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 2981}, {Mixed, 1}, {Empty, 230}, {Mixed, 1}, {Empty, 548},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 76}, {Mixed, 1}, {Empty, 231}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 29514}};
    const static UnicodeSet::bitquad_t  __pou_Set_quads[] = {
    0x00000001, 0x00100000, 0x00000080, 0x00001000, 0x20000000, 0x20000000,
    0x00400000, 0x00000020, 0x00000020, 0x04000000, 0x02000000, 0x00800000,
    0x20000000, 0x00000010, 0x00100000, 0x00020000, 0x00000400, 0x00000400,
    0x00080000, 0x00000400, 0x00000008, 0x80000000, 0x00000002, 0x00040000,
    0x00000008, 0x00000008, 0x00000100, 0x00000080, 0x00001000, 0x00800000,
    0x00020000, 0x80000000, 0x00004000, 0x40000000, 0x08000000, 0x00002000};
    }

    const static UnicodeSet pou_Set{const_cast<UnicodeSet::run_t *>(__pou_Set_runs), 71, 0, const_cast<UnicodeSet::bitquad_t *>(__pou_Set_quads), 36, 0};

    /** Code Point Ranges for qing
    [3a69, 3a69], [3d7e, 3d7e], [3deb, 3deb], [40a9, 40a9], [477c, 477c],
    [4856, 4856], [4a1d, 4a1d], [4be7, 4be7], [5029, 5029], [50be, 50be],
    [51ca, 51ca], [5260, 5260], [52cd, 52cd], [537f, 537f], [5568, 5568],
    [570a, 570a], [57e5, 57e5], [58f0, 58f0], [591d, 591d], [5ece, 5ece],
    [60c5, 60c5], [6176, 6176], [6385, 6385], [64ce, 64cf], [6674, 6674],
    [68fe, 68fe], [6a08, 6a08], [6aa0, 6aa0], [6abe, 6abe], [6b91, 6b91],
    [6bb8, 6bb8], [6c2b, 6c2b], [6c30, 6c30], [6d87, 6d87], [6e05, 6e05],
    [6e39, 6e39], [6f00, 6f00], [785c, 785c], [7883, 7883], [78ec, 78ec],
    [7b90, 7b90], [7cbe, 7cbe], [7daa, 7daa], [7dae, 7dae], [7f44, 7f44],
    [80dc, 80dc], [82d8, 82d8], [8394, 8394], [845d, 845d], [873b, 873b],
    [89aa, 89aa], [8acb, 8acb], [8b26, 8b26], [8efd, 8efd], [8f15, 8f15],
    [90ec, 90ec], [944b, 944b], [9752, 9752], [9758, 9758], [9803, 9803],
    [9bd6, 9bd6], [9be8, 9be8], [9d84, 9d84], [9ee5, 9ee5], [20474, 20474],
    [205dd, 205dd], [20a0d, 20a0d], [21107, 21107], [21114, 21114],
    [21c80, 21c80], [22e43, 22e43], [23a5c, 23a5c], [23ae8, 23ae8],
    [24b69, 24b69], [250df, 250df], [25c68, 25c68], [27559, 27559],
    [275aa, 275aa], [281aa, 281aa], [284f7, 284f7], [28efa, 28efa],
    [291dd, 291dd], [291df, 291df], [2946d, 2946d], [294b5, 294b5],
    [29525, 29525], [295fc, 295fc], [29dcf, 29dcf], [29f61, 29f61],
    [2a108, 2a108], [2a3c5, 2a3c5]**/


    namespace {
    const static UnicodeSet::run_t __qing_Set_runs[] = {
    {Empty, 467}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 53}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 45}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 6}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 73}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 29}, {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 29}, {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 2859}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 91},
    {Mixed, 1}, {Empty, 141}, {Mixed, 1}, {Empty, 95}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 131}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 198}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 95}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 79}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 29409}};
    const static UnicodeSet::bitquad_t  __qing_Set_quads[] = {
    0x00000200, 0x40000000, 0x00000800, 0x00000200, 0x10000000, 0x00400000,
    0x20000000, 0x00000080, 0x00000200, 0x40000000, 0x00000400, 0x00000001,
    0x00002000, 0x80000000, 0x00000100, 0x00000400, 0x00000020, 0x00010000,
    0x20000000, 0x00004000, 0x00000020, 0x00400000, 0x00000020, 0x0000c000,
    0x00100000, 0x40000000, 0x00000100, 0x40000001, 0x00020000, 0x01000000,
    0x00010800, 0x00000080, 0x00000020, 0x02000000, 0x00000001, 0x10000000,
    0x00000008, 0x00001000, 0x00010000, 0x40000000, 0x00004400, 0x00000010,
    0x10000000, 0x01000000, 0x00100000, 0x20000000, 0x08000000, 0x00000400,
    0x00000800, 0x00000040, 0x20000000, 0x00200000, 0x00001000, 0x00000800,
    0x01040000, 0x00000008, 0x00400000, 0x00000100, 0x00000010, 0x00000020,
    0x00100000, 0x20000000, 0x00002000, 0x00100080, 0x00000001, 0x00000008,
    0x10000000, 0x00000100, 0x00000200, 0x80000000, 0x00000100, 0x02000000,
    0x00000400, 0x00000400, 0x00800000, 0x04000000, 0xa0000000, 0x00002000,
    0x00200000, 0x00000020, 0x10000000, 0x00008000, 0x00000002, 0x00000100,
    0x00000020};
    }

    const static UnicodeSet qing_Set{const_cast<UnicodeSet::run_t *>(__qing_Set_runs), 161, 0, const_cast<UnicodeSet::bitquad_t *>(__qing_Set_quads), 85, 0};

    /** Code Point Ranges for ku
    [3a7f, 3a7f], [3a82, 3a82], [3c60, 3c60], [3c84, 3c84], [3d60, 3d60],
    [4097, 4097], [41e2, 41e2], [4250, 4250], [452f, 452f], [49ca, 49ca],
    [4bc7, 4bc7], [4d48, 4d48], [4fc8, 4fc8], [5233, 5233], [53e4, 53e4],
    [54ed, 54ed], [56b3, 56b3], [5710, 5710], [5723, 5723], [5800, 5800],
    [5d2b, 5d2b], [5eab, 5eab], [625d, 625d], [630e, 630e], [6341, 6341],
    [6398, 6398], [6430, 6430], [670f, 670f], [67af, 67af], [684d, 684d],
    [695b, 695b], [6ccf, 6ccf], [7105, 7105], [72dc, 72dc], [7614, 7614],
    [77fb, 77fb], [785e, 785e], [79d9, 79d9], [7a8b, 7a8b], [7a9f, 7a9f],
    [7d5d, 7d5d], [82e6, 82e6], [88b4, 88b4], [8932, 8932], [8db6, 8db6],
    [8dcd, 8dcd], [8de8, 8de8], [90c0, 90c0], [9177, 9177], [9ab7, 9ab7],
    [9bac, 9bac], [9f41, 9f41], [20836, 20836], [20e9f, 20e9f],
    [21019, 21019], [21244, 21244], [2145a, 2145a], [21463, 21463],
    [215f5, 215f5], [217af, 217af], [21d8f, 21d8f], [21f3f, 21f3f],
    [223c6, 223c6], [22f01, 22f01], [235fa, 235fa], [25237, 25237],
    [25304, 25304], [257b4, 257b4], [257fe, 257fe], [259cb, 259cb],
    [25bf6, 25bf6], [266cf, 266cf], [26707, 26707], [26846, 26846],
    [27298, 27298], [27802, 27802], [27dce, 27dce], [27fc9, 27fc9],
    [27fcb, 27fcb], [28421, 28421], [28871, 28871], [291f5, 291f5],
    [29293, 29293], [29454, 29454], [29461, 29461], [29476, 29476],
    [29a33, 29a33], [29c59, 29c59], [2a1c4, 2a1c4], [2a313, 2a313],
    [2a360, 2a360]**/


    namespace {
    const static UnicodeSet::run_t __ku_Set_runs[] = {
    {Empty, 467}, {Mixed, 2}, {Empty, 14}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 35}, {Mixed, 3}, {Empty, 22},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 2886}, {Mixed, 1},
    {Empty, 50}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 11}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 89}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 225}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 86},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 81},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 75}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 13}, {Mixed, 2}, {Empty, 45}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 29412}};
    const static UnicodeSet::bitquad_t  __ku_Set_quads[] = {
    0x80000000, 0x00000004, 0x00000001, 0x00000010, 0x00000001, 0x00800000,
    0x00000004, 0x00010000, 0x00008000, 0x00000400, 0x00000080, 0x00000100,
    0x00000100, 0x00080000, 0x00000010, 0x00002000, 0x00080000, 0x00010000,
    0x00000008, 0x00000001, 0x00000800, 0x00000800, 0x20000000, 0x00004000,
    0x00000002, 0x01000000, 0x00010000, 0x00008000, 0x00008000, 0x00002000,
    0x08000000, 0x00008000, 0x00000020, 0x10000000, 0x00100000, 0x08000000,
    0x40000000, 0x02000000, 0x80000800, 0x20000000, 0x00000040, 0x00100000,
    0x00040000, 0x00400000, 0x00002000, 0x00000100, 0x00000001, 0x00800000,
    0x00800000, 0x00001000, 0x00000002, 0x00400000, 0x80000000, 0x02000000,
    0x00000010, 0x04000000, 0x00000008, 0x00200000, 0x00008000, 0x00008000,
    0x80000000, 0x00000040, 0x00000002, 0x04000000, 0x00800000, 0x00000010,
    0x00100000, 0x40000000, 0x00000800, 0x00400000, 0x00008000, 0x00000080,
    0x00000040, 0x01000000, 0x00000004, 0x00004000, 0x00000a00, 0x00000002,
    0x00020000, 0x00200000, 0x00080000, 0x00100000, 0x00400002, 0x00080000,
    0x02000000, 0x00000010, 0x00080000, 0x00000001};
    }

    const static UnicodeSet ku_Set{const_cast<UnicodeSet::run_t *>(__ku_Set_runs), 163, 0, const_cast<UnicodeSet::bitquad_t *>(__ku_Set_quads), 88, 0};

    /** Code Point Ranges for chuai
    [3a93, 3a93], [3a9c, 3a9c], [499f, 499f], [49a4, 49a4], [4d1d, 4d1d],
    [5550, 5550], [555c, 555c], [562c, 562c], [63e3, 63e3], [640b, 640b],
    [6b3c, 6b3c], [8144, 8144], [8197, 8197], [8e39, 8e39], [20f76, 20f76],
    [22cbd, 22cbd], [22d80, 22d80], [236f9, 236f9], [2390c, 2390c],
    [23c82, 23c82], [27352, 27352], [288c5, 288c5]**/


    namespace {
    const static UnicodeSet::run_t __chuai_Set_runs[] = {
    {Empty, 468}, {Mixed, 1}, {Empty, 119}, {Mixed, 2}, {Empty, 26},
    {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 109}, {Mixed, 2}, {Empty, 56}, {Mixed, 1}, {Empty, 176},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 100}, {Mixed, 1},
    {Empty, 3081}, {Mixed, 1}, {Empty, 233}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 437}, {Mixed, 1}, {Empty, 171},
    {Mixed, 1}, {Empty, 29625}};
    const static UnicodeSet::bitquad_t  __chuai_Set_quads[] = {
    0x10080000, 0x80000000, 0x00000010, 0x20000000, 0x10010000, 0x00001000,
    0x00000008, 0x00000800, 0x10000000, 0x00000010, 0x00800000, 0x02000000,
    0x00400000, 0x20000000, 0x00000001, 0x02000000, 0x00001000, 0x00000004,
    0x00040000, 0x00000020};
    }

    const static UnicodeSet chuai_Set{const_cast<UnicodeSet::run_t *>(__chuai_Set_runs), 37, 0, const_cast<UnicodeSet::bitquad_t *>(__chuai_Set_quads), 20, 0};

    /** Code Point Ranges for chuo
    [3a95, 3a95], [3aac, 3aac], [3c8b, 3c8b], [410c, 410c], [4373, 4373],
    [44ce, 44ce], [4fc3, 4fc3], [5437, 5437], [555c, 555c], [56bd, 56bd],
    [5a15, 5a16], [5a65, 5a65], [5a7c, 5a7c], [5b4e, 5b4e], [60d9, 60d9],
    [6233, 6233], [62fa, 62fa], [64c9, 64c9], [65ab, 65ab], [6b60, 6b60],
    [6db0, 6db0], [6dd6, 6dd6], [712f, 712f], [78ed, 78ed], [7bb9, 7bb9],
    [7c07, 7c07], [7db4, 7db4], [7dbd, 7dbd], [814f, 814f], [8343, 8343],
    [851f, 851f], [8da0, 8da0], [8db5, 8db5], [8dff, 8dff], [8e14, 8e14],
    [8e31, 8e31], [8e87, 8e87], [8f1f, 8f1f], [8fb5, 8fb5], [9034, 9034],
    [916b, 916b], [919b, 919b], [92dc, 92dc], [9323, 9323], [93c3, 93c3],
    [9461, 9461], [9f6a, 9f6a], [9f71, 9f71], [20f76, 20f76],
    [21047, 21047], [22f78, 22f78], [22fed, 22fed], [23014, 23014],
    [2390c, 2390c], [23b0b, 23b0b], [24feb, 24feb], [2506f, 2506f],
    [254d1, 254d1], [26076, 26076], [278fa, 278fa], [281ac, 281ac],
    [284a2, 284a2], [28bb8, 28bb8], [28c06, 28c06], [297eb, 297eb],
    [29a5f, 29a5f], [2a61b, 2a61b]**/


    namespace {
    const static UnicodeSet::run_t __chuo_Set_runs[] = {
    {Empty, 468}, {Mixed, 2}, {Empty, 14}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 87}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 17}, {Mixed, 2}, {Empty, 26}, {Mixed, 1}, {Empty, 61},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 68}, {Mixed, 1},
    {Empty, 1}, {Mixed, 3}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 2},
    {Empty, 9}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 87}, {Mixed, 1}, {Empty, 2943},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 248}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 71}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 166}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 195},
    {Mixed, 1}, {Empty, 69}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 94},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 93}, {Mixed, 1},
    {Empty, 29391}};
    const static UnicodeSet::bitquad_t  __chuo_Set_quads[] = {
    0x00200000, 0x00001000, 0x00000800, 0x00001000, 0x00080000, 0x00004000,
    0x00000008, 0x00800000, 0x10000000, 0x20000000, 0x00600000, 0x10000020,
    0x00004000, 0x02000000, 0x00080000, 0x04000000, 0x00000200, 0x00000800,
    0x00000001, 0x00010000, 0x00400000, 0x00008000, 0x00002000, 0x02000000,
    0x00000080, 0x20100000, 0x00008000, 0x00000008, 0x80000000, 0x00200001,
    0x80000000, 0x00100000, 0x00020000, 0x00000080, 0x80000000, 0x00200000,
    0x00100000, 0x00000800, 0x08000000, 0x10000000, 0x00000008, 0x00000008,
    0x00000002, 0x00020400, 0x00400000, 0x00000080, 0x01000000, 0x00002000,
    0x00100000, 0x00001000, 0x00000800, 0x00000800, 0x00008000, 0x00020000,
    0x00400000, 0x04000000, 0x00001000, 0x00000004, 0x01000000, 0x00000040,
    0x00000800, 0x80000000, 0x08000000};
    }

    const static UnicodeSet chuo_Set{const_cast<UnicodeSet::run_t *>(__chuo_Set_runs), 115, 0, const_cast<UnicodeSet::bitquad_t *>(__chuo_Set_quads), 63, 0};

    /** Code Point Ranges for gen
    [3ad4, 3ad4], [4ac0, 4ac0], [4e98, 4e98], [54cf, 54cf], [63ef, 63ef],
    [6839, 6839], [75d5, 75d5], [826e, 826e], [831b, 831b], [8ddf, 8ddf],
    [20123, 20123], [206f5, 206f5], [250e9, 250e9], [284bc, 284bc],
    [29461, 29461], [2949d, 2949d], [294d3, 294d3]**/


    namespace {
    const static UnicodeSet::run_t __gen_Set_runs[] = {
    {Empty, 470}, {Mixed, 1}, {Empty, 127}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 120}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 108}, {Mixed, 1}, {Empty, 100},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 85}, {Mixed, 1},
    {Empty, 2970}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 591},
    {Mixed, 1}, {Empty, 413}, {Mixed, 1}, {Empty, 125}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 29529}};
    const static UnicodeSet::bitquad_t  __gen_Set_quads[] = {
    0x00100000, 0x00000001, 0x01000000, 0x00008000, 0x00008000, 0x02000000,
    0x00200000, 0x00004000, 0x08000000, 0x80000000, 0x00000008, 0x00200000,
    0x00000200, 0x10000000, 0x00000002, 0x20000000, 0x00080000};
    }

    const static UnicodeSet gen_Set{const_cast<UnicodeSet::run_t *>(__gen_Set_runs), 33, 0, const_cast<UnicodeSet::bitquad_t *>(__gen_Set_quads), 17, 0};

    /** Code Point Ranges for pu
    [3b25, 3b25], [3bf7, 3bf7], [3cab, 3cab], [3e52, 3e52], [422c, 422c],
    [423b, 423b], [4515, 4515], [45f1, 45f1], [49e4, 49e4], [4b92, 4b92],
    [4c95, 4c95], [4d06, 4d06], [4ec6, 4ec6], [50d5, 50d5], [5265, 5265],
    [530d, 530d], [535c, 535c], [5657, 5657], [5703, 5703], [57d4, 57d4],
    [5821, 5821], [58a3, 58a3], [6251, 6251], [6276, 6276], [62aa, 62aa],
    [6357, 6357], [64b2, 64b2], [6534, 6534], [666e, 666e], [66b4, 66b4],
    [66dd, 66dd], [6734, 6734], [67e8, 67e8], [6a38, 6a38], [6c06, 6c06],
    [6d66, 6d66], [6ea5, 6ea5], [6f7d, 6f7d], [6fee, 6fee], [7011, 7011],
    [70f3, 70f3], [735b, 735b], [749e, 749e], [752b, 752b], [75e1, 75e1],
    [77a8, 77a8], [7832, 7832], [79ff, 79ff], [7a59, 7a59], [7b81, 7b81],
    [7e80, 7e80], [812f, 812f], [82fb, 82fb], [8379, 8379], [8386, 8386],
    [83d0, 83d0], [83e9, 83e9], [8461, 8461], [84b1, 84b2], [8705, 8705],
    [8946, 8946], [8b5c, 8b5c], [8c67, 8c67], [8e7c, 8e7c], [917a, 917a],
    [92ea, 92ea], [93f7, 93f7], [9420, 9420], [9660, 9660], [9bc6, 9bc6],
    [9d4f, 9d4f], [20f7e, 20f7e], [21735, 21735], [21c3f, 21c3f],
    [22232, 22232], [22f39, 22f39], [232cf, 232cf], [2419d, 2419d],
    [245f5, 245f5], [24c11, 24c11], [24fa3, 24fa3], [25401, 25401],
    [2541a, 2541a], [256df, 256df], [258c8, 258c8], [25f1c, 25f1c],
    [26b19, 26b19], [26b91, 26b91], [2765b, 2765b], [2799e, 2799e],
    [27b4e, 27b4e], [27c79, 27c79], [2804f, 2804f], [286e5, 286e5],
    [28f42, 28f42], [29097, 29097], [29440, 29440], [29a9b, 29a9b],
    [29bf1, 29bf1], [2a2e1, 2a2e1], [2a4a2, 2a4a2], [2a53f, 2a53f],
    [2a588, 2a588]**/


    namespace {
    const static UnicodeSet::run_t __pu_Set_runs[] = {
    {Empty, 473}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 76}, {Mixed, 2},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 1}, {Mixed, 2},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 2960}, {Mixed, 1}, {Empty, 61}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 103},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 117}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 95},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 85}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 52}, {Mixed, 1},
    {Empty, 66}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 29395}};
    const static UnicodeSet::bitquad_t  __pu_Set_quads[] = {
    0x00000020, 0x00800000, 0x00000800, 0x00040000, 0x08001000, 0x00200000,
    0x00020000, 0x00000010, 0x00040000, 0x00200000, 0x00000040, 0x00000040,
    0x00200000, 0x00000020, 0x00002000, 0x10000000, 0x00800000, 0x00000008,
    0x00100000, 0x00000002, 0x00000008, 0x00020000, 0x00400000, 0x00000400,
    0x00800000, 0x00040000, 0x00100000, 0x00004000, 0x00100000, 0x20000000,
    0x00100000, 0x00000100, 0x01000000, 0x00000040, 0x00000040, 0x00000020,
    0x20000000, 0x00004000, 0x00020000, 0x00080000, 0x08000000, 0x40000000,
    0x00000800, 0x00000002, 0x00000100, 0x00040000, 0x80000000, 0x02000000,
    0x00000002, 0x00000001, 0x00008000, 0x08000000, 0x02000000, 0x00000040,
    0x00010000, 0x00000200, 0x00000002, 0x00060000, 0x00000020, 0x00000040,
    0x10000000, 0x00000080, 0x10000000, 0x04000000, 0x00000400, 0x00800000,
    0x00000001, 0x00000001, 0x00000040, 0x00008000, 0x40000000, 0x00200000,
    0x80000000, 0x00040000, 0x02000000, 0x00008000, 0x20000000, 0x00200000,
    0x00020000, 0x00000008, 0x04000002, 0x80000000, 0x00000100, 0x10000000,
    0x02000000, 0x00020000, 0x08000000, 0x40000000, 0x00004000, 0x02000000,
    0x00008000, 0x00000020, 0x00000004, 0x00800000, 0x00000001, 0x08000000,
    0x00020000, 0x00000002, 0x00000004, 0x80000000, 0x00000100};
    }

    const static UnicodeSet pu_Set{const_cast<UnicodeSet::run_t *>(__pu_Set_runs), 193, 0, const_cast<UnicodeSet::bitquad_t *>(__pu_Set_quads), 101, 0};

    /** Code Point Ranges for zheng
    [3b39, 3b39], [3f40, 3f40], [40bb, 40bb], [41b8, 41b8], [41f0, 41f0],
    [4223, 4223], [42ca, 42ca], [42eb, 42eb], [4375, 4375], [46eb, 46eb],
    [47d3, 47d3], [499b, 499b], [4c62, 4c62], [4e01, 4e01], [4e1e, 4e1e],
    [4f42, 4f42], [5000, 5000], [5075, 5075], [57e5, 57e5], [57e9, 57e9],
    [5863, 5863], [5960, 5960], [59c3, 59c3], [5a9c, 5a9c], [5d1d, 5d1d],
    [5d22, 5d22], [5d92, 5d92], [5e40, 5e40], [5f81, 5f81], [5f8e, 5f8e],
    [5fb5, 5fb5], [6014, 6014], [6195, 6195], [627f, 627f], [628d, 628d],
    [62ef, 62ef], [6323, 6323], [639f, 639f], [63c1, 63c1], [649c, 649c],
    [653f, 653f], [655e, 655e], [6574, 6574], [6678, 6678], [673e, 673e],
    [6b63, 6b63], [6c36, 6c36], [6d67, 6d67], [70a1, 70a1], [70dd, 70dd],
    [722d, 722d], [72f0, 72f0], [753a, 753a], [75c7, 75c7], [7665, 7665],
    [7710, 7710], [7741, 7741], [77a0, 77a0], [798e, 798e], [7b5d, 7b5d],
    [7bdc, 7bdc], [7cfd, 7cfd], [7daa, 7daa], [8047, 8047], [8100, 8100],
    [84b8, 84b8], [8a3c, 8a3c], [8acd, 8acd], [8b49, 8b49], [8c9e, 8c9e],
    [8d9f, 8d9f], [8e2d, 8e2d], [912d, 912d], [9266, 9266], [931a, 931a],
    [9b07, 9b07], [9b8f, 9b8f], [9bd6, 9bd6], [9d0a, 9d0a], [203eb, 203eb],
    [20445, 20445], [2053b, 2053b], [20c9c, 20c9c], [2123c, 2123c],
    [21aba, 21aba], [2207f, 2207f], [22326, 22326], [223f0, 223f0],
    [224de, 224de], [22b90, 22b90], [22e51, 22e51], [22fa7, 22fa7],
    [24aa1, 24aa1], [24e32, 24e32], [24fc6, 24fc6], [252bc, 252bc],
    [2549b, 2549b], [264fa, 264fa], [2666b, 2666b], [266a6, 266a6],
    [2670e, 2670e], [26845, 26845], [26c4a, 26c4a], [275c6, 275c6],
    [275f2, 275f2], [2763f, 2763f], [27aa3, 27aa3], [27beb, 27beb],
    [27d84, 27d84], [28027, 28027], [282ec, 282ec], [28322, 28322],
    [286a3, 286a3], [286f0, 286f0], [28713, 28713], [287c3, 287c3],
    [288b9, 288b9], [289ed, 289ed], [28e9f, 28e9f], [293e0, 293e0],
    [295f2, 295f2], [295f5, 295f5], [2963c, 2963d], [296ab, 296ab],
    [29e84, 29e84], [2a3bb, 2a3bb]**/


    namespace {
    const static UnicodeSet::run_t __zheng_Set_runs[] = {
    {Empty, 473}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 9}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 7},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 25}, {Mixed, 2},
    {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 63}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 2870}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 67}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 53},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 215}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 130}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 75}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
    {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 29410}};
    const static UnicodeSet::bitquad_t  __zheng_Set_quads[] = {
    0x02000000, 0x00000001, 0x08000000, 0x01000000, 0x00010000, 0x00000008,
    0x00000400, 0x00000800, 0x00200000, 0x00000800, 0x00080000, 0x08000000,
    0x00000004, 0x40000002, 0x00000004, 0x00000001, 0x00200000, 0x00000220,
    0x00000008, 0x00000001, 0x00000008, 0x10000000, 0x20000000, 0x00000004,
    0x00040000, 0x00000001, 0x00004002, 0x00200000, 0x00100000, 0x00200000,
    0x80000000, 0x00002000, 0x00008000, 0x00000008, 0x80000000, 0x00000002,
    0x10000000, 0x80000000, 0x40000000, 0x00100000, 0x01000000, 0x40000000,
    0x00000008, 0x00400000, 0x00000080, 0x00000002, 0x20000000, 0x00002000,
    0x00010000, 0x04000000, 0x00000080, 0x00000020, 0x00010000, 0x00000002,
    0x00000001, 0x00004000, 0x20000000, 0x10000000, 0x20000000, 0x00000400,
    0x00000080, 0x00000001, 0x01000000, 0x10000000, 0x00002000, 0x00000200,
    0x40000000, 0x80000000, 0x00002000, 0x00002000, 0x00000040, 0x04000000,
    0x00000080, 0x00008000, 0x00400000, 0x00000400, 0x00000800, 0x00000020,
    0x08000000, 0x10000000, 0x10000000, 0x04000000, 0x80000000, 0x00000040,
    0x00010000, 0x40000000, 0x00010000, 0x00020000, 0x00000080, 0x00000002,
    0x00040000, 0x00000040, 0x10000000, 0x08000000, 0x04000000, 0x00000800,
    0x00000040, 0x00004000, 0x00000020, 0x00000400, 0x00000040, 0x00040000,
    0x80000000, 0x00000008, 0x00000800, 0x00000010, 0x00000080, 0x00001000,
    0x00000004, 0x00000008, 0x00010000, 0x00080000, 0x00000008, 0x02000000,
    0x00002000, 0x80000000, 0x00000001, 0x00240000, 0x30000000, 0x00000800,
    0x00000010, 0x08000000};
    }

    const static UnicodeSet zheng_Set{const_cast<UnicodeSet::run_t *>(__zheng_Set_runs), 227, 0, const_cast<UnicodeSet::bitquad_t *>(__zheng_Set_quads), 122, 0};

    /** Code Point Ranges for reng
    [3b41, 3b41], [3eb1, 3eb1], [4127, 4127], [46ae, 46ae], [4ecd, 4ecd],
    [620e, 620e], [6254, 6254], [793d, 793d], [7a70, 7a70], [8033, 8033],
    [827f, 827f], [82bf, 82bf], [8fb8, 8fb8], [967e, 967e], [209df, 209df],
    [20ba8, 20ba8], [20bf7, 20bf7], [20bf9, 20bf9], [22ae8, 22ae8],
    [235d0, 235d0], [25f8b, 25f8b], [27e48, 27e48], [28e10, 28e10]**/


    namespace {
    const static UnicodeSet::run_t __reng_Set_runs[] = {
    {Empty, 474}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 64}, {Mixed, 1},
    {Empty, 153}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 182},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 103},
    {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 2970}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 247},
    {Mixed, 1}, {Empty, 86}, {Mixed, 1}, {Empty, 333}, {Mixed, 1},
    {Empty, 245}, {Mixed, 1}, {Empty, 125}, {Mixed, 1}, {Empty, 29583}};
    const static UnicodeSet::bitquad_t  __reng_Set_quads[] = {
    0x00000002, 0x00020000, 0x00000080, 0x00004000, 0x00002000, 0x00004000,
    0x00100000, 0x20000000, 0x00010000, 0x00080000, 0x80000000, 0x80000000,
    0x01000000, 0x40000000, 0x80000000, 0x00000100, 0x02800000, 0x00000100,
    0x00010000, 0x00000800, 0x00000100, 0x00010000};
    }

    const static UnicodeSet reng_Set{const_cast<UnicodeSet::run_t *>(__reng_Set_runs), 45, 0, const_cast<UnicodeSet::bitquad_t *>(__reng_Set_quads), 22, 0};

    /** Code Point Ranges for pai
    [3b5b, 3b5b], [3d52, 3d52], [3d7a, 3d7a], [45b0, 45b0], [4c5d, 4c5d],
    [4ff3, 4ff3], [54cc, 54cc], [5561, 5561], [5f98, 5f98], [62cd, 62cd],
    [6392, 6392], [68d1, 68d1], [6911, 6911], [6d3e, 6d3e], [6e43, 6e43],
    [724c, 724c], [72a4, 72a4], [7305, 7305], [7b84, 7b84], [813e, 813e],
    [848e, 848e], [8f2b, 8f2b], [8feb, 8feb], [9383, 9383], [200a2, 200a2],
    [20e01, 20e01], [233df, 233df], [23590, 23590], [23741, 23741],
    [23c96, 23c96], [23d2a, 23d2a], [25bdf, 25bdf], [25c7c, 25c7c],
    [25d16, 25d16], [25fef, 25fef], [26520, 26520], [26a6f, 26a6f],
    [26ad6, 26ad6], [27d60, 27d60], [296c7, 296c7]**/


    namespace {
    const static UnicodeSet::run_t __pai_Set_runs[] = {
    {Empty, 474}, {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 65},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 80},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 67}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 84},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 2920}, {Mixed, 1}, {Empty, 106}, {Mixed, 1}, {Empty, 301},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 244},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 148}, {Mixed, 1}, {Empty, 202},
    {Mixed, 1}, {Empty, 29513}};
    const static UnicodeSet::bitquad_t  __pai_Set_quads[] = {
    0x08000000, 0x00040000, 0x04000000, 0x00010000, 0x20000000, 0x00080000,
    0x00001000, 0x00000002, 0x01000000, 0x00002000, 0x00040000, 0x00020000,
    0x00020000, 0x40000000, 0x00000008, 0x00001000, 0x00000010, 0x00000020,
    0x00000010, 0x40000000, 0x00004000, 0x00000800, 0x00000800, 0x00000008,
    0x00000004, 0x00000002, 0x80000000, 0x00010000, 0x00000002, 0x00400000,
    0x00000400, 0x80000000, 0x10000000, 0x00400000, 0x00008000, 0x00000001,
    0x00008000, 0x00400000, 0x00000001, 0x00000080};
    }

    const static UnicodeSet pai_Set{const_cast<UnicodeSet::run_t *>(__pai_Set_runs), 79, 0, const_cast<UnicodeSet::bitquad_t *>(__pai_Set_quads), 40, 0};

    /** Code Point Ranges for ou
    [3b5d, 3b5d], [3c36, 3c36], [3e38, 3e38], [3f34, 3f34], [4271, 4271],
    [4302, 4302], [4314, 4314], [4654, 4654], [4972, 4972], [49e2, 49e2],
    [5076, 5076], [5340, 5340], [5418, 5418], [543d, 543d], [5614, 5614],
    [5878, 5878], [616a, 616a], [63e1, 63e1], [6473, 6473], [657a, 657a],
    [6a1e, 6a1e], [6ad9, 6ad9], [6b50, 6b50], [6bc6, 6bc6], [6e25, 6e25],
    [6f1a, 6f1a], [6fab, 6fab], [71b0, 71b0], [750c, 750c], [7d06, 7d06],
    [8026, 8026], [8162, 8162], [8192, 8192], [84f2, 84f2], [85d5, 85d5],
    [8b33, 8b33], [9047, 9047], [91a7, 91a7], [93c2, 93c2], [9dd7, 9dd7],
    [9f75, 9f75], [20676, 20676], [20894, 20894], [2095d, 2095d],
    [20d30, 20d30], [210bf, 210bf], [21206, 21206], [21a7e, 21a7e],
    [230bb, 230bb], [2327e, 2327e], [234d5, 234d5], [238a8, 238a8],
    [23f55, 23f55], [2406e, 2406e], [246d0, 246d0], [24d4e, 24d4e],
    [2522c, 2522c], [25402, 25402], [259c6, 259c6], [25c78, 25c78],
    [25ed1, 25ed1], [26095, 26095], [273fa, 273fa], [275bc, 275bc],
    [27a93, 27a93], [2902b, 2902b], [29538, 29538], [2994b, 2994b],
    [2a2aa, 2a2aa], [2a643, 2a643]**/


    namespace {
    const static UnicodeSet::run_t __ou_Set_runs[] = {
    {Empty, 474}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 14}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 71}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 63}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 9},
    {Mixed, 2}, {Empty, 26}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 79}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2871}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 66},
    {Mixed, 1}, {Empty, 177}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 52},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 51}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 154},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 172}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 29389}};
    const static UnicodeSet::bitquad_t  __ou_Set_quads[] = {
    0x20000000, 0x00400000, 0x01000000, 0x00100000, 0x00020000, 0x00100004,
    0x00100000, 0x00040000, 0x00000004, 0x00400000, 0x00000001, 0x01000000,
    0x20000000, 0x00100000, 0x01000000, 0x00000400, 0x00000002, 0x00080000,
    0x04000000, 0x40000000, 0x02000000, 0x00010000, 0x00000040, 0x00000020,
    0x04000000, 0x00000800, 0x00010000, 0x00001000, 0x00000040, 0x00000040,
    0x00000004, 0x00040000, 0x00040000, 0x00200000, 0x00080000, 0x00000080,
    0x00000080, 0x00000004, 0x00800000, 0x00200000, 0x00400000, 0x00100000,
    0x20000000, 0x00010000, 0x80000000, 0x00000040, 0x40000000, 0x08000000,
    0x40000000, 0x00200000, 0x00000100, 0x00200000, 0x00004000, 0x00010000,
    0x00004000, 0x00001000, 0x00000004, 0x00000040, 0x01000000, 0x00020000,
    0x00200000, 0x04000000, 0x10000000, 0x00080000, 0x00000800, 0x01000000,
    0x00000800, 0x00000400, 0x00000008};
    }

    const static UnicodeSet ou_Set{const_cast<UnicodeSet::run_t *>(__ou_Set_runs), 135, 0, const_cast<UnicodeSet::bitquad_t *>(__ou_Set_quads), 69, 0};

    /** Code Point Ranges for cuan
    [3b6b, 3b6b], [408e, 408e], [50d4, 50d4], [5dd1, 5dd1], [651b, 651b],
    [6522, 6522], [6b11, 6b11], [6ba9, 6ba9], [6c46, 6c46], [7052, 7052],
    [7228, 7228], [7a73, 7a73], [7abe, 7abe], [7ac4, 7ac4], [7be1, 7be1],
    [83c6, 83c6], [8978, 8978], [8e72, 8e72], [8ea5, 8ea5], [92d1, 92d1],
    [9479, 9479], [22591, 22591], [22e25, 22e25], [24432, 24432],
    [2536c, 2536c], [253a2, 253a4], [25933, 25933], [25a12, 25a12],
    [288f5, 288f5], [28f09, 28f09]**/


    namespace {
    const static UnicodeSet::run_t __cuan_Set_runs[] = {
    {Empty, 475}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 129},
    {Mixed, 1}, {Empty, 103}, {Mixed, 1}, {Empty, 57}, {Mixed, 2},
    {Empty, 46}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 65},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 39}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 3208}, {Mixed, 1}, {Empty, 68}, {Mixed, 1},
    {Empty, 175}, {Mixed, 1}, {Empty, 121}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 374}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 29575}};
    const static UnicodeSet::bitquad_t  __cuan_Set_quads[] = {
    0x00000800, 0x00004000, 0x00100000, 0x00020000, 0x08000000, 0x00000004,
    0x00020000, 0x00000200, 0x00000040, 0x00040000, 0x00000100, 0x00080000,
    0x40000000, 0x00000010, 0x00000002, 0x00000040, 0x01000000, 0x00040000,
    0x00000020, 0x00020000, 0x02000000, 0x00020000, 0x00000020, 0x00040000,
    0x00001000, 0x0000001c, 0x00080000, 0x00040000, 0x00200000, 0x00000200};
    }

    const static UnicodeSet cuan_Set{const_cast<UnicodeSet::run_t *>(__cuan_Set_runs), 57, 0, const_cast<UnicodeSet::bitquad_t *>(__cuan_Set_quads), 30, 0};

    /** Code Point Ranges for ang
    [3b7f, 3b7f], [401a, 401a], [41e6, 41e6], [44a2, 44a2], [4a55, 4a55],
    [4b79, 4b7a], [4ef0, 4ef0], [536c, 536c], [5c87, 5c87], [6602, 6602],
    [678a, 678a], [76ce, 76ce], [80ae, 80ae], [814c, 814c], [9183, 9183],
    [91a0, 91a0], [9aaf, 9aaf], [20d6b, 20d6b], [20e43, 20e43],
    [21549, 21549], [21d59, 21d59], [224cb, 224cb], [23257, 23257],
    [235ae, 235ae], [24b52, 24b52], [26aeb, 26aeb], [282d5, 282d5],
    [29270, 29270], [2945d, 2945d], [29518, 29518], [2971f, 2971f]**/


    namespace {
    const static UnicodeSet::run_t __ang_Set_runs[] = {
    {Empty, 475}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 75}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 121}, {Mixed, 1}, {Empty, 78},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 129}, {Mixed, 2},
    {Empty, 71}, {Mixed, 1}, {Empty, 2965}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 63}, {Mixed, 1},
    {Empty, 59}, {Mixed, 1}, {Empty, 107}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 172}, {Mixed, 1}, {Empty, 252}, {Mixed, 1},
    {Empty, 190}, {Mixed, 1}, {Empty, 124}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 29511}};
    const static UnicodeSet::bitquad_t  __ang_Set_quads[] = {
    0x80000000, 0x04000000, 0x00000040, 0x00000004, 0x00200000, 0x06000000,
    0x00010000, 0x00001000, 0x00000080, 0x00000004, 0x00000400, 0x00004000,
    0x00004000, 0x00001000, 0x00000008, 0x00000001, 0x00008000, 0x00000800,
    0x00000008, 0x00000200, 0x02000000, 0x00000800, 0x00800000, 0x00004000,
    0x00040000, 0x00000800, 0x00200000, 0x00010000, 0x20000000, 0x01000000,
    0x80000000};
    }

    const static UnicodeSet ang_Set{const_cast<UnicodeSet::run_t *>(__ang_Set_runs), 61, 0, const_cast<UnicodeSet::bitquad_t *>(__ang_Set_quads), 31, 0};

    /** Code Point Ranges for ka
    [3b9f, 3b9f], [4614, 4614], [4f67, 4f67], [5361, 5361], [547f, 547f],
    [5494, 5494], [5496, 5496], [54af, 54af], [5580, 5580], [80e9, 80e9],
    [8849, 8849], [9272, 9272]**/


    namespace {
    const static UnicodeSet::run_t __ka_Set_runs[] = {
    {Empty, 476}, {Mixed, 1}, {Empty, 83}, {Mixed, 1}, {Empty, 74},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 7}, {Mixed, 3}, {Empty, 6},
    {Mixed, 1}, {Empty, 346}, {Mixed, 1}, {Empty, 58}, {Mixed, 1},
    {Empty, 80}, {Mixed, 1}, {Empty, 33644}};
    const static UnicodeSet::bitquad_t  __ka_Set_quads[] = {
    0x80000000, 0x00100000, 0x00000080, 0x00000002, 0x80000000, 0x00500000,
    0x00008000, 0x00000001, 0x00000200, 0x00000200, 0x00040000};
    }

    const static UnicodeSet ka_Set{const_cast<UnicodeSet::run_t *>(__ka_Set_runs), 19, 0, const_cast<UnicodeSet::bitquad_t *>(__ka_Set_quads), 11, 0};

    /** Code Point Ranges for shuo
    [3bb6, 3bb6], [407b, 407b], [423e, 423e], [4303, 4303], [4520, 4520],
    [52fa, 52fa], [54fe, 54fe], [55cd, 55cd], [55fd, 55fd], [5981, 5981],
    [63f1, 63f1], [6420, 6420], [6578, 6578], [6714, 6714], [6753, 6753],
    [69ca, 69ca], [6b36, 6b36], [6c4b, 6c4b], [6d2c, 6d2c], [6eaf, 6eaf],
    [6fef, 6fef], [71ff, 71ff], [720d, 720d], [7642, 7642], [77df, 77df],
    [78a9, 78a9], [7bbe, 7bbe], [8437, 8437], [84b4, 84b4], [85e5, 85e5],
    [8aac, 8aac], [928f, 928f], [9399, 9399], [9460, 9460], [20cbe, 20cbf],
    [2301d, 2301d], [23747, 23747], [23de5, 23de5], [23e1b, 23e1b],
    [23ed8, 23ed8], [24136, 24136], [2486f, 2486f], [248b4, 248b4],
    [2531e, 2531e], [26097, 26097], [260d7, 260d7], [262de, 262de],
    [272ca, 272ca], [28a3a, 28a3a], [297e7, 297e7], [2a392, 2a392]**/


    namespace {
    const static UnicodeSet::run_t __shuo_Set_runs[] = {
    {Empty, 477}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 109}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 28}, {Mixed, 1}, {Empty, 82}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 15}, {Mixed, 2},
    {Empty, 33}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 67}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 62}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 3009}, {Mixed, 1}, {Empty, 282}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 52}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 82}, {Mixed, 1}, {Empty, 107}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 127},
    {Mixed, 1}, {Empty, 186}, {Mixed, 1}, {Empty, 109}, {Mixed, 1},
    {Empty, 92}, {Mixed, 1}, {Empty, 29411}};
    const static UnicodeSet::bitquad_t  __shuo_Set_quads[] = {
    0x00400000, 0x08000000, 0x40000000, 0x00000008, 0x00000001, 0x04000000,
    0x40000000, 0x00002000, 0x20000000, 0x00000002, 0x00020000, 0x00000001,
    0x01000000, 0x00100000, 0x00080000, 0x00000400, 0x00400000, 0x00000800,
    0x00001000, 0x00008000, 0x00008000, 0x80000000, 0x00002000, 0x00000004,
    0x80000000, 0x00000200, 0x40000000, 0x00800000, 0x00100000, 0x00000020,
    0x00001000, 0x00008000, 0x02000000, 0x00000001, 0xc0000000, 0x20000000,
    0x00000080, 0x00000020, 0x08000000, 0x01000000, 0x00400000, 0x00008000,
    0x00100000, 0x40000000, 0x00800000, 0x00800000, 0x40000000, 0x00000400,
    0x04000000, 0x00000080, 0x00040000};
    }

    const static UnicodeSet shuo_Set{const_cast<UnicodeSet::run_t *>(__shuo_Set_runs), 97, 0, const_cast<UnicodeSet::bitquad_t *>(__shuo_Set_quads), 51, 0};

    /** Code Point Ranges for hen
    [3bca, 3bca], [44f3, 44f3], [4f77, 4f77], [54cf, 54cf], [5677, 5677],
    [5f88, 5f88], [6068, 6068], [62eb, 62eb], [6380, 6380], [72e0, 72e0],
    [75d5, 75d5], [826e, 826e], [8a6a, 8a6a], [978e, 978e], [266a3, 266a3]**/


    namespace {
    const static UnicodeSet::run_t __hen_Set_runs[] = {
    {Empty, 478}, {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 83},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 72}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 122}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 100}, {Mixed, 1}, {Empty, 63},
    {Mixed, 1}, {Empty, 104}, {Mixed, 1}, {Empty, 3704}, {Mixed, 1},
    {Empty, 29898}};
    const static UnicodeSet::bitquad_t  __hen_Set_quads[] = {
    0x00000400, 0x00080000, 0x00800000, 0x00008000, 0x00800000, 0x00000100,
    0x00000100, 0x00000800, 0x00000001, 0x00000001, 0x00200000, 0x00004000,
    0x00000400, 0x00004000, 0x00000008};
    }

    const static UnicodeSet hen_Set{const_cast<UnicodeSet::run_t *>(__hen_Set_runs), 31, 0, const_cast<UnicodeSet::bitquad_t *>(__hen_Set_quads), 15, 0};

    /** Code Point Ranges for chuan
    [3bcc, 3bcc], [3c5b, 3c5b], [3f37, 3f37], [4063, 4063], [4e32, 4e33],
    [50b3, 50b3], [50e2, 50e2], [5276, 5276], [5598, 5598], [570c, 570c],
    [5718, 5718], [5ddb, 5ddb], [5ddd, 5ddd], [60f4, 60f4], [63be, 63be],
    [66b7, 66b7], [692f, 692f], [693d, 693d], [6b42, 6b42], [6c1a, 6c1a],
    [6c4c, 6c4c], [732d, 732d], [7394, 7394], [744f, 744f], [750e, 750e],
    [7a7f, 7a7f], [7bc5, 7bc5], [819e, 819e], [821b, 821b], [8221, 8221],
    [8229, 8229], [8239, 8239], [8348, 8348], [8cd7, 8cd7], [8e33, 8e33],
    [8e39, 8e39], [8f32, 8f32], [9044, 9044], [91e7, 91e7], [9da8, 9da8],
    [206d6, 206d6], [20bc0, 20bc0], [20fae, 20fae], [23014, 23014],
    [236f9, 236f9], [239d2, 239d2], [2473c, 2473c], [24b8d, 24b8d],
    [24c0c, 24c0c], [24db1, 24db1], [250f9, 250f9], [25b2b, 25b2b],
    [25c8f, 25c8f], [26387, 26387], [2639c, 2639c], [26e9b, 26e9b],
    [27352, 27352], [2745d, 2745d], [280a6, 280a6], [28521, 28521],
    [2863c, 2863c], [28a74, 28a74], [2908d, 2908d]**/


    namespace {
    const static UnicodeSet::run_t __chuan_Set_runs[] = {
    {Empty, 478}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 109}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 75}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 93}, {Mixed, 1}, {Empty, 2888}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 258}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 106},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 81},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 55}, {Mixed, 1},
    {Empty, 87}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 98}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 29563}};
    const static UnicodeSet::bitquad_t  __chuan_Set_quads[] = {
    0x00001000, 0x08000000, 0x00800000, 0x00000008, 0x000c0000, 0x00080000,
    0x00000004, 0x00400000, 0x01000000, 0x01001000, 0x28000000, 0x00100000,
    0x40000000, 0x00800000, 0x20008000, 0x00000004, 0x04000000, 0x00001000,
    0x00002000, 0x00100000, 0x00008000, 0x00004000, 0x80000000, 0x00000020,
    0x40000000, 0x08000000, 0x02000202, 0x00000100, 0x00800000, 0x02080000,
    0x00040000, 0x00000010, 0x00000080, 0x00000100, 0x00400000, 0x00000001,
    0x00004000, 0x00100000, 0x02000000, 0x00040000, 0x10000000, 0x00002000,
    0x00001000, 0x00020000, 0x02000000, 0x00000800, 0x00008000, 0x10000080,
    0x08000000, 0x00040000, 0x20000000, 0x00000040, 0x00000002, 0x10000000,
    0x00100000, 0x00002000};
    }

    const static UnicodeSet chuan_Set{const_cast<UnicodeSet::run_t *>(__chuan_Set_runs), 111, 0, const_cast<UnicodeSet::bitquad_t *>(__chuan_Set_quads), 56, 0};

    /** Code Point Ranges for nen
    [3bce, 3bce], [3da7, 3da7], [5a86, 5a86], [5ae9, 5ae9], [6041, 6041],
    [6798, 6798], [815d, 815d], [81d1, 81d1], [27ba0, 27ba0],
    [28217, 28217]**/


    namespace {
    const static UnicodeSet::run_t __nen_Set_runs[] = {
    {Empty, 478}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 230},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 57}, {Mixed, 1}, {Empty, 205}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 4046}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 29679}};
    const static UnicodeSet::bitquad_t  __nen_Set_quads[] = {
    0x00004000, 0x00000080, 0x00000040, 0x00000200, 0x00000002, 0x01000000,
    0x20000000, 0x00020000, 0x00000001, 0x00800000};
    }

    const static UnicodeSet nen_Set{const_cast<UnicodeSet::run_t *>(__nen_Set_runs), 21, 0, const_cast<UnicodeSet::bitquad_t *>(__nen_Set_quads), 10, 0};

    /** Code Point Ranges for kuan
    [3bd8, 3bd8], [3c41, 3c41], [4540, 4540], [4957, 4957], [4c8c, 4c8c],
    [5b8c, 5b8c], [5bec, 5bec], [68a1, 68a1], [68f5, 68f5], [6b3e, 6b3e],
    [7abe, 7abe], [81d7, 81d7], [9846, 9846], [9ad6, 9ad6], [2256b, 2256b],
    [22d2a, 22d2a], [238bb, 238bb], [23f5f, 23f5f], [257d3, 257d3],
    [25980, 25980]**/


    namespace {
    const static UnicodeSet::run_t __kuan_Set_runs[] = {
    {Empty, 478}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 71},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 119}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 101},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 123}, {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 179},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3156}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 91}, {Mixed, 1}, {Empty, 52},
    {Mixed, 1}, {Empty, 195}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 30003}};
    const static UnicodeSet::bitquad_t  __kuan_Set_quads[] = {
    0x01000000, 0x00000002, 0x00000001, 0x00800000, 0x00001000, 0x00001000,
    0x00001000, 0x00000002, 0x00200000, 0x40000000, 0x40000000, 0x00800000,
    0x00000040, 0x00400000, 0x00000800, 0x00000400, 0x08000000, 0x80000000,
    0x00080000, 0x00000001};
    }

    const static UnicodeSet kuan_Set{const_cast<UnicodeSet::run_t *>(__kuan_Set_runs), 41, 0, const_cast<UnicodeSet::bitquad_t *>(__kuan_Set_quads), 20, 0};

    /** Code Point Ranges for hei
    [3c44, 3c44], [55e8, 55e8], [563f, 563f], [6f76, 6f76], [9ed1, 9ed1],
    [2259b, 2259b], [22840, 22840], [25559, 25559], [28b46, 28b46],
    [29ee4, 29ee4]**/


    namespace {
    const static UnicodeSet::run_t __hei_Set_runs[] = {
    {Empty, 482}, {Mixed, 1}, {Empty, 204}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 201}, {Mixed, 1}, {Empty, 378}, {Mixed, 1},
    {Empty, 3125}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 359},
    {Mixed, 1}, {Empty, 431}, {Mixed, 1}, {Empty, 156}, {Mixed, 1},
    {Empty, 29448}};
    const static UnicodeSet::bitquad_t  __hei_Set_quads[] = {
    0x00000010, 0x00000100, 0x80000000, 0x00400000, 0x00020000, 0x08000000,
    0x00000001, 0x02000000, 0x00000040, 0x00000010};
    }

    const static UnicodeSet hei_Set{const_cast<UnicodeSet::run_t *>(__hei_Set_runs), 21, 0, const_cast<UnicodeSet::bitquad_t *>(__hei_Set_quads), 10, 0};

    /** Code Point Ranges for mo
    [3c44, 3c44], [3c73, 3c73], [3d79, 3d79], [3dac, 3dac], [3dec, 3dec],
    [3e6e, 3e6e], [407c, 407c], [407f, 407f], [42b3, 42b3], [43de, 43de],
    [4603, 4603], [4706, 4706], [4a4b, 4a4b], [4b34, 4b34], [4b69, 4b69],
    [4bac, 4bac], [4be2, 4be2], [4c45, 4c45], [4cee, 4cee], [4d32, 4d32],
    [4e07, 4e07], [4e48, 4e48], [4f2f, 4f2f], [4f70, 4f70], [5192, 5192],
    [5298, 5298], [52b0, 52b0], [52ff, 52ff], [55fc, 55fc], [563f, 563f],
    [56a9, 56a9], [587b, 587b], [58a8, 58a8], [59ba, 59ba], [5aeb, 5aeb],
    [5afc, 5afc], [5bde, 5bde], [5e13, 5e13], [5e15, 5e15], [5e1e, 5e1e],
    [6202, 6202], [62b9, 62b9], [6469, 6469], [6478, 6479], [64ab, 64ab],
    [6520, 6520], [6627, 6627], [6629, 6629], [66af, 66af], [672b, 672b],
    [67ba, 67ba], [6a21, 6a21], [6a45, 6a45], [6b7e, 6b7e], [6b81, 6b81],
    [6ca1, 6ca1], [6cab, 6cab], [6f20, 6f20], [700e, 700e], [7121, 7121],
    [7205, 7205], [72e2, 72e2], [734f, 734f], [763c, 763c], [767e, 767e],
    [768c, 768c], [771c, 771c], [773d, 773d], [773f, 773f], [7790, 7790],
    [7799, 7799], [781e, 781e], [78e8, 78e8], [7933, 7933], [79e3, 79e3],
    [7ce2, 7ce2], [7d48, 7d48], [7d54, 7d54], [7e38, 7e38], [7e86, 7e86],
    [8031, 8031], [819c, 819c], [8252, 8252], [8309, 8309], [8388, 8388],
    [83ab, 83ab], [85d0, 85d0], [85e6, 85e6], [8611, 8611], [86e8, 86e8],
    [87c6, 87c6], [87d4, 87d4], [889c, 889c], [88b9, 88b9], [8b28, 8b28],
    [8b55, 8b55], [8c88, 8c8a], [8c8c, 8c8c], [8c98, 8c98], [911a, 911a],
    [9286, 9286], [93cc, 93cc], [964c, 964c], [977a, 977a], [97a8, 97a8],
    [9943, 9943], [9a40, 9a40], [9acd, 9acd], [9b54, 9b54], [9b69, 9b69],
    [9ebd, 9ebd], [9ed8, 9ed8], [2012e, 2012e], [201ae, 201ae],
    [201f1, 201f1], [2085e, 2085e], [20893, 20893], [20eda, 20eda],
    [21217, 21217], [21289, 21289], [2181c, 2181c], [21849, 21849],
    [2189c, 2189c], [21edf, 21edf], [21f89, 21f89], [2210f, 2210f],
    [22297, 22297], [22416, 22416], [225ff, 225ff], [228d7, 228d7],
    [22cc0, 22cc0], [232df, 232df], [239d2, 239d2], [239e3, 239e3],
    [23d8a, 23d8a], [23ed5, 23ed5], [242c2, 242c2], [248fb, 248fb],
    [24e74, 24e74], [24fd6, 24fd6], [25093, 25093], [25115, 25115],
    [25553, 25553], [2564e, 2564e], [257aa, 257aa], [25b0e, 25b0e],
    [25c79, 25c79], [25f58, 25f58], [25fc9, 25fc9], [26154, 26154],
    [2652d, 2652d], [267df, 267df], [26966, 26966], [26ad5, 26ad5],
    [26b85, 26b85], [27005, 27005], [27564, 27565], [27813, 27813],
    [2795f, 2795f], [27c31, 27c31], [27ed9, 27ed9], [27f1f, 27f1f],
    [27ff4, 27ff4], [281bd, 281bd], [287d6, 287d6], [28c1e, 28c1e],
    [28c71, 28c71], [290c1, 290c1], [2913b, 2913b], [29327, 29327],
    [2939f, 2939f], [2943b, 2943b], [29466, 29466], [29477, 29477],
    [29781, 29781], [297e0, 297e0], [29896, 29896], [298b7, 298b7],
    [29954, 29954], [29aae, 29aae], [29fe3, 29fe3], [2a347, 2a347],
    [2a364, 2a364], [2a3a0, 2a3a0], [2a3df, 2a3df], [2a482, 2a482],
    [2a487, 2a487]**/


    namespace {
    const static UnicodeSet::run_t __mo_Set_runs[] = {
    {Empty, 482}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 19}, {Mixed, 2}, {Empty, 8}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 3},
    {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 16}, {Mixed, 3}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 5}, {Mixed, 2}, {Empty, 19}, {Mixed, 2}, {Empty, 9}, {Mixed, 1},
    {Empty, 35}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 25}, {Mixed, 2},
    {Empty, 2834}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 49}, {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 55},
    {Mixed, 2}, {Empty, 28}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 48}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 4}, {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 26}, {Mixed, 2}, {Empty, 1},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 29403}};
    const static UnicodeSet::bitquad_t  __mo_Set_quads[] = {
    0x00000010, 0x00080000, 0x02000000, 0x00001000, 0x00001000, 0x00004000,
    0x90000000, 0x00080000, 0x40000000, 0x00000008, 0x00000040, 0x00000800,
    0x00100000, 0x00000200, 0x00001000, 0x00000004, 0x00000020, 0x00004000,
    0x00040000, 0x00000080, 0x00000100, 0x00008000, 0x00010000, 0x00040000,
    0x01000000, 0x00010000, 0x80000000, 0x10000000, 0x80000000, 0x00000200,
    0x08000000, 0x00000100, 0x04000000, 0x10000800, 0x40000000, 0x40280000,
    0x00000004, 0x02000000, 0x03000200, 0x00000800, 0x00000001, 0x00000280,
    0x00008000, 0x00000800, 0x04000000, 0x00000002, 0x00000020, 0x40000000,
    0x00000002, 0x00000802, 0x00000001, 0x00004000, 0x00000002, 0x00000020,
    0x00000004, 0x00008000, 0x10000000, 0x40000000, 0x00001000, 0x10000000,
    0xa0000000, 0x02010000, 0x40000000, 0x00000100, 0x00080000, 0x00000008,
    0x00000004, 0x00100100, 0x01000000, 0x00000040, 0x00020000, 0x10000000,
    0x00040000, 0x00000200, 0x00000100, 0x00000800, 0x00010000, 0x00000040,
    0x00020000, 0x00000100, 0x00100040, 0x10000000, 0x02000000, 0x00000100,
    0x00200000, 0x01001700, 0x04000000, 0x00000040, 0x00001000, 0x00001000,
    0x04000000, 0x00000100, 0x00000008, 0x00000001, 0x00002000, 0x00100000,
    0x00000200, 0x20000000, 0x01000000, 0x00004000, 0x00004000, 0x00020000,
    0x40000000, 0x00080000, 0x04000000, 0x00800000, 0x00000200, 0x10000000,
    0x00000200, 0x10000000, 0x80000000, 0x00000200, 0x00008000, 0x00800000,
    0x00400000, 0x80000000, 0x00800000, 0x00000001, 0x80000000, 0x00040000,
    0x00000008, 0x00000400, 0x00200000, 0x00000004, 0x08000000, 0x00100000,
    0x00400000, 0x00080000, 0x00200000, 0x00080000, 0x00004000, 0x00000400,
    0x00004000, 0x02000000, 0x01000000, 0x00000200, 0x00100000, 0x00002000,
    0x80000000, 0x00000040, 0x00200000, 0x00000020, 0x00000020, 0x00000030,
    0x00080000, 0x80000000, 0x00020000, 0x02000000, 0x80000000, 0x00100000,
    0x20000000, 0x00400000, 0x40000000, 0x00020000, 0x00000002, 0x08000000,
    0x00000080, 0x80000000, 0x08000000, 0x00800040, 0x00000002, 0x00000001,
    0x00400000, 0x00800000, 0x00100000, 0x00004000, 0x00000008, 0x00000080,
    0x00000010, 0x00000001, 0x80000000, 0x00000084};
    }

    const static UnicodeSet mo_Set{const_cast<UnicodeSet::run_t *>(__mo_Set_runs), 311, 0, const_cast<UnicodeSet::bitquad_t *>(__mo_Set_quads), 172, 0};

    /** Code Point Ranges for que
    [3c4b, 3c4b], [3c7f, 3c7f], [3c89, 3c89], [3d36, 3d36], [3e71, 3e71],
    [41ce, 41ce], [4373, 4373], [4428, 4428], [47e9, 47e9], [49ff, 49ff],
    [4cb5, 4cb5], [5095, 5095], [537b, 537b], [57c6, 57c6], [5859, 5859],
    [58a7, 58a7], [5c48, 5c48], [5d05, 5d05], [6128, 6128], [6409, 6409],
    [6509, 6509], [6560, 6560], [69b7, 69b7], [6c4b, 6c4b], [6c7a, 6c7a],
    [7094, 7094], [71e9, 71e9], [730e, 730e], [7638, 7638], [76b5, 76b5],
    [785e, 785e], [786e, 786e], [788f, 788f], [78ba, 78bb], [7910, 7910],
    [792d, 792d], [7f3a, 7f3a], [8204, 8204], [828d, 828d], [849b, 849b],
    [8697, 8697], [89f3, 89f3], [8d9e, 8d9e], [8e16, 8e16], [95cb, 95cb],
    [95d5, 95d5], [96ba, 96ba], [96c0, 96c0], [9ce5, 9ce5], [9d72, 9d72],
    [20797, 20797], [211f1, 211f1], [21249, 21249], [22531, 22531],
    [2282c, 2282c], [235ab, 235ab], [236f5, 236f5], [23907, 23907],
    [23ab9, 23ab9], [2486f, 2486f], [248c5, 248c5], [24dfd, 24dfd],
    [24fcb, 24fcb], [24fe9, 24fe9], [24ff5, 24ff5], [2500e, 2500e],
    [251b8, 251b8], [25579, 25579], [255d9, 255d9], [255ee, 255ee],
    [25735, 25735], [25a62, 25a62], [273af, 273af], [278a9, 278a9],
    [278ad, 278ad], [287a9, 287a9], [287e0, 287e0], [2889c, 2889c],
    [28d0a, 28d0a], [28d12, 28d12], [28d57, 28d57], [29908, 29908],
    [29a37, 29a37], [29ae0, 29ae0], [2a3c8, 2a3c8], [2a3e8, 2a3e8],
    [2a580, 2a580]**/


    namespace {
    const static UnicodeSet::run_t __que_Set_runs[] = {
    {Empty, 482}, {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 20}, {Mixed, 2}, {Empty, 32}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 12}, {Mixed, 4}, {Empty, 2}, {Mixed, 2},
    {Empty, 47}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 48}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2896},
    {Mixed, 1}, {Empty, 82}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 150}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 107},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 109}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 14}, {Mixed, 3},
    {Empty, 12}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 201}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 119},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 93}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 70}, {Mixed, 2},
    {Empty, 12}, {Mixed, 1}, {Empty, 29395}};
    const static UnicodeSet::bitquad_t  __que_Set_quads[] = {
    0x00000800, 0x80000000, 0x00000200, 0x00400000, 0x00020000, 0x00004000,
    0x00080000, 0x00000100, 0x00000200, 0x80000000, 0x00200000, 0x00200000,
    0x08000000, 0x00000040, 0x02000000, 0x00000080, 0x00000100, 0x00000020,
    0x00000100, 0x00000200, 0x00000200, 0x00000001, 0x00800000, 0x00000800,
    0x04000000, 0x00100000, 0x00000200, 0x00004000, 0x01000000, 0x00200000,
    0x40000000, 0x00004000, 0x00008000, 0x0c000000, 0x00010000, 0x00002000,
    0x04000000, 0x00000010, 0x00002000, 0x08000000, 0x00800000, 0x00080000,
    0x40000000, 0x00400000, 0x00200800, 0x04000000, 0x00000001, 0x00000020,
    0x00040000, 0x00800000, 0x00020000, 0x00000200, 0x00020000, 0x00001000,
    0x00000800, 0x00200000, 0x00000080, 0x02000000, 0x00008000, 0x00000020,
    0x20000000, 0x00000800, 0x00200200, 0x00004000, 0x01000000, 0x02000000,
    0x02000000, 0x00004000, 0x00200000, 0x00000004, 0x00008000, 0x00002200,
    0x00000200, 0x00000001, 0x10000000, 0x00040400, 0x00800000, 0x00000100,
    0x00800000, 0x00000001, 0x00000100, 0x00000100, 0x00000001};
    }

    const static UnicodeSet que_Set{const_cast<UnicodeSet::run_t *>(__que_Set_runs), 143, 0, const_cast<UnicodeSet::bitquad_t *>(__que_Set_quads), 83, 0};

    /** Code Point Ranges for xiu
    [3c57, 3c57], [3c59, 3c59], [3cdc, 3cdc], [3d7b, 3d7b], [3e4b, 3e4b],
    [3f72, 3f72], [3f8b, 3f8b], [43eb, 43eb], [4430, 4430], [45db, 45db],
    [486d, 486d], [4f11, 4f11], [4fee, 4fee], [54bb, 54bb], [55c5, 55c5],
    [568a, 568a], [5bbf, 5bbf], [5cab, 5cab], [5ea5, 5ea5], [673d, 673d],
    [6a07, 6a07], [6af9, 6af9], [6eb4, 6eb4], [6eeb, 6eeb], [70cb, 70cc],
    [7166, 7166], [73db, 73db], [7407, 7407], [7493, 7493], [79c0, 79c0],
    [7cd4, 7cd4], [7d87, 7d87], [7d89, 7d89], [7e61, 7e61], [7f9e, 7f9e],
    [8119, 8119], [8129, 8129], [81ed, 81ed], [81f9, 81f9], [82ec, 82ec],
    [8320, 8320], [83a0, 83a0], [84e8, 84e8], [8791, 8791], [8896, 8896],
    [890e, 890e], [8c85, 8c85], [929d, 929d], [92b9, 92b9], [9380, 9380],
    [93c5, 93c5], [93fd, 93fd], [98cd, 98cd], [9948, 9948], [9ae4, 9ae4],
    [9af9, 9af9], [9c43, 9c43], [9d42, 9d42], [21528, 21528],
    [21728, 21728], [217de, 217de], [21bd0, 21bd0], [22292, 22292],
    [224f5, 224f5], [22566, 22566], [22a68, 22a68], [239ec, 239ec],
    [246af, 246af], [2532a, 2532a], [25760, 25760], [257bc, 257bc],
    [267e4, 267e4], [26a8b, 26a8b], [2730c, 2730c], [2764f, 2764f],
    [2962d, 2962d], [296e2, 296e2], [2984e, 2984e], [298ae, 298ae],
    [29b58, 29b58], [29b84, 29b84], [2a02a, 2a02a], [2a06e, 2a06e],
    [2a566, 2a566], [2a606, 2a606]**/


    namespace {
    const static UnicodeSet::run_t __xiu_Set_runs[] = {
    {Empty, 482}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 34},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 11},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 47}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 38}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 3006}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 53},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 123}, {Mixed, 1}, {Empty, 101},
    {Mixed, 1}, {Empty, 99}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 129}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 254}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 10},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 29391}};
    const static UnicodeSet::bitquad_t  __xiu_Set_quads[] = {
    0x02800000, 0x10000000, 0x08000000, 0x00000800, 0x00040000, 0x00000800,
    0x00000800, 0x00010000, 0x08000000, 0x00002000, 0x00020000, 0x00004000,
    0x08000000, 0x00000020, 0x00000400, 0x80000000, 0x00000800, 0x00000020,
    0x20000000, 0x00000080, 0x02000000, 0x00100000, 0x00000800, 0x00001800,
    0x00000040, 0x08000000, 0x00000080, 0x00080000, 0x00000001, 0x00100000,
    0x00000280, 0x00000002, 0x40000000, 0x02000000, 0x00000200, 0x02002000,
    0x00001000, 0x00000001, 0x00000001, 0x00000100, 0x00020000, 0x00400000,
    0x00004000, 0x00000020, 0x20000000, 0x02000000, 0x00000001, 0x00000020,
    0x20000000, 0x00002000, 0x00000100, 0x02000010, 0x00000008, 0x00000004,
    0x00000100, 0x00000100, 0x40000000, 0x00010000, 0x00040000, 0x00200000,
    0x00000040, 0x00000100, 0x00001000, 0x00008000, 0x00000400, 0x00000001,
    0x10000000, 0x00000010, 0x00000800, 0x00001000, 0x00008000, 0x00002000,
    0x00000004, 0x00004000, 0x00004000, 0x01000000, 0x00000010, 0x00000400,
    0x00004000, 0x00000040, 0x00000040};
    }

    const static UnicodeSet xiu_Set{const_cast<UnicodeSet::run_t *>(__xiu_Set_runs), 155, 0, const_cast<UnicodeSet::bitquad_t *>(__xiu_Set_quads), 81, 0};

    /** Code Point Ranges for leng
    [3c65, 3c65], [4244, 4244], [4b0b, 4b0b], [4b9a, 4b9a], [5030, 5030],
    [51b7, 51b7], [580e, 580e], [5844, 5844], [68f1, 68f1], [695e, 695e],
    [7756, 7756], [7890, 7890], [7a1c, 7a1c], [8590, 8590], [8e1c, 8e1c],
    [8f18, 8f18], [2522e, 2522e], [26f0a, 26f0a], [27f14, 27f14],
    [28213, 28213], [29a61, 29a61]**/


    namespace {
    const static UnicodeSet::run_t __leng_Set_runs[] = {
    {Empty, 483}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 69},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 132}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 111}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 91}, {Mixed, 1}, {Empty, 67}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 3608}, {Mixed, 1}, {Empty, 230},
    {Mixed, 1}, {Empty, 127}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 194}, {Mixed, 1}, {Empty, 29484}};
    const static UnicodeSet::bitquad_t  __leng_Set_quads[] = {
    0x00000020, 0x00000010, 0x00000800, 0x04000000, 0x00010000, 0x00800000,
    0x00004000, 0x00000010, 0x00020000, 0x40000000, 0x00400000, 0x00010000,
    0x10000000, 0x00010000, 0x10000000, 0x01000000, 0x00004000, 0x00000400,
    0x00100000, 0x00080000, 0x00000002};
    }

    const static UnicodeSet leng_Set{const_cast<UnicodeSet::run_t *>(__leng_Set_runs), 43, 0, const_cast<UnicodeSet::bitquad_t *>(__leng_Set_quads), 21, 0};

    /** Code Point Ranges for zai
    [3c70, 3c70], [43c1, 43c1], [4502, 4502], [48ec, 48ec], [4ba8, 4ba8],
    [4d67, 4d67], [4ed4, 4ed4], [510e, 510e], [518d, 518d], [54c9, 54c9],
    [5728, 5728], [5bb0, 5bb0], [5d3d, 5d3d], [624d, 624d], [683d, 683d],
    [6d05, 6d05], [6e3d, 6e3d], [707d, 707d], [753e, 753e], [7775, 7775],
    [7e21, 7e21], [83d1, 83d1], [8cf3, 8cf3], [8f09, 8f09], [9168, 9168],
    [203b6, 203b6], [21244, 21244], [21fe7, 21fe7], [2238b, 2238b],
    [22992, 22992], [23143, 23143], [2352e, 2352e], [23aae, 23aae],
    [24184, 24184], [2430a, 2430a], [24756, 24756], [247b3, 247b3],
    [26781, 26781], [26ce6, 26ce6], [27be5, 27be5], [2802c, 2802c],
    [28674, 28674], [286b5, 286b5], [296e5, 296e5], [296f3, 296f3]**/


    namespace {
    const static UnicodeSet::run_t __zai_Set_runs[] = {
    {Empty, 483}, {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 38}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 72},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 2961}, {Mixed, 1}, {Empty, 116}, {Mixed, 1}, {Empty, 108},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 47}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 254},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 119}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 129}, {Mixed, 1}, {Empty, 29512}};
    const static UnicodeSet::bitquad_t  __zai_Set_quads[] = {
    0x00010000, 0x00000002, 0x00000004, 0x00001000, 0x00000100, 0x00000080,
    0x00100000, 0x00004000, 0x00002000, 0x00000200, 0x00000100, 0x00010000,
    0x20000000, 0x00002000, 0x20000000, 0x00000020, 0x20000000, 0x20000000,
    0x40000000, 0x00200000, 0x00000002, 0x00020000, 0x00080000, 0x00000200,
    0x00000100, 0x00400000, 0x00000010, 0x00000080, 0x00000800, 0x00040000,
    0x00000008, 0x00004000, 0x00004000, 0x00000010, 0x00000400, 0x00400000,
    0x00080000, 0x00000002, 0x00000040, 0x00000020, 0x00001000, 0x00100000,
    0x00200000, 0x00080020};
    }

    const static UnicodeSet zai_Set{const_cast<UnicodeSet::run_t *>(__zai_Set_runs), 89, 0, const_cast<UnicodeSet::bitquad_t *>(__zai_Set_quads), 44, 0};

    /** Code Point Ranges for shao
    [3c88, 3c88], [3df9, 3df9], [3e1b, 3e1b], [4230, 4230], [423e, 423e],
    [43f4, 43f4], [449a, 449a], [4520, 4520], [467c, 467c], [4b30, 4b30],
    [4f4b, 4f4b], [524a, 524a], [52ad, 52ad], [52fa, 52fa], [5372, 5372],
    [53ec, 53ec], [54e8, 54e8], [5a0b, 5a0b], [5c11, 5c11], [5f30, 5f30],
    [62db, 62db], [634e, 634e], [641c, 641c], [65d3, 65d3], [6753, 6753],
    [67d6, 67d6], [68a2, 68a2], [6eb2, 6eb2], [6f72, 6f72], [71d2, 71d2],
    [71ff, 71ff], [73bf, 73bf], [7744, 7744], [7a0d, 7a0d], [7b24, 7b24],
    [7b72, 7b72], [7d39, 7d39], [7d83, 7d83], [8244, 8244], [828d, 828d],
    [82d5, 82d5], [83a6, 83a6], [8437, 8437], [86f8, 86f8], [8891, 8891],
    [88e2, 88e2], [8f0e, 8f0e], [90b5, 90b5], [9798, 9798], [97d2, 97d2],
    [97f6, 97f6], [98b5, 98b5], [9afe, 9afe], [9bb9, 9bb9], [208eb, 208eb],
    [209d9, 209d9], [20dc3, 20dc3], [2184f, 2184f], [229bd, 229bd],
    [22f3c, 22f3c], [22f90, 22f90], [2424e, 2424e], [24c60, 24c60],
    [2566c, 2566c], [25cd3, 25cd3], [25d66, 25d66], [2610f, 2610f],
    [264f4, 264f4], [26871, 26871], [26bd0, 26bd0], [26fc3, 26fc3],
    [278ea, 278ea], [27cf9, 27cf9], [28218, 28218], [282a2, 282a2],
    [28679, 28679], [286cd, 286cd], [28c6d, 28c6d], [28c86, 28c86],
    [29b0f, 29b0f]**/


    namespace {
    const static UnicodeSet::run_t __shao_Set_runs[] = {
    {Empty, 484}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 32},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 18}, {Mixed, 2}, {Empty, 13}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 2921}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 83}, {Mixed, 1},
    {Empty, 138}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 149}, {Mixed, 1}, {Empty, 80}, {Mixed, 1},
    {Empty, 79}, {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 44}, {Mixed, 2},
    {Empty, 115}, {Mixed, 1}, {Empty, 29479}};
    const static UnicodeSet::bitquad_t  __shao_Set_quads[] = {
    0x00000100, 0x02000000, 0x08000000, 0x40010000, 0x00100000, 0x04000000,
    0x00000001, 0x10000000, 0x00010000, 0x00000800, 0x00000400, 0x00002000,
    0x04000000, 0x00040000, 0x00001000, 0x00000100, 0x00000800, 0x00020000,
    0x00010000, 0x08000000, 0x00004000, 0x10000000, 0x00080000, 0x00080000,
    0x00400000, 0x00000004, 0x00040000, 0x00040000, 0x00040000, 0x80000000,
    0x80000000, 0x00000010, 0x00002000, 0x00000010, 0x00040000, 0x02000000,
    0x00000008, 0x00000010, 0x00002000, 0x00200000, 0x00000040, 0x00800000,
    0x01000000, 0x00020000, 0x00000004, 0x00004000, 0x00200000, 0x01000000,
    0x00040000, 0x00400000, 0x00200000, 0x40000000, 0x02000000, 0x00000800,
    0x02000000, 0x00000008, 0x00008000, 0x20000000, 0x10000000, 0x00010000,
    0x00004000, 0x00000001, 0x00001000, 0x00080000, 0x00000040, 0x00008000,
    0x00100000, 0x00020000, 0x00010000, 0x00000008, 0x00000400, 0x02000000,
    0x01000000, 0x00000004, 0x02000000, 0x00002000, 0x00002000, 0x00000040,
    0x00008000};
    }

    const static UnicodeSet shao_Set{const_cast<UnicodeSet::run_t *>(__shao_Set_runs), 151, 0, const_cast<UnicodeSet::bitquad_t *>(__shao_Set_quads), 79, 0};

    /** Code Point Ranges for neng
    [3c8c, 3c8c], [3d30, 3d30], [7adc, 7adc], [800c, 800c], [8010, 8010],
    [80fd, 80fd], [879a, 879a], [20e4c, 20e4c], [22182, 22182],
    [280f3, 280f3], [28d99, 28d99]**/


    namespace {
    const static UnicodeSet::run_t __neng_Set_runs[] = {
    {Empty, 484}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 492},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 3125}, {Mixed, 1}, {Empty, 153},
    {Mixed, 1}, {Empty, 762}, {Mixed, 1}, {Empty, 100}, {Mixed, 1},
    {Empty, 29587}};
    const static UnicodeSet::bitquad_t  __neng_Set_quads[] = {
    0x00001000, 0x00010000, 0x10000000, 0x00011000, 0x20000000, 0x04000000,
    0x00001000, 0x00000004, 0x00080000, 0x02000000};
    }

    const static UnicodeSet neng_Set{const_cast<UnicodeSet::run_t *>(__neng_Set_runs), 21, 0, const_cast<UnicodeSet::bitquad_t *>(__neng_Set_quads), 10, 0};

    /** Code Point Ranges for bao
    [3c92, 3c92], [3d61, 3d61], [3ffa, 3ffa], [420f, 420f], [4382, 4382],
    [4916, 4916], [4964, 4964], [4aa8, 4aa8], [4bfd, 4bfd], [4d10, 4d10],
    [4fdd, 4fdd], [5124, 5124], [5228, 5228], [5265, 5265], [52f9, 52f9],
    [52fd, 52fd], [5305, 5305], [5446, 5446], [5610, 5610], [5697, 5697],
    [5821, 5822], [5831, 5831], [5aac, 5aac], [5ad1, 5ad1], [5b62, 5b62],
    [5bb2, 5bb2], [5bf6, 5bf6], [6009, 6009], [62b1, 62b1], [66b4, 66b4],
    [67b9, 67b9], [7011, 7011], [70ae, 70ae], [7172, 7172], [7206, 7206],
    [7832, 7832], [7a87, 7a87], [7b23, 7b23], [7de5, 7de5], [80de, 80de],
    [82de, 82de], [82f4, 82f4], [83e2, 83e2], [8446, 8446], [8554, 8554],
    [8663, 8663], [86ab, 86ab], [888c, 888d], [88d2, 88d2], [8943, 8943],
    [8c79, 8c79], [8cf2, 8cf2], [8db5, 8db5], [924b, 924b], [9464, 9464],
    [95c1, 95c1], [96f9, 96f9], [9764, 9764], [98fd, 98fd], [99c2, 99c2],
    [9ab2, 9ab2], [9af1, 9af1], [9b91, 9b91], [9d07, 9d07], [9f59, 9f59],
    [2016c, 2016c], [208d2, 208d2], [208fa, 208fa], [2090f, 2090f],
    [20e55, 20e55], [2109f, 2109f], [21269, 21269], [219d6, 219d6],
    [21d84, 21d84], [22f0c, 22f0c], [232f3, 232f3], [23b40, 23b40],
    [24523, 24523], [24767, 24767], [247a5, 247a5], [24fc8, 24fc8],
    [25139, 25139], [25b53, 25b53], [26855, 26855], [2688a, 2688a],
    [27611, 27611], [27758, 27758], [27b64, 27b64], [27d62, 27d62],
    [281c5, 281c5], [28694, 28694], [28816, 28816], [28c26, 28c26],
    [28c3b, 28c3b], [29285, 29285], [29342, 29342], [296de, 296de],
    [29b3d, 29b3d], [29b7c, 29b7c], [29fa1, 29fa1], [29fd3, 29fd3],
    [2a3f6, 2a3f6]**/


    namespace {
    const static UnicodeSet::run_t __bao_Set_runs[] = {
    {Empty, 484}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 3}, {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 19},
    {Mixed, 2}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 66},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 2832}, {Mixed, 1}, {Empty, 58},
    {Mixed, 3}, {Empty, 41}, {Mixed, 1}, {Empty, 17}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 29},
    {Mixed, 1}, {Empty, 139}, {Mixed, 1}, {Empty, 30}, {Mixed, 1},
    {Empty, 66}, {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 64}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 80}, {Mixed, 1}, {Empty, 103},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 107}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 50},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 33},
    {Mixed, 2}, {Empty, 32}, {Mixed, 1}, {Empty, 29408}};
    const static UnicodeSet::bitquad_t  __bao_Set_quads[] = {
    0x00040000, 0x00000002, 0x04000000, 0x00008000, 0x00000004, 0x00400000,
    0x00000010, 0x00000100, 0x20000000, 0x00010000, 0x20000000, 0x00000010,
    0x00000100, 0x00000020, 0x22000000, 0x00000020, 0x00000040, 0x00010000,
    0x00800000, 0x00020006, 0x00001000, 0x00020000, 0x00000004, 0x00040000,
    0x00400000, 0x00000200, 0x00020000, 0x00100000, 0x02000000, 0x00020000,
    0x00004000, 0x00040000, 0x00000040, 0x00040000, 0x00000080, 0x00000008,
    0x00000020, 0x40000000, 0x40000000, 0x00100000, 0x00000004, 0x00000040,
    0x00100000, 0x00000008, 0x00000800, 0x00003000, 0x00040000, 0x00000008,
    0x02000000, 0x00040000, 0x00200000, 0x00000800, 0x00000010, 0x00000002,
    0x02000000, 0x00000010, 0x20000000, 0x00000004, 0x00040000, 0x00020000,
    0x00020000, 0x00000080, 0x02000000, 0x00001000, 0x00040000, 0x04000000,
    0x00008000, 0x00200000, 0x80000000, 0x00000200, 0x00400000, 0x00000010,
    0x00001000, 0x00080000, 0x00000001, 0x00000008, 0x00000080, 0x00000020,
    0x00000100, 0x02000000, 0x00080000, 0x00200000, 0x00000400, 0x00020000,
    0x01000000, 0x00000010, 0x00000004, 0x00000020, 0x00100000, 0x00400000,
    0x08000040, 0x00000020, 0x00000004, 0x40000000, 0x20000000, 0x10000000,
    0x00000002, 0x00080000, 0x00400000};
    }

    const static UnicodeSet bao_Set{const_cast<UnicodeSet::run_t *>(__bao_Set_runs), 187, 0, const_cast<UnicodeSet::bitquad_t *>(__bao_Set_quads), 99, 0};

    /** Code Point Ranges for shuai
    [3ca4, 3ca4], [48a6, 48a6], [5e25, 5e25], [6454, 6454], [7387, 7387],
    [7529, 7529], [7d8f, 7d8f], [7e17, 7e17], [87c0, 87c0], [8870, 8870],
    [2032d, 2032d], [207a9, 207a9], [22545, 22545], [22551, 22551],
    [2361a, 2361a], [23f27, 23f27], [24024, 24024], [24820, 24820],
    [24e2c, 24e2c], [24e80, 24e80], [27353, 27353], [275ff, 275ff],
    [27720, 27720], [2812e, 2812e], [29631, 29631]**/


    namespace {
    const static UnicodeSet::run_t __shuai_Set_runs[] = {
    {Empty, 485}, {Mixed, 1}, {Empty, 95}, {Mixed, 1}, {Empty, 171},
    {Mixed, 1}, {Empty, 48}, {Mixed, 1}, {Empty, 121}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 3029}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 236},
    {Mixed, 1}, {Empty, 133}, {Mixed, 1}, {Empty, 72}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 63}, {Mixed, 1}, {Empty, 47},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 293}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 79},
    {Mixed, 1}, {Empty, 167}, {Mixed, 1}, {Empty, 29518}};
    const static UnicodeSet::bitquad_t  __shuai_Set_quads[] = {
    0x00000010, 0x00000040, 0x00000020, 0x00100000, 0x00000080, 0x00000200,
    0x00008000, 0x00800000, 0x00000001, 0x00010000, 0x00002000, 0x00000200,
    0x00020020, 0x04000000, 0x00000080, 0x00000010, 0x00000001, 0x00001000,
    0x00000001, 0x00080000, 0x80000000, 0x00000001, 0x00004000, 0x00020000};
    }

    const static UnicodeSet shuai_Set{const_cast<UnicodeSet::run_t *>(__shuai_Set_runs), 49, 0, const_cast<UnicodeSet::bitquad_t *>(__shuai_Set_quads), 24, 0};

    /** Code Point Ranges for re
    [3ce7, 3ce7], [504c, 504c], [558f, 558f], [60f9, 60f9], [637c, 637c],
    [6e03, 6e03], [712b, 712b], [71b1, 71b1], [82e5, 82e5], [8e43, 8e43],
    [22787, 22787], [24444, 24444], [279cf, 279cf], [29b7f, 29b7f]**/


    namespace {
    const static UnicodeSet::run_t __re_Set_runs[] = {
    {Empty, 487}, {Mixed, 1}, {Empty, 154}, {Mixed, 1}, {Empty, 41},
    {Mixed, 1}, {Empty, 90}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 84}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 137}, {Mixed, 1}, {Empty, 90}, {Mixed, 1},
    {Empty, 3273}, {Mixed, 1}, {Empty, 229}, {Mixed, 1}, {Empty, 427},
    {Mixed, 1}, {Empty, 268}, {Mixed, 1}, {Empty, 29476}};
    const static UnicodeSet::bitquad_t  __re_Set_quads[] = {
    0x00000080, 0x00001000, 0x00008000, 0x02000000, 0x10000000, 0x00000008,
    0x00000800, 0x00020000, 0x00000020, 0x00000008, 0x00000080, 0x00000010,
    0x00008000, 0x80000000};
    }

    const static UnicodeSet re_Set{const_cast<UnicodeSet::run_t *>(__re_Set_runs), 29, 0, const_cast<UnicodeSet::bitquad_t *>(__re_Set_quads), 14, 0};

    /** Code Point Ranges for nv
    [3d56, 3d56], [43d4, 43d4], [45a1, 45a1], [46bc, 46bc], [5973, 5973],
    [6067, 6067], [6712, 6712], [6c91, 6c91], [72c3, 72c3], [7c79, 7c79],
    [7d6e, 7d6e], [804f, 804f], [80ec, 80ec], [8844, 8844], [91f9, 91f9],
    [2510b, 2510b], [2535e, 2535e], [264d5, 264d6], [275b7, 275b7],
    [29222, 29222]**/


    namespace {
    const static UnicodeSet::run_t __nv_Set_runs[] = {
    {Empty, 490}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 149}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 76}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 58}, {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 3576},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 139}, {Mixed, 1},
    {Empty, 134}, {Mixed, 1}, {Empty, 227}, {Mixed, 1}, {Empty, 29550}};
    const static UnicodeSet::bitquad_t  __nv_Set_quads[] = {
    0x00400000, 0x00100000, 0x00000002, 0x10000000, 0x00080000, 0x00000080,
    0x00040000, 0x00020000, 0x00000008, 0x02000000, 0x00004000, 0x00008000,
    0x00001000, 0x00000010, 0x02000000, 0x00000800, 0x40000000, 0x00600000,
    0x00800000, 0x00000004};
    }

    const static UnicodeSet nv_Set{const_cast<UnicodeSet::run_t *>(__nv_Set_runs), 41, 0, const_cast<UnicodeSet::bitquad_t *>(__nv_Set_quads), 20, 0};

    /** Code Point Ranges for ping
    [3d57, 3d57], [3eb8, 3eb8], [3ec2, 3ec2], [403b, 403b], [4202, 4202],
    [44d1, 44d1], [46e3, 46e3], [4d84, 4d84], [4e52, 4e52], [4fdc, 4fdc],
    [5017, 5017], [51ed, 51ed], [546f, 546f], [576a, 576a], [580b, 580b],
    [5a09, 5a09], [5c4f, 5c4f], [5e32, 5e32], [5e73, 5e73], [6191, 6191],
    [67b0, 67b0], [6a98, 6a98], [6cd9, 6cd9], [6d34, 6d34], [6d84, 6d84],
    [6ddc, 6ddc], [7129, 7129], [73b6, 73b6], [74f6, 74f6], [7539, 7539],
    [782f, 7830], [7851, 7851], [79e4, 79e4], [7aee, 7aee], [7c08, 7c08],
    [8058, 8058], [8060, 8060], [80d3, 80d3], [8275, 8275], [82f9, 82f9],
    [8353, 8353], [840d, 840d], [84f1, 84f1], [860b, 860b], [86b2, 86b2],
    [86e2, 86e2], [8a55, 8a55], [8f27, 8f27], [90f1, 90f1], [927c, 927c],
    [9829, 9829], [99ae, 99ae], [9b83, 9b83], [205e5, 205e5],
    [2129e, 2129e], [2219f, 2219f], [2258a, 2258a], [24b54, 24b54],
    [24cca, 24cca], [25a81, 25a81], [25b62, 25b62], [25d6a, 25d6a],
    [26014, 26014], [2695a, 2695a], [26964, 26964], [26d8a, 26d8a],
    [2708b, 2708b], [273d1, 273d1], [280b2, 280b2], [290be, 290be],
    [2921a, 2921a], [29a4d, 29a4d], [2a2cb, 2a2cb], [2a53e, 2a53e],
    [2a552, 2a552]**/


    namespace {
    const static UnicodeSet::run_t __ping_Set_runs[] = {
    {Empty, 490}, {Mixed, 1}, {Empty, 10}, {Mixed, 2}, {Empty, 10},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 48}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 23}, {Mixed, 2}, {Empty, 12}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 33}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 2898},
    {Mixed, 1}, {Empty, 100}, {Mixed, 1}, {Empty, 119}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 301}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 109}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 73},
    {Mixed, 2}, {Empty, 32}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 102}, {Mixed, 1}, {Empty, 127},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 65}, {Mixed, 1},
    {Empty, 67}, {Mixed, 1}, {Empty, 18}, {Mixed, 2}, {Empty, 29397}};
    const static UnicodeSet::bitquad_t  __ping_Set_quads[] = {
    0x00800000, 0x01000000, 0x00000004, 0x08000000, 0x00000004, 0x00020000,
    0x00000008, 0x00000010, 0x00040000, 0x10000000, 0x00800000, 0x00002000,
    0x00008000, 0x00000400, 0x00000800, 0x00000200, 0x00008000, 0x00040000,
    0x00080000, 0x00020000, 0x00010000, 0x01000000, 0x02000000, 0x00100000,
    0x00000010, 0x10000000, 0x00000200, 0x00400000, 0x00400000, 0x02000000,
    0x00018000, 0x00020000, 0x00000010, 0x00004000, 0x00000100, 0x01000000,
    0x00000001, 0x00080000, 0x00200000, 0x02000000, 0x00080000, 0x00002000,
    0x00020000, 0x00000800, 0x00040000, 0x00000004, 0x00200000, 0x00000080,
    0x00020000, 0x10000000, 0x00000200, 0x00004000, 0x00000008, 0x00000020,
    0x40000000, 0x80000000, 0x00000400, 0x00100000, 0x00000400, 0x00000002,
    0x00000004, 0x00000400, 0x00100000, 0x04000000, 0x00000010, 0x00000400,
    0x00000800, 0x00020000, 0x00040000, 0x40000000, 0x04000000, 0x00002000,
    0x00000800, 0x40000000, 0x00040000};
    }

    const static UnicodeSet ping_Set{const_cast<UnicodeSet::run_t *>(__ping_Set_runs), 141, 0, const_cast<UnicodeSet::bitquad_t *>(__ping_Set_quads), 75, 0};

    /** Code Point Ranges for cang
    [3d74, 3d74], [3d93, 3d93], [416e, 416e], [48a2, 48a2], [5009, 5009],
    [5096, 5096], [51d4, 51d4], [5328, 5328], [5d62, 5d62], [6ec4, 6ec4],
    [734a, 734a], [7472, 7472], [7bec, 7bec], [81e7, 81e7], [8259, 8259],
    [84bc, 84bc], [8535, 8535], [85cf, 85cf], [8cf6, 8cf6], [9476, 9476],
    [9dac, 9dac], [20950, 20950], [21f74, 21f74], [21fbb, 21fbb],
    [21fc4, 21fc4], [246ac, 246ac], [26f9d, 26f9d], [28903, 28903],
    [2901e, 2901e], [29579, 29579], [2975e, 2975e]**/


    namespace {
    const static UnicodeSet::run_t __cang_Set_runs[] = {
    {Empty, 491}, {Mixed, 2}, {Empty, 30}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 81}, {Mixed, 1},
    {Empty, 138}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 47}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 59},
    {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 2908}, {Mixed, 1},
    {Empty, 176}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 310},
    {Mixed, 1}, {Empty, 326}, {Mixed, 1}, {Empty, 203}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 29509}};
    const static UnicodeSet::bitquad_t  __cang_Set_quads[] = {
    0x00100000, 0x00080000, 0x00004000, 0x00000004, 0x00000200, 0x00400000,
    0x00100000, 0x00000100, 0x00000004, 0x00000010, 0x00000400, 0x00040000,
    0x00001000, 0x00000080, 0x02000000, 0x10000000, 0x00200000, 0x00008000,
    0x00400000, 0x00400000, 0x00001000, 0x00010000, 0x00100000, 0x08000000,
    0x00000010, 0x00001000, 0x20000000, 0x00000008, 0x40000000, 0x02000000,
    0x40000000};
    }

    const static UnicodeSet cang_Set{const_cast<UnicodeSet::run_t *>(__cang_Set_runs), 59, 0, const_cast<UnicodeSet::bitquad_t *>(__cang_Set_quads), 31, 0};

    /** Code Point Ranges for heng
    [3d87, 3d87], [4b1d, 4b1d], [4bd2, 4bd2], [4ea8, 4ea8], [4f77, 4f77],
    [54fc, 54fc], [5548, 5548], [583c, 583c], [59ee, 59ee], [6046, 6046],
    [6099, 6099], [6841, 6841], [6a2a, 6a2a], [70c6, 70c6], [72df, 72df],
    [73e9, 73e9], [80fb, 80fb], [811d, 811d], [8605, 8605], [884c, 884c],
    [8861, 8861], [8a07, 8a07], [9445, 9445], [9d34, 9d34], [20532, 20532],
    [209ff, 209ff], [219e6, 219e6], [23a09, 23a09], [24b8f, 24b8f],
    [257a7, 257a7], [26a3e, 26a3e], [26a97, 26a97], [26d99, 26d99],
    [27752, 27752], [2a3d3, 2a3d3]**/


    namespace {
    const static UnicodeSet::run_t __heng_Set_runs[] = {
    {Empty, 492}, {Mixed, 1}, {Empty, 107}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 43}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 103}, {Mixed, 2}, {Empty, 39},
    {Mixed, 1}, {Empty, 17}, {Mixed, 2}, {Empty, 12}, {Mixed, 1},
    {Empty, 81}, {Mixed, 1}, {Empty, 70}, {Mixed, 1}, {Empty, 2879},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 127}, {Mixed, 1},
    {Empty, 256}, {Mixed, 1}, {Empty, 139}, {Mixed, 1}, {Empty, 96},
    {Mixed, 1}, {Empty, 147}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 355},
    {Mixed, 1}, {Empty, 29409}};
    const static UnicodeSet::bitquad_t  __heng_Set_quads[] = {
    0x00000080, 0x20000000, 0x00040000, 0x00000100, 0x00800000, 0x10000000,
    0x00000100, 0x10000000, 0x00004000, 0x00000040, 0x02000000, 0x00000002,
    0x00000400, 0x00000040, 0x80000000, 0x00000200, 0x08000000, 0x20000000,
    0x00000020, 0x00001000, 0x00000002, 0x00000080, 0x00000020, 0x00100000,
    0x00040000, 0x80000000, 0x00000040, 0x00000200, 0x00008000, 0x00000080,
    0x40000000, 0x00800000, 0x02000000, 0x00040000, 0x00080000};
    }

    const static UnicodeSet heng_Set{const_cast<UnicodeSet::run_t *>(__heng_Set_runs), 67, 0, const_cast<UnicodeSet::bitquad_t *>(__heng_Set_quads), 35, 0};

    /** Code Point Ranges for chui
    [3dc3, 3dc3], [415c, 415c], [4553, 4553], [4705, 4705], [5015, 5015],
    [5439, 5439], [570c, 570c], [5782, 5782], [60d9, 60d9], [6376, 6376],
    [6425, 6425], [68f0, 68f0], [690e, 690e], [69cc, 69cc], [708a, 708a],
    [7ba0, 7ba0], [8144, 8144], [83d9, 83d9], [90f5, 90f5], [9318, 9318],
    [939a, 939a], [9672, 9672], [9840, 9840], [9b0c, 9b0c], [9b4b, 9b4b],
    [20112, 20112], [2136e, 2136e], [223d2, 223d2], [231e6, 231e6],
    [237c8, 237c8], [24675, 24675], [2564b, 2564b], [25783, 25783],
    [26248, 26248], [2931d, 2931d], [295f0, 295f0], [29b66, 29b66]**/


    namespace {
    const static UnicodeSet::run_t __chui_Set_runs[] = {
    {Empty, 494}, {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 31},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 71}, {Mixed, 1},
    {Empty, 32}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 37}, {Mixed, 2}, {Empty, 5}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 88}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 104}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2861}, {Mixed, 1}, {Empty, 146},
    {Mixed, 1}, {Empty, 130}, {Mixed, 1}, {Empty, 112}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 116}, {Mixed, 1}, {Empty, 126},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 85}, {Mixed, 1},
    {Empty, 389}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 29476}};
    const static UnicodeSet::bitquad_t  __chui_Set_quads[] = {
    0x00000008, 0x10000000, 0x00080000, 0x00000020, 0x00200000, 0x02000000,
    0x00001000, 0x00000004, 0x02000000, 0x00400000, 0x00000020, 0x00010000,
    0x00004000, 0x00001000, 0x00000400, 0x00000001, 0x00000010, 0x02000000,
    0x00200000, 0x01000000, 0x04000000, 0x00040000, 0x00000001, 0x00001000,
    0x00000800, 0x00040000, 0x00004000, 0x00040000, 0x00000040, 0x00000100,
    0x00200000, 0x00000800, 0x00000008, 0x00000100, 0x20000000, 0x00010000,
    0x00000040};
    }

    const static UnicodeSet chui_Set{const_cast<UnicodeSet::run_t *>(__chui_Set_runs), 73, 0, const_cast<UnicodeSet::bitquad_t *>(__chui_Set_quads), 37, 0};

    /** Code Point Ranges for zuan
    [3e07, 3e07], [408e, 408e], [4323, 4323], [487d, 487d], [4938, 4938],
    [5297, 5297], [63dd, 63dd], [64ae, 64ae], [6522, 6522], [6525, 6525],
    [6b11, 6b11], [7bf9, 7bf9], [7c6b, 7c6b], [7e82, 7e82], [7e98, 7e98],
    [8cfa, 8cfa], [8ea6, 8ea6], [947d, 947d], [2127a, 2127a],
    [23036, 23036], [23a81, 23a81], [26188, 26188], [26649, 26649],
    [281c3, 281c3], [28256, 28256], [28c2d, 28c2d], [29391, 29391],
    [296fb, 296fb], [29bf3, 29bf3]**/


    namespace {
    const static UnicodeSet::run_t __zuan_Set_runs[] = {
    {Empty, 496}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 74}, {Mixed, 1}, {Empty, 137}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 134}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 114}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 3055}, {Mixed, 1}, {Empty, 237},
    {Mixed, 1}, {Empty, 82}, {Mixed, 1}, {Empty, 311}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 219}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 58}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 29472}};
    const static UnicodeSet::bitquad_t  __zuan_Set_quads[] = {
    0x00000080, 0x00004000, 0x00000008, 0x20000000, 0x01000000, 0x00800000,
    0x20000000, 0x00004000, 0x00000024, 0x00020000, 0x02000000, 0x00000800,
    0x01000004, 0x04000000, 0x00000040, 0x20000000, 0x04000000, 0x00400000,
    0x00000002, 0x00000100, 0x00000200, 0x00000008, 0x00400000, 0x00002000,
    0x00020000, 0x08000000, 0x00080000};
    }

    const static UnicodeSet zuan_Set{const_cast<UnicodeSet::run_t *>(__zuan_Set_runs), 55, 0, const_cast<UnicodeSet::bitquad_t *>(__zuan_Set_quads), 27, 0};

    /** Code Point Ranges for jiang
    [3e54, 3e54], [4243, 4243], [42cc, 42cc], [45f5, 45f5], [472b, 472b],
    [47aa, 47aa], [4952, 4952], [508b, 508b], [50f5, 50f5], [52e5, 52e5],
    [5320, 5320], [5842, 5842], [596c, 596c], [59dc, 59dc], [5c07, 5c07],
    [5d79, 5d79], [5f1c, 5f1c], [5f36, 5f36], [5f3a, 5f3a], [5f4a, 5f4a],
    [646a, 646a], [69f3, 69f3], [6a7f, 6a7f], [6bad, 6bad], [6c5f, 6c5f],
    [6d1a, 6d1a], [6ef0, 6ef0], [6f3f, 6f3f], [729f, 729f], [757a, 757a],
    [7586, 7586], [7913, 7913], [7ce8, 7ce8], [7d05, 7d05], [7d73, 7d73],
    [7e6e, 7e6e], [7fde, 7fde], [8029, 8029], [8199, 8199], [8333, 8333],
    [8441, 8441], [8503, 8503], [8523, 8523], [8591, 8591], [87bf, 87bf],
    [88b6, 88b6], [8b1b, 8b1b], [8b3d, 8b3d], [8c47, 8c47], [91ac, 91ac],
    [964d, 964d], [985c, 985c], [9c42, 9c42], [2060c, 2060c],
    [20dd0, 20dd0], [20f22, 20f22], [213de, 213de], [21476, 21476],
    [21ca3, 21ca3], [21dcd, 21dcd], [22638, 22638], [22a87, 22a87],
    [236a6, 236a6], [23a23, 23a23], [23a74, 23a74], [23af3, 23af3],
    [2456f, 2456f], [2459b, 2459b], [246dc, 246dc], [25185, 25185],
    [25523, 25523], [255ea, 255ea], [2579c, 2579c], [25b2e, 25b2e],
    [25dc3, 25dc3], [26997, 26997], [2760d, 2760d], [280c7, 280c7],
    [28730, 28730], [28bde, 28bde], [2933e, 2933e], [2977d, 2977d],
    [29d12, 29d12], [29dc4, 29dc4], [29ded, 29ded], [2a018, 2a018]**/


    namespace {
    const static UnicodeSet::run_t __jiang_Set_runs[] = {
    {Empty, 498}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 57}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 12},
    {Mixed, 3}, {Empty, 40}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 27},
    {Mixed, 1}, {Empty, 30}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 18}, {Mixed, 2}, {Empty, 8},
    {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 2893},
    {Mixed, 1}, {Empty, 61}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 65},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 66}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 96}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 83},
    {Mixed, 2}, {Empty, 9}, {Mixed, 1}, {Empty, 85}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 93}, {Mixed, 1}, {Empty, 99}, {Mixed, 1}, {Empty, 85},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 58}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 44},
    {Mixed, 1}, {Empty, 5}, {Mixed, 2}, {Empty, 16}, {Mixed, 1},
    {Empty, 29439}};
    const static UnicodeSet::bitquad_t  __jiang_Set_quads[] = {
    0x00100000, 0x00000008, 0x00001000, 0x00200000, 0x00000800, 0x00000400,
    0x00040000, 0x00000800, 0x00200000, 0x00000020, 0x00000001, 0x00000004,
    0x00001000, 0x10000000, 0x00000080, 0x02000000, 0x10000000, 0x04400000,
    0x00000400, 0x00000400, 0x00080000, 0x80000000, 0x00002000, 0x80000000,
    0x04000000, 0x00010000, 0x80000000, 0x80000000, 0x04000000, 0x00000040,
    0x00080000, 0x00000100, 0x00000020, 0x00080000, 0x00004000, 0x40000000,
    0x00000200, 0x02000000, 0x00080000, 0x00000002, 0x00000008, 0x00000008,
    0x00020000, 0x80000000, 0x00400000, 0x08000000, 0x20000000, 0x00000080,
    0x00001000, 0x00002000, 0x10000000, 0x00000004, 0x00001000, 0x00010000,
    0x00000004, 0x40000000, 0x00400000, 0x00000008, 0x00002000, 0x01000000,
    0x00000080, 0x00000040, 0x00000008, 0x00100000, 0x00080000, 0x00008000,
    0x08000000, 0x10000000, 0x00000020, 0x00000008, 0x00000400, 0x10000000,
    0x00004000, 0x00000008, 0x00800000, 0x00002000, 0x00000080, 0x00010000,
    0x40000000, 0x40000000, 0x20000000, 0x00040000, 0x00000010, 0x00002000,
    0x01000000};
    }

    const static UnicodeSet jiang_Set{const_cast<UnicodeSet::run_t *>(__jiang_Set_runs), 155, 0, const_cast<UnicodeSet::bitquad_t *>(__jiang_Set_quads), 85, 0};

    /** Code Point Ranges for rao
    [3e5b, 3e5b], [5b08, 5b08], [6270, 6270], [6493, 6493], [64fe, 64fe],
    [6a48, 6a48], [72aa, 72aa], [7a58, 7a58], [7e5a, 7e5a], [7e5e, 7e5e],
    [8558, 8558], [87ef, 87ef], [8953, 8953], [96a2, 96a2], [9952, 9952],
    [204b8, 204b8], [21226, 21226], [26a9b, 26a9b], [27ce8, 27ce8],
    [281c4, 281c4]**/


    namespace {
    const static UnicodeSet::run_t __rao_Set_runs[] = {
    {Empty, 498}, {Mixed, 1}, {Empty, 229}, {Mixed, 1}, {Empty, 58},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 60},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 55}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 106},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 2906}, {Mixed, 1},
    {Empty, 107}, {Mixed, 1}, {Empty, 706}, {Mixed, 1}, {Empty, 146},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 29681}};
    const static UnicodeSet::bitquad_t  __rao_Set_quads[] = {
    0x08000000, 0x00000100, 0x00010000, 0x00080000, 0x40000000, 0x00000100,
    0x00000400, 0x01000000, 0x44000000, 0x01000000, 0x00008000, 0x00080000,
    0x00000004, 0x00040000, 0x01000000, 0x00000040, 0x08000000, 0x00000100,
    0x00000010};
    }

    const static UnicodeSet rao_Set{const_cast<UnicodeSet::run_t *>(__rao_Set_runs), 39, 0, const_cast<UnicodeSet::bitquad_t *>(__rao_Set_quads), 19, 0};

    /** Code Point Ranges for ga
    [3e62, 3e62], [4f3d, 4f3d], [5477, 5477], [5496, 5496], [560e, 560e],
    [5676, 5676], [593e, 593e], [5c15, 5c15], [5c1c, 5c1c], [5c2c, 5c2c],
    [65ee, 65ee], [738d, 738d], [8ecb, 8ecb], [91d3, 91d3], [9337, 9337],
    [9b40, 9b40], [21245, 21245], [21bf0, 21bf0], [21bfd, 21bfd],
    [21f1b, 21f1b], [23b2b, 23b2b]**/


    namespace {
    const static UnicodeSet::run_t __ga_Set_runs[] = {
    {Empty, 499}, {Mixed, 1}, {Empty, 133}, {Mixed, 1}, {Empty, 41},
    {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 22}, {Mixed, 2}, {Empty, 77},
    {Mixed, 1}, {Empty, 108}, {Mixed, 1}, {Empty, 217}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 64},
    {Mixed, 1}, {Empty, 2999}, {Mixed, 1}, {Empty, 76}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 224}, {Mixed, 1}, {Empty, 30246}};
    const static UnicodeSet::bitquad_t  __ga_Set_quads[] = {
    0x00000004, 0x20000000, 0x00800000, 0x00400000, 0x00004000, 0x00400000,
    0x40000000, 0x10200000, 0x00001000, 0x00004000, 0x00002000, 0x00000800,
    0x00080000, 0x00800000, 0x00000001, 0x00000020, 0x20010000, 0x08000000,
    0x00000800};
    }

    const static UnicodeSet ga_Set{const_cast<UnicodeSet::run_t *>(__ga_Set_runs), 35, 0, const_cast<UnicodeSet::bitquad_t *>(__ga_Set_quads), 19, 0};

    /** Code Point Ranges for geng
    [3e74, 3e74], [3e79, 3e79], [3f98, 3f98], [42c1, 42c1], [43b4, 43b4],
    [489a, 489a], [4c4d, 4c4d], [4c6d, 4c6d], [4e98, 4e99], [4ea2, 4ea2],
    [522f, 522f], [54fd, 54fd], [57c2, 57c2], [5cfa, 5cfa], [5e9a, 5e9a],
    [6046, 6046], [632d, 632d], [6685, 6685], [66f4, 66f4], [6897, 6897],
    [6d6d, 6d6d], [786c, 786c], [7d59, 7d59], [7d86, 7d86], [7dea, 7dea],
    [7fb9, 7fb9], [8015, 8015], [803f, 803f], [8384, 8384], [83ee, 83ee],
    [8ce1, 8ce1], [90a2, 90a2], [90e0, 90e0], [9838, 9838], [9abe, 9abe],
    [9bc1, 9bc1], [9d8a, 9d8a], [20863, 20863], [21377, 21377],
    [21a43, 21a43], [2267e, 2267e], [2279a, 2279a], [231b3, 231b3],
    [23384, 23384], [25168, 25168], [25254, 25254], [25502, 25502],
    [25f9a, 25f9a], [266b8, 266b8], [266df, 266df], [26737, 26737],
    [2678c, 2678c], [268cd, 268cd], [26d78, 26d78], [27019, 27019],
    [272d1, 272d1], [27678, 27678], [27c28, 27c28], [28048, 28048],
    [290bc, 290bc], [29723, 29723], [29c41, 29c41], [29c4b, 29c4b],
    [29c67, 29c67]**/


    namespace {
    const static UnicodeSet::run_t __geng_Set_runs[] = {
    {Empty, 499}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 29}, {Mixed, 2}, {Empty, 16}, {Mixed, 2}, {Empty, 27},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 87}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 26}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 71}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 8}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 2902},
    {Mixed, 1}, {Empty, 87}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 96}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 80},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 238}, {Mixed, 1},
    {Empty, 6}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 83},
    {Mixed, 1}, {Empty, 56}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 130}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 40},
    {Mixed, 2}, {Empty, 29468}};
    const static UnicodeSet::bitquad_t  __geng_Set_quads[] = {
    0x02100000, 0x01000000, 0x00000002, 0x00100000, 0x04000000, 0x00002000,
    0x00002000, 0x03000000, 0x00000004, 0x00008000, 0x20000000, 0x00000004,
    0x04000000, 0x04000000, 0x00000040, 0x00002000, 0x00000020, 0x00100000,
    0x00800000, 0x00002000, 0x00001000, 0x02000000, 0x00000040, 0x00000400,
    0x02000000, 0x00200000, 0x80000000, 0x00000010, 0x00004000, 0x00000002,
    0x00000004, 0x00000001, 0x01000000, 0x40000000, 0x00000002, 0x00000400,
    0x00000008, 0x00800000, 0x00000008, 0x40000000, 0x04000000, 0x00080000,
    0x00000010, 0x00000100, 0x00100000, 0x00000004, 0x04000000, 0x01000000,
    0x80000000, 0x00800000, 0x00001000, 0x00002000, 0x01000000, 0x02000000,
    0x00020000, 0x01000000, 0x00000100, 0x00000100, 0x10000000, 0x00000008,
    0x00000802, 0x00000080};
    }

    const static UnicodeSet geng_Set{const_cast<UnicodeSet::run_t *>(__geng_Set_runs), 115, 0, const_cast<UnicodeSet::bitquad_t *>(__geng_Set_quads), 62, 0};

    /** Code Point Ranges for nong
    [3e9c, 3e9c], [4078, 4078], [4d5c, 4d5c], [5102, 5102], [5494, 5494],
    [5665, 5665], [5f04, 5f04], [61b9, 61b9], [6a82, 6a82], [6b01, 6b01],
    [6fc3, 6fc3], [7651, 7651], [79af, 79af], [7a60, 7a60], [7e77, 7e77],
    [81bf, 81bf], [8380, 8380], [857d, 857d], [895b, 895b], [8fb2, 8fb2],
    [91b2, 91b2], [9f48, 9f48], [2031a, 2031a], [2060a, 2060a],
    [25092, 25092], [2844a, 2844a], [28824, 28824], [28cb3, 28cb3],
    [2917d, 2917d], [291d4, 291d4], [297ca, 297ca], [2a1af, 2a1af],
    [2a4ac, 2a4ac]**/


    namespace {
    const static UnicodeSet::run_t __nong_Set_runs[] = {
    {Empty, 500}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 102},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 70}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 50}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 108}, {Mixed, 1}, {Empty, 2845},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 595}, {Mixed, 1},
    {Empty, 413}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 29402}};
    const static UnicodeSet::bitquad_t  __nong_Set_quads[] = {
    0x10000000, 0x01000000, 0x10000000, 0x00000004, 0x00100000, 0x00000020,
    0x00000010, 0x02000000, 0x00000004, 0x00000002, 0x00000008, 0x00020000,
    0x00008000, 0x00000001, 0x00800000, 0x80000000, 0x00000001, 0x20000000,
    0x08000000, 0x00040000, 0x00040000, 0x00000100, 0x04000000, 0x00000400,
    0x00040000, 0x00000400, 0x00000010, 0x00080000, 0x20000000, 0x00100000,
    0x00000400, 0x00008000, 0x00001000};
    }

    const static UnicodeSet nong_Set{const_cast<UnicodeSet::run_t *>(__nong_Set_runs), 67, 0, const_cast<UnicodeSet::bitquad_t *>(__nong_Set_quads), 33, 0};

    /** Code Point Ranges for bin
    [3ede, 3ede], [4414, 4414], [4694, 4694], [49ec, 49ec], [4a08, 4a08],
    [4efd, 4efd], [5110, 5110], [5f6c, 5f6c], [64ef, 64ef], [653d, 653d],
    [658c, 658c], [6915, 6915], [6baf, 6baf], [6c43, 6c43], [6d5c, 6d5c],
    [6ff1, 6ff1], [7015, 7015], [73a2, 73a2], [74b8, 74b8], [780f, 780f],
    [7e7d, 7e7d], [81cf, 81cf], [8668, 8668], [8a1c, 8a1c], [8c69, 8c69],
    [8c73, 8c73], [8cd3, 8cd3], [8d07, 8d07], [90a0, 90a0], [944c, 944c],
    [9726, 9726], [983b, 983b], [986e, 986e], [9ad5, 9ad5], [9ae9, 9ae9],
    [9b22, 9b22], [20d07, 20d07], [21986, 21986], [219bb, 219bb],
    [219cd, 219cd], [219fc, 219fc], [22cb0, 22cb0], [2326e, 2326e],
    [2388f, 2388f], [23c28, 23c28], [250f0, 250f0], [27ddf, 27ddf],
    [27e08, 27e08], [28430, 28430], [28f57, 28f57], [291b1, 291b1],
    [29d31, 29d31], [2a1d5, 2a1d5]**/


    namespace {
    const static UnicodeSet::run_t __bin_Set_runs[] = {
    {Empty, 502}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 26}, {Mixed, 2}, {Empty, 38}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 114}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 20}, {Mixed, 2}, {Empty, 28}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 50},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 18}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 2958}, {Mixed, 1}, {Empty, 99}, {Mixed, 4},
    {Empty, 149}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 165}, {Mixed, 1},
    {Empty, 358}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 88}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 91}, {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 29425}};
    const static UnicodeSet::bitquad_t  __bin_Set_quads[] = {
    0x40000000, 0x00100000, 0x00100000, 0x00001000, 0x00000100, 0x20000000,
    0x00010000, 0x00001000, 0x00008000, 0x20000000, 0x00001000, 0x00200000,
    0x00008000, 0x00000008, 0x10000000, 0x00020000, 0x00200000, 0x00000004,
    0x01000000, 0x00008000, 0x20000000, 0x00008000, 0x00000100, 0x10000000,
    0x00080200, 0x00080000, 0x00000080, 0x00000001, 0x00001000, 0x00000040,
    0x08000000, 0x00004000, 0x00200000, 0x00000200, 0x00000004, 0x00000080,
    0x00000040, 0x08000000, 0x00002000, 0x10000000, 0x00010000, 0x00004000,
    0x00008000, 0x00000100, 0x00010000, 0x80000000, 0x00000100, 0x00010000,
    0x00800000, 0x00020000, 0x00020000, 0x00200000};
    }

    const static UnicodeSet bin_Set{const_cast<UnicodeSet::run_t *>(__bin_Set_runs), 93, 0, const_cast<UnicodeSet::bitquad_t *>(__bin_Set_quads), 52, 0};

    /** Code Point Ranges for zen
    [3ef8, 3ef8], [4ac8, 4ac8], [50ed, 50ed], [600e, 600e], [648d, 648d],
    [8b56, 8b56]**/


    namespace {
    const static UnicodeSet::run_t __zen_Set_runs[] = {
    {Empty, 503}, {Mixed, 1}, {Empty, 94}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 120}, {Mixed, 1}, {Empty, 35}, {Mixed, 1},
    {Empty, 309}, {Mixed, 1}, {Empty, 33701}};
    const static UnicodeSet::bitquad_t  __zen_Set_quads[] = {
    0x01000000, 0x00000100, 0x00002000, 0x00004000, 0x00002000, 0x00400000};
    }

    const static UnicodeSet zen_Set{const_cast<UnicodeSet::run_t *>(__zen_Set_runs), 13, 0, const_cast<UnicodeSet::bitquad_t *>(__zen_Set_quads), 6, 0};

    /** Code Point Ranges for dang
    [3f15, 3f15], [3f46, 3f46], [4457, 4457], [48ca, 48ca], [4992, 4992],
    [5052, 5052], [5105, 5105], [515a, 515a], [5679, 5679], [5735, 5735],
    [5834, 5834], [58cb, 58cb], [5a78, 5a78], [5b95, 5b95], [5d35, 5d35],
    [5d63, 5d63], [6113, 6113], [64cb, 64cb], [6529, 6529], [6a94, 6a94],
    [6b13, 6b13], [6c39, 6c39], [6f52, 6f52], [6fa2, 6fa2], [7059, 7059],
    [71d9, 71d9], [7452, 7452], [7497, 7497], [74ab, 74ab], [74fd, 74fd],
    [7576, 7576], [760d, 760d], [76ea, 76ea], [778a, 778a], [78ad, 78ad],
    [7911, 7911], [7c1c, 7c1c], [7c39, 7c39], [8261, 8261], [83ea, 83ea],
    [8569, 8569], [87f7, 87f7], [8960, 8960], [8b9c, 8b9c], [8da4, 8da4],
    [903f, 903f], [943a, 943a], [95e3, 95e3], [96fc, 96fc], [9ee8, 9ee8],
    [211c8, 211c8], [211f5, 211f5], [215cd, 215cd], [21888, 21888],
    [21c28, 21c28], [21f95, 21f95], [2283d, 2283d], [22842, 22842],
    [230b3, 230b3], [230c9, 230c9], [23ecd, 23ecd], [24536, 24536],
    [245fe, 245fe], [2488e, 2488e], [248de, 248de], [258b7, 258b7],
    [25917, 25917], [25bd5, 25bd5], [25e08, 25e08], [265f4, 265f4],
    [26cdd, 26cdd], [26f32, 26f32], [26fc6, 26fc6], [27157, 27157],
    [27458, 27458], [283b4, 283b4], [28766, 28766], [28dfe, 28dfe],
    [297c8, 297c8], [29f09, 29f09], [29f73, 29f73], [2a1c1, 2a1c1]**/


    namespace {
    const static UnicodeSet::run_t __dang_Set_runs[] = {
    {Empty, 504}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 53}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 4}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 24}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 23}, {Mixed, 2},
    {Empty, 49}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 63}, {Mixed, 1}, {Empty, 2966},
    {Mixed, 2}, {Empty, 30}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 28}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 68},
    {Mixed, 2}, {Empty, 66}, {Mixed, 2}, {Empty, 111}, {Mixed, 1},
    {Empty, 50}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 126}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 62}, {Mixed, 1}, {Empty, 54}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 122}, {Mixed, 1},
    {Empty, 29}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 78},
    {Mixed, 1}, {Empty, 57}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 29425}};
    const static UnicodeSet::bitquad_t  __dang_Set_quads[] = {
    0x00200000, 0x00000040, 0x00800000, 0x00000400, 0x00040000, 0x00040000,
    0x00000020, 0x04000000, 0x02000000, 0x00200000, 0x00100000, 0x00000800,
    0x01000000, 0x00200000, 0x00200000, 0x00000008, 0x00080000, 0x00000800,
    0x00000200, 0x00100000, 0x00080000, 0x02000000, 0x00040000, 0x00000004,
    0x02000000, 0x02000000, 0x00040000, 0x00800000, 0x00000800, 0x20000000,
    0x00400000, 0x00002000, 0x00000400, 0x00000400, 0x00002000, 0x00020000,
    0x10000000, 0x02000000, 0x00000002, 0x00000400, 0x00000200, 0x00800000,
    0x00000001, 0x10000000, 0x00000010, 0x80000000, 0x04000000, 0x00000008,
    0x10000000, 0x00000100, 0x00000100, 0x00200000, 0x00002000, 0x00000100,
    0x00000100, 0x00200000, 0x20000000, 0x00000004, 0x00080000, 0x00000200,
    0x00002000, 0x00400000, 0x40000000, 0x00004000, 0x40000000, 0x00800000,
    0x00800000, 0x00200000, 0x00000100, 0x00100000, 0x20000000, 0x00040000,
    0x00000040, 0x00800000, 0x01000000, 0x00100000, 0x00000040, 0x40000000,
    0x00000100, 0x00000200, 0x00080000, 0x00000002};
    }

    const static UnicodeSet dang_Set{const_cast<UnicodeSet::run_t *>(__dang_Set_runs), 155, 0, const_cast<UnicodeSet::bitquad_t *>(__dang_Set_quads), 82, 0};

    /** Code Point Ranges for kao
    [3f25, 3f25], [438b, 438b], [4427, 4427], [4bcc, 4bcc], [4bea, 4bea],
    [4e02, 4e02], [5c3b, 5c3b], [5d6a, 5d6a], [62f7, 62f7], [641e, 641e],
    [649f, 649f], [6537, 6537], [6832, 6832], [69c0, 69c1], [6d18, 6d18],
    [70e4, 70e4], [7105, 7105], [7187, 7187], [7292, 7292], [7a3e, 7a3e],
    [8003, 8003], [85a7, 85a7], [8a04, 8a04], [92ac, 92ac], [9760, 9760],
    [9adb, 9adb], [9bb3, 9bb3], [9bcc, 9bcc], [21b73, 21b73],
    [2340a, 2340a], [239cf, 239cf], [23a3b, 23a3b], [23a45, 23a45],
    [25b2f, 25b2f], [25e6c, 25e6c], [272d3, 272d3], [280e4, 280e4],
    [28634, 28634], [2975d, 2975d], [29a7e, 29a7e]**/


    namespace {
    const static UnicodeSet::run_t __kao_Set_runs[] = {
    {Empty, 505}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 60}, {Mixed, 2}, {Empty, 16}, {Mixed, 1},
    {Empty, 112}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 30}, {Mixed, 2}, {Empty, 3},
    {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 60}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 37}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 3068},
    {Mixed, 1}, {Empty, 196}, {Mixed, 1}, {Empty, 45}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 262}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 162}, {Mixed, 1}, {Empty, 112}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 136}, {Mixed, 1}, {Empty, 24},
    {Mixed, 1}, {Empty, 29484}};
    const static UnicodeSet::bitquad_t  __kao_Set_quads[] = {
    0x00000020, 0x00000800, 0x00000080, 0x00001000, 0x00000400, 0x00000004,
    0x08000000, 0x00000400, 0x00800000, 0x40000000, 0x80000000, 0x00800000,
    0x00040000, 0x00000003, 0x01000000, 0x00000010, 0x00000020, 0x00000080,
    0x00040000, 0x40000000, 0x00000008, 0x00000080, 0x00000010, 0x00001000,
    0x00000001, 0x08000000, 0x00080000, 0x00001000, 0x00080000, 0x00000400,
    0x00008000, 0x08000000, 0x00000020, 0x00008000, 0x00001000, 0x00080000,
    0x00000010, 0x00100000, 0x20000000, 0x40000000};
    }

    const static UnicodeSet kao_Set{const_cast<UnicodeSet::run_t *>(__kao_Set_runs), 73, 0, const_cast<UnicodeSet::bitquad_t *>(__kao_Set_quads), 40, 0};

    /** Code Point Ranges for zeng
    [3f6a, 3f6a], [4396, 4396], [4662, 4662], [4d74, 4d74], [589e, 589e],
    [618e, 618e], [66fe, 66fe], [6a67, 6a67], [7494, 7494], [7511, 7511],
    [77f0, 77f0], [78f3, 78f3], [7d9c, 7d9c], [7e21, 7e21], [7e52, 7e52],
    [7f7e, 7f7e], [8b44, 8b44], [8d08, 8d08], [912b, 912b], [92e5, 92e5],
    [9b37, 9b37], [21851, 21851], [21fbd, 21fbd], [243af, 243af],
    [26013, 26013], [26f0f, 26f0f], [27890, 27890], [28caf, 28caf],
    [2a49f, 2a49f], [2a66d, 2a66d]**/


    namespace {
    const static UnicodeSet::run_t __zeng_Set_runs[] = {
    {Empty, 507}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 88}, {Mixed, 1},
    {Empty, 71}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 27},
    {Mixed, 1}, {Empty, 80}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 94},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 32}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 3048},
    {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 287}, {Mixed, 1},
    {Empty, 226}, {Mixed, 1}, {Empty, 119}, {Mixed, 1}, {Empty, 75},
    {Mixed, 1}, {Empty, 160}, {Mixed, 1}, {Empty, 190}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 29388}};
    const static UnicodeSet::bitquad_t  __zeng_Set_quads[] = {
    0x00000400, 0x00400000, 0x00000004, 0x00100000, 0x40000000, 0x00004000,
    0x40000000, 0x00000080, 0x00100000, 0x00020000, 0x00010000, 0x00080000,
    0x10000000, 0x00000002, 0x00040000, 0x40000000, 0x00000010, 0x00000100,
    0x00000800, 0x00000020, 0x00800000, 0x00020000, 0x20000000, 0x00008000,
    0x00080000, 0x00008000, 0x00010000, 0x00008000, 0x80000000, 0x00002000};
    }

    const static UnicodeSet zeng_Set{const_cast<UnicodeSet::run_t *>(__zeng_Set_runs), 59, 0, const_cast<UnicodeSet::bitquad_t *>(__zeng_Set_quads), 30, 0};

    /** Code Point Ranges for shun
    [4022, 4022], [4035, 4035], [440f, 440f], [4d04, 4d04], [4fca, 4fca],
    [542e, 542e], [5ddb, 5ddb], [5de1, 5de1], [6042, 6042], [696f, 696f],
    [76fe, 76fe], [7734, 7734], [779a, 779a], [77a4, 77a4], [77ac, 77ac],
    [821c, 821c], [8563, 8563], [8f34, 8f34], [9806, 9806], [9b0a, 9b0a],
    [2875c, 2875c], [28ea0, 28ea0]**/


    namespace {
    const static UnicodeSet::run_t __shun_Set_runs[] = {
    {Empty, 513}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 71},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 76}, {Mixed, 2}, {Empty, 18}, {Mixed, 1}, {Empty, 72},
    {Mixed, 1}, {Empty, 107}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 2}, {Empty, 82}, {Mixed, 1}, {Empty, 26},
    {Mixed, 1}, {Empty, 77}, {Mixed, 1}, {Empty, 70}, {Mixed, 1},
    {Empty, 23}, {Mixed, 1}, {Empty, 3937}, {Mixed, 1}, {Empty, 58},
    {Mixed, 1}, {Empty, 29578}};
    const static UnicodeSet::bitquad_t  __shun_Set_quads[] = {
    0x00200004, 0x00008000, 0x00000010, 0x00000400, 0x00004000, 0x08000000,
    0x00000002, 0x00000004, 0x00008000, 0x40000000, 0x00100000, 0x04000000,
    0x00001010, 0x10000000, 0x00000008, 0x00100000, 0x00000040, 0x00000400,
    0x10000000, 0x00000001};
    }

    const static UnicodeSet shun_Set{const_cast<UnicodeSet::run_t *>(__shun_Set_runs), 37, 0, const_cast<UnicodeSet::bitquad_t *>(__shun_Set_quads), 20, 0};

    /** Code Point Ranges for dun
    [40e6, 40e6], [453b, 453b], [4a83, 4a83], [4f05, 4f05], [4fca, 4fca],
    [5428, 5428], [5678, 5678], [56e4, 56e4], [5749, 5749], [58a9, 58a9],
    [5e89, 5e89], [5ff3, 5ff3], [60c7, 60c7], [619e, 619e], [6489, 6489],
    [64b4, 64b4], [6566, 6566], [696f, 696f], [6a54, 6a54], [6c8c, 6c8c],
    [6f61, 6f61], [7096, 7096], [71c9, 71c9], [729c, 729c], [76f9, 76f9],
    [76fe, 76fe], [7818, 7818], [815e, 815e], [816f, 816f], [8733, 8733],
    [8c5a, 8c5a], [8e32, 8e32], [8e72, 8e72], [8e7e, 8e7e], [8e89, 8e89],
    [9007, 9007], [9041, 9041], [906f, 906f], [920d, 920d], [9413, 9413],
    [941c, 941c], [9813, 9813], [9a50, 9a50], [203bb, 203bb],
    [211b0, 211b0], [21f16, 21f16], [22b3c, 22b3c], [233b4, 233b4],
    [235c1, 235c1], [236aa, 236aa], [23787, 23787], [247e2, 247e2],
    [24b5e, 24b5e], [250a6, 250a6], [25aec, 25aec], [25af1, 25af1],
    [25b52, 25b52], [263a7, 263a7], [26a94, 26a94], [26c2d, 26c2d],
    [26f3f, 26f3f], [27757, 27757], [27fd7, 27fd7], [28521, 28521],
    [29502, 29502], [297a4, 297a4]**/


    namespace {
    const static UnicodeSet::run_t __dun_Set_runs[] = {
    {Empty, 519}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 23}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 73}, {Mixed, 2},
    {Empty, 45}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 1},
    {Mixed, 2}, {Empty, 12}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 31}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2890},
    {Mixed, 1}, {Empty, 111}, {Mixed, 1}, {Empty, 106}, {Mixed, 1},
    {Empty, 96}, {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 130}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 81}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 66}, {Mixed, 1}, {Empty, 54}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 64}, {Mixed, 1},
    {Empty, 67}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 126},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 29506}};
    const static UnicodeSet::bitquad_t  __dun_Set_quads[] = {
    0x00000040, 0x08000000, 0x00000008, 0x00000020, 0x00000400, 0x00000100,
    0x01000000, 0x00000010, 0x00000200, 0x00000200, 0x00000200, 0x00080000,
    0x00000080, 0x40000000, 0x00000200, 0x00100000, 0x00000040, 0x00008000,
    0x00100000, 0x00001000, 0x00000002, 0x00400000, 0x00000200, 0x10000000,
    0x42000000, 0x01000000, 0x40000000, 0x00008000, 0x00080000, 0x04000000,
    0x00040000, 0x40040000, 0x00000200, 0x00000080, 0x00000002, 0x00008000,
    0x00002000, 0x10080000, 0x00080000, 0x00010000, 0x08000000, 0x00010000,
    0x00400000, 0x10000000, 0x00100000, 0x00000002, 0x00000400, 0x00000080,
    0x00000004, 0x40000000, 0x00000040, 0x00021000, 0x00040000, 0x00000080,
    0x00100000, 0x00002000, 0x80000000, 0x00800000, 0x00800000, 0x00000002,
    0x00000004, 0x00000010};
    }

    const static UnicodeSet dun_Set{const_cast<UnicodeSet::run_t *>(__dun_Set_runs), 117, 0, const_cast<UnicodeSet::bitquad_t *>(__dun_Set_quads), 62, 0};

    /** Code Point Ranges for ca
    [40f0, 40f0], [4328, 4328], [47c3, 47c3], [4d7d, 4d7d], [50aa, 50aa],
    [5693, 5693], [56c3, 56c3], [62c6, 62c6], [64e6, 64e6], [6503, 6503],
    [78e3, 78e3], [7924, 7924], [8521, 8521], [906a, 906a], [24116, 24116],
    [255ed, 255ed], [25a5d, 25a5d], [281be, 281be], [28ead, 28ead],
    [2a297, 2a297]**/


    namespace {
    const static UnicodeSet::run_t __ca_Set_runs[] = {
    {Empty, 519}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 36},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 25}, {Mixed, 1},
    {Empty, 46}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 95},
    {Mixed, 1}, {Empty, 16}, {Mixed, 2}, {Empty, 158}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 95}, {Mixed, 1}, {Empty, 89},
    {Mixed, 1}, {Empty, 3460}, {Mixed, 1}, {Empty, 166}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 314}, {Mixed, 1}, {Empty, 103},
    {Mixed, 1}, {Empty, 158}, {Mixed, 1}, {Empty, 29419}};
    const static UnicodeSet::bitquad_t  __ca_Set_quads[] = {
    0x00010000, 0x00000100, 0x00000008, 0x20000000, 0x00000400, 0x00080000,
    0x00000008, 0x00000040, 0x00000040, 0x00000008, 0x00000008, 0x00000010,
    0x00000002, 0x00000400, 0x00400000, 0x00002000, 0x20000000, 0x40000000,
    0x00002000, 0x00800000};
    }

    const static UnicodeSet ca_Set{const_cast<UnicodeSet::run_t *>(__ca_Set_runs), 39, 0, const_cast<UnicodeSet::bitquad_t *>(__ca_Set_quads), 20, 0};

    /** Code Point Ranges for en
    [4170, 4170], [4b36, 4b36], [4b53, 4b53], [4b61, 4b61], [5940, 5940],
    [5cce, 5cce], [6069, 6069], [6441, 6441], [717e, 717e], [84bd, 84bd],
    [9950, 9950], [217ef, 217ef], [21d56, 21d56], [21dd0, 21dd0],
    [241ef, 241ef], [24af9, 24af9]**/


    namespace {
    const static UnicodeSet::run_t __en_Set_runs[] = {
    {Empty, 523}, {Mixed, 1}, {Empty, 77}, {Mixed, 3}, {Empty, 110},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 28}, {Mixed, 1},
    {Empty, 30}, {Mixed, 1}, {Empty, 104}, {Mixed, 1}, {Empty, 153},
    {Mixed, 1}, {Empty, 164}, {Mixed, 1}, {Empty, 3060}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 288},
    {Mixed, 1}, {Empty, 71}, {Mixed, 1}, {Empty, 30120}};
    const static UnicodeSet::bitquad_t  __en_Set_quads[] = {
    0x00010000, 0x00400000, 0x00080000, 0x00000002, 0x00000001, 0x00004000,
    0x00000200, 0x00000002, 0x40000000, 0x20000000, 0x00010000, 0x00008000,
    0x00400000, 0x00010000, 0x00008000, 0x02000000};
    }

    const static UnicodeSet en_Set{const_cast<UnicodeSet::run_t *>(__en_Set_runs), 29, 0, const_cast<UnicodeSet::bitquad_t *>(__en_Set_quads), 16, 0};

    /** Code Point Ranges for fa
    [41c5, 41c5], [48f9, 48f9], [4e4f, 4e4f], [4f10, 4f10], [57a1, 57a1],
    [59c2, 59c2], [62d4, 62d4], [64a5, 64a5], [6830, 6830], [6a43, 6a43],
    [6c4e, 6c4e], [6cb7, 6cb7], [6cd5, 6cd5], [6cdb, 6cdb], [73d0, 73d0],
    [743a, 743a], [75ba, 75ba], [767c, 767c], [7782, 7782], [781d, 781d],
    [7b4f, 7b4f], [7f70, 7f70], [8337, 8337], [855f, 855f], [85c5, 85c5],
    [8cb6, 8cb6], [91b1, 91b1], [95a5, 95a5], [9aee, 9aee], [207b5, 207b5],
    [20c8e, 20c8e], [241f0, 241f0], [248f9, 248f9], [24fd3, 24fd3],
    [253b0, 253b0], [25a71, 25a71], [26a91, 26a91], [27b0b, 27b0b],
    [28033, 28033], [282fa, 282fa]**/


    namespace {
    const static UnicodeSet::run_t __fa_Set_runs[] = {
    {Empty, 526}, {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 68}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 71}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 55},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 25},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 16}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 31}, {Mixed, 1},
    {Empty, 41}, {Mixed, 1}, {Empty, 2917}, {Mixed, 1}, {Empty, 38},
    {Mixed, 1}, {Empty, 426}, {Mixed, 1}, {Empty, 55}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 53},
    {Mixed, 1}, {Empty, 128}, {Mixed, 1}, {Empty, 131}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 29672}};
    const static UnicodeSet::bitquad_t  __fa_Set_quads[] = {
    0x00000020, 0x02000000, 0x00008000, 0x00010000, 0x00000002, 0x00000004,
    0x00100000, 0x00000020, 0x00010000, 0x00000008, 0x00004000, 0x00800000,
    0x08200000, 0x00010000, 0x04000000, 0x04000000, 0x10000000, 0x00000004,
    0x20000000, 0x00008000, 0x00010000, 0x00800000, 0x80000000, 0x00000020,
    0x00400000, 0x00020000, 0x00000020, 0x00004000, 0x00200000, 0x00004000,
    0x00010000, 0x02000000, 0x00080000, 0x00010000, 0x00020000, 0x00020000,
    0x00000800, 0x00080000, 0x04000000};
    }

    const static UnicodeSet fa_Set{const_cast<UnicodeSet::run_t *>(__fa_Set_runs), 77, 0, const_cast<UnicodeSet::bitquad_t *>(__fa_Set_quads), 39, 0};

    /** Code Point Ranges for rang
    [4274, 4274], [444b, 444b], [5134, 5134], [52f7, 52f7], [56b7, 56b7],
    [58e4, 58e4], [5b43, 5b43], [5fc0, 5fc0], [61f9, 61f9], [6518, 6518],
    [6b00, 6b00], [703c, 703c], [7219, 7219], [737d, 737d], [74e4, 74e4],
    [79b3, 79b3], [7a70, 7a70], [7e95, 7e95], [8618, 8618], [8830, 8830],
    [8b93, 8b93], [8e9f, 8e9f], [9472, 9472], [9b24, 9b24], [2243f, 2243f],
    [23a7d, 23a7d], [23c36, 23c36], [24151, 24151], [24b25, 24b25],
    [24c02, 24c02], [255dd, 255dd], [277c4, 277c4], [283db, 283db],
    [287da, 287da], [291b6, 291b6]**/


    namespace {
    const static UnicodeSet::run_t __rang_Set_runs[] = {
    {Empty, 531}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 102},
    {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 29}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 47}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 32},
    {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 16}, {Mixed, 1},
    {Empty, 26}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 46},
    {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 3143}, {Mixed, 1},
    {Empty, 177}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 78}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 77}, {Mixed, 1}, {Empty, 271}, {Mixed, 1}, {Empty, 95},
    {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 78}, {Mixed, 1},
    {Empty, 29554}};
    const static UnicodeSet::bitquad_t  __rang_Set_quads[] = {
    0x00100000, 0x00000800, 0x00100000, 0x00800000, 0x00800000, 0x00000010,
    0x00000008, 0x00000001, 0x02000000, 0x01000000, 0x00000001, 0x10000000,
    0x02000000, 0x20000000, 0x00000010, 0x00080000, 0x00010000, 0x00200000,
    0x01000000, 0x00010000, 0x00080000, 0x80000000, 0x00040000, 0x00000010,
    0x80000000, 0x20000000, 0x00400000, 0x00020000, 0x00000020, 0x00000004,
    0x20000000, 0x00000010, 0x08000000, 0x04000000, 0x00400000};
    }

    const static UnicodeSet rang_Set{const_cast<UnicodeSet::run_t *>(__rang_Set_runs), 71, 0, const_cast<UnicodeSet::bitquad_t *>(__rang_Set_quads), 35, 0};

    /** Code Point Ranges for tuan
    [429c, 429c], [471d, 471d], [474e, 474e], [4d4a, 4d4a], [4d4e, 4d4e],
    [526c, 526c], [5278, 5278], [56e2, 56e2], [5718, 5718], [587c, 587c],
    [58a5, 58a5], [5ae5, 5ae5], [5c08, 5c08], [5f56, 5f56], [6171, 6171],
    [63e3, 63e3], [6476, 6476], [6566, 6566], [69eb, 69eb], [6ab2, 6ab2],
    [6e4d, 6e4d], [6e6a, 6e6a], [6f19, 6f19], [7153, 7153], [757d, 757d],
    [7583, 7583], [75ea, 75ea], [78da, 78da], [7a0e, 7a0e], [7bff, 7bff],
    [7cf0, 7cf0], [84f4, 84f4], [890d, 890d], [8916, 8916], [8c92, 8c92],
    [93c4, 93c4], [9c44, 9c44], [9d89, 9d89], [9dd2, 9dd2], [9dfb, 9dfb],
    [21074, 21074], [228ce, 228ce], [22b9b, 22b9b], [23da3, 23da3],
    [27415, 27415], [274d8, 274d8], [27c04, 27c04], [27ce9, 27ce9],
    [27f62, 27f62], [28a92, 28a92], [290d8, 290d8], [2962f, 2962f],
    [29735, 29735], [29839, 29839], [2a20b, 2a20b], [2a3d6, 2a3d6]**/


    namespace {
    const static UnicodeSet::run_t __tuan_Set_runs[] = {
    {Empty, 532}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 40}, {Mixed, 1},
    {Empty, 35}, {Mixed, 2}, {Empty, 10}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 28}, {Mixed, 2}, {Empty, 4},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 32}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 63},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 57}, {Mixed, 1}, {Empty, 67}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2963}, {Mixed, 1},
    {Empty, 194}, {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 144},
    {Mixed, 1}, {Empty, 434}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 57}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 88}, {Mixed, 1}, {Empty, 49}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 1},
    {Empty, 78}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 29409}};
    const static UnicodeSet::bitquad_t  __tuan_Set_quads[] = {
    0x10000000, 0x20000000, 0x00004000, 0x00004400, 0x01001000, 0x00000004,
    0x01000000, 0x10000000, 0x00000020, 0x00000020, 0x00000100, 0x00400000,
    0x00020000, 0x00000008, 0x00400000, 0x00000040, 0x00000800, 0x00040000,
    0x00002000, 0x00000400, 0x02000000, 0x00080000, 0x20000000, 0x00000008,
    0x00000400, 0x04000000, 0x00004000, 0x80000000, 0x00010000, 0x00100000,
    0x00402000, 0x00040000, 0x00000010, 0x00000010, 0x00000200, 0x00040000,
    0x08000000, 0x00100000, 0x00004000, 0x08000000, 0x00000008, 0x00200000,
    0x01000000, 0x00000010, 0x00000200, 0x00000004, 0x00040000, 0x01000000,
    0x00008000, 0x00200000, 0x02000000, 0x00000800, 0x00400000};
    }

    const static UnicodeSet tuan_Set{const_cast<UnicodeSet::run_t *>(__tuan_Set_runs), 99, 0, const_cast<UnicodeSet::bitquad_t *>(__tuan_Set_quads), 53, 0};

    /** Code Point Ranges for mou
    [42f7, 42f7], [4359, 4359], [43ec, 43ec], [45cb, 45cb], [473c, 473c],
    [4c55, 4c55], [4ef6, 4ef6], [4f94, 4f94], [52ba, 52ba], [53b6, 53b6],
    [5463, 5463], [54de, 54de], [5825, 5825], [5a7a, 5a7a], [6048, 6048],
    [6544, 6544], [67d0, 67d0], [6859, 6859], [6bcb, 6bcb], [6d20, 6d20],
    [725f, 725f], [755d, 755d], [7738, 7738], [77b4, 77b4], [7e46, 7e46],
    [87f1, 87f1], [88a4, 88a4], [8b00, 8b00], [927e, 927e], [936a, 936a],
    [97aa, 97aa], [9d3e, 9d3e], [9eb0, 9eb0], [20031, 20031],
    [20968, 20968], [220f1, 220f1], [2272f, 2272f], [23aec, 23aec],
    [25186, 25186], [25ff5, 25ff5], [2628b, 2628b], [2628e, 2628e],
    [262e1, 262e1], [26b77, 26b77], [26cd1, 26cd1], [26e92, 26e92],
    [27384, 27384], [273bb, 273bb], [28d0d, 28d0d], [298ab, 298ab],
    [29da2, 29da2]**/


    namespace {
    const static UnicodeSet::run_t __mou_Set_runs[] = {
    {Empty, 535}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 10}, {Mixed, 1},
    {Empty, 40}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 5},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 26}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 76},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 18}, {Mixed, 1},
    {Empty, 58}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 2827}, {Mixed, 1}, {Empty, 73}, {Mixed, 1}, {Empty, 187},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 157}, {Mixed, 1},
    {Empty, 180}, {Mixed, 1}, {Empty, 114}, {Mixed, 1}, {Empty, 20},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 67}, {Mixed, 1},
    {Empty, 10}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 39},
    {Mixed, 2}, {Empty, 202}, {Mixed, 1}, {Empty, 92}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 29458}};
    const static UnicodeSet::bitquad_t  __mou_Set_quads[] = {
    0x00800000, 0x02000000, 0x00001000, 0x00000800, 0x10000000, 0x00200000,
    0x00400000, 0x00100000, 0x04000000, 0x00400000, 0x00000008, 0x40000000,
    0x00000020, 0x04000000, 0x00000100, 0x00000010, 0x00010000, 0x02000000,
    0x00000800, 0x00000001, 0x80000000, 0x20000000, 0x01000000, 0x00100000,
    0x00000040, 0x00020000, 0x00000010, 0x00000001, 0x40000000, 0x00000400,
    0x00000400, 0x40000000, 0x00010000, 0x00020000, 0x00000100, 0x00020000,
    0x00008000, 0x00001000, 0x00000040, 0x00200000, 0x00004800, 0x00000002,
    0x00800000, 0x00020000, 0x00040000, 0x00000010, 0x08000000, 0x00002000,
    0x00000800, 0x00000004};
    }

    const static UnicodeSet mou_Set{const_cast<UnicodeSet::run_t *>(__mou_Set_runs), 99, 0, const_cast<UnicodeSet::bitquad_t *>(__mou_Set_quads), 50, 0};

    /** Code Point Ranges for nin
    [42fb, 42fb], [46d8, 46d8], [56dc, 56dc], [6041, 6041], [60a8, 60a8],
    [62f0, 62f0], [20f5d, 20f5d]**/


    namespace {
    const static UnicodeSet::run_t __nin_Set_runs[] = {
    {Empty, 535}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 127},
    {Mixed, 1}, {Empty, 75}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 3426}, {Mixed, 1}, {Empty, 30597}};
    const static UnicodeSet::bitquad_t  __nin_Set_quads[] = {
    0x08000000, 0x01000000, 0x10000000, 0x00000002, 0x00000100, 0x00010000,
    0x20000000};
    }

    const static UnicodeSet nin_Set{const_cast<UnicodeSet::run_t *>(__nin_Set_runs), 15, 0, const_cast<UnicodeSet::bitquad_t *>(__nin_Set_quads), 7, 0};

    /** Code Point Ranges for guan
    [432f, 432f], [45c6, 45c6], [45f0, 45f0], [463e, 463e], [466e, 466e],
    [46aa, 46aa], [493d, 493d], [498e, 498e], [4a6a, 4a6a], [4c98, 4c98],
    [4e31, 4e32], [500c, 500c], [51a0, 51a0], [535d, 535d], [5a60, 5a60],
    [5b98, 5b98], [5e79, 5e79], [60b9, 60b9], [6163, 6163], [61fd, 61fd],
    [645c, 645c], [65a1, 65a1], [679c, 679c], [68fa, 68fa], [6a0c, 6a0c],
    [6aec, 6aec], [6b0a, 6b0a], [6bcc, 6bcc], [6dab, 6dab], [6dc9, 6dc9],
    [6dea, 6dea], [704c, 704c], [721f, 721f], [742f, 742f], [74d8, 74d8],
    [75ef, 75ef], [761d, 761d], [76e5, 76e5], [77d4, 77d4], [77dc, 77dc],
    [797c, 797c], [7aa4, 7aa4], [7b66, 7b66], [7ba1, 7ba1], [7db8, 7db8],
    [7f50, 7f50], [839e, 839e], [83c5, 83c5], [8484, 8484], [89c0, 89c0],
    [8cab, 8cab], [8f28, 8f28], [9066, 9066], [9327, 9327], [93c6, 93c6],
    [9475, 9475], [959e, 959e], [95dc, 95dc], [96da, 96da], [9928, 9928],
    [9c25, 9c25], [9c5e, 9c5e], [9c79, 9c79], [9d4d, 9d4d], [9e1b, 9e1b],
    [20b06, 20b06], [20d28, 20d28], [2116d, 2116d], [21812, 21812],
    [21b77, 21b77], [221c7, 221c7], [22242, 22242], [22e84, 22e84],
    [23965, 23965], [23a54, 23a54], [23b02, 23b02], [24bb3, 24bb3],
    [24f10, 24f10], [25212, 25212], [25240, 25240], [252ab, 252ab],
    [25345, 25345], [25385, 25385], [25704, 25704], [25dec, 25dec],
    [25fd1, 25fd1], [266e4, 266e4], [26e8a, 26e8a], [28751, 28751],
    [28ce1, 28ce1], [28d0a, 28d0a], [28d44, 28d44], [28dc0, 28dc0],
    [29592, 29592], [2a238, 2a238]**/


    namespace {
    const static UnicodeSet::run_t __guan_Set_runs[] = {
    {Empty, 537}, {Mixed, 1}, {Empty, 20}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 19},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 56},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 17}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 14},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 6},
    {Mixed, 2}, {Empty, 5}, {Mixed, 1}, {Empty, 14}, {Mixed, 3},
    {Empty, 18}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 2}, {Empty, 6},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 41}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 21}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 23}, {Mixed, 3},
    {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2919},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 33}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 50},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 97}, {Mixed, 1},
    {Empty, 86}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 132}, {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 23},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 54}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 56},
    {Mixed, 1}, {Empty, 60}, {Mixed, 1}, {Empty, 197}, {Mixed, 1},
    {Empty, 44}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 100}, {Mixed, 1}, {Empty, 29422}};
    const static UnicodeSet::bitquad_t  __guan_Set_quads[] = {
    0x00008000, 0x00000040, 0x00010000, 0x40000000, 0x00004000, 0x00000400,
    0x20000000, 0x00004000, 0x00000400, 0x01000000, 0x00060000, 0x00001000,
    0x00000001, 0x20000000, 0x00000001, 0x01000000, 0x02000000, 0x02000000,
    0x00000008, 0x20000000, 0x10000000, 0x00000002, 0x10000000, 0x04000000,
    0x00001000, 0x00001000, 0x00000400, 0x00001000, 0x00000800, 0x00000200,
    0x00000400, 0x00001000, 0x80000000, 0x00008000, 0x01000000, 0x00008000,
    0x20000000, 0x00000020, 0x10100000, 0x10000000, 0x00000010, 0x00000040,
    0x00000002, 0x01000000, 0x00010000, 0x40000000, 0x00000020, 0x00000010,
    0x00000001, 0x00000800, 0x00000100, 0x00000040, 0x00000080, 0x00000040,
    0x00200000, 0x40000000, 0x10000000, 0x04000000, 0x00000100, 0x00000020,
    0x40000000, 0x02000000, 0x00002000, 0x08000000, 0x00000040, 0x00000100,
    0x00002000, 0x00040000, 0x00800000, 0x00000080, 0x00000004, 0x00000010,
    0x00000020, 0x00100000, 0x00000004, 0x00080000, 0x00010000, 0x00040000,
    0x00000001, 0x00000800, 0x00000020, 0x00000020, 0x00000010, 0x00001000,
    0x00020000, 0x00000010, 0x00000400, 0x00020000, 0x00000002, 0x00000400,
    0x00000010, 0x00000001, 0x00040000, 0x01000000};
    }

    const static UnicodeSet guan_Set{const_cast<UnicodeSet::run_t *>(__guan_Set_runs), 173, 0, const_cast<UnicodeSet::bitquad_t *>(__guan_Set_quads), 94, 0};

    /** Code Point Ranges for cun
    [434e, 434e], [47ad, 47ad], [4f9f, 4f9f], [520c, 520c], [540b, 540b],
    [58ab, 58ab], [5b58, 5b58], [5bf8, 5bf8], [5fd6, 5fd6], [62f5, 62f5],
    [6751, 6751], [6d0a, 6d0a], [6d5a, 6d5a], [6f8a, 6f8a], [76b4, 76b4],
    [7af4, 7af4], [8e06, 8e06], [8e72, 8e72], [90a8, 90a8], [24fc4, 24fc4],
    [27689, 27689], [27f7e, 27f7e], [2801b, 2801b], [2866f, 2866f],
    [28672, 28672], [286b2, 286b2]**/


    namespace {
    const static UnicodeSet::run_t __cun_Set_runs[] = {
    {Empty, 538}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 62},
    {Mixed, 1}, {Empty, 19}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 24}, {Mixed, 1},
    {Empty, 34}, {Mixed, 1}, {Empty, 45}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 56}, {Mixed, 1},
    {Empty, 33}, {Mixed, 1}, {Empty, 152}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 3576}, {Mixed, 1},
    {Empty, 309}, {Mixed, 1}, {Empty, 70}, {Mixed, 1}, {Empty, 4},
    {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 29642}};
    const static UnicodeSet::bitquad_t  __cun_Set_quads[] = {
    0x00004000, 0x00002000, 0x80000000, 0x00001000, 0x00000800, 0x00000800,
    0x01000000, 0x01000000, 0x00400000, 0x00200000, 0x00020000, 0x00000400,
    0x04000000, 0x00000400, 0x00100000, 0x00100000, 0x00000040, 0x00040000,
    0x00000100, 0x00000010, 0x00000200, 0x40000000, 0x08000000, 0x00048000,
    0x00040000};
    }

    const static UnicodeSet cun_Set{const_cast<UnicodeSet::run_t *>(__cun_Set_runs), 51, 0, const_cast<UnicodeSet::bitquad_t *>(__cun_Set_quads), 25, 0};

    /** Code Point Ranges for ruo
    [441e, 441e], [46a5, 46a5], [504c, 504c], [53d2, 53d2], [5a7c, 5a7c],
    [5f31, 5f31], [60f9, 60f9], [633c, 633c], [637c, 637c], [648b, 648b],
    [6949, 6949], [6e03, 6e03], [6eba, 6eba], [712b, 712b], [7207, 7207],
    [7bac, 7bac], [82ae, 82ae], [82e5, 82e5], [84bb, 84bb], [9100, 9100],
    [9c19, 9c19], [9c2f, 9c2f], [9db8, 9db8], [2272a, 2272a],
    [2437d, 2437d], [248fc, 248fc], [26a78, 26a78], [270ea, 270ea],
    [2801d, 2801d], [28d1a, 28d1a]**/


    namespace {
    const static UnicodeSet::run_t __ruo_Set_runs[] = {
    {Empty, 544}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 76},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 52}, {Mixed, 1},
    {Empty, 37}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 37},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 76},
    {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 98}, {Mixed, 1}, {Empty, 87},
    {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Empty, 3147}, {Mixed, 1},
    {Empty, 225}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 267},
    {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 120}, {Mixed, 1},
    {Empty, 103}, {Mixed, 1}, {Empty, 29591}};
    const static UnicodeSet::bitquad_t  __ruo_Set_quads[] = {
    0x40000000, 0x00000020, 0x00001000, 0x00040000, 0x10000000, 0x00020000,
    0x02000000, 0x10000000, 0x10000000, 0x00000800, 0x00000200, 0x00000008,
    0x04000000, 0x00000800, 0x00000080, 0x00001000, 0x00004000, 0x00000020,
    0x08000000, 0x00000001, 0x02000000, 0x00008000, 0x01000000, 0x00000400,
    0x20000000, 0x10000000, 0x01000000, 0x00000400, 0x20000000, 0x04000000};
    }

    const static UnicodeSet ruo_Set{const_cast<UnicodeSet::run_t *>(__ruo_Set_runs), 59, 0, const_cast<UnicodeSet::bitquad_t *>(__ruo_Set_quads), 30, 0};

    /** Code Point Ranges for tie
    [445c, 445c], [4a5e, 4a5e], [4d34, 4d34], [4d7f, 4d7f], [50e3, 50e3],
    [5360, 5360], [546b, 546b], [5e16, 5e16], [6017, 6017], [60f5, 60f5],
    [8051, 8051], [841c, 841c], [86c8, 86c8], [8776, 8776], [8a40, 8a40],
    [8cbc, 8cbc], [8dd5, 8dd5], [9244, 9244], [9246, 9246], [9295, 9295],
    [92e8, 92e8], [9435, 9435], [992e, 992e], [9a56, 9a56], [9d29, 9d29],
    [22d8b, 22d8b], [24753, 24753], [26752, 26752], [269e2, 269e2],
    [269e4, 269e4]**/


    namespace {
    const static UnicodeSet::run_t __tie_Set_runs[] = {
    {Empty, 546}, {Mixed, 1}, {Empty, 47}, {Mixed, 1}, {Empty, 22},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 76},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 250}, {Mixed, 1}, {Empty, 29}, {Mixed, 1}, {Empty, 21},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 22}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 35},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
    {Empty, 22}, {Mixed, 1}, {Empty, 3202}, {Mixed, 1}, {Empty, 205},
    {Mixed, 1}, {Empty, 255}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 29872}};
    const static UnicodeSet::bitquad_t  __tie_Set_quads[] = {
    0x10000000, 0x40000000, 0x00100000, 0x80000000, 0x00000008, 0x00000001,
    0x00000800, 0x00400000, 0x00800000, 0x00200000, 0x00020000, 0x10000000,
    0x00000100, 0x00400000, 0x00000001, 0x10000000, 0x00200000, 0x00000050,
    0x00200000, 0x00000100, 0x00200000, 0x00004000, 0x00400000, 0x00000200,
    0x00000800, 0x00080000, 0x00040000, 0x00000014};
    }

    const static UnicodeSet tie_Set{const_cast<UnicodeSet::run_t *>(__tie_Set_runs), 57, 0, const_cast<UnicodeSet::bitquad_t *>(__tie_Set_quads), 28, 0};

    /** Code Point Ranges for teng
    [4485, 4485], [4bb4, 4bb4], [50dc, 50dc], [512f, 512f], [5e50, 5e50],
    [6ed5, 6ed5], [6f1b, 6f1b], [75bc, 75bc], [75cb, 75cb], [7c50, 7c50],
    [7e22, 7e22], [81af, 81af], [85e4, 85e4], [87a3, 87a3], [8b04, 8b04],
    [9086, 9086], [972f, 972f], [9a30, 9a30], [9c27, 9c27], [9f1f, 9f1f],
    [226ba, 226ba], [227f1, 227f1], [22942, 22942], [23f68, 23f68],
    [240f6, 240f6], [24cd8, 24cd8], [24e64, 24e64], [2524b, 2524b],
    [2686a, 2686a], [26a6b, 26a6b], [26a9d, 26a9d], [26ac0, 26ac0],
    [2713c, 2713c], [2721c, 2721c], [27b54, 27b54], [280d7, 280d7],
    [28107, 28107], [29a7b, 29a7b], [29d1d, 29d1d], [2a4bf, 2a4bf],
    [2a536, 2a536]**/


    namespace {
    const static UnicodeSet::run_t __teng_Set_runs[] = {
    {Empty, 548}, {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 40},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 104}, {Mixed, 1},
    {Empty, 131}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 52},
    {Mixed, 2}, {Empty, 51}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 27}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 13},
    {Mixed, 1}, {Empty, 26}, {Mixed, 1}, {Empty, 43}, {Mixed, 1},
    {Empty, 52}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 15},
    {Mixed, 1}, {Empty, 22}, {Mixed, 1}, {Empty, 3132}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 176},
    {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 94}, {Mixed, 1},
    {Empty, 12}, {Mixed, 1}, {Empty, 30}, {Mixed, 1}, {Empty, 176},
    {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
    {Empty, 50}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 73},
    {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 202}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 60},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 29398}};
    const static UnicodeSet::bitquad_t  __teng_Set_quads[] = {
    0x00000020, 0x00100000, 0x10000000, 0x00008000, 0x00010000, 0x00200000,
    0x08000000, 0x10000000, 0x00000800, 0x00010000, 0x00000004, 0x00008000,
    0x00000010, 0x00000008, 0x00000010, 0x00000040, 0x00008000, 0x00010000,
    0x00000080, 0x80000000, 0x04000000, 0x00020000, 0x00000004, 0x00000100,
    0x00400000, 0x01000000, 0x00000010, 0x00000800, 0x00000400, 0x00000800,
    0x20000000, 0x00000001, 0x10000000, 0x10000000, 0x00100000, 0x00800000,
    0x00000080, 0x08000000, 0x20000000, 0x80000000, 0x00400000};
    }

    const static UnicodeSet teng_Set{const_cast<UnicodeSet::run_t *>(__teng_Set_runs), 79, 0, const_cast<UnicodeSet::bitquad_t *>(__teng_Set_quads), 41, 0};

    /** Code Point Ranges for seng
    [448f, 448f], [50e7, 50e7], [9b19, 9b19], [21b19, 21b19]**/


    namespace {
    const static UnicodeSet::run_t __seng_Set_runs[] = {
    {Empty, 548}, {Mixed, 1}, {Empty, 98}, {Mixed, 1}, {Empty, 592},
    {Mixed, 1}, {Empty, 3071}, {Mixed, 1}, {Empty, 30503}};
    const static UnicodeSet::bitquad_t  __seng_Set_quads[] = {
    0x00008000, 0x00000080, 0x02000000, 0x02000000};
    }

    const static UnicodeSet seng_Set{const_cast<UnicodeSet::run_t *>(__seng_Set_runs), 9, 0, const_cast<UnicodeSet::bitquad_t *>(__seng_Set_quads), 4, 0};

    /** Code Point Ranges for ri
    [44a4, 44a4], [65e5, 65e5], [6c1c, 6c1c], [91f0, 91f0], [9224, 9224],
    [99b9, 99b9], [207c5, 207c5], [211b8, 211b8], [2120e, 2120e],
    [2126d, 2126d], [2474d, 2474d], [26a19, 26a19]**/


    namespace {
    const static UnicodeSet::run_t __ri_Set_runs[] = {
    {Empty, 549}, {Mixed, 1}, {Empty, 265}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 302}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 59}, {Mixed, 1}, {Empty, 2928}, {Mixed, 1}, {Empty, 78},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 422}, {Mixed, 1}, {Empty, 277}, {Mixed, 1}, {Empty, 29871}};
    const static UnicodeSet::bitquad_t  __ri_Set_quads[] = {
    0x00000010, 0x00000020, 0x10000000, 0x00010000, 0x00000010, 0x02000000,
    0x00000020, 0x01000000, 0x00004000, 0x00002000, 0x00002000, 0x02000000};
    }

    const static UnicodeSet ri_Set{const_cast<UnicodeSet::run_t *>(__ri_Set_runs), 25, 0, const_cast<UnicodeSet::bitquad_t *>(__ri_Set_quads), 12, 0};

    /** Code Point Ranges for zun
    [453f, 453f], [50ce, 50ce], [50d4, 50d4], [5642, 5642], [58ab, 58ab],
    [5960, 5960], [5c0a, 5c0a], [5d9f, 5d9f], [62f5, 62f5], [6358, 6358],
    [637d, 637d], [6499, 6499], [682b, 682b], [6a3d, 6a3d], [7033, 7033],
    [7e5c, 7e5c], [7f47, 7f47], [88b8, 88b8], [8de7, 8de7], [8e06, 8e06],
    [8e72, 8e72], [9075, 9075], [928c, 928c], [940f, 940f], [9c52, 9c52],
    [9df7, 9df7], [207c3, 207c3], [20c5c, 20c5c], [24b90, 24b90],
    [252ad, 252ad], [25798, 25798], [2588e, 2588e], [26890, 26890],
    [26a06, 26a06], [26a9a, 26a9a], [29bc4, 29bc4]**/


    namespace {
    const static UnicodeSet::run_t __zun_Set_runs[] = {
    {Empty, 553}, {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 43},
    {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 20}, {Mixed, 1}, {Empty, 11}, {Mixed, 1}, {Empty, 42},
    {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 8}, {Mixed, 1}, {Empty, 28},
    {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 47}, {Mixed, 1},
    {Empty, 112}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 74},
    {Mixed, 1}, {Empty, 41}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
    {Empty, 15}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
    {Empty, 2894}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 505},
    {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Empty, 7}, {Mixed, 1}, {Empty, 127}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 393}, {Mixed, 1},
    {Empty, 29473}};
    const static UnicodeSet::bitquad_t  __zun_Set_quads[] = {
    0x80000000, 0x00104000, 0x00000004, 0x00000800, 0x00000001, 0x00000400,
    0x80000000, 0x00200000, 0x01000000, 0x20000000, 0x02000000, 0x00000800,
    0x20000000, 0x00080000, 0x10000000, 0x00000080, 0x01000000, 0x00000080,
    0x00000040, 0x00040000, 0x00200000, 0x00001000, 0x00008000, 0x00040000,
    0x00800000, 0x00000008, 0x10000000, 0x00010000, 0x00002000, 0x01000000,
    0x00004000, 0x00010000, 0x00000040, 0x04000000, 0x00000010};
    }

    const static UnicodeSet zun_Set{const_cast<UnicodeSet::run_t *>(__zun_Set_runs), 67, 0, const_cast<UnicodeSet::bitquad_t *>(__zun_Set_quads), 35, 0};

    /** Code Point Ranges for niang
    [4586, 4586], [5a18, 5a18], [5b43, 5b43], [91c0, 91c0], [25f6c, 25f6c],
    [2a4c3, 2a4c3]**/


    namespace {
    const static UnicodeSet::run_t __niang_Set_runs[] = {
    {Empty, 556}, {Mixed, 1}, {Empty, 163}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 435}, {Mixed, 1}, {Empty, 3692}, {Mixed, 1},
    {Empty, 554}, {Mixed, 1}, {Empty, 29401}};
    const static UnicodeSet::bitquad_t  __niang_Set_quads[] = {
    0x00000040, 0x01000000, 0x00000008, 0x00000001, 0x00001000, 0x00000008};
    }

    const static UnicodeSet niang_Set{const_cast<UnicodeSet::run_t *>(__niang_Set_runs), 13, 0, const_cast<UnicodeSet::bitquad_t *>(__niang_Set_quads), 6, 0};

    /** Code Point Ranges for nuan
    [4647, 4647], [597b, 597b], [6696, 6696], [6e1c, 6e1c], [6e6a, 6e6a],
    [6fe1, 6fe1], [7156, 7157], [81d1, 81d1], [992a, 992a], [2a2d0, 2a2d0]**/


    namespace {
    const static UnicodeSet::run_t __nuan_Set_runs[] = {
    {Empty, 562}, {Mixed, 1}, {Empty, 152}, {Mixed, 1}, {Empty, 104},
    {Mixed, 1}, {Empty, 59}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 11}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 131},
    {Mixed, 1}, {Empty, 186}, {Mixed, 1}, {Empty, 4172}, {Mixed, 1},
    {Empty, 29417}};
    const static UnicodeSet::bitquad_t  __nuan_Set_quads[] = {
    0x00000080, 0x08000000, 0x00400000, 0x10000000, 0x00000400, 0x00000002,
    0x00c00000, 0x00020000, 0x00000400, 0x00010000};
    }

    const static UnicodeSet nuan_Set{const_cast<UnicodeSet::run_t *>(__nuan_Set_runs), 21, 0, const_cast<UnicodeSet::bitquad_t *>(__nuan_Set_quads), 10, 0};

    /** Code Point Ranges for zhuang
    [4692, 4692], [50ee, 50ee], [58ef, 58ef], [5958, 5958], [599d, 599d],
    [5e62, 5e62], [5e84, 5e84], [61a7, 61a7], [6207, 6207], [649e, 649e],
    [6889, 6889], [6a01, 6a01], [6e77, 6e77], [6f34, 6f34], [710b, 710b],
    [72c0, 72c0], [735e, 735e], [7ca7, 7ca7], [825f, 825f], [838a, 838a],
    [88dd, 88dd], [8d1b, 8d1b], [20334, 20334], [22673, 22673],
    [22924, 22924], [22985, 22985], [2379d, 2379d], [23d23, 23d23],
    [23d8d, 23d8d], [23edb, 23edb], [2456f, 2456f], [24632, 24632],
    [24d9c, 24d9c], [2601c, 2601c], [2668f, 2668f], [29143, 29143],
    [29bb1, 29bb1], [29bf2, 29bf2], [2a048, 2a048], [2a13b, 2a13b],
    [2a156, 2a156]**/


    namespace {
    const static UnicodeSet::run_t __zhuang_Set_runs[] = {
    {Empty, 564}, {Mixed, 1}, {Empty, 82}, {Mixed, 1}, {Empty, 63},
    {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 38},
    {Mixed, 2}, {Empty, 24}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
    {Empty, 19}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 11},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 14}, {Mixed, 1}, {Empty, 13}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 44}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 41}, {Mixed, 1}, {Empty, 33},
    {Mixed, 1}, {Empty, 2992}, {Mixed, 1}, {Empty, 281}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 111},
    {Mixed, 1}, {Empty, 44}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 9},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 58}, {Mixed, 1}, {Empty, 147}, {Mixed, 1}, {Empty, 51},
    {Mixed, 1}, {Empty, 341}, {Mixed, 1}, {Empty, 82}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
    {Empty, 29429}};
    const static UnicodeSet::bitquad_t  __zhuang_Set_quads[] = {
    0x00040000, 0x00004000, 0x00008000, 0x01000000, 0x20000000, 0x00000004,
    0x00000010, 0x00000080, 0x00000080, 0x40000000, 0x00000200, 0x00000002,
    0x00800000, 0x00100000, 0x00000800, 0x00000001, 0x40000000, 0x00000080,
    0x80000000, 0x00000400, 0x20000000, 0x08000000, 0x00100000, 0x00080000,
    0x00000010, 0x00000020, 0x20000000, 0x00000008, 0x00002000, 0x08000000,
    0x00008000, 0x00040000, 0x10000000, 0x10000000, 0x00008000, 0x00000008,
    0x00020000, 0x00040000, 0x00000100, 0x08000000, 0x00400000};
    }

    const static UnicodeSet zhuang_Set{const_cast<UnicodeSet::run_t *>(__zhuang_Set_runs), 79, 0, const_cast<UnicodeSet::bitquad_t *>(__zhuang_Set_quads), 41, 0};

    /** Code Point Ranges for shang
    [47eb, 47eb], [4b15, 4b15], [4d70, 4d70], [4d7c, 4d7c], [4e0a, 4e0a],
    [50b7, 50b7], [5546, 5546], [57a7, 57a7], [57eb, 57eb], [5834, 5834],
    [5872, 5872], [5892, 5892], [5c1a, 5c1a], [6066, 6066], [6113, 6113],
    [616f, 616f], [6244, 6244], [664c, 664c], [66cf, 66cf], [6ba4, 6ba4],
    [6e6f, 6e6f], [6ef3, 6ef3], [6f21, 6f21], [71b5, 71b5], [7993, 7993],
    [7dd4, 7dd4], [850f, 850f], [87aa, 87aa], [8830, 8830], [89f4, 89f4],
    [8b2a, 8b2a], [8cde, 8cde], [8e3c, 8e3c], [945c, 945c], [979d, 979d],
    [9b3a, 9b3a], [20f2c, 20f2c], [24398, 24398], [2451a, 2451a],
    [24d7c, 24d7c], [253eb, 253eb], [2786e, 2786e], [27d9c, 27d9c],
    [288a9, 288a9], [28dbc, 28dbc], [29783, 29783], [297a7, 297a7],
    [2a132, 2a132]**/


    namespace {
    const static UnicodeSet::run_t __shang_Set_runs[] = {
    {Empty, 575}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 18},
    {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 20}, {Mixed, 1},
    {Empty, 36}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 27},
    {Mixed, 1}, {Empty, 34}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 31}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 21}, {Mixed, 1},
    {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 19}, {Mixed, 1},
    {Empty, 62}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 57},
    {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
    {Empty, 13}, {Mixed, 1}, {Empty, 9}, {Mixed, 1}, {Empty, 12},
    {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 48}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 28}, {Mixed, 1}, {Empty, 2975},
    {Mixed, 1}, {Empty, 418}, {Mixed, 1}, {Empty, 11}, {Mixed, 1},
    {Empty, 66}, {Mixed, 1}, {Empty, 51}, {Mixed, 1}, {Empty, 291},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 88}, {Mixed, 1},
    {Empty, 39}, {Mixed, 1}, {Empty, 78}, {Mixed, 2}, {Empty, 75},
    {Mixed, 1}, {Empty, 29430}};
    const static UnicodeSet::bitquad_t  __shang_Set_quads[] = {
    0x00000800, 0x00200000, 0x10010000, 0x00000400, 0x00800000, 0x00000040,
    0x00000080, 0x00000800, 0x00100000, 0x00040000, 0x00040000, 0x04000000,
    0x00000040, 0x00080000, 0x00008000, 0x00000010, 0x00001000, 0x00008000,
    0x00000010, 0x00008000, 0x00080000, 0x00000002, 0x00200000, 0x00080000,
    0x00100000, 0x00008000, 0x00000400, 0x00010000, 0x00100000, 0x00000400,
    0x40000000, 0x10000000, 0x10000000, 0x20000000, 0x04000000, 0x00001000,
    0x01000000, 0x04000000, 0x10000000, 0x00000800, 0x00004000, 0x10000000,
    0x00000200, 0x10000000, 0x00000008, 0x00000080, 0x00040000};
    }

    const static UnicodeSet shang_Set{const_cast<UnicodeSet::run_t *>(__shang_Set_runs), 91, 0, const_cast<UnicodeSet::bitquad_t *>(__shang_Set_quads), 47, 0};

    /** Code Point Ranges for wai
    [483f, 483f], [4d1c, 4d1c], [4d90, 4d90], [54bc, 54bc], [558e, 558e],
    [5916, 5916], [592d, 592d], [5d34, 5d34], [6b6a, 6b6a], [7024, 7024],
    [7af5, 7af5], [9861, 9861], [20a03, 20a03], [20c3b, 20c3b],
    [22c49, 22c49], [247f7, 247f7], [2492b, 2492b], [24df9, 24df9],
    [2660d, 2660d], [28215, 28215], [28d5e, 28d5e], [29500, 29500],
    [29555, 29555], [29c2c, 29c2c], [2a26d, 2a26d], [2a477, 2a477]**/


    namespace {
    const static UnicodeSet::run_t __wai_Set_runs[] = {
    {Empty, 577}, {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 56}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
    {Empty, 27}, {Mixed, 2}, {Empty, 31}, {Mixed, 1}, {Empty, 113},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 85}, {Mixed, 1},
    {Empty, 235}, {Mixed, 1}, {Empty, 2956}, {Mixed, 1}, {Empty, 16},
    {Mixed, 1}, {Empty, 256}, {Mixed, 1}, {Empty, 220}, {Mixed, 1},
    {Empty, 9}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 192},
    {Mixed, 1}, {Empty, 223}, {Mixed, 1}, {Empty, 89}, {Mixed, 1},
    {Empty, 61}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 49}, {Mixed, 1}, {Empty, 15}, {Mixed, 1},
    {Empty, 29404}};
    const static UnicodeSet::bitquad_t  __wai_Set_quads[] = {
    0x80000000, 0x10000000, 0x00010000, 0x10000000, 0x00004000, 0x00400000,
    0x00002000, 0x00100000, 0x00000400, 0x00000010, 0x00200000, 0x00000002,
    0x00000008, 0x08000000, 0x00000200, 0x00800000, 0x00000800, 0x02000000,
    0x00002000, 0x00200000, 0x40000000, 0x00000001, 0x00200000, 0x00001000,
    0x00002000, 0x00800000};
    }

    const static UnicodeSet wai_Set{const_cast<UnicodeSet::run_t *>(__wai_Set_runs), 51, 0, const_cast<UnicodeSet::bitquad_t *>(__wai_Set_quads), 26, 0};

    /** Code Point Ranges for sang
    [4866, 4866], [55aa, 55aa], [55d3, 55d3], [6421, 6421], [6851, 6851],
    [78c9, 78c9], [7e95, 7e95], [892c, 892c], [939f, 939f], [9859, 9859],
    [2154f, 2154f], [2180f, 2180f], [23255, 23255], [2329d, 2329d],
    [23799, 23799], [24e2f, 24e2f], [2552b, 2552b], [26147, 26147],
    [267c4, 267c4], [27368, 27368], [28886, 28886], [29437, 29437],
    [2998c, 2998c], [29e9e, 29e9e], [2a52c, 2a52c]**/


    namespace {
    const static UnicodeSet::run_t __sang_Set_runs[] = {
    {Empty, 579}, {Mixed, 1}, {Empty, 105}, {Mixed, 2}, {Empty, 114},
    {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 131}, {Mixed, 1},
    {Empty, 45}, {Mixed, 1}, {Empty, 84}, {Mixed, 1}, {Empty, 82},
    {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 3047}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 209}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 39}, {Mixed, 1}, {Empty, 180}, {Mixed, 1},
    {Empty, 55}, {Mixed, 1}, {Empty, 96}, {Mixed, 1}, {Empty, 51},
    {Mixed, 1}, {Empty, 92}, {Mixed, 1}, {Empty, 168}, {Mixed, 1},
    {Empty, 92}, {Mixed, 1}, {Empty, 42}, {Mixed, 1}, {Empty, 39},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 29398}};
    const static UnicodeSet::bitquad_t  __sang_Set_quads[] = {
    0x00000040, 0x00000400, 0x00080000, 0x00000002, 0x00020000, 0x00000200,
    0x00200000, 0x00001000, 0x80000000, 0x02000000, 0x00008000, 0x00008000,
    0x00200000, 0x20000000, 0x02000000, 0x00008000, 0x00000800, 0x00000080,
    0x00000010, 0x00000100, 0x00000040, 0x00800000, 0x00001000, 0x40000000,
    0x00001000};
    }

    const static UnicodeSet sang_Set{const_cast<UnicodeSet::run_t *>(__sang_Set_runs), 49, 0, const_cast<UnicodeSet::bitquad_t *>(__sang_Set_quads), 25, 0};

    /** Code Point Ranges for shuan
    [49e0, 49e0], [5c08, 5c08], [62f4, 62f4], [6813, 6813], [69eb, 69eb],
    [6c55, 6c55], [6dae, 6dae], [8168, 8168], [8e39, 8e39], [9582, 9582],
    [21b50, 21b50], [22a60, 22a60], [22b9b, 22b9b], [2352b, 2352b],
    [23838, 23838], [24172, 24172], [26046, 26046], [2674f, 2674f],
    [26eb2, 26eb2], [28114, 28114], [283c9, 283c9]**/


    namespace {
    const static UnicodeSet::run_t __shuan_Set_runs[] = {
    {Empty, 591}, {Mixed, 1}, {Empty, 144}, {Mixed, 1}, {Empty, 54},
    {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 18}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 157},
    {Mixed, 1}, {Empty, 101}, {Mixed, 1}, {Empty, 58}, {Mixed, 1},
    {Empty, 3117}, {Mixed, 1}, {Empty, 120}, {Mixed, 1}, {Empty, 8},
    {Mixed, 1}, {Empty, 76}, {Mixed, 1}, {Empty, 23}, {Mixed, 1},
    {Empty, 73}, {Mixed, 1}, {Empty, 246}, {Mixed, 1}, {Empty, 55},
    {Mixed, 1}, {Empty, 58}, {Mixed, 1}, {Empty, 146}, {Mixed, 1},
    {Empty, 21}, {Mixed, 1}, {Empty, 29665}};
    const static UnicodeSet::bitquad_t  __shuan_Set_quads[] = {
    0x00000001, 0x00000100, 0x00100000, 0x00080000, 0x00000800, 0x00200000,
    0x00004000, 0x00000100, 0x02000000, 0x00000004, 0x00010000, 0x00000001,
    0x08000000, 0x00000800, 0x01000000, 0x00040000, 0x00000040, 0x00008000,
    0x00040000, 0x00100000, 0x00000200};
    }

    const static UnicodeSet shuan_Set{const_cast<UnicodeSet::run_t *>(__shuan_Set_runs), 43, 0, const_cast<UnicodeSet::bitquad_t *>(__shuan_Set_quads), 21, 0};

    /** Code Point Ranges for fou
    [4b0f, 4b0f], [4e0d, 4e0d], [5426, 5426], [57ba, 57ba], [599a, 599a],
    [6b95, 6b95], [70b0, 70b0], [7d11, 7d11], [7f36, 7f36], [7f39, 7f39],
    [7f3b, 7f3b], [82a3, 82a3], [8843, 8843], [96ec, 96ec], [9d00, 9d00],
    [2170a, 2170a], [242bb, 242bb], [24f66, 24f66], [27248, 27248],
    [272a6, 272a6], [286d4, 286d4], [29086, 29086]**/


    namespace {
    const static UnicodeSet::run_t __fou_Set_runs[] = {
    {Empty, 600}, {Mixed, 1}, {Empty, 23}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 27}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 143}, {Mixed, 1}, {Empty, 40}, {Mixed, 1}, {Empty, 98},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 44}, {Mixed, 1}, {Empty, 116}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 3023}, {Mixed, 1}, {Empty, 348}, {Mixed, 1},
    {Empty, 101}, {Mixed, 1}, {Empty, 278}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 160}, {Mixed, 1}, {Empty, 77}, {Mixed, 1},
    {Empty, 29563}};
    const static UnicodeSet::bitquad_t  __fou_Set_quads[] = {
    0x00008000, 0x00002000, 0x00000040, 0x04000000, 0x04000000, 0x00200000,
    0x00010000, 0x00020000, 0x0a400000, 0x00000008, 0x00000008, 0x00001000,
    0x00000001, 0x00000400, 0x08000000, 0x00000040, 0x00000100, 0x00000040,
    0x00100000, 0x00000040};
    }

    const static UnicodeSet fou_Set{const_cast<UnicodeSet::run_t *>(__fou_Set_runs), 41, 0, const_cast<UnicodeSet::bitquad_t *>(__fou_Set_quads), 20, 0};

    /** Code Point Ranges for diu
    [4e1f, 4e1f], [92a9, 92a9], [98a9, 98a9], [20c8d, 20c8d],
    [2249d, 2249d]**/


    namespace {
    const static UnicodeSet::run_t __diu_Set_runs[] = {
    {Empty, 624}, {Mixed, 1}, {Empty, 548}, {Mixed, 1}, {Empty, 47},
    {Mixed, 1}, {Empty, 2974}, {Mixed, 1}, {Empty, 191}, {Mixed, 1},
    {Empty, 30427}};
    const static UnicodeSet::bitquad_t  __diu_Set_quads[] = {
    0x80000000, 0x00000200, 0x00000200, 0x00002000, 0x20000000};
    }

    const static UnicodeSet diu_Set{const_cast<UnicodeSet::run_t *>(__diu_Set_runs), 11, 0, const_cast<UnicodeSet::bitquad_t *>(__diu_Set_quads), 5, 0};

    /** Code Point Ranges for pie
    [4e3f, 4e3f], [5af3, 5af3], [6487, 6487], [66bc, 66bc], [6c15, 6c15],
    [6f4e, 6f4e], [77a5, 77a5], [82e4, 82e4], [853d, 853d], [8995, 8995],
    [9405, 9405], [207c8, 207c8], [208aa, 208aa], [22cc2, 22cc2],
    [24b95, 24b95], [26490, 26490], [265e5, 265e5], [294fc, 294fc],
    [2983f, 2983f], [29bb3, 29bb3]**/


    namespace {
    const static UnicodeSet::run_t __pie_Set_runs[] = {
    {Empty, 625}, {Mixed, 1}, {Empty, 101}, {Mixed, 1}, {Empty, 76},
    {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 42}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 89},
    {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 34}, {Mixed, 1},
    {Empty, 83}, {Mixed, 1}, {Empty, 2973}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 288}, {Mixed, 1}, {Empty, 245}, {Mixed, 1},
    {Empty, 199}, {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 375},
    {Mixed, 1}, {Empty, 25}, {Mixed, 1}, {Empty, 27}, {Mixed, 1},
    {Empty, 29474}};
    const static UnicodeSet::bitquad_t  __pie_Set_quads[] = {
    0x80000000, 0x00080000, 0x00000080, 0x10000000, 0x00200000, 0x00004000,
    0x00000020, 0x00000010, 0x20000000, 0x00200000, 0x00000020, 0x00000100,
    0x00000400, 0x00000004, 0x00200000, 0x00010000, 0x00000020, 0x10000000,
    0x80000000, 0x00080000};
    }

    const static UnicodeSet pie_Set{const_cast<UnicodeSet::run_t *>(__pie_Set_runs), 41, 0, const_cast<UnicodeSet::bitquad_t *>(__pie_Set_quads), 20, 0};

    /** Code Point Ranges for me
    [4e48, 4e48], [569c, 569c], [6ca1, 6ca1], [9ebd, 9ebd]**/


    namespace {
    const static UnicodeSet::run_t __me_Set_runs[] = {
    {Empty, 626}, {Mixed, 1}, {Empty, 65}, {Mixed, 1}, {Empty, 176},
    {Mixed, 1}, {Empty, 399}, {Mixed, 1}, {Empty, 33546}};
    const static UnicodeSet::bitquad_t  __me_Set_quads[] = {
    0x00000100, 0x10000000, 0x00000002, 0x20000000};
    }

    const static UnicodeSet me_Set{const_cast<UnicodeSet::run_t *>(__me_Set_runs), 9, 0, const_cast<UnicodeSet::bitquad_t *>(__me_Set_quads), 4, 0};

    /** Code Point Ranges for fo
    [4ef8, 4ef8], [4f5b, 4f5b], [5772, 5772], [2795a, 2795a],
    [27f34, 27f34]**/


    namespace {
    const static UnicodeSet::run_t __fo_Set_runs[] = {
    {Empty, 631}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 64},
    {Mixed, 1}, {Empty, 4366}, {Mixed, 1}, {Empty, 46}, {Mixed, 1},
    {Empty, 29702}};
    const static UnicodeSet::bitquad_t  __fo_Set_quads[] = {
    0x01000000, 0x08000000, 0x00040000, 0x04000000, 0x00100000};
    }

    const static UnicodeSet fo_Set{const_cast<UnicodeSet::run_t *>(__fo_Set_runs), 11, 0, const_cast<UnicodeSet::bitquad_t *>(__fo_Set_quads), 5, 0};

    /** Code Point Ranges for lia
    [5006, 5006]**/


    namespace {
    const static UnicodeSet::run_t __lia_Set_runs[] = {
    {Empty, 640}, {Mixed, 1}, {Empty, 34175}};
    const static UnicodeSet::bitquad_t  __lia_Set_quads[] = {
    0x00000040};
    }

    const static UnicodeSet lia_Set{const_cast<UnicodeSet::run_t *>(__lia_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__lia_Set_quads), 1, 0};

    /** Code Point Ranges for kei
    [523b, 523b], [524b, 524b]**/


    namespace {
    const static UnicodeSet::run_t __kei_Set_runs[] = {
    {Empty, 657}, {Mixed, 2}, {Empty, 34157}};
    const static UnicodeSet::bitquad_t  __kei_Set_quads[] = {
    0x08000000, 0x00000800};
    }

    const static UnicodeSet kei_Set{const_cast<UnicodeSet::run_t *>(__kei_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__kei_Set_quads), 2, 0};

    /** Code Point Ranges for ha
    [5413, 5413], [5475, 5475], [54c8, 54c8], [5964, 5964], [736c, 736c],
    [86e4, 86e4], [8766, 8766], [927f, 927f], [2111f, 2111f],
    [28263, 28263]**/


    namespace {
    const static UnicodeSet::run_t __ha_Set_runs[] = {
    {Empty, 672}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 36}, {Mixed, 1}, {Empty, 207}, {Mixed, 1},
    {Empty, 155}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 87},
    {Mixed, 1}, {Empty, 3060}, {Mixed, 1}, {Empty, 906}, {Mixed, 1},
    {Empty, 29676}};
    const static UnicodeSet::bitquad_t  __ha_Set_quads[] = {
    0x00080000, 0x00200000, 0x00000100, 0x00000010, 0x00001000, 0x00000010,
    0x00000040, 0x80000000, 0x80000000, 0x00000008};
    }

    const static UnicodeSet ha_Set{const_cast<UnicodeSet::run_t *>(__ha_Set_runs), 21, 0, const_cast<UnicodeSet::bitquad_t *>(__ha_Set_quads), 10, 0};

    /** Code Point Ranges for a
    [5416, 5416], [5475, 5475], [554a, 554a], [55c4, 55c4], [814c, 814c],
    [9312, 9312], [963f, 963f], [20f1e, 20f1e], [25969, 25969],
    [2825a, 2825a]**/


    namespace {
    const static UnicodeSet::run_t __a_Set_runs[] = {
    {Empty, 672}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 347}, {Mixed, 1},
    {Empty, 141}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 3014},
    {Mixed, 1}, {Empty, 594}, {Mixed, 1}, {Empty, 326}, {Mixed, 1},
    {Empty, 29677}};
    const static UnicodeSet::bitquad_t  __a_Set_quads[] = {
    0x00400000, 0x00200000, 0x00000400, 0x00000010, 0x00001000, 0x00040000,
    0x80000000, 0x40000000, 0x00000200, 0x04000000};
    }

    const static UnicodeSet a_Set{const_cast<UnicodeSet::run_t *>(__a_Set_runs), 21, 0, const_cast<UnicodeSet::bitquad_t *>(__a_Set_quads), 10, 0};

    /** Code Point Ranges for ḿ
    [5463, 5463], [5514, 5514]**/


    namespace {
    const static UnicodeSet::run_t __ḿ_Set_runs[] = {
    {Empty, 675}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 34135}};
    const static UnicodeSet::bitquad_t  __ḿ_Set_quads[] = {
    0x00000008, 0x00100000};
    }

    const static UnicodeSet ḿ_Set{const_cast<UnicodeSet::run_t *>(__ḿ_Set_runs), 5, 0, const_cast<UnicodeSet::bitquad_t *>(__ḿ_Set_quads), 2, 0};

    /** Code Point Ranges for m̀
    [5463, 5463]**/


    namespace {
    const static UnicodeSet::run_t __m̀_Set_runs[] = {
    {Empty, 675}, {Mixed, 1}, {Empty, 34140}};
    const static UnicodeSet::bitquad_t  __m̀_Set_quads[] = {
    0x00000008};
    }

    const static UnicodeSet m̀_Set{const_cast<UnicodeSet::run_t *>(__m̀_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__m̀_Set_quads), 1, 0};

    /** Code Point Ranges for lo
    [54af, 54af]**/


    namespace {
    const static UnicodeSet::run_t __lo_Set_runs[] = {
    {Empty, 677}, {Mixed, 1}, {Empty, 34138}};
    const static UnicodeSet::bitquad_t  __lo_Set_quads[] = {
    0x00008000};
    }

    const static UnicodeSet lo_Set{const_cast<UnicodeSet::run_t *>(__lo_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__lo_Set_quads), 1, 0};

    /** Code Point Ranges for ń
    [54b9, 54b9], [54fd, 54fd], [55ef, 55ef]**/


    namespace {
    const static UnicodeSet::run_t __ń_Set_runs[] = {
    {Empty, 677}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 34128}};
    const static UnicodeSet::bitquad_t  __ń_Set_quads[] = {
    0x02000000, 0x20000000, 0x00008000};
    }

    const static UnicodeSet ń_Set{const_cast<UnicodeSet::run_t *>(__ń_Set_runs), 7, 0, const_cast<UnicodeSet::bitquad_t *>(__ń_Set_quads), 3, 0};

    /** Code Point Ranges for ǹ
    [54cf, 54cf], [55ef, 55ef]**/


    namespace {
    const static UnicodeSet::run_t __ǹ_Set_runs[] = {
    {Empty, 678}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 34128}};
    const static UnicodeSet::bitquad_t  __ǹ_Set_quads[] = {
    0x00008000, 0x00008000};
    }

    const static UnicodeSet ǹ_Set{const_cast<UnicodeSet::run_t *>(__ǹ_Set_runs), 5, 0, const_cast<UnicodeSet::bitquad_t *>(__ǹ_Set_quads), 2, 0};

    /** Code Point Ranges for o
    [54e6, 54e6], [5594, 5594], [5662, 5662]**/


    namespace {
    const static UnicodeSet::run_t __o_Set_runs[] = {
    {Empty, 679}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 34124}};
    const static UnicodeSet::bitquad_t  __o_Set_quads[] = {
    0x00000040, 0x00100000, 0x00000004};
    }

    const static UnicodeSet o_Set{const_cast<UnicodeSet::run_t *>(__o_Set_runs), 7, 0, const_cast<UnicodeSet::bitquad_t *>(__o_Set_quads), 3, 0};

    /** Code Point Ranges for hng
    [54fc, 54fc]**/


    namespace {
    const static UnicodeSet::run_t __hng_Set_runs[] = {
    {Empty, 679}, {Mixed, 1}, {Empty, 34136}};
    const static UnicodeSet::bitquad_t  __hng_Set_quads[] = {
    0x10000000};
    }

    const static UnicodeSet hng_Set{const_cast<UnicodeSet::run_t *>(__hng_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__hng_Set_quads), 1, 0};

    /** Code Point Ranges for ńg
    [54fd, 54fd], [5514, 5514], [55ef, 55ef]**/


    namespace {
    const static UnicodeSet::run_t __ńg_Set_runs[] = {
    {Empty, 679}, {Mixed, 2}, {Empty, 6}, {Mixed, 1}, {Empty, 34128}};
    const static UnicodeSet::bitquad_t  __ńg_Set_quads[] = {
    0x20000000, 0x00100000, 0x00008000};
    }

    const static UnicodeSet ńg_Set{const_cast<UnicodeSet::run_t *>(__ńg_Set_runs), 5, 0, const_cast<UnicodeSet::bitquad_t *>(__ńg_Set_quads), 3, 0};

    /** Code Point Ranges for ng
    [5535, 5535]**/


    namespace {
    const static UnicodeSet::run_t __ng_Set_runs[] = {
    {Empty, 681}, {Mixed, 1}, {Empty, 34134}};
    const static UnicodeSet::bitquad_t  __ng_Set_quads[] = {
    0x00200000};
    }

    const static UnicodeSet ng_Set{const_cast<UnicodeSet::run_t *>(__ng_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__ng_Set_quads), 1, 0};

    /** Code Point Ranges for n
    [5535, 5535]**/


    namespace {
    const static UnicodeSet::run_t __n_Set_runs[] = {
    {Empty, 681}, {Mixed, 1}, {Empty, 34134}};
    const static UnicodeSet::bitquad_t  __n_Set_quads[] = {
    0x00200000};
    }

    const static UnicodeSet n_Set{const_cast<UnicodeSet::run_t *>(__n_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__n_Set_quads), 1, 0};

    /** Code Point Ranges for yo
    [5537, 5537], [55b2, 55b2], [569b, 569b]**/


    namespace {
    const static UnicodeSet::run_t __yo_Set_runs[] = {
    {Empty, 681}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 6},
    {Mixed, 1}, {Empty, 34123}};
    const static UnicodeSet::bitquad_t  __yo_Set_quads[] = {
    0x00800000, 0x00040000, 0x08000000};
    }

    const static UnicodeSet yo_Set{const_cast<UnicodeSet::run_t *>(__yo_Set_runs), 7, 0, const_cast<UnicodeSet::bitquad_t *>(__yo_Set_quads), 3, 0};

    /** Code Point Ranges for ken
    [5543, 5543], [57a0, 57a0], [57a6, 57a6], [58be, 58be], [61c7, 61c7],
    [63af, 63af], [72e0, 72e0], [73e2, 73e2], [784d, 784d], [80af, 80af],
    [88c9, 88c9], [8903, 8903], [8c64, 8c64], [8c87, 8c87], [9339, 9339],
    [980e, 980e], [9f66, 9f66], [20cc1, 20cc1], [2335f, 2335f],
    [23964, 23964], [2400a, 2400a], [2559e, 2559e], [28f2f, 28f2f],
    [293a4, 293a4]**/


    namespace {
    const static UnicodeSet::run_t __ken_Set_runs[] = {
    {Empty, 682}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 7},
    {Mixed, 1}, {Empty, 72}, {Mixed, 1}, {Empty, 14}, {Mixed, 1},
    {Empty, 121}, {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 34},
    {Mixed, 1}, {Empty, 66}, {Mixed, 1}, {Empty, 64}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Empty, 26}, {Mixed, 2}, {Empty, 52},
    {Mixed, 1}, {Empty, 38}, {Mixed, 1}, {Empty, 58}, {Mixed, 1},
    {Empty, 2922}, {Mixed, 1}, {Empty, 307}, {Mixed, 1}, {Empty, 48},
    {Mixed, 1}, {Empty, 52}, {Mixed, 1}, {Empty, 171}, {Mixed, 1},
    {Empty, 460}, {Mixed, 1}, {Empty, 35}, {Mixed, 1}, {Empty, 29538}};
    const static UnicodeSet::bitquad_t  __ken_Set_quads[] = {
    0x00000008, 0x00000041, 0x40000000, 0x00000080, 0x00008000, 0x00000001,
    0x00000004, 0x00002000, 0x00008000, 0x00000200, 0x00000008, 0x00000010,
    0x00000080, 0x02000000, 0x00004000, 0x00000040, 0x00000002, 0x80000000,
    0x00000010, 0x00000400, 0x40000000, 0x00008000, 0x00000010};
    }

    const static UnicodeSet ken_Set{const_cast<UnicodeSet::run_t *>(__ken_Set_runs), 45, 0, const_cast<UnicodeSet::bitquad_t *>(__ken_Set_quads), 23, 0};

    /** Code Point Ranges for len
    [5549, 5549]**/


    namespace {
    const static UnicodeSet::run_t __len_Set_runs[] = {
    {Empty, 682}, {Mixed, 1}, {Empty, 34133}};
    const static UnicodeSet::bitquad_t  __len_Set_quads[] = {
    0x00000200};
    }

    const static UnicodeSet len_Set{const_cast<UnicodeSet::run_t *>(__len_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__len_Set_quads), 1, 0};

    /** Code Point Ranges for ǹg
    [55ef, 55ef]**/


    namespace {
    const static UnicodeSet::run_t __ǹg_Set_runs[] = {
    {Empty, 687}, {Mixed, 1}, {Empty, 34128}};
    const static UnicodeSet::bitquad_t  __ǹg_Set_quads[] = {
    0x00008000};
    }

    const static UnicodeSet ǹg_Set{const_cast<UnicodeSet::run_t *>(__ǹg_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__ǹg_Set_quads), 1, 0};

    /** Code Point Ranges for dia
    [55f2, 55f2]**/


    namespace {
    const static UnicodeSet::run_t __dia_Set_runs[] = {
    {Empty, 687}, {Mixed, 1}, {Empty, 34128}};
    const static UnicodeSet::bitquad_t  __dia_Set_quads[] = {
    0x00040000};
    }

    const static UnicodeSet dia_Set{const_cast<UnicodeSet::run_t *>(__dia_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__dia_Set_quads), 1, 0};

    /** Code Point Ranges for miu
    [5610, 5610], [7e46, 7e46], [8b2c, 8b2c], [28c6f, 28c6f]**/


    namespace {
    const static UnicodeSet::run_t __miu_Set_runs[] = {
    {Empty, 688}, {Mixed, 1}, {Empty, 321}, {Mixed, 1}, {Empty, 102},
    {Mixed, 1}, {Empty, 4105}, {Mixed, 1}, {Empty, 29596}};
    const static UnicodeSet::bitquad_t  __miu_Set_quads[] = {
    0x00010000, 0x00000040, 0x00001000, 0x00008000};
    }

    const static UnicodeSet miu_Set{const_cast<UnicodeSet::run_t *>(__miu_Set_runs), 9, 0, const_cast<UnicodeSet::bitquad_t *>(__miu_Set_quads), 4, 0};

    /** Code Point Ranges for m̄
    [5638, 5638]**/


    namespace {
    const static UnicodeSet::run_t __m̄_Set_runs[] = {
    {Empty, 689}, {Mixed, 1}, {Empty, 34126}};
    const static UnicodeSet::bitquad_t  __m̄_Set_quads[] = {
    0x01000000};
    }

    const static UnicodeSet m̄_Set{const_cast<UnicodeSet::run_t *>(__m̄_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__m̄_Set_quads), 1, 0};

    /** Code Point Ranges for nüe
    [5a69, 5a69], [7627, 7627], [7878, 7878], [8650, 8650], [24de1, 24de1],
    [28d6b, 28d6b]**/


    namespace {
    const static UnicodeSet::run_t __nüe_Set_runs[] = {
    {Empty, 723}, {Mixed, 1}, {Empty, 221}, {Mixed, 1}, {Empty, 17},
    {Mixed, 1}, {Empty, 110}, {Mixed, 1}, {Empty, 3644}, {Mixed, 1},
    {Empty, 507}, {Mixed, 1}, {Empty, 29588}};
    const static UnicodeSet::bitquad_t  __nüe_Set_quads[] = {
    0x00000200, 0x00000080, 0x01000000, 0x00010000, 0x00000002, 0x00000800};
    }

    const static UnicodeSet nüe_Set{const_cast<UnicodeSet::run_t *>(__nüe_Set_runs), 13, 0, const_cast<UnicodeSet::bitquad_t *>(__nüe_Set_quads), 6, 0};

    /** Code Point Ranges for nun
    [5a86, 5a86], [9ec1, 9ec1]**/


    namespace {
    const static UnicodeSet::run_t __nun_Set_runs[] = {
    {Empty, 724}, {Mixed, 1}, {Empty, 545}, {Mixed, 1}, {Empty, 33545}};
    const static UnicodeSet::bitquad_t  __nun_Set_quads[] = {
    0x00000040, 0x00000002};
    }

    const static UnicodeSet nun_Set{const_cast<UnicodeSet::run_t *>(__nun_Set_runs), 5, 0, const_cast<UnicodeSet::bitquad_t *>(__nun_Set_quads), 2, 0};

    /** Code Point Ranges for zhuai
    [5c35, 5c35], [62fd, 62fd], [7749, 7749], [8de9, 8de9], [9861, 9861],
    [22d80, 22d80]**/


    namespace {
    const static UnicodeSet::run_t __zhuai_Set_runs[] = {
    {Empty, 737}, {Mixed, 1}, {Empty, 53}, {Mixed, 1}, {Empty, 162},
    {Mixed, 1}, {Empty, 180}, {Mixed, 1}, {Empty, 83}, {Mixed, 1},
    {Empty, 3240}, {Mixed, 1}, {Empty, 30355}};
    const static UnicodeSet::bitquad_t  __zhuai_Set_quads[] = {
    0x00200000, 0x20000000, 0x00000200, 0x00000200, 0x00000002, 0x00000001};
    }

    const static UnicodeSet zhuai_Set{const_cast<UnicodeSet::run_t *>(__zhuai_Set_runs), 13, 0, const_cast<UnicodeSet::bitquad_t *>(__zhuai_Set_quads), 6, 0};

    /** Code Point Ranges for dei
    [5f97, 5f97]**/


    namespace {
    const static UnicodeSet::run_t __dei_Set_runs[] = {
    {Empty, 764}, {Mixed, 1}, {Empty, 34051}};
    const static UnicodeSet::bitquad_t  __dei_Set_quads[] = {
    0x00800000};
    }

    const static UnicodeSet dei_Set{const_cast<UnicodeSet::run_t *>(__dei_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__dei_Set_quads), 1, 0};

    /** Code Point Ranges for den
    [6265, 6265], [627d, 627d]**/


    namespace {
    const static UnicodeSet::run_t __den_Set_runs[] = {
    {Empty, 787}, {Mixed, 1}, {Empty, 34028}};
    const static UnicodeSet::bitquad_t  __den_Set_quads[] = {
    0x20000020};
    }

    const static UnicodeSet den_Set{const_cast<UnicodeSet::run_t *>(__den_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__den_Set_quads), 1, 0};

    /** Code Point Ranges for zhua
    [6293, 6293], [6463, 6463], [64be, 64be], [6a9b, 6a9b], [722a, 722a],
    [7c3b, 7c3b], [81bc, 81bc], [9afd, 9afd], [201a3, 201a3],
    [213ac, 213ac], [23443, 23443], [25b32, 25b32], [25ba3, 25ba3]**/


    namespace {
    const static UnicodeSet::run_t __zhua_Set_runs[] = {
    {Empty, 788}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 60}, {Mixed, 1},
    {Empty, 79}, {Mixed, 1}, {Empty, 43}, {Mixed, 1}, {Empty, 201},
    {Mixed, 1}, {Empty, 2869}, {Mixed, 1}, {Empty, 143}, {Mixed, 1},
    {Empty, 260}, {Mixed, 1}, {Empty, 310}, {Mixed, 1}, {Empty, 3},
    {Mixed, 1}, {Empty, 29986}};
    const static UnicodeSet::bitquad_t  __zhua_Set_quads[] = {
    0x00080000, 0x00000008, 0x40000000, 0x08000000, 0x00000400, 0x08000000,
    0x10000000, 0x20000000, 0x00000008, 0x00001000, 0x00000008, 0x00040000,
    0x00000008};
    }

    const static UnicodeSet zhua_Set{const_cast<UnicodeSet::run_t *>(__zhua_Set_runs), 27, 0, const_cast<UnicodeSet::bitquad_t *>(__zhua_Set_quads), 13, 0};

    /** Code Point Ranges for rua
    [633c, 633c]**/


    namespace {
    const static UnicodeSet::run_t __rua_Set_runs[] = {
    {Empty, 793}, {Mixed, 1}, {Empty, 34022}};
    const static UnicodeSet::bitquad_t  __rua_Set_quads[] = {
    0x10000000};
    }

    const static UnicodeSet rua_Set{const_cast<UnicodeSet::run_t *>(__rua_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__rua_Set_quads), 1, 0};

    /** Code Point Ranges for ế
    [6b38, 6b38], [8a92, 8a92]**/


    namespace {
    const static UnicodeSet::run_t __ế_Set_runs[] = {
    {Empty, 857}, {Mixed, 1}, {Empty, 250}, {Mixed, 1}, {Empty, 33707}};
    const static UnicodeSet::bitquad_t  __ế_Set_quads[] = {
    0x01000000, 0x00040000};
    }

    const static UnicodeSet ế_Set{const_cast<UnicodeSet::run_t *>(__ế_Set_runs), 5, 0, const_cast<UnicodeSet::bitquad_t *>(__ế_Set_quads), 2, 0};

    /** Code Point Ranges for ei
    [6b38, 6b38], [8a92, 8a92], [21145, 21145]**/


    namespace {
    const static UnicodeSet::run_t __ei_Set_runs[] = {
    {Empty, 857}, {Mixed, 1}, {Empty, 250}, {Mixed, 1}, {Empty, 3125},
    {Mixed, 1}, {Empty, 30581}};
    const static UnicodeSet::bitquad_t  __ei_Set_quads[] = {
    0x01000000, 0x00040000, 0x00000020};
    }

    const static UnicodeSet ei_Set{const_cast<UnicodeSet::run_t *>(__ei_Set_runs), 7, 0, const_cast<UnicodeSet::bitquad_t *>(__ei_Set_quads), 3, 0};

    /** Code Point Ranges for ê̌
    [6b38, 6b38], [8a92, 8a92]**/


    namespace {
    const static UnicodeSet::run_t __ê̌_Set_runs[] = {
    {Empty, 857}, {Mixed, 1}, {Empty, 250}, {Mixed, 1}, {Empty, 33707}};
    const static UnicodeSet::bitquad_t  __ê̌_Set_quads[] = {
    0x01000000, 0x00040000};
    }

    const static UnicodeSet ê̌_Set{const_cast<UnicodeSet::run_t *>(__ê̌_Set_runs), 5, 0, const_cast<UnicodeSet::bitquad_t *>(__ê̌_Set_quads), 2, 0};

    /** Code Point Ranges for ề
    [6b38, 6b38], [8a92, 8a92]**/


    namespace {
    const static UnicodeSet::run_t __ề_Set_runs[] = {
    {Empty, 857}, {Mixed, 1}, {Empty, 250}, {Mixed, 1}, {Empty, 33707}};
    const static UnicodeSet::bitquad_t  __ề_Set_quads[] = {
    0x01000000, 0x00040000};
    }

    const static UnicodeSet ề_Set{const_cast<UnicodeSet::run_t *>(__ề_Set_runs), 5, 0, const_cast<UnicodeSet::bitquad_t *>(__ề_Set_quads), 2, 0};

    /** Code Point Ranges for ê̄
    [6b38, 6b38], [8a92, 8a92]**/


    namespace {
    const static UnicodeSet::run_t __ê̄_Set_runs[] = {
    {Empty, 857}, {Mixed, 1}, {Empty, 250}, {Mixed, 1}, {Empty, 33707}};
    const static UnicodeSet::bitquad_t  __ê̄_Set_quads[] = {
    0x01000000, 0x00040000};
    }

    const static UnicodeSet ê̄_Set{const_cast<UnicodeSet::run_t *>(__ê̄_Set_runs), 5, 0, const_cast<UnicodeSet::bitquad_t *>(__ê̄_Set_quads), 2, 0};

    /** Code Point Ranges for gei
    [7d66, 7d66]**/


    namespace {
    const static UnicodeSet::run_t __gei_Set_runs[] = {
    {Empty, 1003}, {Mixed, 1}, {Empty, 33812}};
    const static UnicodeSet::bitquad_t  __gei_Set_quads[] = {
    0x00000040};
    }

    const static UnicodeSet gei_Set{const_cast<UnicodeSet::run_t *>(__gei_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__gei_Set_quads), 1, 0};

    /** Code Point Ranges for zei
    [8808, 8808], [8cca, 8cca], [9bfd, 9bfd], [9c02, 9c02], [22a17, 22a17],
    [26f52, 26f52], [274bf, 274bf], [2818e, 2818e]**/


    namespace {
    const static UnicodeSet::run_t __zei_Set_runs[] = {
    {Empty, 1088}, {Mixed, 1}, {Empty, 37}, {Mixed, 1}, {Empty, 120},
    {Mixed, 2}, {Empty, 3183}, {Mixed, 1}, {Empty, 553}, {Mixed, 1},
    {Empty, 42}, {Mixed, 1}, {Empty, 102}, {Mixed, 1}, {Empty, 29683}};
    const static UnicodeSet::bitquad_t  __zei_Set_quads[] = {
    0x00000100, 0x00000400, 0x20000000, 0x00000004, 0x00800000, 0x00040000,
    0x80000000, 0x00004000};
    }

    const static UnicodeSet zei_Set{const_cast<UnicodeSet::run_t *>(__zei_Set_runs), 15, 0, const_cast<UnicodeSet::bitquad_t *>(__zei_Set_quads), 8, 0};

    /** Code Point Ranges for shei
    [8ab0, 8ab0]**/


    namespace {
    const static UnicodeSet::run_t __shei_Set_runs[] = {
    {Empty, 1109}, {Mixed, 1}, {Empty, 33706}};
    const static UnicodeSet::bitquad_t  __shei_Set_quads[] = {
    0x00010000};
    }

    const static UnicodeSet shei_Set{const_cast<UnicodeSet::run_t *>(__shei_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__shei_Set_quads), 1, 0};

    /** Code Point Ranges for zhei
    [9019, 9019]**/


    namespace {
    const static UnicodeSet::run_t __zhei_Set_runs[] = {
    {Empty, 1152}, {Mixed, 1}, {Empty, 33663}};
    const static UnicodeSet::bitquad_t  __zhei_Set_quads[] = {
    0x02000000};
    }

    const static UnicodeSet zhei_Set{const_cast<UnicodeSet::run_t *>(__zhei_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__zhei_Set_quads), 1, 0};

    /** Code Point Ranges for eng
    [97a5, 97a5]**/


    namespace {
    const static UnicodeSet::run_t __eng_Set_runs[] = {
    {Empty, 1213}, {Mixed, 1}, {Empty, 33602}};
    const static UnicodeSet::bitquad_t  __eng_Set_quads[] = {
    0x00000020};
    }

    const static UnicodeSet eng_Set{const_cast<UnicodeSet::run_t *>(__eng_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__eng_Set_quads), 1, 0};

    /** Code Point Ranges for wong
    [25948, 25948], [259b7, 259b7]**/


    namespace {
    const static UnicodeSet::run_t __wong_Set_runs[] = {
    {Empty, 4810}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 30002}};
    const static UnicodeSet::bitquad_t  __wong_Set_quads[] = {
    0x00000100, 0x00800000};
    }

    const static UnicodeSet wong_Set{const_cast<UnicodeSet::run_t *>(__wong_Set_runs), 5, 0, const_cast<UnicodeSet::bitquad_t *>(__wong_Set_quads), 2, 0};

    /** Code Point Ranges for din
    [28216, 28216]**/


    namespace {
    const static UnicodeSet::run_t __din_Set_runs[] = {
    {Empty, 5136}, {Mixed, 1}, {Empty, 29679}};
    const static UnicodeSet::bitquad_t  __din_Set_quads[] = {
    0x00400000};
    }

    const static UnicodeSet din_Set{const_cast<UnicodeSet::run_t *>(__din_Set_runs), 3, 0, const_cast<UnicodeSet::bitquad_t *>(__din_Set_quads), 1, 0};

    static EnumeratedPropertyObject property_object
        {kpy,
        KPY_ns::independent_prop_values,
        std::move(KPY_ns::enum_names),
        std::move(KPY_ns::value_names),
        std::move(KPY_ns::aliases_only_map),{
        &tian_Set, &yin_Set, &yi_Set, &xie_Set, &dan_Set, &qiu_Set, &xu_Set,
        &xing_Set, &dai_Set, &wu_Set, &qian_Set, &ci_Set, &zhong_Set,
        &nei_Set, &su_Set, &qiong_Set, &wang_Set, &kuang_Set, &lei_Set,
        &nao_Set, &shu_Set, &shen_Set, &die_Set, &nuo_Set, &chi_Set,
        &ying_Set, &beng_Set, &lan_Set, &li_Set, &hun_Set, &zhou_Set,
        &zhu_Set, &xi_Set, &yao_Set, &ma_Set, &lüe_Set, &zhao_Set,
        &zhai_Set, &zha_Set, &yu_Set, &zhuo_Set, &ran_Set, &qi_Set,
        &han_Set, &se_Set, &sa_Set, &kui_Set, &hui_Set, &ta_Set, &du_Set,
        &tu_Set, &yang_Set, &mian_Set, &wen_Set, &diao_Set, &mie_Set,
        &wa_Set, &niao_Set, &you_Set, &che_Set, &feng_Set, &gu_Set,
        &sui_Set, &man_Set, &quan_Set, &shi_Set, &zhen_Set, &ting_Set,
        &bing_Set, &huo_Set, &dong_Set, &gong_Set, &cheng_Set, &qin_Set,
        &jiong_Set, &lu_Set, &nan_Set, &bi_Set, &qia_Set, &pi_Set,
        &dian_Set, &fu_Set, &gua_Set, &luo_Set, &ge_Set, &bai_Set, &gan_Set,
        &xuan_Set, &jie_Set, &she_Set, &tou_Set, &pian_Set, &di_Set,
        &ruan_Set, &qie_Set, &dou_Set, &rui_Set, &cui_Set, &ji_Set,
        &jian_Set, &chong_Set, &deng_Set, &lin_Set, &jue_Set, &xue_Set,
        &xiao_Set, &zan_Set, &zhan_Set, &zou_Set, &cou_Set, &chua_Set,
        &fei_Set, &bei_Set, &liang_Set, &kuai_Set, &xia_Set, &he_Set,
        &bie_Set, &xin_Set, &e_Set, &suan_Set, &lou_Set, &ti_Set, &le_Set,
        &xian_Set, &zhi_Set, &jia_Set, &hu_Set, &la_Set, &ke_Set, &ai_Set,
        &wei_Set, &jun_Set, &shua_Set, &gai_Set, &hai_Set, &yan_Set,
        &hua_Set, &fan_Set, &pang_Set, &fang_Set, &song_Set, &ao_Set,
        &ne_Set, &chen_Set, &guo_Set, &ňg_Set, &ň_Set, &pa_Set, &si_Set,
        &hou_Set, &qu_Set, &er_Set, &nie_Set, &tun_Set, &shou_Set, &ye_Set,
        &ju_Set, &sou_Set, &ling_Set, &lun_Set, &nia_Set, &pen_Set,
        &fen_Set, &chun_Set, &niu_Set, &rou_Set, &sheng_Set, &ya_Set,
        &zhui_Set, &gou_Set, &bo_Set, &chu_Set, &na_Set, &hong_Set, &cu_Set,
        &kuo_Set, &lao_Set, &cong_Set, &da_Set, &po_Set, &xiang_Set,
        &zuo_Set, &tai_Set, &rong_Set, &ni_Set, &pao_Set, &sai_Set,
        &kan_Set, &weng_Set, &yuan_Set, &wan_Set, &hao_Set, &jing_Set,
        &bu_Set, &zang_Set, &liu_Set, &jiu_Set, &mei_Set, &mu_Set, &dui_Set,
        &bang_Set, &chang_Set, &zhang_Set, &duo_Set, &long_Set, &lang_Set,
        &zong_Set, &gun_Set, &liao_Set, &chan_Set, &zhe_Set, &meng_Set,
        &gui_Set, &qiao_Set, &nang_Set, &yun_Set, &kai_Set, &shan_Set,
        &lai_Set, &gao_Set, &ze_Set, &ban_Set, &kong_Set, &nu_Set, &pei_Set,
        &mao_Set, &xiong_Set, &peng_Set, &lv_Set, &suo_Set, &tong_Set,
        &yong_Set, &qiang_Set, &zhuan_Set, &tan_Set, &an_Set, &kua_Set,
        &cha_Set, &sha_Set, &lian_Set, &xun_Set, &mi_Set, &nou_Set,
        &kou_Set, &tang_Set, &cao_Set, &can_Set, &sen_Set, &nian_Set,
        &mai_Set, &nai_Set, &yue_Set, &huai_Set, &kang_Set, &de_Set,
        &bian_Set, &tui_Set, &za_Set, &ba_Set, &ding_Set, &cen_Set, &zi_Set,
        &min_Set, &huang_Set, &cuo_Set, &mang_Set, &tuo_Set, &qun_Set,
        &tiao_Set, &duan_Set, &ming_Set, &biao_Set, &run_Set, &zui_Set,
        &wo_Set, &gang_Set, &ren_Set, &miao_Set, &men_Set, &jiao_Set,
        &zhun_Set, &kun_Set, &chuang_Set, &zao_Set, &pin_Set, &luan_Set,
        &huan_Set, &ben_Set, &pan_Set, &juan_Set, &ceng_Set, &tao_Set,
        &ning_Set, &hang_Set, &lie_Set, &guang_Set, &san_Set, &te_Set,
        &cai_Set, &shui_Set, &chao_Set, &sao_Set, &ce_Set, &chai_Set,
        &sun_Set, &jin_Set, &ru_Set, &shuang_Set, &dao_Set, &guai_Set,
        &keng_Set, &zu_Set, &chou_Set, &shai_Set, &piao_Set, &pou_Set,
        &qing_Set, &ku_Set, &chuai_Set, &chuo_Set, &gen_Set, &pu_Set,
        &zheng_Set, &reng_Set, &pai_Set, &ou_Set, &cuan_Set, &ang_Set,
        &ka_Set, &shuo_Set, &hen_Set, &chuan_Set, &nen_Set, &kuan_Set,
        &hei_Set, &mo_Set, &que_Set, &xiu_Set, &leng_Set, &zai_Set,
        &shao_Set, &neng_Set, &bao_Set, &shuai_Set, &re_Set, &nv_Set,
        &ping_Set, &cang_Set, &heng_Set, &chui_Set, &zuan_Set, &jiang_Set,
        &rao_Set, &ga_Set, &geng_Set, &nong_Set, &bin_Set, &zen_Set,
        &dang_Set, &kao_Set, &zeng_Set, &shun_Set, &dun_Set, &ca_Set,
        &en_Set, &fa_Set, &rang_Set, &tuan_Set, &mou_Set, &nin_Set,
        &guan_Set, &cun_Set, &ruo_Set, &tie_Set, &teng_Set, &seng_Set,
        &ri_Set, &zun_Set, &niang_Set, &nuan_Set, &zhuang_Set, &shang_Set,
        &wai_Set, &sang_Set, &shuan_Set, &fou_Set, &diu_Set, &pie_Set,
        &me_Set, &fo_Set, &lia_Set, &kei_Set, &ha_Set, &a_Set, &ḿ_Set,
        &m̀_Set, &lo_Set, &ń_Set, &ǹ_Set, &o_Set, &hng_Set, &ńg_Set,
        &ng_Set, &n_Set, &yo_Set, &ken_Set, &len_Set, &ǹg_Set, &dia_Set,
        &miu_Set, &m̄_Set, &nüe_Set, &nun_Set, &zhuai_Set, &dei_Set,
        &den_Set, &zhua_Set, &rua_Set, &ế_Set, &ei_Set, &ê̌_Set, &ề_Set,
        &ê̄_Set, &gei_Set, &zei_Set, &shei_Set, &zhei_Set, &eng_Set,
        &wong_Set, &din_Set
        }};
    }
}

#endif
